/ SESSION.INVALIDATE
/ BUILD TOMCAT
/ See SERVLET AND TOMCAT TYPES 
/ See DEBUG SESSIONS.ser
	/ See START SERVER
	/ See STOP SERVER
/ See TOMCAT SECURITY

/ 7	. 

/ ws workspace-wicket7_7
/ proj servlets

$ vi src/main/java/first/MyServlet.java

@WebServlet("/first")
public class MyServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
		session.invalidate();
	}

}

$ vi src/main/webapp/WEB-INF/web.xml

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
</web-app>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>my.own</groupId>
  <artifactId>servlets</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  	<properties>
		<log4j.version>2.0.2</log4j.version>
		<junit.version>4.12</junit.version>
		<tomcat.plugin.version>2.2</tomcat.plugin.version>
		<mockito.version>2.2.6</mockito.version>
		
	</properties>
	<dependencies>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-core</artifactId>
		    <version>${mockito.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.tomcat</groupId>
		    <artifactId>tomcat-servlet-api</artifactId>
		    <version>8.0.28</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
	
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat.plugin.version}</version>
				<configuration>
	    			<port>8080</port>
	    			<path>/${project.artifactId}</path>
	    			<url>http://localhost:9090/manager/text</url>
	    			<server>my_tomcat</server>
 	 			</configuration>
			</plugin>
		</plugins>
	
	</build>
	
</project>

/ Geef 
http://localhost:9090/servlets/first
null
/ we zien steeds een andere session in de header van de requests

/ Als we rm uit pom.xml	, dan meteen in MyServlet unknown types	, 
		<dependency>
		    <groupId>org.apache.tomcat</groupId>
		    <artifactId>tomcat-servlet-api</artifactId>
		    <version>8.0.28</version>
		    <scope>provided</scope>
		</dependency>

/ Maar als we MyServlet in wicket-examples-step-by-step	, dan niet	, 
/ omdat	, 
[eric@localhost redirect_study]$ less /home/eric/.m2/repository/org/apache/wicket/wicket-parent/7.2.0/wicket-parent-7.2.0.pom
        <properties>
                <servlet-api.version>3.0.1</servlet-api.version>
        <dependencyManagement>
                <dependencies>
                        <dependency>
                                <groupId>javax.servlet</groupId>
                                <artifactId>javax.servlet-api</artifactId>
                                <version>${servlet-api.version}</version>
                                <scope>provided</scope>
                        </dependency>

[eric@localhost redirect_study]$ less /home/eric/.m2/repository/org/apache/wicket/wicket-core/7.2.0/wicket-core-7.2.0.pom
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
        <modelVersion>4.0.0</modelVersion>
        <parent>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-parent</artifactId>
                <version>7.2.0</version>
                <relativePath>../pom.xml</relativePath>
        </parent>
        <artifactId>wicket-core</artifactId>
        <packaging>jar</packaging>
		<version>7.2.0</version>
        <relativePath>../pom.xml</relativePath>

/ Omdat in wicket-examples-step-by-step de dep tomcat-core hebben	, gaat als we MyServlet hebben in wicket-examples-step-by-step, dan kent hij de types zoals HttpServlet	, WebServlet	, 
/ Als we deploy krijgen we toch compile-maven-plugin ERR	,  als we dan toch de javax.servlet-api dep in pom.xml dan OK	, 
/ TODO

/ 7	. 

/ Geef in google	,
servlet remove session
/ Lees	,
http://stackoverflow.com/questions/13963720/how-to-effectively-destroy-session-in-java-servlet
->
http://stackoverflow.com/questions/2123514/java-lang-illegalstateexception-cannot-forward-sendredirect-create-session/2125045#2125045

/ Geef in google
redirect after form submit
/ lees	,
http://stackoverflow.com/questions/17880977/html-form-redirect-after-submit		/ we zien return false in submit	, TODO

/ Geef in google,	 
jquery form submit return false
/ lees	,
http://stackoverflow.com/questions/9347282/using-jquery-preventing-form-from-submitting	 / over return false in submit	,

To prevant default/prevent form submission use

e.preventDefault();
To stop event bubling use

e.stopPropagation();
To prevent form submission 'return false' should work too.

/ 13	. 

/ in 
http://stackoverflow.com/questions/2123514/java-lang-illegalstateexception-cannot-forward-sendredirect-create-session/2125045#2125045
protected void doPost() {
    if (someCondition) {
        sendRedirect();
    }
    forward(); // This is STILL invoked when someCondition is true!
}
/ wat is verschil tussen redirect en forward?

/ Geef in google
servlet forward
/ Lees	, 
http://www.javapractices.com/topic/TopicAction.do?Id=181

/ 13	. 



$ vi MyServlet.java

@WebServlet("/first")
public class MyServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
//		session.invalidate();
	}

}
/ we doen GEEN HttpServlet.invalidate	,

/ 1313	. 

/ set b's	, 
CoyoteAdapter.parseSessionCookiesId(Request) line: 1205	
        // Parse session id from cookies
        ServerCookies serverCookies = request.getServerCookies();

Request.setRequestedSessionId(String) line: 1793	
Request.doGetSession(boolean) line: 2844	


/ we deploy servlets	, en request voor de 1ste keer	, 
http://localhost:9090/servlets/first
/ we zien in devtools	, 

Request headers
Cookie:JSESSIONID=05DC6A7022B32CD3D714A0D94231D75F; visited=yes

Response headers
Set-Cookie:JSESSIONID=2AAD12024C201EEE44712A90287CCE11; Path=/servlets/; HttpOnly

/ 05DC6A7022B32CD3D714A0D94231D75F is van de vorige session, voor de deployment	, de browser heeft deze cookie, dus send deze session id meer in de request	, 
/ /servlets's manager heeft deze session niet	, dus gaat gaat nieuwe maken	, en save	, alleen dan zien we een session id in de response	, 
/ Request.doGetSession kijkt eerst of session al in de request staat	, in de de 1ste call op Request.doGetSession is dat niet zo, en vervolgens aan de appl's manager	,  en sets meteen de session in de request	, 
        if (requestedSessionId != null) {
            try {
                session = manager.findSession(requestedSessionId);


/ we geven voor de minstens 2de	,  de de session id  zit in de header van de request
http://localhost:9090/servlets/first

/ dan wordt deze in de Request in Tomcat set	, 

/ stack	,
/s
	Request.setRequestedSessionId(String) line: 1793	
        this.requestedSessionId = id;				/ CF7AA434000447C8681997ABF2EEE004
/cb
	CoyoteAdapter.parseSessionCookiesId(Request) line: 1220	

	CoyoteAdapter.postParseRequest(Request, Request, Response, Response) line: 916	
	CoyoteAdapter.service(Request, Response) line: 513	
	Http11NioProcessor(AbstractHttp11Processor<S>).process(SocketWrapper<S>) line: 1091	
	Http11NioProtocol$Http11ConnectionHandler(AbstractProtocol$AbstractConnectionHandler<S,P>).process(SocketWrapper<S>, SocketStatus) line: 673	
	NioEndpoint$SocketProcessor.doRun() line: 1500	
	NioEndpoint$SocketProcessor.run() line: 1456	
	ThreadPoolExecutor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1145	
	ThreadPoolExecutor$Worker.run() line: 615	
	TaskThread$WrappingRunnable.run() line: 61	
	TaskThread(Thread).run() line: 745	

/ 7	. 

/ SESSION.INVALIDATE

$ vi MyServlet.java

@WebServlet(name="my",urlPatterns={"/my"})
public class MyServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		...
		session.invalidate();
	}

/c
/ stack
/s
Daemon Thread [http-nio-9090-exec-32] (Suspended)	
	MyServlet.doGet(HttpServletRequest, HttpServletResponse) line: 28	
		session.invalidate();
/cb
	MyServlet(HttpServlet).service(HttpServletRequest, HttpServletResponse) line: 622	
                doGet(req, resp);
/cb
	MyServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 729	
        service(request, response);
/cb
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 291	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206	
	WsFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 52	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 239	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206	
	StandardWrapperValve.invoke(Request, Response) line: 217	
	StandardContextValve.invoke(Request, Response) line: 106	
	NonLoginAuthenticator(AuthenticatorBase).invoke(Request, Response) line: 502	
	StandardHostValve.invoke(Request, Response) line: 142	
	ErrorReportValve.invoke(Request, Response) line: 79	
	AccessLogValve(AbstractAccessLogValve).invoke(Request, Response) line: 616	
	StandardEngineValve.invoke(Request, Response) line: 88	
	CoyoteAdapter.service(Request, Response) line: 518	
	Http11NioProcessor(AbstractHttp11Processor<S>).process(SocketWrapper<S>) line: 1091	
	Http11NioProtocol$Http11ConnectionHandler(AbstractProtocol$AbstractConnectionHandler<S,P>).process(SocketWrapper<S>, SocketStatus) line: 673	
	NioEndpoint$SocketProcessor.doRun() line: 1500	
	NioEndpoint$SocketProcessor.run() line: 1456	
	ThreadPoolExecutor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1145	
	ThreadPoolExecutor$Worker.run() line: 615	
	TaskThread$WrappingRunnable.run() line: 61	
	TaskThread(Thread).run() line: 745	
/ debug	, 
/s
StandardSessionFacade.invalidate() line: 176	
        session.invalidate();
/s
StandardSession.invalidate() line: 1285	
        expire();
/s
StandardSession.expire() line: 781	
        expire(true);
/s
StandardSession.expire(boolean) line: 798	

                        for (int i = 0; i < listeners.length; i++) {
                                listener.sessionDestroyed(event);
/d
                               context.fireContainerEvent("afterSessionDestroyed",
                                        listener);
/ Geen volgende listener	, 
               } finally {
                    context.unbind(Globals.IS_SECURITY_ENABLED, oldContextClassLoader);
/ TODO

            // Remove this session from our manager's active sessions
            manager.remove(this, true);																			<-
/s
StandardManager(ManagerBase).remove(Session, boolean) line: 787	
        // If the session has expired - as opposed to just being removed from
        // the manager because it is being persisted - update the expired stats
        if (update) {
            long timeNow = System.currentTimeMillis();
            int timeAlive =
                (int) (timeNow - session.getCreationTimeInternal())/1000;
1183
            updateSessionMaxAliveTime(timeAlive);
            expiredSessions.incrementAndGet();
1
            synchronized (sessionExpirationTiming) {
                sessionExpirationTiming.add(timing);
                sessionExpirationTiming.poll();
            }
/ TODO
this.sessions={864E7BEA948966805E292B32F86C45EF=StandardSession[864E7BEA948966805E292B32F86C45EF]}
        if (session.getIdInternal() != null) {
            sessions.remove(session.getIdInternal());
this.sessions={}

/ Intermezzo

/ Lees
https://tomcat.apache.org/tomcat-8.0-doc/config/manager.html

Whenever Apache Tomcat is shut down normally and restarted, or when an application reload is triggered, the standard Manager implementation will attempt to serialize all currently active sessions to a disk file located via the pathname attribute. All such saved sessions will then be deserialized and activated (assuming they have not expired in the mean time) when the application reload is completed.

In order to successfully restore the state of session attributes, all such attributes MUST implement the java.io.Serializable interface. You MAY cause the Manager to enforce this restriction by including the <distributable> element in your web application deployment descriptor (/WEB-INF/web.xml).

The persistence across restarts provided by the StandardManager is a simpler implementation than that provided by the PersistentManager. If robust, production quality persistence across restarts is required then the PersistentManager should be used with an appropriate configuration.

StandardSession
	.load
	.doLoad
	.unLoad
	.doUnLoad
/ TODO

/ Einde Intermezzo

/t
StandardSession.expire(boolean) line: 868	
            // Remove this session from our manager's active sessions
            manager.remove(this, true);
/d
            // We have completed expire of this session
            setValid(false);

/t
MyServlet.doGet(HttpServletRequest, HttpServletResponse) line: 29	
		session.invalidate();
/d













/ 7	. 

[eric@localhost apache-tomcat-8.0.28-src]$ find -name "*.java" | xargs grep '/servlet/'
./test/org/apache/catalina/mapper/TestMapperWebapps.java:                + "/examples/servlets/servlet/HelloWorldExample");
/ inderdaad	, 
/ geef
http://localhost:9090/examples
/ kies 'Servlet examples'
http://localhost:9090/examples/servlets
/ kies Hello world execute
http://localhost:9090/examples/servlets/servlet/HelloWorldExample

[eric@localhost apache-tomcat-8.0.28-src]$ less ./webapps/examples/WEB-INF/classes/HelloWorldExample.java
...
[eric@localhost apache-tomcat-8.0.28-src]$ less webapps/examples/WEB-INF/web.xml 
    <servlet>
        <servlet-name>HelloWorldExample</servlet-name>
        <servlet-class>HelloWorldExample</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HelloWorldExample</servlet-name>
        <url-pattern>/servlets/servlet/HelloWorldExample</url-pattern>
    </servlet-mapping>
 
/ 7. 
	
/ Lees	, 
http://stackoverflow.com/questions/13963720/how-to-effectively-destroy-session-in-java-servlet
/ ->
http://stackoverflow.com/questions/2123514/java-lang-illegalstateexception-cannot-forward-sendredirect-create-session/2125045#2125045
/ ->
http://stackoverflow.com/tags/servlets/info
/-> CoreSevlets.com, Advanced servlets and JSP tutorials

http://stackoverflow.com/questions/3106452/how-do-servlets-work-instantiation-sessions-shared-variables-and-multithreadi

http://stackoverflow.com/questions/1979957/maven-dependency-for-servlet-3-0-api

/ 7	. 

/ Source code boek	, 
http://examples.oreilly.com/9780596000400/
/ we download 'static examples'	, 
[eric@localhost servlet]$ pwd
/home/eric/Devel/Java/servlet
[eric@localhost servlet]$ unzip  ~/Downloads/jservlet2.zip 

http://www.servlets.com/
/ author's website	,

/ lees	,
http://www.oreilly.com/pub/au/180

Jason Hunter
webmaster@servlets.com @hunterhacker

/ 7	. 

//@WebServlet("/my")				// or	,
@WebServlet(urlPatterns={"/my"})
public class MyServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String name=getServletName();

/ we zien	, 
sessions.MyServlet

/ als we 
@WebServlet(name="Foo",urlPatterns={"/my"})
/ dan zien we 
Foo

/ Als we 	, 
         <servlet>
         	<servlet-name>my</servlet-name>
         	<servlet-class>sessions.MyServlet</servlet-class>
         </servlet>
         <servlet-mapping>
         	<servlet-name>my</servlet-name>
         	<url-pattern>/my</url-pattern>
         </servlet-mapping>

/ dan zien we 
my

/ 7. 	

/ Hoe servlet zelf in url?
/ probeer forward/redirect	, 
/ lees	, 
http://alvinalexander.com/blog/post/servlets/forwarding-from-servlet-jsp


/ 7	. 

/ we download oude tomcat	, 
[eric@localhost jakarta-tomcat-3.3.1a]$ pwd
/home/eric/Devel/Java/Tomcat/jakarta-tomcat-3.3.1a

/ ws workspace-spring7_7
/ proj servlets2_2

$ vi pom.xml

		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>2.2</version>
		    <scope>provided</scope>
		</dependency>

$ vi MyServet.java

/ GEEN @WebServlet 
public class MyServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
		String name=getServletName();
		ps.println("name: "+ name);
		
//		session.invalidate();
	}

}

[eric@localhost jakarta-tomcat-3.3.1a]$ less examples/WEB-INF/web.xml 

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN"
    "http://java.sun.com/j2ee/dtds/web-app_2_2.dtd">
...

[eric@localhost jakarta-tomcat-3.3.1a]$ bash bin/tomcat.sh run
/ OK

/ maak in eclipse servlet2_2 deploy config	, 
clean tomcat7;deploy
/ Repareer manager
/ TODO

/ 7	. 

http://localhost:9090/wicket-examples-step-by-step/repeater/clock?0

/ ws workspace-wicket7_7
/ proj servlets

$ vi MyServlet.java

package sessions;
@WebServlet(name="my",urlPatterns={"/my"})
public class MyServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		String name=getServletName();

/ dan geeft getServletName()=="my"
/ Als we name weglaten, dan sessions.MyServlet

/ 7	. 

/ Lees	, 
$ vi LOG_wicket.txt
/ See SERIALIZE WICKET
    / See TOMCAT'S REQUEST.GETSESION WITH CREATE=TRUE
    / See REAL SESSION CREATED
    / See TOMCAT REGISTERS SESSION
    / See STORE WICKET SESSION IN TOMCAT SESSION


/ 7	. 

/ BUILD TOMCAT 8

$ vi ~/.bash-profile
ANT_HOME=/usr/share/ant
export ANT_HOME
/ Maar version is te laag	, 

[eric@localhost Ant]$ pwd
/home/eric/Devel/Java/Ant
[eric@localhost Ant]$ unzip  ~/Downloads/apache-ant-1.9.9-bin.zip 

[eric@localhost apache-tomcat-8.5.12-src]$ set | grep ANT
ANT_HOME=/usr/share/ant
/ dit komt uit ~/.bash_profile	,


/ override	, 
$ vi ~/bin/env-tomcat.sh
ANT_HOME=$HOME/Devel/Java/Ant/apache-ant-1.9.9
PATH=$ANT_HOME/bin:$PATH

[eric@localhost apache-tomcat-8.5.12-src]$ cp -a build.properties.default build.properties
$ vi build.properties
base.path=${user.home}/tomcat-build-libs		
compile.debug=true

[eric@localhost apache-tomcat-8.5.12-src]$ . ~/bin/env-tomcat.sh 
[eric@localhost apache-tomcat-8.5.12-src]$ ant 2>&1 | tee LOG_ant.txt
/ OK

[eric@localhost build]$ pwd
/home/eric/Devel/Java/Tomcat/apache-tomcat-8.5.12-src/output/build
[eric@localhost build]$ vi conf/tomcat-users.xml 
<tomcat-users ...>
    <role rolename="manager-gui"/>
    <role rolename="manager-script"/>
    <user username="tomcat" password="s3cret" roles="manager-gui,manager-script"/>
</tomcat-users>

[eric@localhost build]$ vi conf/server.xml 
<Server port="8005" shutdown="SHUTDOWN">
  <Service name="Catalina">
    <Connector port="9090" protocol="HTTP/1.1"		<-
               connectionTimeout="20000"
               redirectPort="8443" />
    <Engine name="Catalina" defaultHost="localhost">
     <Host name="localhost"  appBase="webapps"
            unpackWARs="true" autoDeploy="true">
`        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="localhost_access_log" suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />
      </Host>
    </Engine>
  </Service>
</Server>

/ In bin/catalina.sh zitten \r\n	, en daarom	, 
[eric@localhost build]$ bin/catalina.sh jpda run
bash: bin/catalina.sh: /bin/sh^M: bad interpreter: No such file or directory

[eric@localhost build]$ cat bin/catalina.sh | tr -d '\r' | od -t x1 -t c  | less
0000000  23  21  2f  62  69  6e  2f  73  68  0a  0a  23  20  4c  69  63
          #   !   /   b   i   n   /   s   h  \n  \n   #       L   i   c
...
[eric@localhost build]$ bin/catalina_linux.sh jpda run
/home/eric/Devel/Java/Tomcat/apache-tomcat-8.5.12-src/output/build/bin/setclasspath.sh: line 2: $'\r': command not found

[eric@localhost bin]$ cat catalina.sh | tr -d '\r' > tmp
[eric@localhost bin]$ mv catalina.sh catalina.sh.orig
[eric@localhost bin]$ mv tmp catalina.sh

[eric@localhost bin]$ cat setclasspath.sh | tr -d '\r' > tmp
[eric@localhost bin]$ mv setclasspath.sh setclasspath.sh.orig
[eric@localhost bin]$ mv tmp setclasspath.sh

[eric@localhost bin]$ ./catalina.sh jpda run
/ OK

$ vi catalina.sh
JPDA_ADDRESS=9966
/ want in eclipse remote debug naar localhost:9966

/ Ga naar debug configurations
Name: tomcat-remote-debug
tab Source
servlets
apache-tomcat-8.0.28-src.zip


/ Einde BUILD TOMCAT 8

/ BUILD TOMCAT 7

[eric@localhost bin]$ cat env-build-tomcat-7.sh 
#!/usr/bin/bash
export ANT_HOME=$HOME/Devel/Java/Ant/apache-ant-1.9.9
export JAVA_HOME=$HOME/Devel/Java/jdk1.6.0_45
PATH=$ANT_HOME/bin:$JAVA_HOME:$PATH


[eric@localhost apache-tomcat-7.0.76-src]$ vi build.properties

# Location of Java7 JDK
java.7.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71-2.5.3.0.fc20.x86_64

base.path=${user.home}/tomcat-build-libs
compile.source=1.6											/ blijft zo	,
compile.target=1.6
compile.debug=true

[eric@localhost apache-tomcat-7.0.76-src]$ pwd
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src
[eric@localhost apache-tomcat-7.0.76-src]$ . ~/bin/env-build-tomcat-7.sh 
[eric@localhost apache-tomcat-7.0.76-src]$ ant
/ OK

/ 7	. 

[eric@localhost build]$ pwd
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build
[eric@localhost build]$ find lib -name "*.jar" | xargs -I %  bash -c "echo %;jar tvf % | grep StandardManager" 
lib/jasper-el.jar
lib/catalina-ha.jar
lib/tomcat-i18n-es.jar
lib/catalina.jar
  1008 Thu Mar 23 08:41:54 CET 2017 org/apache/catalina/session/StandardManager$PrivilegedDoLoad.class
  1016 Thu Mar 23 08:41:54 CET 2017 org/apache/catalina/session/StandardManager$PrivilegedDoUnload.class
 12555 Thu Mar 23 08:41:54 CET 2017 org/apache/catalina/session/StandardManager.class
lib/annotations-api.jar
lib/websocket-api.jar
lib/catalina-tribes.jar
lib/ecj-4.4.2.jar
lib/tomcat7-websocket.jar
lib/catalina-ant.jar
lib/servlet-api.jar
lib/tomcat-jdbc.jar
lib/el-api.jar
lib/tomcat-coyote.jar
lib/tomcat-api.jar
lib/tomcat-i18n-ja.jar
lib/tomcat-dbcp.jar
lib/tomcat-i18n-fr.jar
lib/tomcat-util.jar
lib/jasper.jar
lib/jsp-api.jar

/ we hebben deze add in servlets appl, Java build path, Libraries	, 
/ Met ctrl+shift+t vinden we StandardManager	, maar we zien geen source	, 
/ we hebben tomcat-catalina als maven dep	, ctrl-shift-t doet het OK	, maar we kunnen er geen b in set	, 
/ TODO
/ Maar dat is niet de jar die wordt used	, want die is in /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib	, 
/ TODO


/ Einde BUILD TOMCAT 7

/ TOMCAT 7

/ 7	.  

/ 13	. 

/ ws workspace-wicket7_7
/ sc Tomcat v7.0 Server at localhost (2)

/ ga naar project: servlets
/right click, Build path, Libraries
/ voeg catalina.jar toe	, met Source attachment External location, path: /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/java
/ Dan wordt de src van bijv StandardManager gevonden, en kunnen we b's set	, 

/ In Expressions zagen we als we bijv "boostrap" wilden eval	, 
The type org.apache.juli.logging.Log cannot be resolved. It is indirectly referenced from required .class files	
/ we hebben daarom in Build path, Libraries add External jar	, 
	tomcat-juli.jar
/ Nu kan het wel	,

/ we zagen ook	, 
/ we doen in Debug	, 
org.apache.catalina.startup.CatalinaProperties.getProperty(name + ".loader")
name
/ ctlr+shift+i:
	Evaluation failed. Reason(s):
		Unable to evaluate the selected expression:
		To perform an evaluation, an expression must be compiled in the context of a Java project's build path. The current execution context is not associated with a Java project in the workspace.
/ Maar dat is nu dus over	, 


/ In de server config	, launch config	, Source laten we ALLEEN Default ,  


[eric@localhost build]$ jar tvf bin/bootstrap.jar 
     0 Tue Mar 21 17:37:44 CET 2017 META-INF/
   524 Tue Mar 21 17:37:42 CET 2017 META-INF/MANIFEST.MF
     0 Tue Mar 21 17:37:26 CET 2017 org/
     0 Tue Mar 21 17:37:36 CET 2017 org/apache/
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/catalina/
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/catalina/webresources/
     0 Tue Mar 21 17:37:36 CET 2017 org/apache/catalina/webresources/war/
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/catalina/security/
  8619 Tue Mar 21 17:37:32 CET 2017 org/apache/catalina/security/SecurityClassLoad.class
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/catalina/startup/
 11917 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/Bootstrap.class							<-
  3382 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/CatalinaProperties.class
  1224 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/ClassLoaderFactory$1.class
  1210 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/ClassLoaderFactory$2.class
  1052 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/ClassLoaderFactory$Repository.class
  1395 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/ClassLoaderFactory$RepositoryType.class
  7427 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/ClassLoaderFactory.class
   859 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/SafeForkJoinWorkerThreadFactory$SafeForkJoinWorkerThread.class
   938 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/SafeForkJoinWorkerThreadFactory.class
  5022 Tue Mar 21 17:37:34 CET 2017 org/apache/catalina/startup/Tool.class
  7528 Tue Mar 21 17:37:42 CET 2017 org/apache/catalina/startup/catalina.properties
  1414 Tue Mar 21 17:37:36 CET 2017 org/apache/catalina/webresources/war/Handler.class
  1191 Tue Mar 21 17:37:36 CET 2017 org/apache/catalina/webresources/war/WarURLConnection.class
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/tomcat/
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/tomcat/util/
     0 Tue Mar 21 17:37:42 CET 2017 org/apache/tomcat/util/buf/
  4404 Tue Mar 21 17:37:40 CET 2017 org/apache/tomcat/util/buf/UriUtil.class
   172 Tue Mar 21 17:37:42 CET 2017 META-INF/NOTICE
 11560 Tue Mar 21 17:37:42 CET 2017 META-INF/LICENSE

/ we kunnen met ctrl-shift-t Boostrap vinden, en b's set in main, createClassLoader, ...
/ we start de self build catalina	, onder debug	, 

[eric@localhost build]$ jar tvf bin/tomcat-juli.jar 
   394 Thu Mar 23 08:41:56 CET 2017 META-INF/MANIFEST.MF
   856 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/AsyncFileHandler$LogEntry.class
  1723 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/AsyncFileHandler$LoggerThread.class
  3243 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/AsyncFileHandler.class
  1336 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$1.class
  1343 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$2.class
  1020 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$3.class
  1113 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$ClassLoaderLogInfo.class
   993 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$Cleaner.class
  2781 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$LogNode.class
   492 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager$RootLogger.class
 13695 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/ClassLoaderLogManager.class
   228 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/DateFormatCache$1.class
  3098 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/DateFormatCache$Cache.class
  2257 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/DateFormatCache.class
  8679 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/FileHandler.class
  2621 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/JdkLoggerFormatter.class
   866 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/OneLineFormatter$1.class
  3234 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/OneLineFormatter.class
  1008 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/VerbatimFormatter.class
  5038 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/logging/DirectJDKLog.class
   476 Thu Mar 23 08:41:52 CET 2017 org/apache/juli/logging/Log.class									<-
  1142 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/logging/LogConfigurationException.class
  3874 Thu Mar 23 08:41:54 CET 2017 org/apache/juli/logging/LogFactory.class
   167 Thu Mar 23 08:41:58 CET 2017 META-INF/NOTICE
 11358 Thu Mar 23 08:41:58 CET 2017 META-INF/LICENSE

/ Nu kan eclipse in Expressions log	,	omdat we tomcat-juli.jar hebben add aan build path, libraries	, 

/ 13	. 

/ we clicked F3 op CatalinaProperties	,
/ eclipse: not on build path
/ we add bootstrap.jar op java build path,  libraries	,  met Add External jars	,
/ F3: Attach source
/ Java build path, libraries, bootstrap.jar , source attachment, external location, external folder: path: /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/java
/ OK , we kunnen ook b's set	, 

/ Door hetzelfde te doen met catalina.jar kunnen we ook ctlr+shift+t: StandardManager

/ we hebben de source dir	, anders moet je source jars hebben	, 

/ 7 

package javax.servlet;
 public interface ServletConfig {
    public String getServletName();
    public ServletContext getServletContext();
    public String getInitParameter(String name);
    public Enumeration<String> getInitParameterNames();

package javax.servlet;
/**
 * Defines a set of methods that a servlet uses to communicate with its
 * servlet container, for example, to get the MIME type of a file, dispatch
 * requests, or write to a log file.
 *
 * <p>There is one context per "web application" per Java Virtual Machine.  (A
 * "web application" is a collection of servlets and content installed under a
 * specific subset of the server's URL namespace such as <code>/catalog</code>
 * and possibly installed via a <code>.war</code> file.) 
 *
 * <p>In the case of a web
 * application marked "distributed" in its deployment descriptor, there will
 * be one context instance for each virtual machine.  In this situation, the 
 * context cannot be used as a location to share global information (because
 * the information won't be truly global).  Use an external resource like 
 * a database instead.
 *
 * <p>The <code>ServletContext</code> object is contained within 
 * the {@link ServletConfig} object, which the Web server provides the
 * servlet when the servlet is initialized.
 *
public interface ServletContext {

/ 13	. 

package org.apache.catalina.core;
public class StandardWrapper extends ContainerBase
    implements ServletConfig, Wrapper, NotificationEmitter {

package org.apache.catalina.core;
public final class StandardWrapperFacade
    implements ServletConfig {

/ 13	. 

@WebServlet("/study")
public class StudyServlet extends HttpServlet{
	
	public MyServlet() {
		boolean b=false;
	}
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		ServletContext servletContext=getServletContext();
/s
package javax.servlet;
public abstract class GenericServlet 
    implements Servlet, ServletConfig, java.io.Serializable

    public ServletContext getServletContext() {
        ServletConfig sc = getServletConfig();
        return sc.getServletContext();
    }
/t
		String name=getServletName();
/s
public abstract class GenericServlet 
    implements Servlet, ServletConfig, java.io.Serializable
    public String getServletName() {
        ServletConfig sc = getServletConfig();
        return sc.getServletName();
    }

/ 7	. 

$ vi Catalina.class
    protected Digester createStartDigester() {

        digester.addObjectCreate("Server/Service/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties("Server/Service/Listener");
        digester.addSetNext("Server/Service/Listener",
                            "addLifecycleListener",
                            "org.apache.catalina.LifecycleListener");
/ OK	, staat hier	, 
        digester.addRuleSet(new HostRuleSet("Server/Service/Engine/"));
/ Dit is een group van rules	, 

$ vi HostRuleSet.class
public class HostRuleSet extends RuleSetBase {
    @Override
    public void addRuleInstances(Digester digester) {
        digester.addRule(prefix + "Host",
                         new LifecycleListenerRule
                         ("org.apache.catalina.startup.HostConfig",
                          "hostConfigClass"));
/ of	, / TODO
        digester.addObjectCreate(prefix + "Host/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties(prefix + "Host/Listener");
        digester.addSetNext(prefix + "Host/Listener",
                            "addLifecycleListener",
                            "org.apache.catalina.LifecycleListener");
/ Hier vallen we inderdaad in tijdens debug	, 



/ Einde TOMCAT 7

/ DEBUG TOMCAT 7

/s
Bootstrap.main(String[]) line: 398	
            Bootstrap bootstrap = new Bootstrap();
            try {
                bootstrap.init();
/s
Bootstrap.init() line: 199	
        // Set Catalina path
        setCatalinaHome();
        setCatalinaBase();

        initClassLoaders();
/s
Bootstrap.initClassLoaders() line: 80	
            commonLoader = createClassLoader("common", null);
/s
Bootstrap.createClassLoader(String, ClassLoader) line: 98	
        String value = CatalinaProperties.getProperty(name + ".loader"); / ${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar

/ Intermezzo

[eric@localhost build]$ grep 'common.loader' -r *
conf/catalina.properties:common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar

$ vi conf/catalina.properties

common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar
server.loader=																											/ gaat catalinaLoader heten in src,	
shared.loader=


/ Einde Intermezzo

        value = replace(value);
value	"/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib,/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/*.jar,/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib,/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/*.jar" (id=34)	

        List<Repository> repositories = new ArrayList<Repository>();

        StringTokenizer tokenizer = new StringTokenizer(value, ",");
        while (tokenizer.hasMoreElements()) {
            String repository = tokenizer.nextToken().trim(); / /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib

           } else {
                repositories.add(
                        new Repository(repository, RepositoryType.DIR));

repositories	java.util.ArrayList<E>  (id=30)	
[org.apache.catalina.startup.ClassLoaderFactory$Repository@5d8440]

/ volgende	,
        while (tokenizer.hasMoreElements()) {
            String repository = tokenizer.nextToken().trim(); / /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/*.jar

            // Local repository
            if (repository.endsWith("*.jar")) {
/j
                repository = repository.substring
                    (0, repository.length() - "*.jar".length()); / /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/
                repositories.add(
                        new Repository(repository, RepositoryType.GLOB));

repositories	java.util.ArrayList<E>  (id=30)	
[org.apache.catalina.startup.ClassLoaderFactory$Repository@5d8440, org.apache.catalina.startup.ClassLoaderFactory$Repository@1b7ebdf8]

/ volgende	, 
/ omdat bij ons catalina home= catalina base	, krijgen we beide entries nog een keer	, 


        return ClassLoaderFactory.createClassLoader(repositories, parent);
/s
ClassLoaderFactory.createClassLoader(List<Repository>, ClassLoader) line: 182	
            for (Repository repository : repositories)  {					 

repository	org.apache.catalina.startup.ClassLoaderFactory$Repository  (id=66)	
	location	"/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib" (id=42)	
	type	org.apache.catalina.startup.ClassLoaderFactory$RepositoryType  (id=76)	DIR

                } else if (repository.getType() == RepositoryType.DIR) {
/j
                    File directory = new File(repository.getLocation());

                    directory = directory.getCanonicalFile();
                    URL url = buildClassLoaderUrl(directory);
                    if (log.isDebugEnabled())
                        log.debug("  Including directory " + url);
                    set.add(url);
set=
[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/]

/ volgende	, 
            for (Repository repository : repositories)  {
                } else if (repository.getType() == RepositoryType.GLOB) {
/j
                    File directory=new File(repository.getLocation());
                    directory = directory.getCanonicalFile();
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib
                    String filenames[] = directory.list();
[jasper-el.jar, catalina-ha.jar, tomcat-i18n-es.jar, catalina.jar, annotations-api.jar, websocket-api.jar, catalina-tribes.jar, ecj-4.4.2.jar, tomcat7-websocket.jar, catalina-ant.jar, servlet-api.jar, tomcat-jdbc.jar, el-api.jar, tomcat-coyote.jar, tomcat-api.jar, tomcat-i18n-ja.jar, tomcat-dbcp.jar, tomcat-i18n-fr.jar, tomcat-util.jar, jasper.jar, jsp-api.jar]
                    for (int j = 0; j < filenames.length; j++) {
                        String filename = filenames[j].toLowerCase(Locale.ENGLISH);
                        if (!filename.endsWith(".jar"))
                            continue;
                        File file = new File(directory, filenames[j]);
                        file = file.getCanonicalFile();
                        if (!validateFile(file, RepositoryType.JAR)) {
                            continue;
                        }
                        if (log.isDebugEnabled())
                            log.debug("    Including glob jar file "
                                + file.getAbsolutePath());
                        URL url = buildClassLoaderUrl(file); / file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar
                        set.add(url);
                    }
set= 
[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ha.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-es.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/annotations-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/websocket-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-tribes.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/ecj-4.4.2.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat7-websocket.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ant.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/servlet-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-jdbc.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/el-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-coyote.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-ja.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-dbcp.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-fr.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-util.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jsp-api.jar] 

        // Construct the class loader itself
        final URL[] array = set.toArray(new URL[set.size()]);
        return AccessController.doPrivileged(
                new PrivilegedAction<URLClassLoader>() {
                    @Override
                    public URLClassLoader run() {
                        if (parent == null)
                            return new URLClassLoader(array);
this	org.apache.catalina.startup.ClassLoaderFactory$2  (id=119)	
	val$array	java.net.URL[22]  (id=122)	
	val$parent	null	
/t
Bootstrap.initClassLoaders() line: 81	
            commonLoader = createClassLoader("common", null);
/d
this	org.apache.catalina.startup.Bootstrap  (id=21)	
	commonLoader	java.net.URLClassLoader  (id=135)	
		ucp	sun.misc.URLClassPath  (id=182)	
			path	java.util.ArrayList<E>  (id=195)	
[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ha.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-es.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/annotations-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/websocket-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-tribes.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/ecj-4.4.2.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat7-websocket.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ant.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/servlet-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-jdbc.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/el-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-coyote.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-ja.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-dbcp.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-fr.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-util.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jsp-api.jar]  
			urls	java.util.Stack<E>  (id=196)	

            catalinaLoader = createClassLoader("server", commonLoader);
/s
Bootstrap.createClassLoader(String, ClassLoader) line: 100	
        String value = CatalinaProperties.getProperty(name + ".loader"); / ""
        if ((value == null) || (value.equals("")))
/j
            return parent;
/t
Bootstrap.initClassLoaders() line: 91	
            catalinaLoader = createClassLoader("server", commonLoader);
/d
            sharedLoader = createClassLoader("shared", commonLoader);
/s
Bootstrap.createClassLoader(String, ClassLoader) line: 100	
        String value = CatalinaProperties.getProperty(name + ".loader"); / ""
        if ((value == null) || (value.equals("")))
/j
            return parent;
/t
Bootstrap.initClassLoaders() line: 91	
            catalinaLoader = createClassLoader("shared", commonLoader);
/d
/t
Bootstrap.init() line: 201	
        initClassLoaders();
/d
        Thread.currentThread().setContextClassLoader(catalinaLoader);
/ catalinaLoader==commonLoader==sharedLoader

        SecurityClassLoad.securityClassLoad(catalinaLoader);
/s
SecurityClassLoad.securityClassLoad(ClassLoader) line: 35	
        if( System.getSecurityManager() == null ){									/ TODO
/j
            return;
        }
/t
Bootstrap.init() line: 208	
        SecurityClassLoad.securityClassLoad(catalinaLoader);
/d

///////////////////////////////////
/ Hier staat dat Catalina.class wordt loaded NIET door de bootstrap class loader	, die Bootstrap.class loads	, maar die tomcat zelf heeft gemaakt	, 
       Class<?> startupClass = 	catalinaLoader.loadClass ("org.apache.catalina.startup.Catalina");	

        Object startupInstance = startupClass.newInstance();

startupClass	java.lang.Class<T> (org.apache.catalina.startup.Catalina) (id=92)	
	allPermDomain	null	
	ANNOTATION	8192	
	ENUM	16384	
	initted	true	
	reflectionFactory	sun.reflect.ReflectionFactory  (id=93)	
	serialPersistentFields	java.io.ObjectStreamField[0]  (id=95)	
	serialVersionUID	3206093459760846163	
	smHelper	null	
	SYNTHETIC	4096	
	useCaches	true	
	annotations	null	
	annotationType	null	
	cachedConstructor	java.lang.reflect.Constructor<T>  (id=96)		<-
	classRedefinedCount	0	
	classValueMap	null	
	declaredAnnotations	null	
	enumConstantDirectory	null	
	enumConstants	null	
	genericInfo	null	
	lastAnnotationsRedefinedCount	0	
	name	"org.apache.catalina.startup.Catalina" (id=100)				<-
	newInstanceCallerCache	null	
	reflectionData	java.lang.ref.SoftReference<T>  (id=101)			<-
/ Bij <- set als 'new Catalina' is gedaan	,

startupInstance	org.apache.catalina.startup.Catalina  (id=104)	
	log	org.apache.juli.logging.DirectJDKLog  (id=105)	
	sm	org.apache.tomcat.util.res.StringManager  (id=106)	
	await	false	
	configFile	"conf/server.xml" (id=108)	
	parentClassLoader	java.net.URLClassLoader  (id=80)		/ ucp.paths=lijst van jars+lib/		, =  Catalina.class.getClassLoader()	 TODO parent in name	,
	server	null	
	shutdownHook	null	
	starting	false	
	stopping	false	
	useNaming	true	
	useShutdownHook	true	

       String methodName = "setParentClassLoader";
        Class<?> paramTypes[] = new Class[1];
        paramTypes[0] = Class.forName("java.lang.ClassLoader");
        Object paramValues[] = new Object[1];
        paramValues[0] = sharedLoader;			/ in ons geval = startupInstance.parentClassLoader	,
        Method method =
            startupInstance.getClass().getMethod(methodName, paramTypes);
        method.invoke(startupInstance, paramValues);
/s
Catalina.setParentClassLoader(ClassLoader) line: 187	
        this.parentClassLoader = parentClassLoader;	/ URLClassLoader met ucp.path=[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ha.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-es.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/annotations-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/websocket-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-tribes.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/ecj-4.4.2.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat7-websocket.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ant.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/servlet-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-jdbc.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/el-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-coyote.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-ja.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-dbcp.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-fr.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-util.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jsp-api.jar]


/ Intermezzo

/ we hebben b set in Catalina.setParentClassLoader	, 
/ we vallen er in	, maar we zien in eclipse een nieuw window met 
Edit Source Lookup Path
/ Ook in dit window kunnen we b's set	,
/ We hebben nu 2 windows in eclipse, met Catalina.java	, 
/ We zien ook Bootstrap.class en Bootstrap.java 
/ we zien Bootstrap.class met 2 keer Catalina.java
/ TODO

/ We debug door Bootstrap.java

/ Hier beneden	, 
Bootstrap.setAwait(boolean) line: 360	
        method.invoke(catalinaDaemon, paramValues);
/ Als we ctlr+shift+t Calalina doen, krijgen we Catalina.class	, als we daar een b is set in setAwait	, en we next over method.invoke, dan valt hij in Catalina.java	, 

/ Als we de src folder add aan 'Edit Source Lookup Path', dan verdwijnt in Expressions de logging	, 
/ TODO

/ Einde Intermezzo

/t
Bootstrap.init() line: 225	
        method.invoke(startupInstance, paramValues);
/d
        catalinaDaemon = startupInstance;
startupInstance	org.apache.catalina.startup.Catalina  (id=401)	
	log	org.apache.juli.logging.DirectJDKLog  (id=439)	
	sm	org.apache.tomcat.util.res.StringManager  (id=484)	
	await	false	
	configFile	"conf/server.xml" (id=546)	
	parentClassLoader	java.net.URLClassLoader  (id=240)	
	server	null	
	shutdownHook	null	
	starting	false	
	stopping	false	
	useNaming	true	
	useShutdownHook	true	

/t
Bootstrap.main(String[]) line: 404	
                bootstrap.init();
/d
            daemon = bootstrap;

daemon	org.apache.catalina.startup.Bootstrap  (id=21)					/ de Bootstrap inst	,
	catalinaDaemon	org.apache.catalina.startup.Catalina  (id=28)	
		configFile	"conf/server.xml" (id=569)	
		parentClassLoader	java.net.URLClassLoader  (id=570)	
			ucp	sun.misc.URLClassPath  (id=649)					
				path			[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ha.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-es.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/annotations-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/websocket-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-tribes.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/ecj-4.4.2.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat7-websocket.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ant.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/servlet-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-jdbc.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/el-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-coyote.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-api.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-ja.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-dbcp.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-fr.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-util.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper.jar, file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jsp-api.jar]	
	catalinaLoader	java.net.URLClassLoader  (id=570)	
	commonLoader	java.net.URLClassLoader  (id=570)	
	sharedLoader	java.net.URLClassLoader  (id=570)	

            String command = "start";
            if (args.length > 0) {	/ args="start" 	ook	,
                command = args[args.length - 1];
start
            } else if (command.equals("start")) {
                daemon.setAwait(true);
/s
Bootstrap.setAwait(boolean) line: 360	
        Class<?> paramTypes[] = new Class[1];
        paramTypes[0] = Boolean.TYPE;
        Object paramValues[] = new Object[1];
        paramValues[0] = Boolean.valueOf(await);
        Method method =
            catalinaDaemon.getClass().getMethod("setAwait", paramTypes);
        method.invoke(catalinaDaemon, paramValues);
/s
Catalina.setAwait(boolean) line: 225	
        await = b;
/t
Bootstrap.main(String[]) line: 427	
            } else if (command.equals("start")) {
                daemon.setAwait(true);
/d
                daemon.load(args);	/ args=[start]
/s
Bootstrap.load(String[]) line: 249	
/=
    private void load(String[] arguments)	/ arguments=[start]
        // Call the load() method
        String methodName = "load";
        Object param[];
        Class<?> paramTypes[];
        } else {
            paramTypes = new Class[1];
            paramTypes[0] = arguments.getClass();	/ [Ljava.lang.String;	, een array van strings	,
            param = new Object[1];
            param[0] = arguments;		["start"]

        Method method =
            catalinaDaemon.getClass().getMethod(methodName, paramTypes);
        method.invoke(catalinaDaemon, param);
/s
Catalina.load(String[]) line: 667	
            if (arguments(args)) {
                load();
/s
Catalina.load() line: 542	
        initDirs();		/ Doet NIETS in ons geval	,
/s
Catalina.initDirs() line: 802	

        String catalinaHome = System.getProperty(Globals.CATALINA_HOME_PROP); / Globals: public static final String CATALINA_HOME_PROP = "catalina.home";
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build			/ TODO Wanneer set	?
            String catalinaBase = System.getProperty(Globals.CATALINA_BASE_PROP);
        String temp = System.getProperty("java.io.tmpdir");
/tmp
/t
Catalina.load() line: 548	
        initDirs();
/d
        initNaming();
/s
Catalina.initNaming() line: 862	
        } else {
            System.setProperty("catalina.useNaming", "true");
            String value = "org.apache.naming";
            String oldValue =
                System.getProperty(javax.naming.Context.URL_PKG_PREFIXES);
null
            if (oldValue != null) {
/n
            System.setProperty(javax.naming.Context.URL_PKG_PREFIXES, value); /  String URL_PKG_PREFIXES = "java.naming.factory.url.pkgs";	, value=org.apache.naming

           value = System.getProperty
                (javax.naming.Context.INITIAL_CONTEXT_FACTORY);
null
            if (value == null) {
                System.setProperty
                    (javax.naming.Context.INITIAL_CONTEXT_FACTORY,		/     String INITIAL_CONTEXT_FACTORY = "java.naming.factory.initial";
                     "org.apache.naming.java.javaURLContextFactory");

/t
Catalina.load() line: 551	
        initNaming();
/d
        Digester digester = createStartDigester();

/ Lees	, 
https://tomcat.apache.org/tomcat-5.5-doc/catalina/docs/api/org/apache/tomcat/util/digester/package-summary.html#package_description

/s
Catalina.createStartDigester() line: 300	

        Digester digester = new Digester();	/ classloader is de URLClassLoader	, 
/s
Digester.<init>() line: 113	
        super();		/ DefaultHandler2-DefaultHandler-Object

    protected IntrospectionUtils.PropertySource source[] = new IntrospectionUtils.PropertySource[] {
            new SystemPropertySource() };

/ Intermezzo

[eric@localhost apache-tomcat-7.0.76]$ find lib/ -type f  | xargs -I % bash -c "echo %;jar tvf % | grep SystemPropertySource"
lib/jasper-el.jar
lib/catalina-ha.jar
lib/tomcat-i18n-es.jar
lib/catalina.jar
lib/annotations-api.jar
lib/websocket-api.jar
lib/catalina-tribes.jar
lib/ecj-4.4.2.jar
lib/tomcat7-websocket.jar
lib/catalina-ant.jar
lib/servlet-api.jar
lib/tomcat-jdbc.jar
lib/el-api.jar
lib/tomcat-coyote.jar
  1657 Thu Mar 09 13:49:20 CET 2017 org/apache/tomcat/util/digester/Digester$SystemPropertySource.class
lib/tomcat-api.jar
lib/tomcat-i18n-ja.jar
lib/tomcat-dbcp.jar
lib/tomcat-i18n-fr.jar
lib/tomcat-util.jar
lib/jasper.jar
lib/jsp-api.jar

/ TODO

/ Einde Intermezzo

/t
Catalina.createStartDigester() line: 303	
        Digester digester = new Digester();
/d
        digester.setValidating(false);
        digester.setRulesValidation(true);

        HashMap<Class<?>, List<String>> fakeAttributes =
            new HashMap<Class<?>, List<String>>();
        ArrayList<String> attrs = new ArrayList<String>();
        attrs.add("className");
        fakeAttributes.put(Object.class, attrs);
        digester.setFakeAttributes(fakeAttributes);
/ TODO
        digester.setUseContextClassLoader(true);

        // Configure the actions we will be using
        digester.addObjectCreate("Server",									/ pattern	,
                                 "org.apache.catalina.core.StandardServer",	/ class name	,
                                 "className");								/ attribute name	,
/s
Digester.addObjectCreate(String, String, String) line: 2145	
/=
    public void addObjectCreate(String pattern, String className,
                                String attributeName) {
        addRule(pattern,
                new ObjectCreateRule(className, attributeName)); 
/s
Digester.addRule(String, Rule) line: 1682	
/=
    public void addRule(String pattern, Rule rule) {
pattern	"Server" (id=762)	
rule	org.apache.tomcat.util.digester.ObjectCreateRule  (id=771)	

        rule.setDigester(this);
        getRules().add(pattern, rule);
/s
RulesBase.add(String, Rule) line: 167	
        List<Rule> list = cache.get(pattern);
        if (list == null) {
            list = new ArrayList<Rule>();
            cache.put(pattern, list);
        }
        list.add(rule);
        rules.add(rule);
        if (this.digester != null) {
            rule.setDigester(this.digester);
        }
/t
Catalina.createStartDigester() line: 317	
        digester.addObjectCreate("Server",
                                 "org.apache.catalina.core.StandardServer",
                                 "className");
/d
        digester.addSetProperties("Server");
/s
Digester.addSetProperties(String) line: 2243	
        addRule(pattern,
                new SetPropertiesRule());
/t
Catalina.createStartDigester() line: 317	
        digester.addObjectCreate("Server",
                                 "org.apache.catalina.core.StandardServer",
                                 "className");
        digester.addSetProperties("Server");
/d
        digester.addSetNext("Server",
                            "setServer",
                            "org.apache.catalina.Server");
/s
Digester.addSetNext(String, String, String) line: 2198	
        addRule(pattern,
                new SetNextRule(methodName, paramType));
/t
Catalina.createStartDigester() line: 322	
        digester.addObjectCreate("Server",
                                 "org.apache.catalina.core.StandardServer",
                                 "className");
        digester.addSetProperties("Server");
        digester.addSetNext("Server",
                            "setServer",							/ normaal in vorige, is er nu niet, dus WH in Catalina	, dus Catalina.setServer	,
                            "org.apache.catalina.Server");
/d
        digester.addObjectCreate("Server/GlobalNamingResources",
                                 "org.apache.catalina.deploy.NamingResources");
        digester.addSetProperties("Server/GlobalNamingResources");
        digester.addSetNext("Server/GlobalNamingResources",
                            "setGlobalNamingResources",
                            "org.apache.catalina.deploy.NamingResources");

digester	org.apache.tomcat.util.digester.Digester  (id=722)	
	rules	org.apache.tomcat.util.digester.RulesBase  (id=800)	
		cache	java.util.HashMap<K,V>  (id=807)	
			size	2	
			table	java.util.HashMap$Entry<K,V>[16]  (id=829)	
				[13]	java.util.HashMap$Entry<K,V>  (id=861)	
					hash	-408340755	
					key	"Server/GlobalNamingResources" (id=841)	
					next	null	
					value	java.util.ArrayList<E>  (id=845)	
						elementData	java.lang.Object[10]  (id=864)	
							[0]	org.apache.tomcat.util.digester.ObjectCreateRule  (id=843)	
								attributeName	null	
								className	"org.apache.catalina.deploy.NamingResources" (id=842)	
								digester	org.apache.tomcat.util.digester.Digester  (id=722)	
								namespaceURI	null	
							[1]	org.apache.tomcat.util.digester.SetPropertiesRule  (id=955)	
								attributeNames	null	
								digester	org.apache.tomcat.util.digester.Digester  (id=722)	
								namespaceURI	null	
								propertyNames	null	
							[2]	org.apache.tomcat.util.digester.SetNextRule  (id=956)	
								digester	org.apache.tomcat.util.digester.Digester  (id=722)	
								methodName	"setGlobalNamingResources" (id=957)	
								namespaceURI	null	
								paramType	"org.apache.catalina.deploy.NamingResources" (id=842)	
								useExactMatch	false	
						modCount	3	
						size	3	
				[14]	java.util.HashMap$Entry<K,V>  (id=833)	
					hash	-1686234578	
					key	"Server" (id=762)	
					next	null	
					value	java.util.ArrayList<E>  (id=836)	
						elementData	java.lang.Object[10]  (id=858)	
							[0]	org.apache.tomcat.util.digester.ObjectCreateRule  (id=771)	
								attributeName	"className" (id=764)	
								className	"org.apache.catalina.core.StandardServer" (id=763)	
								digester	org.apache.tomcat.util.digester.Digester  (id=722)	
								namespaceURI	null	
							[1]	org.apache.tomcat.util.digester.SetPropertiesRule  (id=817)	
								attributeNames	null	
								digester	org.apache.tomcat.util.digester.Digester  (id=722)	
								namespaceURI	null	
								propertyNames	null	
							[2]	org.apache.tomcat.util.digester.SetNextRule  (id=788)	
								digester	org.apache.tomcat.util.digester.Digester  (id=722)	
								methodName	"setServer" (id=785)	
								namespaceURI	null	
								paramType	"org.apache.catalina.Server" (id=786)	
								useExactMatch	false	
						modCount	3	
						size	3	
			threshold	12	
			values	null	
		digester	org.apache.tomcat.util.digester.Digester  (id=722)	
		namespaceURI	null	
		rules	java.util.ArrayList<E>  (id=808)	
			elementData	java.lang.Object[10]  (id=813)	
				[0]	org.apache.tomcat.util.digester.ObjectCreateRule  (id=771)	
				[1]	org.apache.tomcat.util.digester.SetPropertiesRule  (id=817)	
				[2]	org.apache.tomcat.util.digester.SetNextRule  (id=788)	
				[3]	org.apache.tomcat.util.digester.ObjectCreateRule  (id=843)	
				[4]	org.apache.tomcat.util.digester.SetPropertiesRule  (id=955)	
				[5]	org.apache.tomcat.util.digester.SetNextRule  (id=956)	
			size	6	

        digester.addObjectCreate("Server/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties("Server/Listener");
        digester.addSetNext("Server/Listener",
                            "addLifecycleListener",		/ de vorige in "Server/Listener" is Server, dus WH StandardServer.addLifecycleListener
                            "org.apache.catalina.LifecycleListener");

        digester.addObjectCreate("Server/Service",
                                 "org.apache.catalina.core.StandardService",
                                 "className");
        digester.addSetProperties("Server/Service");
        digester.addSetNext("Server/Service",
                            "addService",			/ de vorige in "Server/Service" is Server, dus WH StandardServer.addService	, 
                            "org.apache.catalina.Service");

        digester.addObjectCreate("Server/Service/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties("Server/Service/Listener");
        digester.addSetNext("Server/Service/Listener",
                            "addLifecycleListener",			/ de vorige in "Server/Service/Listener" is Service, dus WH StandardService.addLifecycleListener
                            "org.apache.catalina.LifecycleListener");

        //Executor
        digester.addObjectCreate("Server/Service/Executor",
                         "org.apache.catalina.core.StandardThreadExecutor",
                         "className");
        digester.addSetProperties("Server/Service/Executor");

        digester.addSetNext("Server/Service/Executor",
                            "addExecutor",			/ de vorige in "Server/Service/Executor" is Service , dus WH StandardService.addExecutor
                            "org.apache.catalina.Executor");


        digester.addRule("Server/Service/Connector",
                         new ConnectorCreateRule());
        digester.addRule("Server/Service/Connector",
                         new SetAllPropertiesRule(new String[]{"executor"}));
        digester.addSetNext("Server/Service/Connector",
                            "addConnector",
                            "org.apache.catalina.connector.Connector");


        digester.addObjectCreate("Server/Service/Connector/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties("Server/Service/Connector/Listener");
        digester.addSetNext("Server/Service/Connector/Listener",
                            "addLifecycleListener",
                            "org.apache.catalina.LifecycleListener");

        // Add RuleSets for nested elements
        digester.addRuleSet(new NamingRuleSet("Server/GlobalNamingResources/"));
        digester.addRuleSet(new EngineRuleSet("Server/Service/"));
        digester.addRuleSet(new HostRuleSet("Server/Service/Engine/"));
        digester.addRuleSet(new ContextRuleSet("Server/Service/Engine/Host/"));
        addClusterRuleSet(digester, "Server/Service/Engine/Host/Cluster/");
        digester.addRuleSet(new NamingRuleSet("Server/Service/Engine/Host/Context/"));

        // When the 'engine' is found, set the parentClassLoader.
        digester.addRule("Server/Service/Engine",
                         new SetParentClassLoaderRule(parentClassLoader));
        addClusterRuleSet(digester, "Server/Service/Engine/Cluster/");

        return (digester);
/t
Catalina.load() line: 558	
        Digester digester = createStartDigester();
/d
                file = configFile();
/s
Catalina.configFile() line: 289	
        File file = new File(configFile);	/ conf/server.xml
        if (!file.isAbsolute()) {
            file = new File(System.getProperty(Globals.CATALINA_BASE_PROP), configFile);	/ /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/conf/server.xml
        }
        return (file);
/t
Catalina.load() line: 559	
                file = configFile();
/d
                inputStream = new FileInputStream(file);
                inputSource = new InputSource(file.toURI().toURL().toString());		/ SAX type
            try {
                inputSource.setByteStream(inputStream);
               	digester.push(this);					/ stack=[Catalina inst]
                digester.parse(inputSource);
/s
Digester.parse(InputSource) line: 1575	
        configure();
/s
Digester.configure() line: 2572	
        log = LogFactory.getLog("org.apache.tomcat.util.digester.Digester");
        saxLog = LogFactory.getLog("org.apache.tomcat.util.digester.Digester.sax");
/ TODO

/ Intermezzo

[eric@localhost apache-tomcat-7.0.76]$ find bin lib -name "*.jar"   | xargs -I % bash -c "echo %;jar tvf % | grep LogFactory"
bin/bootstrap.jar
bin/commons-daemon.jar
bin/tomcat-juli.jar
  3874 Thu Mar 09 13:49:22 CET 2017 org/apache/juli/logging/LogFactory.class
lib/jasper-el.jar
lib/catalina-ha.jar
lib/tomcat-i18n-es.jar
lib/catalina.jar
lib/annotations-api.jar
lib/websocket-api.jar
lib/catalina-tribes.jar
lib/ecj-4.4.2.jar
lib/tomcat7-websocket.jar
lib/catalina-ant.jar
lib/servlet-api.jar
lib/tomcat-jdbc.jar
lib/el-api.jar
lib/tomcat-coyote.jar
lib/tomcat-api.jar
lib/tomcat-i18n-ja.jar
lib/tomcat-dbcp.jar
lib/tomcat-i18n-fr.jar
lib/tomcat-util.jar
lib/jasper.jar
lib/jsp-api.jar

[eric@localhost apache-tomcat-7.0.76]$ find bin lib -name "*.jar"   | xargs -I % bash -c "echo %;jar tvf % | grep Digester"
bin/bootstrap.jar
bin/commons-daemon.jar
bin/tomcat-juli.jar
lib/jasper-el.jar
lib/catalina-ha.jar
lib/tomcat-i18n-es.jar
lib/catalina.jar
  5169 Thu Mar 09 13:49:20 CET 2017 org/apache/catalina/startup/DigesterFactory.class
lib/annotations-api.jar
lib/websocket-api.jar
lib/catalina-tribes.jar
lib/ecj-4.4.2.jar
lib/tomcat7-websocket.jar
lib/catalina-ant.jar
lib/servlet-api.jar
lib/tomcat-jdbc.jar
lib/el-api.jar
lib/tomcat-coyote.jar
   239 Thu Mar 09 13:49:20 CET 2017 org/apache/tomcat/util/digester/Digester$1.class
  1657 Thu Mar 09 13:49:20 CET 2017 org/apache/tomcat/util/digester/Digester$SystemPropertySource.class
 36025 Thu Mar 09 13:49:20 CET 2017 org/apache/tomcat/util/digester/Digester.class
  5639 Thu Mar 09 13:49:22 CET 2017 org/apache/tomcat/util/modeler/modules/MbeansDescriptorsDigesterSource.class
lib/tomcat-api.jar
lib/tomcat-i18n-ja.jar
lib/tomcat-dbcp.jar
lib/tomcat-i18n-fr.jar
lib/tomcat-util.jar
  6143 Thu Mar 09 13:49:22 CET 2017 org/apache/tomcat/util/descriptor/DigesterFactory.class
lib/jasper.jar
lib/jsp-api.jar

/ Einde Intermezzo

        // Perform lazy configuration as needed
        initialize(); // call hook method for subclasses that want to be initialized once only
/ NIETS
        configured = true;
/t
Digester.parse(InputSource) line: 1576	
        configure();
/d
        getXMLReader().parse(input);
/s
Digester.getParser() line: 707	
            parser = getFactory().newSAXParser();
/s
Digester.getFactory() line: 491	
            factory = SAXParserFactory.newInstance();	/ package javax.xml.parsers;
            factory.setNamespaceAware(namespaceAware);	/ false
            factory.setValidating(validating);	/ false
        return (factory);
/t
/s
SAXParserFactoryImpl.newSAXParser() line: 81		/ package com.sun.org.apache.xerces.internal.jaxp;
            saxParserImpl = new SAXParserImpl(this, features, fSecureProcess);
        return saxParserImpl;
/t
Digester.getParser() line: 713	
            parser = getFactory().newSAXParser();
/d
        return (parser);
/t
Digester.getXMLReader() line: 920	
            reader = getParser().getXMLReader();
/d
        reader.setDTDHandler(this);           
        reader.setContentHandler(this);        
        
        if (entityResolver == null){
            reader.setEntityResolver(this);
        reader.setProperty(
                "http://xml.org/sax/properties/lexical-handler", this);

        reader.setErrorHandler(this);
        return reader;
/t
Digester.parse(InputSource) line: 1576	
        getXMLReader().parse(input);
/pd
/s
SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 641	
            super.parse(inputSource);
/s
SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1206	
        // parse document
        try {
            XMLInputSource xmlInputSource =
                new XMLInputSource(inputSource.getPublicId(),
                                   inputSource.getSystemId(),
                                   null);
            xmlInputSource.setByteStream(inputSource.getByteStream());
            xmlInputSource.setCharacterStream(inputSource.getCharacterStream());
            xmlInputSource.setEncoding(inputSource.getEncoding());
            parse(xmlInputSource);
/s
SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
        reset();
        fConfiguration.parse(inputSource);
/s
XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 769	
        fParseInProgress = true;

        try {
            setInputSource(source);
            parse(true);
...
/t
Catalina.load() line: 624	
                digester.parse(inputSource);
/ Geef next over dit command	, 
/ sets
this	org.apache.catalina.startup.Catalina  (id=348)	
	server	org.apache.catalina.core.StandardServer  (id=629)	
/ MORGENOCHTEND

/ 13	. 

/ Hoe werkt dit?

/ we set b's in 	,

StandardServer [line: 74] - StandardServer()		, <init>
StandardServer [line: 370] - addService(Service)	
StandardServer [line: 356] - setCatalina(Catalina)	
StandardServer [line: 750] - startInternal()	

StandardEngine [line: 65] - StandardEngine()	
StandardEngine [line: 212] - setService(Service)	
StandardEngine [line: 296] - startInternal()	

StandardService [access and modification] - name		/ er is geen <init>
StandardService [line: 133] - setContainer(Container)	
StandardService [line: 216] - setServer(Server)	
StandardService [line: 437] - startInternal()	
StandardService [access and modification] - name	

StandardHost [line: 64] - StandardHost()	
StandardHost [line: 796] - startInternal()	

RealmBase [access and modification] - container	
Connector [line: 66] - Connector(String)	


/c
/ stack
/s
Thread [main] (Suspended (breakpoint at line 74 in StandardServer))	
	StandardServer.<init>() line: 74	
	NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
	NativeConstructorAccessorImpl.newInstance(Object[]) line: 57	
	DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 45	
	Constructor<T>.newInstance(Object...) line: 526	
	Class<T>.newInstance() line: 379	
	ObjectCreateRule.begin(String, String, Attributes) line: 145	
        Object instance = clazz.newInstance();
/cb
	Digester.startElement(String, String, String, Attributes) line: 1303	
                    rule.begin(namespaceURI, name, list);								/ name=Service
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDTDValidator.startElement(QName, XMLAttributes, Augmentations) line: 745	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
                fDocumentHandler.startElement(fElementQName, fAttributes, null);	/ fElementQName= localpart="Server",rawname="Server"
/cb
	XMLDocumentScannerImpl$ContentDriver.scanRootElementHook() line: 1292	
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 3138	
            while (true) {
                switch (fScannerState) {
                    case SCANNER_STATE_ROOT_ELEMENT: {
                        if (scanRootElementHook()) {
/cb
	XMLDocumentScannerImpl$PrologDriver.next() line: 880	
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/c
/ stack
/ Deze wordt called in de StandardServer.<init>	,
/s
Thread [main] (Suspended (breakpoint at line 61 in LifecycleBase))	
	StandardServer(LifecycleBase).addLifecycleListener(LifecycleListener) line: 61	
        lifecycle.addLifecycleListener(listener);		/ listener	org.apache.catalina.core.NamingContextListener  (id=909)	
/cb
	StandardServer.<init>() line: 81	
	NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
	NativeConstructorAccessorImpl.newInstance(Object[]) line: 57	
	DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 45	
	Constructor<T>.newInstance(Object...) line: 526	
	Class<T>.newInstance() line: 379	
	ObjectCreateRule.begin(String, String, Attributes) line: 145	
	Digester.startElement(String, String, String, Attributes) line: 1303	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDTDValidator.startElement(QName, XMLAttributes, Augmentations) line: 745	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
	XMLDocumentScannerImpl$ContentDriver.scanRootElementHook() line: 1292	
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 3138	
	XMLDocumentScannerImpl$PrologDriver.next() line: 880	
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/ de listeners hierna staan in server.xml	,
<Server port="8005" shutdown="SHUTDOWN">
  <Listener className="org.apache.catalina.startup.VersionLoggerListener"/>
  <!-- Security listener. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener SSLEngine="on" className="org.apache.catalina.core.AprLifecycleListener"/>
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JasperListener"/>
  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>

/ ze gaan allemaal zo als	, 
/c
/ stack
/s
Thread [main] (Suspended (breakpoint at line 61 in LifecycleBase))	
	StandardServer(LifecycleBase).addLifecycleListener(LifecycleListener) line: 61	
        lifecycle.addLifecycleListener(listener);	/ listener	org.apache.catalina.startup.VersionLoggerListener  (id=969)	
/cb
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	IntrospectionUtils.callMethod1(Object, String, Object, String, ClassLoader) line: 852	
	SetNextRule.end(String, String) line: 201	
	Digester.endElement(String, String, String) line: 1081	
                    rule.end(namespaceURI, name);
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).endElement(QName, Augmentations) line: 609	
	SAXParserImpl$JAXPSAXParser(AbstractXMLDocumentParser).emptyElement(QName, XMLAttributes, Augmentations) line: 183	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1343	
                fDocumentHandler.emptyElement(fElementQName, fAttributes, null);	/ fElementQName= localpart="Listener",rawname="Listener"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
                    case SCANNER_STATE_START_ELEMENT_TAG :{
                        //xxx this function returns true when element is empty.. can be linked to end element event.
                        //returns true if the element is empty
                        fEmptyElement = scanStartElement() ;
/cb
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/ Nu	, 
<Server port="8005" shutdown="SHUTDOWN">
 <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource auth="Container" description="User database that can be updated and saved" factory="org.apache.catalina.users.MemoryUserDatabaseFactory" name="UserDatabase" pathname="conf/tomcat-users.xml" type="org.apache.catalina.UserDatabase"/>
  </GlobalNamingResources>
/c
/ stack
/s
Thread [main] (Suspended (breakpoint at line 223 in StandardServer))	
	StandardServer.setGlobalNamingResources(NamingResources) line: 223	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	IntrospectionUtils.callMethod1(Object, String, Object, String, ClassLoader) line: 852	
	SetNextRule.end(String, String) line: 201	
        // Call the specified method
        IntrospectionUtils.callMethod1(parent, methodName,				/ methodName=setGlobalNamingResources
                child, paramType, digester.getClassLoader());
/cb
	Digester.endElement(String, String, String) line: 1081	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).endElement(QName, Augmentations) line: 609	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanEndElement() line: 1782	
            fDocumentHandler.endElement(endElementName, null);	/ endElementName localpart="GlobalNamingResources",rawname="GlobalNamingResources"	
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2973	
                   case SCANNER_STATE_END_ELEMENT_TAG :{
                        } else if(scanEndElement() == 0) {
 /cb 
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	


/c
/ stack
/s
Thread [main] (Suspended (modification of field name in StandardService))	
	StandardService.<init>() line: 69	
	NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
	NativeConstructorAccessorImpl.newInstance(Object[]) line: 57	
	DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 45	
	Constructor<T>.newInstance(Object...) line: 526	
	Class<T>.newInstance() line: 379	
	ObjectCreateRule.begin(String, String, Attributes) line: 145	
        Object instance = clazz.newInstance();
/cb
	Digester.startElement(String, String, String, Attributes) line: 1303	
                    rule.begin(namespaceURI, name, list);								/ name=Service
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
                fDocumentHandler.startElement(fElementQName, fAttributes, null); 			/ fElementQName=localpart="Service",rawname="Service"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
            while (true) {
                switch (fScannerState) {
                    case SCANNER_STATE_START_ELEMENT_TAG :{
                        //xxx this function returns true when element is empty.. can be linked to end element event.
                        //returns true if the element is empty
                        fEmptyElement = scanStartElement() ;
/cb
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/c	
/ stack
/ 2 keer	, 
/ Geen ObjectCreateRule	,
/s
	Connector.<init>(String) line: 66	
	ConnectorCreateRule.begin(String, String, Attributes) line: 62	
	Digester.startElement(String, String, String, Attributes) line: 1303	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	SAXParserImpl$JAXPSAXParser(AbstractXMLDocumentParser).emptyElement(QName, XMLAttributes, Augmentations) line: 182	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1343	
                fDocumentHandler.startElement(fElementQName, fAttributes, null); 			/ fElementQName=localpart="Connector",rawname="Connector"
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
            while (true) {
                switch (fScannerState) {
                    case SCANNER_STATE_START_ELEMENT_TAG :{
                        //xxx this function returns true when element is empty.. can be linked to end element event.
                        //returns true if the element is empty
                        fEmptyElement = scanStartElement() ;
/cb 
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	


/c
/ stack
/s
	StandardEngine.<init>() line: 65	
	NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
	NativeConstructorAccessorImpl.newInstance(Object[]) line: 57	
	DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 45	
	Constructor<T>.newInstance(Object...) line: 526	
	Class<T>.newInstance() line: 379	
	ObjectCreateRule.begin(String, String, Attributes) line: 145	
        Object instance = clazz.newInstance();
/cb
	Digester.startElement(String, String, String, Attributes) line: 1303	
                    rule.begin(namespaceURI, name, list);		/ name=Engine
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
                fDocumentHandler.startElement(fElementQName, fAttributes, null);	/ fElementQName=localpart="Engine",rawname="Engine"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
            while (true) {
                switch (fScannerState) {
                    case SCANNER_STATE_START_ELEMENT_TAG :{
                        //xxx this function returns true when element is empty.. can be linked to end element event.
                        //returns true if the element is empty
                        fEmptyElement = scanStartElement() ;
/cb 
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

$ vi Catalina.class
    protected Digester createStartDigester() {
        digester.addObjectCreate("Server/Service/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties("Server/Service/Listener");
        digester.addSetNext("Server/Service/Listener",
                            "addLifecycleListener",
                            "org.apache.catalina.LifecycleListener");
/c
/ stack
/s
Thread [main] (Suspended (breakpoint at line 61 in LifecycleBase))	
	StandardEngine(LifecycleBase).addLifecycleListener(LifecycleListener) line: 61	
	LifecycleListenerRule.begin(String, String, Attributes) line: 131	
	Digester.startElement(String, String, String, Attributes) line: 1303	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	


/c
/ stack
/s
Thread [main] (Suspended (modification of field container in RealmBase))	
	LockOutRealm(RealmBase).<init>() line: 80	
	LockOutRealm(CombinedRealm).<init>() line: 44	
	LockOutRealm.<init>() line: 45	
	NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
	NativeConstructorAccessorImpl.newInstance(Object[]) line: 57	
	DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 45	
	Constructor<T>.newInstance(Object...) line: 526	
	Class<T>.newInstance() line: 379	
	ObjectCreateRule.begin(String, String, Attributes) line: 145	
        Object instance = clazz.newInstance();
/cb
	Digester.startElement(String, String, String, Attributes) line: 1303	
                    rule.begin(namespaceURI, name, list);
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
                fDocumentHandler.startElement(fElementQName, fAttributes, null);	/ fElementQName= localpart="Realm",rawname="Realm"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
            while (true) {
                switch (fScannerState) {
                    case SCANNER_STATE_START_ELEMENT_TAG :{
                        //xxx this function returns true when element is empty.. can be linked to end element event.
                        //returns true if the element is empty
                        fEmptyElement = scanStartElement() ;
/cb 
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	



/c
/ stack
/s
	StandardHost.<init>() line: 64	
	NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
	NativeConstructorAccessorImpl.newInstance(Object[]) line: 57	
	DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 45	
	Constructor<T>.newInstance(Object...) line: 526	
	Class<T>.newInstance() line: 379	
	ObjectCreateRule.begin(String, String, Attributes) line: 145	
        Object instance = clazz.newInstance();
/cb
	Digester.startElement(String, String, String, Attributes) line: 1303	
                    rule.begin(namespaceURI, name, list);
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
                fDocumentHandler.startElement(fElementQName, fAttributes, null);	/ fElementQName= localpart="Host",rawname="Host"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
            while (true) {
                switch (fScannerState) {
                    case SCANNER_STATE_START_ELEMENT_TAG :{
                        //xxx this function returns true when element is empty.. can be linked to end element event.
                        //returns true if the element is empty
                        fEmptyElement = scanStartElement() ;
/cb 
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	


/c
/stack
$ vi HostRuleSet.java
    @Override
    public void addRuleInstances(Digester digester) {
        digester.addRule(prefix + "Host",
                         new LifecycleListenerRule
                         ("org.apache.catalina.startup.HostConfig",
                          "hostConfigClass"));
/ of	, / TODO
        digester.addObjectCreate(prefix + "Host/Listener",
                                 null, // MUST be specified in the element
                                 "className");
        digester.addSetProperties(prefix + "Host/Listener");
        digester.addSetNext(prefix + "Host/Listener",
                            "addLifecycleListener",
                            "org.apache.catalina.LifecycleListener");

/s
Thread [main] (Suspended (breakpoint at line 61 in LifecycleBase))	
	StandardHost(LifecycleBase).addLifecycleListener(LifecycleListener) line: 61	
	LifecycleListenerRule.begin(String, String, Attributes) line: 131	
	Digester.startElement(String, String, String, Attributes) line: 1303	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).startElement(QName, XMLAttributes, Augmentations) line: 509	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanStartElement() line: 1363	
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2786	
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	



/c
/stack
/s
Thread [main] (Suspended (breakpoint at line 133 in StandardService))	
	StandardService.setContainer(Container) line: 133			
        this.container = container;										/ container=StandardEngine[Catalina]	, sets child
        if ((this.container != null) && (this.container instanceof Engine))
            ((Engine) this.container).setService(this);		/ sets parent, dus pointer terug, dus service en engine zijn 1-1	, 
/cb
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	IntrospectionUtils.callMethod1(Object, String, Object, String, ClassLoader) line: 852	
	SetNextRule.end(String, String) line: 201	
        // Call the specified method
        IntrospectionUtils.callMethod1(parent, methodName,
                child, paramType, digester.getClassLoader());
/cb
	Digester.endElement(String, String, String) line: 1081	
                    rule.end(namespaceURI, name);
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).endElement(QName, Augmentations) line: 609	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanEndElement() line: 1782	
            fDocumentHandler.endElement(endElementName, null);				/ endElementName= localpart="Engine",rawname="Engine"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2973	
                    case SCANNER_STATE_END_ELEMENT_TAG :{
                        } else if(scanEndElement() == 0) {
/cb 
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/c
/ stack
/s
	StandardServer.addService(Service) line: 370	
        service.setServer(this);					/ sets child	,

	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	IntrospectionUtils.callMethod1(Object, String, Object, String, ClassLoader) line: 852	
	SetNextRule.end(String, String) line: 201	
        // Call the specified method
        IntrospectionUtils.callMethod1(parent, methodName,
                child, paramType, digester.getClassLoader());
/cb
	Digester.endElement(String, String, String) line: 1081	
                    rule.end(namespaceURI, name);
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).endElement(QName, Augmentations) line: 609	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanEndElement() line: 1782	
            fDocumentHandler.endElement(endElementName, null);	/ endElementName=localpart="Service",rawname="Service"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2973	
                    case SCANNER_STATE_END_ELEMENT_TAG :{
                        } else if(scanEndElement() == 0) {	
/cb
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/c
/ stack
/s
	Catalina.setServer(Server) line: 198	
        this.server = server;
/cb
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	IntrospectionUtils.callMethod1(Object, String, Object, String, ClassLoader) line: 852	
	SetNextRule.end(String, String) line: 201	
        // Call the specified method
        IntrospectionUtils.callMethod1(parent, methodName,
                child, paramType, digester.getClassLoader());
/cb
	Digester.endElement(String, String, String) line: 1081	
                    rule.end(namespaceURI, name);
/cb
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).endElement(QName, Augmentations) line: 609	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanEndElement() line: 1782	
            fDocumentHandler.endElement(endElementName, null);	/ endElementName= localpart="Server",rawname="Server"
/cb
	XMLDocumentScannerImpl$ContentDriver(XMLDocumentFragmentScannerImpl$FragmentContentDriver).next() line: 2973	
                    case SCANNER_STATE_END_ELEMENT_TAG :{
                        } else if(scanEndElement() == 0) {
/cb
	XMLDocumentScannerImpl.next() line: 606	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 510	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 848	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 777	
	SAXParserImpl$JAXPSAXParser(XMLParser).parse(XMLInputSource) line: 141	
	SAXParserImpl$JAXPSAXParser(AbstractSAXParser).parse(InputSource) line: 1213	
	SAXParserImpl$JAXPSAXParser.parse(InputSource) line: 648	
	Digester.parse(InputSource) line: 1576	
	Catalina.load() line: 616	
                digester.parse(inputSource);
/cb
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/ Tot nu toe steeds in 
	Catalina.load() line: 635	
                digester.parse(inputSource);
/ maar nu daar voorbij	,
/c
/ stack
/s
Thread [main] (Suspended (breakpoint at line 356 in StandardServer))	
	StandardServer.setCatalina(Catalina) line: 356	
	Catalina.load() line: 635	
                digester.parse(inputSource);
/d
        getServer().setCatalina(this);
/cb
	Catalina.load(String[]) line: 667	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	Bootstrap.load(String[]) line: 253	
	Bootstrap.main(String[]) line: 427	

/ 7	

/ we gaan verder debug	, 
/s
Catalina.load() line: 638	
        getServer().setCatalina(this);
/d
        initStreams();
/s
Catalina.initStreams() line: 855	
        // Replace System.out and System.err with a custom PrintStream
        System.setOut(new SystemLogHandler(System.out));
        System.setErr(new SystemLogHandler(System.err));
/t
Catalina.load() line: 638	
        initStreams();
/d
            getServer().init();
/s
StandardServer(LifecycleBase).init() line: 96	

            setStateInternal(LifecycleState.INITIALIZING, null, false);
/ we zien in de console	,
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Server version:        Apache Tomcat/7.0.76
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Server built:          Mar 23 2017 07:41:38 UTC
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Server number:         7.0.76.0
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: OS Name:               Linux
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: OS Version:            3.16.6-200.fc20.x86_64
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Architecture:          amd64
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Java Home:             /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71-2.5.3.0.fc20.x86_64/jre
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: JVM Version:           1.7.0_71-mockbuild_2014_10_15_17_02-b00
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: JVM Vendor:            Oracle Corporation
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: CATALINA_BASE:         /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: CATALINA_HOME:         /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:55504
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -Dcatalina.base=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -Dcatalina.home=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -Dwtp.deploy=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/wtpwebapps
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -Djava.endorsed.dirs=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/endorsed
Mar 30, 2017 9:01:02 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -Dfile.encoding=UTF-8
Mar 30, 2017 9:01:02 AM org.apache.catalina.core.AprLifecycleListener lifecycleEvent
INFO: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib

            initInternal();
/s
    /**
     * Invoke a pre-startup initialization. This is used to allow connectors
     * to bind to restricted ports under Unix operating environments.
     */
StandardServer.initInternal() line: 794	
        super.initInternal();
/s
StandardServer(LifecycleMBeanBase).initInternal() line: 59	
        // If oname is not null then registration has already happened via
        // preRegister().
        if (oname == null) {
/j
            mserver = Registry.getRegistry(null, null).getMBeanServer();
/s
Registry.getMBeanServer() line: 540	
        return (server);

this	org.apache.tomcat.util.modeler.Registry  (id=5881)	
	perLoaderRegistries	null	
	registry	org.apache.tomcat.util.modeler.Registry  (id=5881)	
	descriptors	java.util.HashMap<K,V>  (id=5883)	
		size	56	
		table	java.util.HashMap$Entry<K,V>[128]  (id=5906)	
			[0...99]	
				[0]	java.util.HashMap$Entry<K,V>  (id=5909)	
SemaphoreValve=ManagedBean[name=SemaphoreValve, className=org.apache.tomcat.util.modeler.BaseModelMBean, description=Valve that does concurrency control, group=Valve, type=org.apache.catalina.valves.SemaphoreValve]
				[1]	java.util.HashMap$Entry<K,V>  (id=5910)	
AccessLogValve=ManagedBean[name=AccessLogValve, className=org.apache.tomcat.util.modeler.BaseModelMBean, description=Valve that generates a web server access log, group=Valve, type=org.apache.catalina.valves.AccessLogValve]
				[4]	java.util.HashMap$Entry<K,V>  (id=5911)	
StandardServer=ManagedBean[name=StandardServer, className=org.apache.tomcat.util.modeler.BaseModelMBean, description=Standard Server Component, group=Server, type=org.apache.catalina.core.StandardServer]
				[10]	java.util.HashMap$Entry<K,V>  (id=5912)	
StandardHost=ManagedBean[name=StandardHost, className=org.apache.catalina.mbeans.ContainerMBean, description=Standard Host Component, group=Host, type=org.apache.catalina.core.StandardHost]
	descriptorsByClass	java.util.HashMap<K,V>  (id=5885)	
		size	56	
				[0]	java.util.HashMap$Entry<K,V>  (id=6054)	
org.apache.catalina.core.StandardWrapperValve=ManagedBean[name=StandardWrapperValve, className=org.apache.tomcat.util.modeler.BaseModelMBean, description=Valve that implements the default basic behavior for the StandardWrapper container implementation, group=Valve, type=org.apache.catalina.core.StandardWrapperValve]
				[1]	java.util.HashMap$Entry<K,V>  (id=6055)	
org.apache.catalina.Group=ManagedBean[name=Group, className=org.apache.catalina.mbeans.GroupMBean, description=Group from a user database, group=Group, type=org.apache.catalina.Group]
				[5]	java.util.HashMap$Entry<K,V>  (id=6056)	
org.apache.catalina.authenticator.SSLAuthenticator=ManagedBean[name=SSLAuthenticator, className=org.apache.tomcat.util.modeler.BaseModelMBean, description=An Authenticator and Valve implementation of authentication that utilizes SSL certificates to identify client users, group=Valve, type=org.apache.catalina.authenticator.SSLAuthenticator]
				[7]	java.util.HashMap$Entry<K,V>  (id=6057)	
org.apache.catalina.core.StandardServer=ManagedBean[name=StandardServer, className=org.apache.tomcat.util.modeler.BaseModelMBean, description=Standard Server Component, group=Server, type=org.apache.catalina.core.StandardServer]
	idDomains	java.util.Hashtable<K,V>  (id=5886)	
{}
	ids	java.util.Hashtable<K,V>  (id=5887)	
{}
	searchedPaths	java.util.HashMap<K,V>  (id=5888)	
		size	12	
		table	java.util.HashMap$Entry<K,V>[16]  (id=6340)	
			[0]	java.util.HashMap$Entry<K,V>  (id=6343)	
org.apache.catalina.mbeans=jar:file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar!/org/apache/catalina/mbeans/mbeans-descriptors.xml
			[2]	java.util.HashMap$Entry<K,V>  (id=6344)	
org.apache.catalina.connector=jar:file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar!/org/apache/catalina/connector/mbeans-descriptors.xml
			[5]	java.util.HashMap$Entry<K,V>  (id=6345)	
org.apache.catalina.valves=jar:file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar!/org/apache/catalina/valves/mbeans-descriptors.xml
			[6]	java.util.HashMap$Entry<K,V>  (id=6347)	
org.apache.catalina.core=jar:file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar!/org/apache/catalina/core/mbeans-descriptors.xml

	server	com.sun.jmx.mbeanserver.JmxMBeanServer  (id=5889)	

/t
StandardServer(LifecycleMBeanBase).initInternal() line: 61	
            mserver = Registry.getRegistry(null, null).getMBeanServer();
/d
this	org.apache.catalina.core.StandardServer  (id=757)	
	mserver	com.sun.jmx.mbeanserver.JmxMBeanServer  (id=5889)	

            oname = register(this, getObjectNameKeyProperties());	/ getObjectNameKeyProperties()=         return "type=Server";
/s
StandardServer(LifecycleMBeanBase).register(Object, String) line: 149	
        // Construct an object name with the right domain
        StringBuilder name = new StringBuilder(getDomain());
        name.append(':');
        name.append(objectNameKeyProperties);

        ObjectName on = null;

        try {
            on = new ObjectName(name.toString());	/ javax.management.ObjectName
            Registry.getRegistry(null, null).registerComponent(obj, on, null);
/s
Registry.registerComponent(Object, ObjectName, String) line: 716	
            if( type==null ) {
                type=bean.getClass().getName(); / "org.apache.catalina.core.StandardServer"

            ManagedBean managed = findManagedBean(bean.getClass(), type);
bean	org.apache.catalina.core.StandardServer  (id=757)	
/ TODO Afmaken	, 

/c
/ Tot nu toe zaten we altijd in daemon.load()	, 
/ stack
/s
Thread [main] (Suspended (breakpoint at line 291 in Bootstrap))	
	Bootstrap.start() line: 291	
	Bootstrap.main(String[]) line: 428	
               daemon.load(args);
/d
                daemon.start();
/ debug	,
/s
        if( catalinaDaemon==null ) init();
/n
this	org.apache.catalina.startup.Bootstrap  (id=98)	
	catalinaDaemon	org.apache.catalina.startup.Catalina  (id=348)	

        Method method = catalinaDaemon.getClass().getMethod("start", (Class [] )null);
public void org.apache.catalina.startup.Catalina.start()

        method.invoke(catalinaDaemon, (Object [])null);
/s
Catalina.start() line: 693	
        // Start the new server
        try {
            getServer().start();
/s
StandardServer(LifecycleBase).start() line: 121	
       try {
            setStateInternal(LifecycleState.STARTING_PREP, null, false);
            startInternal();
/s
StandardServer.startInternal() line: 750	
        fireLifecycleEvent(CONFIGURE_START_EVENT, null);
        setState(LifecycleState.STARTING);

        globalNamingResources.start();
/ TODO
        
        // Start our defined Services
        synchronized (servicesLock) {
            for (int i = 0; i < services.length; i++) {
                services[i].start();
/s
StandardService(LifecycleBase).start() line: 121	
        try {
            setStateInternal(LifecycleState.STARTING_PREP, null, false);
            startInternal();
/s
StandardService.startInternal() line: 437	
        // Start our defined Container first
        if (container != null) {
            synchronized (container) {
                container.start();
/s
StandardEngine(LifecycleBase).start() line: 121	
        try {
            setStateInternal(LifecycleState.STARTING_PREP, null, false);
            startInternal();
/s
StandardEngine.startInternal() line: 296	
       // Standard container startup
        super.startInternal();
/s
StandardEngine(ContainerBase).startInternal() line: 1095	
        Realm realm = getRealmInternal();
realm	org.apache.catalina.realm.LockOutRealm  (id=4292)		
        if ((realm != null) && (realm instanceof Lifecycle))
            ((Lifecycle) realm).start();
/ TODO Afmaken	,

        if ((resources != null) && (resources instanceof Lifecycle))
/n
        // Start our child containers, if any
        Container children[] = findChildren();
children	org.apache.catalina.Container[1]  (id=6199)	
	[0]	org.apache.catalina.core.StandardHost  (id=4366)	

        List<Future<Void>> results = new ArrayList<Future<Void>>();
        for (int i = 0; i < children.length; i++) {
            results.add(startStopExecutor.submit(new StartChild(children[i])));
/s
ContainerBase$StartChild.<init>(Container) line: 1565	
/=
    private static class StartChild implements Callable<Void> {

        private Container child;

        public StartChild(Container child) {
            this.child = child;							<-
        }

        @Override
        public Void call() throws LifecycleException {
            child.start();
            return null;
        }
    }
/t
/s
ThreadPoolExecutor(AbstractExecutorService).submit(Callable<T>) line: 130	
/=
    public <T> Future<T> submit(Callable<T> task) {
        RunnableFuture<T> ftask = newTaskFor(task);
        execute(ftask);
		return ftask;
/t
ThreadPoolExecutor(AbstractExecutorService).submit(Callable<T>) line: 130	
            results.add(startStopExecutor.submit(new StartChild(children[i])));
/d
        boolean fail = false;
        for (Future<Void> result : results) {
            try {
                result.get();
/ WAITS
/ Dit is thread	, 
/ stack
/s
org.apache.catalina.startup.Bootstrap at localhost:51421	
	Thread [main] (Stepping)	
	Daemon Thread [Catalina-startStop-1] (Suspended (breakpoint at line 1571 in ContainerBase$StartChild))	
		ContainerBase$StartChild.call() line: 1571	
		ContainerBase$StartChild.call() line: 1561	
		FutureTask<V>.run() line: 262	
		ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker) line: 1145	
		ThreadPoolExecutor$Worker.run() line: 615	
		Thread.run() line: 745	

/ 7	. 

/ In andere thread	, 
/ stack
/s
Daemon Thread [Catalina-startStop-1] (Suspended (breakpoint at line 1571 in ContainerBase$StartChild))	
	ContainerBase$StartChild.call() line: 1571	
	ContainerBase$StartChild.call() line: 1561						/ org.apache.catalina.core
	FutureTask<V>.run() line: 262													/ java.util.concurrent
	ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker) line: 1145	
	ThreadPoolExecutor$Worker.run() line: 615									/ java.util.concurrent
	Thread.run() line: 745	
/ debug	, 
/s
org.apache.catalina.core.ContainerBase$StartChild.call() line: 1571	
            child.start();
/s
org.apache.catalina.core.StandardHost(org.apache.catalina.util.LifecycleBase).start() line: 121	

        if (state.equals(LifecycleState.NEW)) {		/ StandardService, ... hiervoor kwamen hier NIET	, 
            init();
/s
/ TODO Afmaken

/ TODO StandardContext.<init> b	,

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 61 in org.apache.catalina.util.LifecycleBase))	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).addLifecycleListener(org.apache.catalina.LifecycleListener) line: 61	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1086	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 96 in org.apache.catalina.util.LifecycleBase))	
	owns: org.apache.catalina.loader.WebappLoader  (id=6815)	
	owns: org.apache.catalina.core.StandardContext  (id=6384)	
	org.apache.catalina.loader.WebappLoader(org.apache.catalina.util.LifecycleBase).init() line: 96	
	org.apache.catalina.loader.WebappLoader(org.apache.catalina.util.LifecycleBase).start() line: 135	
	org.apache.catalina.core.StandardContext.startInternal() line: 5499	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

package org.apache.catalina.startup;
public class ContextConfig implements LifecycleListener {
/ NIET te verwarren met javax.servlet.ServletConfig	, 
/ TODO b set in ContextConfig.

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 99 in org.apache.catalina.core.StandardWrapper))	
	org.apache.catalina.core.StandardWrapper.<init>() line: 99	
        super();
/cb
	org.apache.catalina.core.StandardContext.createWrapper() line: 3563	
            wrapper = new StandardWrapper();
/cb
	org.apache.catalina.deploy.WebXml.configureContext(org.apache.catalina.Context) line: 1389	
        for (ServletDef servlet : servlets.values()) {
            Wrapper wrapper = context.createWrapper();
/cb
	org.apache.catalina.startup.ContextConfig.webConfig() line: 1359	
    /**
     * Scan the web.xml files that apply to the web application and merge them
     * using the rules defined in the spec. For the global web.xml files,
     * where there is duplicate configuration, the most specific level wins. ie
     * an application's web.xml takes precedence over the host level or global
     * web.xml file.
     */
    protected void webConfig() {
        WebXml webXml = createWebXml();
webXml	org.apache.catalina.deploy.WebXml  (id=7288)	
	servlets	java.util.HashMap<K,V>  (id=7436)	
		table	java.util.HashMap$Entry<K,V>[16]  (id=7455)	
			[3]	java.util.HashMap$Entry<K,V>  (id=7463)	
			[7]	java.util.HashMap$Entry<K,V>  (id=7464)	
			[10]	java.util.HashMap$Entry<K,V>  (id=7465)	

/ 9 staps method	, 
            // Step 9. Apply merged web.xml to Context
            if (ok) {
                webXml.configureContext(context);

this	org.apache.catalina.startup.ContextConfig  (id=7286)	
	context	org.apache.catalina.core.StandardContext  (id=6384)	
/cb
	org.apache.catalina.startup.ContextConfig.configureStart() line: 888	
	org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent) line: 388	
	org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(java.lang.String, java.lang.Object) line: 117	
this	org.apache.catalina.util.LifecycleSupport  (id=7289)	
	lifecycle	org.apache.catalina.core.StandardContext  (id=6384)	
	listeners	org.apache.catalina.LifecycleListener[4]  (id=7295)	
		[0]	org.apache.catalina.startup.ContextConfig  (id=7286)	
		[1]	org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener  (id=7296)	
		[2]	org.apache.catalina.startup.TldConfig  (id=7297)	
		[3]	org.apache.catalina.core.NamingContextListener  (id=7298)	
	listenersLock	java.lang.Object  (id=7336)	

        LifecycleListener interested[] = listeners;
/cb
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).fireLifecycleEvent(java.lang.String, java.lang.Object) line: 90	
	org.apache.catalina.core.StandardContext.startInternal() line: 5522	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 45 in org.apache.catalina.core.StandardWrapperFacade))	
	org.apache.catalina.core.StandardWrapperFacade.<init>(org.apache.catalina.core.StandardWrapper) line: 45	
/=
public final class StandardWrapperFacade implements ServletConfig {
        super();
        this.config = config;		/ StandardWrapper	, lijkt leeg TODO
/cb
	org.apache.catalina.core.StandardWrapper.<init>() line: 133	
	org.apache.catalina.core.StandardContext.createWrapper() line: 3563	
	org.apache.catalina.deploy.WebXml.configureContext(org.apache.catalina.Context) line: 1389	
	org.apache.catalina.startup.ContextConfig.webConfig() line: 1359	
	org.apache.catalina.startup.ContextConfig.configureStart() line: 888	
	org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent) line: 388	
	org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(java.lang.String, java.lang.Object) line: 117	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).fireLifecycleEvent(java.lang.String, java.lang.Object) line: 90	
	org.apache.catalina.core.StandardContext.startInternal() line: 5522	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 96 in org.apache.catalina.util.LifecycleBase))	
	org.apache.catalina.core.StandardWrapper(org.apache.catalina.util.LifecycleBase).init() line: 96	
	org.apache.catalina.core.StandardWrapper(org.apache.catalina.util.LifecycleBase).start() line: 135	
	org.apache.catalina.core.StandardContext(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardContext(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardContext.addChild(org.apache.catalina.Container) line: 3062	
	org.apache.catalina.deploy.WebXml.configureContext(org.apache.catalina.Context) line: 1435	
	org.apache.catalina.startup.ContextConfig.webConfig() line: 1359	
	org.apache.catalina.startup.ContextConfig.configureStart() line: 888	
	org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent) line: 388	
	org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(java.lang.String, java.lang.Object) line: 117	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).fireLifecycleEvent(java.lang.String, java.lang.Object) line: 90	
	org.apache.catalina.core.StandardContext.startInternal() line: 5522	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	


/ we hebben b set in ContextConfig [access and modification] - context	
/ daarom	,
/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (access of field context in org.apache.catalina.startup.ContextConfig))	
	org.apache.catalina.startup.ContextConfig.applicationAnnotationsConfig() line: 421	
        WebAnnotationSet.loadApplicationAnnotations(context);										/ TODO

this	org.apache.catalina.startup.ContextConfig  (id=7286)	
	deploymentCount	0	
	antiLockingDocBase	null	
	context	org.apache.catalina.core.StandardContext  (id=6384)	
	customAuthenticators	null	
	defaultContextXml	"conf/context.xml" (id=7316)		<-
	defaultWebXml	"conf/web.xml" (id=7317)				<-
	handlesTypesAnnotations	true	
	handlesTypesNonAnnotations	true	
	initializerClassMap	java.util.LinkedHashMap<K,V>  (id=7318)	
	javaClassCache	java.util.HashMap<K,V>  (id=7319)	
	ok	true	
	originalDocBase	null	
	typeInitializerMap	java.util.HashMap<K,V>  (id=7321)	
	webDigester	org.apache.tomcat.util.digester.Digester  (id=7322)	
	webFragmentDigester	org.apache.tomcat.util.digester.Digester  (id=7324)	
	webFragmentRuleSet	org.apache.catalina.startup.WebRuleSet  (id=7325)	
	webRuleSet	org.apache.catalina.startup.WebRuleSet  (id=7328)	

        if (context instanceof StandardContext) {
            ((StandardContext) context).setStartupTime(t2-t1+
                    ((StandardContext) context).getStartupTime());
/cb
	org.apache.catalina.startup.ContextConfig.configureStart() line: 891	
	org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent) line: 388	
	org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(java.lang.String, java.lang.Object) line: 117	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).fireLifecycleEvent(java.lang.String, java.lang.Object) line: 90	
	org.apache.catalina.core.StandardContext.startInternal() line: 5522	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 96 in org.apache.catalina.util.LifecycleBase))	
	org.apache.catalina.session.StandardManager(org.apache.catalina.util.LifecycleBase).init() line: 96	
	org.apache.catalina.session.StandardManager(org.apache.catalina.util.LifecycleBase).start() line: 135	
	org.apache.catalina.core.StandardContext.startInternal() line: 5643	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 124 in org.apache.catalina.session.StandardSession))	
	org.apache.catalina.session.StandardSession.<init>(org.apache.catalina.Manager) line: 124	
        return new StandardSession(this);
/cb
	org.apache.catalina.session.StandardManager(org.apache.catalina.session.ManagerBase).getNewSession() line: 910	
	org.apache.catalina.session.StandardManager.doLoad() line: 258	
	org.apache.catalina.session.StandardManager.load() line: 176	
        // Load the previously unloaded active sessions
        synchronized (sessions) {
{}
            try {
                Integer count = (Integer) ois.readObject();
                int n = count.intValue();
                if (log.isDebugEnabled())
                    log.debug("Loading " + n + " persisted sessions");
                for (int i = 0; i < n; i++) {								/ n==1
                    StandardSession session = getNewSession();							<-
                    session.readObjectData(ois);
                    session.setManager(this);
                    sessions.put(session.getIdInternal(), session);
                    session.activate();
                    if (!session.isValidInternal()) {
                        // If session is already invalid,
                        // expire session to prevent memory leak.
                        session.setValid(true);
                        session.expire();
                    }
                    sessionCounter++;
                }
/cb
	org.apache.catalina.session.StandardManager.startInternal() line: 465	
	org.apache.catalina.session.StandardManager(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardContext.startInternal() line: 5643	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
	org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ stack
/s
Daemon Thread [localhost-startStop-1] (Suspended (access of field context in org.apache.catalina.startup.ContextConfig))	
	org.apache.catalina.startup.ContextConfig.init() line: 851	
        createWebXmlDigester(context.getXmlNamespaceAware(),
                context.getXmlValidation());
/cb
	org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent) line: 399	
	org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(java.lang.String, java.lang.Object) line: 117	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).fireLifecycleEvent(java.lang.String, java.lang.Object) line: 90	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).setStateInternal(org.apache.catalina.LifecycleState, java.lang.Object, boolean) line: 388	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).init() line: 103	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 135	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployDirectory(org.apache.catalina.util.ContextName, java.io.File) line: 1260	
	org.apache.catalina.startup.HostConfig$DeployDirectory.run() line: 2002	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/ we geven 
/c
org.apache.catalina.startup.Bootstrap at localhost:51421	
	Thread [main] (Running)	
	Daemon Thread [ContainerBackgroundProcessor[StandardEngine[Catalina]]] (Running)	
	Daemon Thread [http-bio-9090-exec-7] (Running)	
	Daemon Thread [http-bio-9090-exec-1] (Running)	
	Daemon Thread [http-bio-9090-exec-6] (Running)	
	Daemon Thread [http-bio-9090-exec-4] (Running)	
	Daemon Thread [http-bio-9090-exec-3] (Running)	
	Daemon Thread [http-bio-9090-exec-2] (Running)	
	Daemon Thread [http-bio-9090-exec-8] (Running)	
	Daemon Thread [http-bio-9090-exec-5] (Running)	
	Daemon Thread [http-bio-9090-exec-9] (Running)	
	Daemon Thread [http-bio-9090-exec-10] (Running)	
	Daemon Thread [http-bio-9090-Acceptor-0] (Running)	
	Daemon Thread [http-bio-9090-AsyncTimeout] (Running)	
	Daemon Thread [ajp-bio-8009-exec-2] (Running)	
	Daemon Thread [ajp-bio-8009-exec-1] (Running)	
	Daemon Thread [ajp-bio-8009-exec-6] (Running)	
	Daemon Thread [ajp-bio-8009-exec-5] (Running)	
	Daemon Thread [ajp-bio-8009-exec-8] (Running)	
	Daemon Thread [ajp-bio-8009-exec-4] (Running)	
	Daemon Thread [ajp-bio-8009-exec-3] (Running)	
	Daemon Thread [ajp-bio-8009-exec-9] (Running)	
	Daemon Thread [ajp-bio-8009-exec-10] (Running)	
	Daemon Thread [ajp-bio-8009-Acceptor-0] (Running)	
	Daemon Thread [ajp-bio-8009-exec-7] (Running)	
	Daemon Thread [ajp-bio-8009-AsyncTimeout] (Running)	
/ TODO

/ 7	. 

/ we geven	, 
http://localhost:9090/servlets/study

/ stack
/s
Daemon Thread [http-bio-9090-exec-4] (Suspended (breakpoint at line 21 in sessions.StudyServlet))	
	sessions.StudyServlet.<init>() line: 21	
this	sessions.StudyServlet  (id=9320)	
	config null	
/cb
	sun.reflect.NativeConstructorAccessorImpl.newInstance0(java.lang.reflect.Constructor, java.lang.Object[]) line: not available [native method]	
	sun.reflect.NativeConstructorAccessorImpl.newInstance(java.lang.Object[]) line: 57	
	sun.reflect.DelegatingConstructorAccessorImpl.newInstance(java.lang.Object[]) line: 45	
	java.lang.reflect.Constructor<T>.newInstance(java.lang.Object...) line: 526	
	java.lang.Class<T>.newInstance() line: 379	
	org.apache.catalina.core.DefaultInstanceManager.newInstance(java.lang.String) line: 114	
	org.apache.catalina.core.StandardWrapper.loadServlet() line: 1133	
	org.apache.catalina.core.StandardWrapper.allocate() line: 853	
	org.apache.catalina.core.StandardWrapperValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 134	
	org.apache.catalina.core.StandardContextValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 110	
	org.apache.catalina.authenticator.NonLoginAuthenticator(org.apache.catalina.authenticator.AuthenticatorBase).invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 506	
	org.apache.catalina.core.StandardHostValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 169	
	org.apache.catalina.valves.ErrorReportValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 103	
	org.apache.catalina.valves.AccessLogValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 962	
	org.apache.catalina.core.StandardEngineValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 116	
	org.apache.catalina.connector.CoyoteAdapter.service(org.apache.coyote.Request, org.apache.coyote.Response) line: 445	
	org.apache.coyote.http11.Http11Processor(org.apache.coyote.http11.AbstractHttp11Processor<S>).process(org.apache.tomcat.util.net.SocketWrapper<S>) line: 1087	
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler(org.apache.coyote.AbstractProtocol$AbstractConnectionHandler<S,P>).process(org.apache.tomcat.util.net.SocketWrapper<S>, org.apache.tomcat.util.net.SocketStatus) line: 637	
	org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run() line: 316	
	org.apache.tomcat.util.threads.ThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor).runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run() line: 61	
	org.apache.tomcat.util.threads.TaskThread(java.lang.Thread).run() line: 745	

/c
/ stack
/s
Daemon Thread [http-bio-9090-exec-4] (Suspended (breakpoint at line 27 in sessions.StudyServlet))	
	sessions.StudyServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 27	
		String name=getServletName();
/cb
	sessions.StudyServlet(javax.servlet.http.HttpServlet).service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 624	
	sessions.StudyServlet(javax.servlet.http.HttpServlet).service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 731	
	org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 303	
	org.apache.catalina.core.ApplicationFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 208	
	org.apache.tomcat.websocket.server.WsFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) line: 52	
	org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 241	
	org.apache.catalina.core.ApplicationFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 208	
	org.apache.catalina.core.StandardWrapperValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 218	
	org.apache.catalina.core.StandardContextValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 110	
	org.apache.catalina.authenticator.NonLoginAuthenticator(org.apache.catalina.authenticator.AuthenticatorBase).invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 506	
	org.apache.catalina.core.StandardHostValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 169	
	org.apache.catalina.valves.ErrorReportValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 103	
	org.apache.catalina.valves.AccessLogValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 962	
	org.apache.catalina.core.StandardEngineValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 116	
	org.apache.catalina.connector.CoyoteAdapter.service(org.apache.coyote.Request, org.apache.coyote.Response) line: 445	
	org.apache.coyote.http11.Http11Processor(org.apache.coyote.http11.AbstractHttp11Processor<S>).process(org.apache.tomcat.util.net.SocketWrapper<S>) line: 1087	
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler(org.apache.coyote.AbstractProtocol$AbstractConnectionHandler<S,P>).process(org.apache.tomcat.util.net.SocketWrapper<S>, org.apache.tomcat.util.net.SocketStatus) line: 637	
	org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run() line: 316	
	org.apache.tomcat.util.threads.ThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor).runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run() line: 61	
	org.apache.tomcat.util.threads.TaskThread(java.lang.Thread).run() line: 745	
/ debug	, 
/s
sessions.StudyServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 27	

this	sessions.StudyServlet  (id=2659)	
	config	org.apache.catalina.core.StandardWrapperFacade  (id=2694)	
		config	org.apache.catalina.core.StandardWrapper  (id=2657)	
			name	"sessions.StudyServlet" (id=7699)	
			mappings	java.util.ArrayList<E>  (id=9377)	
				elementData	java.lang.Object[10]  (id=9448)	
					[0]	"/study" (id=9452)	
			parent	org.apache.catalina.core.StandardContext  (id=2670) / StandardEngine[Catalina].StandardHost[localhost].StandardContext[/servlets]	

	context	null								/ straks ServletContext	,


		String name=getServletName();
/s
sessions.StudyServlet(javax.servlet.GenericServlet).getServletName() line: 236	
this	sessions.StudyServlet  (id=9320)	
	config	org.apache.catalina.core.StandardWrapperFacade  (id=7594)	

        return config.getServletName();
/s
org.apache.catalina.core.StandardWrapperFacade.getServletName() line: 71	
        return config.getServletName();
/s
org.apache.catalina.core.StandardWrapper.getServletName() line: 1619	
        return (getName());
/s
org.apache.catalina.core.StandardWrapper(org.apache.catalina.core.ContainerBase).getName() line: 591	
        return (name);

/c
/ stack
/s
Daemon Thread [http-bio-9090-exec-4] (Suspended (breakpoint at line 28 in sessions.StudyServlet))	
	sessions.StudyServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 28	
		ServletContext servletContext=getServletContext();
/cb
	sessions.StudyServlet(javax.servlet.http.HttpServlet).service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 624	
	sessions.StudyServlet(javax.servlet.http.HttpServlet).service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 731	
	org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 303	
	org.apache.catalina.core.ApplicationFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 208	
	org.apache.tomcat.websocket.server.WsFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) line: 52	
	org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 241	
	org.apache.catalina.core.ApplicationFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse) line: 208	
	org.apache.catalina.core.StandardWrapperValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 218	
	org.apache.catalina.core.StandardContextValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 110	
	org.apache.catalina.authenticator.NonLoginAuthenticator(org.apache.catalina.authenticator.AuthenticatorBase).invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 506	
	org.apache.catalina.core.StandardHostValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 169	
	org.apache.catalina.valves.ErrorReportValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 103	
	org.apache.catalina.valves.AccessLogValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 962	
	org.apache.catalina.core.StandardEngineValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) line: 116	
	org.apache.catalina.connector.CoyoteAdapter.service(org.apache.coyote.Request, org.apache.coyote.Response) line: 445	
	org.apache.coyote.http11.Http11Processor(org.apache.coyote.http11.AbstractHttp11Processor<S>).process(org.apache.tomcat.util.net.SocketWrapper<S>) line: 1087	
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler(org.apache.coyote.AbstractProtocol$AbstractConnectionHandler<S,P>).process(org.apache.tomcat.util.net.SocketWrapper<S>, org.apache.tomcat.util.net.SocketStatus) line: 637	
	org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run() line: 316	
	org.apache.tomcat.util.threads.ThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor).runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run() line: 61	
	org.apache.tomcat.util.threads.TaskThread(java.lang.Thread).run() line: 745	
/ debug
/s
sessions.StudyServlet(javax.servlet.GenericServlet).getServletContext() line: 123	
        return getServletConfig().getServletContext();
/s
org.apache.catalina.core.StandardWrapperFacade.getServletContext() line: 77	
        if (context == null) {
            context = config.getServletContext();
/s
org.apache.catalina.core.StandardWrapper.getServletContext() line: 1608	
        if (parent == null)		/ StandardEngine[Catalina].StandardHost[localhost].StandardContext[/servlets]
            return (null);
/n
        else if (!(parent instanceof Context))
            return (null);
/n
        else
            return (((Context) parent).getServletContext());
/s
org.apache.catalina.core.StandardContext.getServletContext() line: 2480	

this	org.apache.catalina.core.StandardContext  (id=2670)					
	context	org.apache.catalina.core.ApplicationContext  (id=2762)				/ de ServletContext zit in de StandardContext	,	
		facade	org.apache.catalina.core.ApplicationContextFacade  (id=2782)	

        if (context == null) {
            context = new ApplicationContext(this);		/ is eerder set , TODO
/n
        return (context.getFacade());
/s
org.apache.catalina.core.ApplicationContext.getFacade() line: 1608	
        return (this.facade);
/t
org.apache.catalina.core.StandardWrapper.getServletContext() line: 1608	
       else
            return (((Context) parent).getServletContext());
/d
/t
org.apache.catalina.core.StandardWrapperFacade.getServletContext() line: 79	
        if (context == null) {
            context = config.getServletContext();
/d
this	org.apache.catalina.core.StandardWrapperFacade  (id=7594)	
	config	org.apache.catalina.core.StandardWrapper  (id=7593)										<-
	context	org.apache.catalina.core.ApplicationContextFacade  (id=7406)	

        return (context);
/t
sessions.StudyServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 29	
		ServletContext servletContext=getServletContext();
/d

this	sessions.StudyServlet  (id=2659)	
	config	org.apache.catalina.core.StandardWrapperFacade  (id=2694)	
		config	org.apache.catalina.core.StandardWrapper  (id=2657)	
		context	org.apache.catalina.core.ApplicationContextFacade  (id=2782)	
			context	org.apache.catalina.core.StandardContext  (id=2670)	

/ MORGENOCHTEND
/ Intermezzo

this.getServletConfig()	class org.apache.catalina.core.StandardWrapperFacade
/=
this	sessions.StudyServlet  (id=2659)	
	config	org.apache.catalina.core.StandardWrapperFacade  (id=2694)	
		config	org.apache.catalina.core.StandardWrapper  (id=2657)	
		context	org.apache.catalina.core.ApplicationContextFacade  (id=2782)	
			classCache	java.util.HashMap<K,V>  (id=3066)	
			context	org.apache.catalina.core.ApplicationContext  (id=2762)	
			objectCache	java.util.concurrent.ConcurrentHashMap<K,V>  (id=3067)	



/ Einde Intermezzo

		Object tmp=servletContext.getAttribute("javax.servlet.context.tempdir");


/ TODO Afmaken	, 
/ Verschil StandardWrapper, StandardContext	, 
/ MORGENOCHTEND




































/ Einde DEBUG TOMCAT 7

/ SERVLET AND TOMCAT TYPES 

/ de servlet kan via de servlet config aan de container vragen during init	, 	waaronder om de servlet context te krijgen	, 
/ de servlet kan via de servlet context aan de container vragen over app info (standardcontext)	,  

/s
sessions.StudyServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) line: 29	
		ServletContext servletContext=getServletContext();
/d
this	sessions.StudyServlet  (id=2659)	
	config	org.apache.catalina.core.StandardWrapperFacade  (id=2694)		
		config	org.apache.catalina.core.StandardWrapper  (id=2657)		/ ServletConfig		, die getServletContext() heeft	, die het aan zijn parent=StandardContext vraagt	,  
		context	org.apache.catalina.core.ApplicationContextFacade  (id=2782)		 
			context	org.apache.catalina.core.ApplicationContext  (id=2758)	/ ServletContext	

			context	org.apache.catalina.core.StandardContext  (id=2670)			/ Context
				context	org.apache.catalina.core.ApplicationContext  (id=2758)		/ ServletContext	
	

/ 7	. 

package javax.servlet;
/**
 * A servlet configuration object used by a servlet container
 * to pass information to a servlet during initialization. 		<- during initialization !
 */
 public interface ServletConfig {
    
    /**
     * Returns the name of this servlet instance.
     * The name may be provided via server administration, assigned in the 
     * web application deployment descriptor, or for an unregistered (and thus
     * unnamed) servlet instance it will be the servlet's class name.
     *
     * @return	the name of the servlet instance
     */
    public String getServletName();


    /**
     * Returns a reference to the {@link ServletContext} in which the caller
     * is executing.
     *
     * @return	a {@link ServletContext} object, used
     * by the caller to interact with its servlet container
     * 
     * @see ServletContext
     */
    public ServletContext getServletContext();										<- deze ook	, 

    
    /**
     * Gets the value of the initialization parameter with the given name.
     *
     * @param name the name of the initialization parameter whose value to
     * get
     *
     * @return a <code>String</code> containing the value 
     * of the initialization parameter, or <code>null</code> if 
     * the initialization parameter does not exist
     */
    public String getInitParameter(String name);


    /**
     * Returns the names of the servlet's initialization parameters
     * as an <code>Enumeration</code> of <code>String</code> objects, 
     * or an empty <code>Enumeration</code> if the servlet has
     * no initialization parameters.
     *
     * @return an <code>Enumeration</code> of <code>String</code> 
     * objects containing the names of the servlet's 
     * initialization parameters
     */
    public Enumeration<String> getInitParameterNames();

}

/ 7	. 

package javax.servlet;

import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Enumeration;
import java.util.EnumSet;
import java.util.EventListener;
import java.util.Map;
import java.util.Set;
import javax.servlet.descriptor.JspConfigDescriptor;

/**
 * Defines a set of methods that a servlet uses to communicate with its
 * servlet container, for example, to get the MIME type of a file, dispatch
 * requests, or write to a log file.
 *
 * <p>There is one context per "web application" per Java Virtual Machine.  (A	/  one ServletContext (impl=ApplicationContext) per Context (impl=StandardContext)
 * "web application" is a collection of servlets and content installed under a
 * specific subset of the server's URL namespace such as <code>/catalog</code>
 * and possibly installed via a <code>.war</code> file.) 
 *
 * <p>In the case of a web
 * application marked "distributed" in its deployment descriptor, there will
 * be one context instance for each virtual machine.  In this situation, the 
 * context cannot be used as a location to share global information (because
 * the information won't be truly global).  Use an external resource like 
 * a database instead.
 *
 * <p>The <code>ServletContext</code> object is contained within 				<- !
 * the {@link ServletConfig} object, which the Web server provides the
 * servlet when the servlet is initialized.
 *
 * @author 	Various
 *
 * @see 	Servlet#getServletConfig
 * @see 	ServletConfig#getServletContext
 */

public interface ServletContext {		/ servlet can ask the container about things through the ServletContext's methods, such as getMajorVersion()
				/ of getInitParameter(String name)	, ServletConfig (init servlet) heeft ook getInitParameter(String name)	, maar dat zijn de params in de web.xml	, deze gaat over information useful  to an entire web application 

/ 13	. 

/ implementation in Tomcat	, 

/**
 * Standard implementation of <code>ServletContext</code> that represents
 * a web application's execution environment.  An instance of this class is
 * associated with each instance of <code>StandardContext</code>.				<-
 *
 * @author Craig R. McClanahan
 * @author Remy Maucherat
 */
public class ApplicationContext implements ServletContext {

/ 7	. 


package org.apache.catalina;
/**
 * A <b>Context</b> is a Container that represents a servlet context, and
 * therefore an individual web application, in the Catalina servlet engine.
 * It is therefore useful in almost every deployment of Catalina (even if a
 * Connector attached to a web server (such as Apache) uses the web server's
 * facilities to identify the appropriate Wrapper to handle this request.
 * It also provides a convenient mechanism to use Interceptors that see
 * every request processed by this particular web application.
 * <p>
 * The parent Container attached to a Context is generally a Host, but may
 * be some other implementation, or may be omitted if it is not necessary.
 * <p>
 * The child containers attached to a Context are generally implementations
 * of Wrapper (representing individual servlet definitions).
 * <p>
 *
 * @author Craig R. McClanahan
 */

public interface Context extends Container {

/ 13	. 

package org.apache.catalina.core;
/**
 * Standard implementation of the <b>Context</b> interface.  Each
 * child container must be a Wrapper implementation to process the
 * requests directed to a particular servlet.
 *
 * @author Craig R. McClanahan
 * @author Remy Maucherat
 */
public class StandardContext extends ContainerBase
        implements Context, NotificationEmitter {

/ 7	. 

package org.apache.catalina;
/**
 * A <b>Wrapper</b> is a Container that represents an individual servlet			<-
 * definition from the deployment descriptor of the web application.  It
 * provides a convenient mechanism to use Interceptors that see every single
 * request to the servlet represented by this definition.
 * <p>
 * Implementations of Wrapper are responsible for managing the servlet life
 * cycle for their underlying servlet class, including calling init() and
 * destroy() at appropriate times, as well as respecting the existence of
 * the SingleThreadModel declaration on the servlet class itself.
 * <p>
 * The parent Container attached to a Wrapper will generally be an
 * implementation of Context, representing the servlet context (and
 * therefore the web application) within which this servlet executes.
 * <p>
 * Child Containers are not allowed on Wrapper implementations, so the
 * <code>addChild()</code> method should throw an
 * <code>IllegalArgumentException</code>.
 *
 * @author Craig R. McClanahan
 */
public interface Wrapper extends Container {

/ 13	.

package org.apache.catalina.core;
/**
 * Standard implementation of the <b>Wrapper</b> interface that represents
 * an individual servlet definition.  No child Containers are allowed, and
 * the parent Container must be a Context.
 *
 * @author Craig R. McClanahan
 * @author Remy Maucherat
 */
@SuppressWarnings("deprecation") // SingleThreadModel
public class StandardWrapper extends ContainerBase
    implements ServletConfig, Wrapper, NotificationEmitter {

/ 13	. 

package org.apache.catalina.core;

/ 7	. 

/ context en servlet context	,

/ 13	.

package org.apache.catalina;
/**
 * A <b>Container</b> is an object that can execute requests received from
 * a client, and return responses based on those requests.  A Container may
 * optionally support a pipeline of Valves that process the request in an
 * order configured at runtime, by implementing the <b>Pipeline</b> interface
 * as well.
 * <p>
 * Containers will exist at several conceptual levels within Catalina.  The
 * following examples represent common cases:
 * <ul>
 * <li><b>Engine</b> - Representation of the entire Catalina servlet engine,
 *     most likely containing one or more subcontainers that are either Host
 *     or Context implementations, or other custom groups.
 * <li><b>Host</b> - Representation of a virtual host containing a number
 *     of Contexts.
 * <li><b>Context</b> - Representation of a single ServletContext, which will
 *     typically contain one or more Wrappers for the supported servlets.
 * <li><b>Wrapper</b> - Representation of an individual servlet definition
 *     (which may support multiple servlet instances if the servlet itself
 *     implements SingleThreadModel).
 * </ul>
 */
public interface Container extends Lifecycle {

/ Klopt	, 

/ 13	. 

package org.apache.catalina;
/**
 * A <b>Context</b> is a Container that represents a servlet context, and
 * therefore an individual web application, in the Catalina servlet engine.
 * It is therefore useful in almost every deployment of Catalina (even if a
 * Connector attached to a web server (such as Apache) uses the web server's
 * facilities to identify the appropriate Wrapper to handle this request.
 * It also provides a convenient mechanism to use Interceptors that see
 * every request processed by this particular web application.
 * <p>
 * The parent Container attached to a Context is generally a Host, but may
 * be some other implementation, or may be omitted if it is not necessary.
 * <p>
 * The child containers attached to a Context are generally implementations
 * of Wrapper (representing individual servlet definitions).
 * <p>
 *
 * @author Craig R. McClanahan
 */

public interface Context extends Container {

/ 1313	. 

/ impl	, 

package org.apache.catalina.core;
/**
 * Standard implementation of the <b>Context</b> interface.  Each
 * child container must be a Wrapper implementation to process the
 * requests directed to a particular servlet.
 *
 * @author Craig R. McClanahan
 * @author Remy Maucherat
 */
public class StandardContext extends ContainerBase
        implements Context, NotificationEmitter {

package javax.servlet;
/**
 * Defines a set of methods that a servlet uses to communicate with its servlet
 * container, for example, to get the MIME type of a file, dispatch requests, or
 * write to a log file.
 * <p>
 * There is one context per "web application" per Java Virtual Machine. (A					/ per Context (StandardContext)
 * "web application" is a collection of servlets and content installed under a
 * specific subset of the server's URL namespace such as <code>/catalog</code>
 * and possibly installed via a <code>.war</code> file.)
 * <p>
 * The <code>ServletContext</code> object is contained within the
 * {@link ServletConfig} object, which the Web server provides the servlet when
 * the servlet is initialized.
 * 
 * @author Various
 * @see Servlet#getServletConfig
 * @see ServletConfig#getServletContext
 */
public interface ServletContext {

/ 1313	. 

/ impl	, 

package org.apache.catalina.core;
/**
 * Standard implementation of <code>ServletContext</code> that represents
 * a web application's execution environment.  An instance of this class is	
 * associated with each instance of <code>StandardContext</code>.
 *
 * @author Craig R. McClanahan
 * @author Remy Maucherat
 */
public class ApplicationContext implements ServletContext {




/ Einde SERVLET AND TOMCAT TYPES 

/ BOOK 

/ ws workspace-wicket7_7
/ proj servlets

/ Ch4

/ (90)


/ we hebben StudyServlet	, 
/ we zien 	, 
req	org.apache.catalina.connector.RequestFacade  (id=2698)	
	request	org.apache.catalina.connector.Request  (id=2699)	
		remoteAddr	null	
		remoteHost	null	
		remotePort	-1	
		userPrincipal	null		<- req.getRemoteUser

/ Hoe set req.getRemoteUser()
/ WH via valve	,
/ Lees	, 
http://tomcat.10.x6.nabble.com/how-to-populate-userPrincipal-in-request-object-td2058738.html


/ 7	. 



/ Einde BOOK 

/ DEBUG SESSIONS.ser 

[eric@localhost Tomcat]$ find -name SESSIONS.ser
./apache-tomcat-8.5.12-src/output/build/work/Catalina/localhost/servlets/SESSIONS.ser
./apache-tomcat-8.0.28/work/Catalina/localhost/servlets/SESSIONS.ser
./apache-tomcat-8.0.28/work/Catalina/localhost/manager/SESSIONS.ser
./apache-tomcat-8.0.28/work/Catalina/localhost/wicket-examples-step-by-step/SESSIONS.ser
./apache-tomcat-7.0.57/work/Catalina/localhost/manager/SESSIONS.ser
./apache-tomcat-7.0.57/work/Catalina/localhost/wicket-examples-step-by-step/SESSIONS.ser
./apache-tomcat-7.0.57/work/Catalina/localhost/wicket-testing/SESSIONS.ser

/ START SERVER

/c
/ stack
/s
org.apache.catalina.startup.Bootstrap at localhost:55991	
	Thread [main] (Running)	
	Daemon Thread [Catalina-startStop-1] (Running)	
	Daemon Thread [localhost-startStop-1] (Suspended (breakpoint at line 461 in org.apache.catalina.session.StandardManager))	
		org.apache.catalina.session.StandardManager.startInternal() line: 461	
		org.apache.catalina.session.StandardManager(org.apache.catalina.util.LifecycleBase).start() line: 145	
		org.apache.catalina.core.StandardContext.startInternal() line: 5643	
		org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
		org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
		org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
		org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
		org.apache.catalina.startup.HostConfig.deployWAR(org.apache.catalina.util.ContextName, java.io.File) line: 1092	
		org.apache.catalina.startup.HostConfig$DeployWar.run() line: 1984	
		java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
		java.util.concurrent.FutureTask<V>.run() line: 262	
		java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
		java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
		java.lang.Thread.run() line: 745	
/debug
/s
org.apache.catalina.session.StandardManager.startInternal() line: 461	
        super.startInternal();
/s
org.apache.catalina.session.StandardManager(org.apache.catalina.session.ManagerBase).startInternal() line: 696	

        // Ensure caches for timing stats are the right size by filling with
        // nulls.
        while (sessionCreationTiming.size() < TIMING_STATS_CACHE_SIZE) {		/ TIMING_STATS_CACHE_SIZE=100 while loops	, 
            sessionCreationTiming.add(null);
        }
        while (sessionExpirationTiming.size() < TIMING_STATS_CACHE_SIZE) {
            sessionExpirationTiming.add(null);
        }

        /* Create sessionIdGenerator if not explicitly configured */
        SessionIdGenerator sessionIdGenerator = getSessionIdGenerator();
null
        if (sessionIdGenerator == null) {
            sessionIdGenerator = new StandardSessionIdGenerator();
            setSessionIdGenerator(sessionIdGenerator);

        if (sessionIdLength != SESSION_ID_LENGTH_UNSET) {
/n
-1==-1
        sessionIdGenerator.setJvmRoute(getJvmRoute());	/ in Engine	, 
null
        if (sessionIdGenerator instanceof SessionIdGeneratorBase) {
            SessionIdGeneratorBase sig = (SessionIdGeneratorBase)sessionIdGenerator;
            sig.setSecureRandomAlgorithm(getSecureRandomAlgorithm());		/ "SHA1PRNG" 	, in ManagerBase
            sig.setSecureRandomClass(getSecureRandomClass());		/ null	, in ManagerBase
            sig.setSecureRandomProvider(getSecureRandomProvider());		/ null

        if (sessionIdGenerator instanceof Lifecycle) {
            ((Lifecycle) sessionIdGenerator).start();
/ TODO
/t
org.apache.catalina.session.StandardManager.startInternal() line: 465	
        super.startInternal();
        // Load unloaded sessions, if any
        try {
            load();
/s
org.apache.catalina.session.StandardManager.load() line: 176	
        if (SecurityUtil.isPackageProtectionEnabled()){
/n
        } else {
            doLoad();
/s
org.apache.catalina.session.StandardManager.doLoad() line: 191	
        // Initialize our internal data structures
        sessions.clear();

        // Open an input stream to the specified pathname, if any
        File file = file();
/s
org.apache.catalina.session.StandardManager.file() line: 528	
        if (pathname == null || pathname.length() == 0) {
/n
pathname="SESSIONS.ser"
        File file = new File(pathname);
        if (!file.isAbsolute()) {
            ServletContext servletContext = ((Context) container).getServletContext();	/ container=StandardContext
/s
        		return (context.getFacade());	 / context=ApplicationContext	, appl wide	,	= ServletContext
/t
            File tempdir = (File) servletContext.getAttribute(ServletContext.TEMPDIR); /    ServletContext: public static final String TEMPDIR = "javax.servlet.context.tempdir";
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/work/Catalina/localhost/servlets
            if (tempdir != null) {
                file = new File(tempdir, pathname);
        return file;
/t
org.apache.catalina.session.StandardManager.doLoad() line: 200	
        // Open an input stream to the specified pathname, if any
        File file = file();
/d
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/work/Catalina/localhost/servlets/SESSIONS.ser

        try {
            fis = new FileInputStream(file.getAbsolutePath());
        } catch (FileNotFoundException e) {
            if (log.isDebugEnabled()) {
                log.debug("No persisted data file found");
            }
            return;
/t
org.apache.catalina.session.StandardManager.startInternal() line: 469	
            load();
/d

/c
/ bijv /examples app	,
/stack
/s
Daemon Thread [localhost-startStop-1] (Suspended)	
	org.apache.catalina.core.StandardWrapper.<init>() line: 100	
	org.apache.catalina.core.StandardContext.createWrapper() line: 3563	
	org.apache.catalina.deploy.WebXml.configureContext(org.apache.catalina.Context) line: 1389	
servlets	java.util.HashMap<K,V>  (id=9323)	
	table	java.util.HashMap$Entry<K,V>[32]  (id=9358)	
		[0]	java.util.HashMap$Entry<K,V>  (id=9363)	 / RequestInfoExample=org.apache.catalina.deploy.ServletDef@3df9b7f7
		[1]	java.util.HashMap$Entry<K,V>  (id=9364)	/ async1=org.apache.catalina.deploy.ServletDef@20ac1d0e
		[2]	java.util.HashMap$Entry<K,V>  (id=9365)/ ServletToJsp=org.apache.catalina.deploy.ServletDef@3a792e4	
		[3]	java.util.HashMap$Entry<K,V>  (id=9366)/ jsp=org.apache.catalina.deploy.ServletDef@731c00d8	
		[9]	java.util.HashMap$Entry<K,V>  (id=9367)/ HelloWorldExample=org.apache.catalina.deploy.ServletDef@7941e345	
		[10]	java.util.HashMap$Entry<K,V>  (id=9368)/ RequestHeaderExample=org.apache.catalina.deploy.ServletDef@54b00534	
		[11]	java.util.HashMap$Entry<K,V>  (id=9369)/ wsSnake=org.apache.catalina.deploy.ServletDef@7025c45b	
		[12]	java.util.HashMap$Entry<K,V>  (id=9370)/ CompressionFilterTestServlet=org.apache.catalina.deploy.ServletDef@4dce2ff	
		[14]	java.util.HashMap$Entry<K,V>  (id=9371)	
		[19]	java.util.HashMap$Entry<K,V>  (id=9379)	
		[24]	java.util.HashMap$Entry<K,V>  (id=9423)	
		[25]	java.util.HashMap$Entry<K,V>  (id=9424)	
		[31]	java.util.HashMap$Entry<K,V>  (id=9425)	

        for (ServletDef servlet : servlets.values()) {
            Wrapper wrapper = context.createWrapper();
/cb
	org.apache.catalina.startup.ContextConfig.webConfig() line: 1364	
	org.apache.catalina.startup.ContextConfig.configureStart() line: 888	
	org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent) line: 388	
	org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(java.lang.String, java.lang.Object) line: 117	
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).fireLifecycleEvent(java.lang.String, java.lang.Object) line: 90	
	org.apache.catalina.core.StandardContext.startInternal() line: 5522	
this=StandardEngine[Catalina].StandardHost[localhost].StandardContext[/examples]
/cb
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).start() line: 145	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChildInternal(org.apache.catalina.Container) line: 899	
	org.apache.catalina.core.StandardHost(org.apache.catalina.core.ContainerBase).addChild(org.apache.catalina.Container) line: 875	
	org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container) line: 652	
	org.apache.catalina.startup.HostConfig.deployDirectory(org.apache.catalina.util.ContextName, java.io.File) line: 1260	
	org.apache.catalina.startup.HostConfig$DeployDirectory.run() line: 2002	
	java.util.concurrent.Executors$RunnableAdapter<T>.call() line: 471	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/ Als een StandardContext[/manager] of StandardContext[/manager-host] of ..wordt create	,  worden er een aantal StanderdWrapper create	, zijn deze per servlet?
/ Dus zijn er zoveel servlets?

/ we zijn in 	, 
org.apache.catalina.core.StandardContext.startInternal() line: 5643			/ app start internal	, 
                // Notify our interested LifecycleListeners
5522:                fireLifecycleEvent(Lifecycle.CONFIGURE_START_EVENT, null);
/c
            try {
                // Start manager
                if ((manager != null) && (manager instanceof Lifecycle)) {
5643:                    ((Lifecycle) getManager()).start();					/ calls load	, die SESSIONS.ser loads	,	


/c
/ stack
/s
Tomcat v7.0 Server at localhost (2) [Apache Tomcat]	
	org.apache.catalina.startup.Bootstrap at localhost:55991	
		Thread [main] (Suspended (breakpoint at line 455 in org.apache.catalina.core.StandardService))	
			org.apache.catalina.core.StandardService.startInternal() line: 455	
			org.apache.catalina.core.StandardService(org.apache.catalina.util.LifecycleBase).start() line: 145	
			org.apache.catalina.core.StandardServer.startInternal() line: 758	
			org.apache.catalina.core.StandardServer(org.apache.catalina.util.LifecycleBase).start() line: 145	
			org.apache.catalina.startup.Catalina.start() line: 693	
			sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) line: not available [native method]	
			sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) line: 57	
			sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) line: 43	
			java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...) line: 606	
			org.apache.catalina.startup.Bootstrap.start() line: 294	
			org.apache.catalina.startup.Bootstrap.main(java.lang.String[]) line: 428	
/ TODO

/ Einde START SERVER

/ 7	. 

/ STOP SERVER

/ click Stop server in Servers view	, 
/ Dit is wat anders als in Console Terminate click 	,
/ TODO

////////////////////////////////////////////////////////////////////
/ Wat we moeten doen is: 
/ start server	, 
/ visit in browser: http://localhost:9090/servlets/session
/ Deze creates a session	, 
/ in eclipse in Server view: stop tomcat	, 
/ dan 	, 
./output/build/work/Catalina/localhost/servlets/SESSIONS.ser

/ Als er een SESSIONS.ser is	, en we start server, en we bezoeken http://localhost:9090/servlets/session niet	, en we stop server, dan is er GEEN SESSIONS.ser meer	, 
/ er is ook geen sessions meer in ManagerBase	,  daarom komt er geen SESSIONS.ser meer	, 
/ WH als bij start server SESSIONS.ser is loaded	, dan wordt hij rm	, 
/ TODO
 

/c
/ stack
/s
Tomcat v7.0 Server at localhost (2) [Apache Tomcat]	
	org.apache.catalina.startup.Bootstrap at localhost:55991	
		Thread [main] (Suspended (breakpoint at line 741 in org.apache.catalina.startup.Catalina))	
			org.apache.catalina.startup.Catalina.stop() line: 741	
			org.apache.catalina.startup.Catalina.start() line: 728	
			sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) line: not available [native method]	
			sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) line: 57	
			sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) line: 43	
			java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...) line: 606	
			org.apache.catalina.startup.Bootstrap.start() line: 294	
			org.apache.catalina.startup.Bootstrap.main(java.lang.String[]) line: 428	
		Daemon Thread [ContainerBackgroundProcessor[StandardEngine[Catalina]]] (Running)	
		Daemon Thread [http-bio-9090-exec-2] (Running)	
		Daemon Thread [http-bio-9090-exec-4] (Running)	
		Daemon Thread [http-bio-9090-exec-5] (Running)	
		Daemon Thread [http-bio-9090-exec-7] (Running)	
		Daemon Thread [http-bio-9090-exec-6] (Running)	
		Daemon Thread [http-bio-9090-exec-3] (Running)	
		Daemon Thread [http-bio-9090-exec-1] (Running)	
		Daemon Thread [http-bio-9090-exec-10] (Running)	
		Daemon Thread [http-bio-9090-exec-8] (Running)	
		Daemon Thread [http-bio-9090-exec-9] (Running)	
		Daemon Thread [http-bio-9090-Acceptor-0] (Running)	
		Daemon Thread [http-bio-9090-AsyncTimeout] (Running)	
		Daemon Thread [ajp-bio-8009-exec-1] (Running)	
		Daemon Thread [ajp-bio-8009-exec-4] (Running)	
		Daemon Thread [ajp-bio-8009-exec-7] (Running)	
		Daemon Thread [ajp-bio-8009-exec-3] (Running)	
		Daemon Thread [ajp-bio-8009-exec-8] (Running)	
		Daemon Thread [ajp-bio-8009-exec-2] (Running)	
		Daemon Thread [ajp-bio-8009-exec-5] (Running)	
		Daemon Thread [ajp-bio-8009-exec-9] (Running)	
		Daemon Thread [ajp-bio-8009-AsyncTimeout] (Running)	
		Daemon Thread [ajp-bio-8009-exec-6] (Running)	
		Daemon Thread [ajp-bio-8009-Acceptor-0] (Running)	
		Daemon Thread [ajp-bio-8009-exec-10] (Running)	

/c
/ stack
/s
Daemon Thread [localhost-startStop-2] (Suspended (breakpoint at line 485 in org.apache.catalina.session.StandardManager))	
	org.apache.catalina.session.StandardManager.stopInternal() line: 485	
	org.apache.catalina.session.StandardManager(org.apache.catalina.util.LifecycleBase).stop() line: 221	
	org.apache.catalina.core.StandardContext.stopInternal() line: 5825	
this	org.apache.catalina.core.StandardContext  (id=3038)	
StandardEngine[Catalina].StandardHost[localhost].StandardContext[/servlets] 	/ we komen vaak in deze method	, zoek die met de juiste app	,  /servlets	,
																	/ /manager,	 /docs	, /examples	, 
/cb
	org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).stop() line: 221	
	org.apache.catalina.core.ContainerBase$StopChild.call() line: 1587	
	org.apache.catalina.core.ContainerBase$StopChild.call() line: 1576	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	
/ debug	, 
        // Write out sessions
        try {
            unload();
/s
org.apache.catalina.session.StandardManager.unload() line: 323	
        } else {
            doUnload();
/s
org.apache.catalina.session.StandardManager.doUnload() line: 342	

        if (sessions.isEmpty()) {	/ def in ManagerBase	,
/j als we http://localhost:9090/servlets/session NIET hebben bezocht	,
/n als we dat WEL doen	, 
            log.debug(sm.getString("standardManager.unloading.nosessions"));
/n
            return; // nothing to do
/n
        }

        // Open an output stream to the specified pathname, if any
        File file = file();
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/work/Catalina/localhost/servlets/SESSIONS.ser

/ er is nu GEEN SESSIONS.ser file	, die wordt hieronder create	, 

        try {
            fos = new FileOutputStream(file.getAbsolutePath());
            bos = new BufferedOutputStream(fos);
            oos = new ObjectOutputStream(bos);

/ Nu is hij er	,  en een stream erop	,  hij is leeg	, 
[eric@localhost apache-tomcat-7.0.76-src]$ find -name SESSIONS.ser
./output/build/work/Catalina/localhost/servlets/SESSIONS.ser

[eric@localhost apache-tomcat-7.0.76-src]$ find -name SESSIONS.ser | xargs ls -l
-rw-rw-r--. 1 eric eric 0 Apr  7 17:36 ./output/build/work/Catalina/localhost/servlets/SESSIONS.ser

        // Write the number of active sessions, followed by the details
        ArrayList<StandardSession> list = new ArrayList<StandardSession>();
        synchronized (sessions) {
            if (log.isDebugEnabled()) {
                log.debug("Unloading " + sessions.size() + " sessions");
            }
            try {
                oos.writeObject(Integer.valueOf(sessions.size()));
                Iterator<Session> elements = sessions.values().iterator();
                while (elements.hasNext()) {
                    StandardSession session =
                        (StandardSession) elements.next(); / StandardSession[3394F54CF2171594AD8B392B62C62CE1]
                    list.add(session);
                    session.passivate();
/s
org.apache.catalina.session.StandardSession.passivate() line: 899	
        String keys[] = keys();
keys	java.lang.String[1]  (id=3187)	
	[0]	"title" (id=3188)	

/ Intermezzo

/ klopt	, 

@WebServlet("/session")
public class SessionServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		session.setAttribute("title", "Foo Bar");

/ Einde Intermezzo

        for (int i = 0; i < keys.length; i++) {
            Object attribute = attributes.get(keys[i]);
Foo Bar
            if (attribute instanceof HttpSessionActivationListener) {
/n
/t
org.apache.catalina.session.StandardSession.passivate() line: 915	
                    session.passivate();
/d
                    session.writeObjectData(oos);
/s
org.apache.catalina.session.StandardSession.writeObjectData(java.io.ObjectOutputStream) line: 1092	
        writeObject(stream);
/s
   /**
     * Write a serialized version of this session object to the specified
     * object output stream.
     * <p>
     * <b>IMPLEMENTATION NOTE</b>:  The owning Manager will not be stored
     * in the serialized representation of this Session.  After calling
     * <code>readObject()</code>, you must set the associated Manager
     * explicitly.
     * <p>
     * <b>IMPLEMENTATION NOTE</b>:  Any attribute that is not Serializable
     * will be unbound from the session, with appropriate actions if it
     * implements HttpSessionBindingListener.  If you do not want any such
     * attributes, be sure the <code>distributable</code> property of the
     * associated Manager is set to <code>true</code>.
     *
	 */
org.apache.catalina.session.StandardSession.writeObject(java.io.ObjectOutputStream) line: 1667	
        // Write the scalar instance variables (except Manager)
        stream.writeObject(Long.valueOf(creationTime));
        stream.writeObject(Long.valueOf(lastAccessedTime));
        stream.writeObject(Integer.valueOf(maxInactiveInterval));
        stream.writeObject(Boolean.valueOf(isNew));
        stream.writeObject(Boolean.valueOf(isValid));
        stream.writeObject(Long.valueOf(thisAccessedTime));
        stream.writeObject(id);
        // Accumulate the names of serializable and non-serializable attributes
        String keys[] = keys();
keys	java.lang.String[1]  (id=3201)	
	[0]	"title" (id=3188)	

        ArrayList<String> saveNames = new ArrayList<String>();
        ArrayList<Object> saveValues = new ArrayList<Object>();
        for (int i = 0; i < keys.length; i++) {
            Object value = attributes.get(keys[i]);
Foo Bar
            } else if (isAttributeDistributable(keys[i], value) && !exclude(keys[i], value)) {
/s
     * This implementation simply checks the value for serializability.
     * Sub-classes might use other distribution technology not based on
     * serialization and can override this check.
    @Override
    public boolean isAttributeDistributable(String name, Object value) {
        return value instanceof Serializable;
/t
/s
org.apache.catalina.session.StandardSession.exclude(java.lang.String, java.lang.Object) line: 1745	
        if (Constants.excludedAttributeNames.contains(name)) {
/n
        // Last check so use a short-cut
        return !manager.willAttributeDistribute(name, value);
/ TODO
/t
org.apache.catalina.session.StandardSession.writeObject(java.io.ObjectOutputStream) line: 1687	
            } else if (isAttributeDistributable(keys[i], value) && !exclude(keys[i], value)) {
                saveNames.add(keys[i]);	[title]
                saveValues.add(value);	[Foo Bar]

        // Serialize the attribute count and the Serializable attributes
        int n = saveNames.size();
        stream.writeObject(Integer.valueOf(n));
        for (int i = 0; i < n; i++) {
            stream.writeObject(saveNames.get(i));
            try {
                stream.writeObject(saveValues.get(i));
/t
org.apache.catalina.session.StandardManager.doUnload() line: 420	
                    session.writeObjectData(oos);
/d

/ SESSIONS.ser is nog steeds leeg	, 

        // Flush and close the output stream
        try {
            oos.flush();		
/ Nu is SESSIONS.ser 278 groot	, 
        } finally {
            try {
                oos.close();
            } catch (IOException f) {
                // Ignore
            }
        }

        // Expire all the sessions we just wrote
        if (log.isDebugEnabled()) {
            log.debug("Expiring " + list.size() + " persisted sessions");
        }
        Iterator<StandardSession> expires = list.iterator();
        while (expires.hasNext()) {
            StandardSession session = expires.next();
            try {
                session.expire(false);	/ false betekent: nofify=false	,
/s
    /**
     * Perform the internal processing required to invalidate this session,
     * without triggering an exception if the session has already expired.
     *
org.apache.catalina.session.StandardSession.expire(boolean) line: 749	
/=
    public void expire(boolean notify) {

            Context context = (Context) manager.getContainer();
StandardEngine[Catalina].StandardHost[localhost].StandardContext[/servlets]

            // The call to expire() may not have been triggered by the webapp.
            // Make sure the webapp's class loader is set when calling the
            // listeners
            ClassLoader oldTccl = null;
            if (context.getLoader() != null &&
/s
org.apache.catalina.core.StandardContext(org.apache.catalina.core.ContainerBase).getLoader() line: 394	
            return (loader);																					/ WebappLoader[/servlets]	/ TODO
/t
/s
org.apache.catalina.loader.WebappLoader.getClassLoader() line: 215	
        return classLoader;
/=
WebappClassLoader
  context: /servlets
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
java.net.URLClassLoader@4cf824b7
/=
/ meer in detail	, 
this	org.apache.catalina.loader.WebappLoader  (id=3252)	
	classLoader	org.apache.catalina.loader.WebappClassLoader  (id=3250)	
		ucp	sun.misc.URLClassPath  (id=3383)	
			path	java.util.ArrayList<E>  (id=3393)	
[]
		parent	java.net.URLClassLoader  (id=2737)	
			ucp	sun.misc.URLClassPath  (id=3333)	
				path	java.util.ArrayList<E>  (id=3341)	
[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ha.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-es.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/annotations-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/websocket-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-tribes.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/ecj-4.4.2.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat7-websocket.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ant.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/servlet-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-jdbc.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/el-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-coyote.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-ja.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-dbcp.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-fr.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-util.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jsp-api.jar]

                    context.getLoader().getClassLoader() != null) {
                oldTccl = Thread.currentThread().getContextClassLoader();
                if (Globals.IS_SECURITY_ENABLED) {
/n
                } else {
                    Thread.currentThread().setContextClassLoader(
                            context.getLoader().getClassLoader());		/ was al	, 

            } finally {											/ herstel	, 
                if (oldTccl != null) {
                    if (Globals.IS_SECURITY_ENABLED) {
/n
                    } else {
                        Thread.currentThread().setContextClassLoader(oldTccl);

context	org.apache.catalina.core.StandardContext  (id=2824)	
	parentClassLoader	null	
	loader	org.apache.catalina.loader.WebappLoader  (id=2896)					/= context.getLoader()
		classLoader	org.apache.catalina.loader.WebappClassLoader  (id=2854)			/= context.getLoader().getClassLoader()
			parent	java.net.URLClassLoader  (id=2704)						/= context.loader.parentClassLoader	hieronder	,  
			ucp	sun.misc.URLClassPath  (id=3036)	
				path	java.util.ArrayList<E>  (id=3041)	
[]
		parentClassLoader	java.net.URLClassLoader  (id=2704)	
			ucp	sun.misc.URLClassPath  (id=2939)	
				path	java.util.ArrayList<E>  (id=2944)	
[file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper-el.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ha.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-es.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/annotations-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/websocket-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-tribes.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/ecj-4.4.2.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat7-websocket.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/catalina-ant.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/servlet-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-jdbc.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/el-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-coyote.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-api.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-ja.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-dbcp.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-i18n-fr.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/tomcat-util.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jasper.jar,
 file:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/lib/jsp-api.jar]


///////////////////////////////////////////////////////////////////////////////
            // Remove this session from our manager's active sessions
            manager.remove(this, true);
/s
org.apache.catalina.session.StandardManager(org.apache.catalina.session.ManagerBase).remove(org.apache.catalina.Session, boolean) line: 825	
/=
    public void remove(Session session, boolean update) {
        // If the session has expired - as opposed to just being removed from
        // the manager because it is being persisted - update the expired stats		/ TODO We persist toch juist	?
        if (update) {
            long timeNow = System.currentTimeMillis();
            int timeAlive =
                (int) (timeNow - session.getCreationTimeInternal())/1000;		/ in secs	,  1126 sec	, 
            updateSessionMaxAliveTime(timeAlive);
/s
org.apache.catalina.session.StandardManager(org.apache.catalina.session.ManagerBase).updateSessionMaxAliveTime(int) line: 1067	
        if (sessionAliveTime > this.sessionMaxAliveTime) {
/j
1126 > 0
/ Dit is de 1ste keer dat we hier komen	, 

           synchronized (sessionMaxAliveTimeUpdateLock) {
                if (sessionAliveTime > this.sessionMaxAliveTime) {
                    this.sessionMaxAliveTime = sessionAliveTime;


/ Intermezzo

this	org.apache.catalina.session.StandardManager  (id=2823)	
	sessions	java.util.concurrent.ConcurrentHashMap<K,V>  (id=2839)	
		segments	java.util.concurrent.ConcurrentHashMap$Segment<K,V>[16]  (id=3146)	
			[3]	java.util.concurrent.ConcurrentHashMap$Segment<K,V>  (id=3149)	
				table	java.util.concurrent.ConcurrentHashMap$HashEntry<K,V>[2]  (id=3153)	
					[1]	java.util.concurrent.ConcurrentHashMap$HashEntry<K,V>  (id=3154)	
						value	org.apache.catalina.session.StandardSession  (id=2853)	
							maxInactiveInterval	1800											/ secs	,=1/2 uur


/ Einde Intermezzo

/t
org.apache.catalina.session.StandardManager(org.apache.catalina.session.ManagerBase).remove(org.apache.catalina.Session, boolean) line: 826	
            updateSessionMaxAliveTime(timeAlive);
/d
            expiredSessions.incrementAndGet();	/ AtomicLong	, 1

            SessionTiming timing = new SessionTiming(timeNow, timeAlive);
            synchronized (sessionExpirationTiming) {
                sessionExpirationTiming.add(timing);
                sessionExpirationTiming.poll();
/ TODO
        if (session.getIdInternal() != null) {
/j
6F754EFAB8D5B8EA4CD6DBA281CE9176
            sessions.remove(session.getIdInternal());
/t
org.apache.catalina.session.StandardSession.expire(boolean) line: 836	
            manager.remove(this, true);
/d

/ this==the StandardSession	, hij is er dus nog steeds (wordt straks recycle)	, maar is rm uit de StandardManager's sessions , 

            // Call the logout method
            if (principal instanceof GenericPrincipal) {
/n 
principal==null
                GenericPrincipal gp = (GenericPrincipal) principal;
/n
                try {
                    gp.logout();
/n

            // We have completed expire of this session
            setValid(false);

            // Unbind any objects associated with this session
            String keys[] = keys();
            if (oldTccl != null) {
                if (Globals.IS_SECURITY_ENABLED) {
                    PrivilegedAction<Void> pa = new PrivilegedSetTccl(
                            context.getLoader().getClassLoader());
                    AccessController.doPrivileged(pa);
                } else {
                    Thread.currentThread().setContextClassLoader(
                            context.getLoader().getClassLoader());
                }
            }
            try {
                for (int i = 0; i < keys.length; i++) {
                    removeAttributeInternal(keys[i], notify);	/ notify==false
/s
    /**
     * Remove the object bound with the specified name from this session.  If
     * the session does not have an object bound with this name, this method
     * does nothing.
     * <p>
org.apache.catalina.session.StandardSession.removeAttributeInternal(java.lang.String, boolean) line: 1842	

this	org.apache.catalina.session.StandardSession  (id=2853)	
	attributes	java.util.concurrent.ConcurrentHashMap<K,V>  (id=2855)	
{title=Foo Bar}

        // Remove this attribute from our collection
        Object value = attributes.remove(name);

        // Do we need to do valueUnbound() and attributeRemoved() notification?
        if (!notify || (value == null)) {
/j
            return;
        }
/t
org.apache.catalina.session.StandardSession.expire(boolean) line: 873	
                for (int i = 0; i < keys.length; i++) {
                    removeAttributeInternal(keys[i], notify);
/d
            } finally {
                if (oldTccl != null) {
                    if (Globals.IS_SECURITY_ENABLED) {
                        PrivilegedAction<Void> pa =
                            new PrivilegedSetTccl(oldTccl);
                        AccessController.doPrivileged(pa);
                    } else {
                        Thread.currentThread().setContextClassLoader(oldTccl);
                    }
/t
org.apache.catalina.session.StandardManager.doUnload() line: 441	
                session.expire(false);
/d
            } finally {
                session.recycle();
/s
org.apache.catalina.session.StandardSession.recycle() line: 988	
        // Reset the instance variables associated with this Session
        attributes.clear();
        setAuthType(null);
        creationTime = 0L;
        expiring = false;
        id = null;
        lastAccessedTime = 0L;
        maxInactiveInterval = -1;
        notes.clear();
        setPrincipal(null);
        isNew = false;
        isValid = false;
        manager = null;
/t
org.apache.catalina.session.StandardManager.doUnload() line: 445	
                session.recycle();
/d
/ volgende session is er niet	, 
        while (expires.hasNext()) {
/n
/t
org.apache.catalina.session.StandardManager.stopInternal() line: 497	
        // Write out sessions
        try {
            unload();
/d
        // Expire all active sessions
        Session sessions[] = findSessions();
/s
        	return sessions.values().toArray(new Session[0]);
/t
[]
        for (int i = 0; i < sessions.length; i++) {
/n
        // Require a new random number generator if we are restarted
        super.stopInternal();
/s
org.apache.catalina.session.StandardManager(org.apache.catalina.session.ManagerBase).stopInternal() line: 729	
        if (sessionIdGenerator instanceof Lifecycle) {
            ((Lifecycle) sessionIdGenerator).stop();

/ Intermezzo

/ we komen steeds eerst in 
	org.apache.catalina.util.LifecycleBase.stop() 
/ en die calls 
	            stopInternal();
/ en dan komen we in de specifiekere 	, bijv	, 
org.apache.catalina.util.StandardSessionIdGenerator(org.apache.catalina.util.SessionIdGeneratorBase).stopInternal() line: 264	

/ Einde Intermezzo

/s
org.apache.catalina.util.StandardSessionIdGenerator(org.apache.catalina.util.LifecycleBase).stop() line: 221	
            stopInternal();
/s
org.apache.catalina.util.StandardSessionIdGenerator(org.apache.catalina.util.SessionIdGeneratorBase).stopInternal() line: 264	
        setState(LifecycleState.STOPPING);
        randoms.clear();
/s
java.util.concurrent.ConcurrentLinkedQueue<E>(java.util.AbstractQueue<E>).clear() line: 147	
        while (poll() != null)
            ;
/ we zien 1 while loop	, 
/t
org.apache.catalina.session.StandardManager.stopInternal() line: 518	
        // Require a new random number generator if we are restarted
        super.stopInternal();
/d
org.apache.catalina.session.StandardManager(org.apache.catalina.util.LifecycleBase).stop() line: 225		/ see Intermezzo hierboven	, 
            stopInternal();
/d
org.apache.catalina.core.StandardContext.stopInternal() line: 5829	
                if (manager != null && manager instanceof Lifecycle &&
                        ((Lifecycle) manager).getState().isAvailable()) {
                    ((Lifecycle) manager).stop();
/d
                // Stop our application listeners
                listenerStop();
/s
org.apache.catalina.core.StandardContext.listenerStop() line: 5148	
        Object listeners[] = getApplicationLifecycleListeners();
listeners	java.lang.Object[2]  (id=2866)	
	[0]	org.apache.tomcat.websocket.server.WsSessionListener  (id=3521)	
	[1]	org.apache.tomcat.websocket.server.WsContextListener  (id=3522)	
/ TODO
/t
org.apache.catalina.core.StandardContext.stopInternal() line: 5831	
                listenerStop();
/d
            } finally{
                unbindThread(old);
/ TODO
            // Finalize our character set mapper
            setCharsetMapper(null);
/ TODO
            // JNDI resources are unbound in CONFIGURE_STOP_EVENT so stop
            // naming resources before they are unbound since NamingResources
            // does a JNDI lookup to retrieve the resource. This needs to be
            // after the application has finished with the resource
            if (namingResources != null) {
                namingResources.stop();
/ TODO
            // Stop the Valves in our pipeline (including the basic), if any
            if (pipeline instanceof Lifecycle &&
                    ((Lifecycle) pipeline).getState().isAvailable()) {
                ((Lifecycle) pipeline).stop();
            }
/ TODO
            // Clear all application-originated servlet context attributes
            if (context != null)
                context.clearAttributes();
/s
org.apache.catalina.core.ApplicationContext.clearAttributes() line: 1586	
        // Create list of attributes to be removed
        ArrayList<String> list = new ArrayList<String>();
        Iterator<String> iter = attributes.keySet().iterator();
        while (iter.hasNext()) {
            list.add(iter.next());
list	java.util.ArrayList<E>  (id=3540)	
	elementData	java.lang.Object[10]  (id=3542)	
		[0]	"org.apache.tomcat.util.scan.MergedWebXml" (id=3543)	
		[1]	"javax.servlet.context.tempdir" (id=3544)	
		[2]	"org.apache.jasper.compiler.TldLocationsCache" (id=3545)	
		[3]	"org.apache.catalina.jsp_classpath" (id=3546)	
		[4]	"org.apache.catalina.resources" (id=3547)	
		[5]	"javax.websocket.server.ServerContainer" (id=3548)	
		[6]	"org.apache.tomcat.JarScanner" (id=3549)	
		[7]	"org.apache.tomcat.InstanceManager" (id=3550)	
	size	8	

        // Remove application originated attributes
        // (read only attributes will be left in place)
        Iterator<String> keys = list.iterator();
        while (keys.hasNext()) {
            String key = keys.next();
            removeAttribute(key);
/t
org.apache.catalina.core.StandardContext.stopInternal() line: 5862	
           // Clear all application-originated servlet context attributes
            if (context != null)
                context.clearAttributes();
/d
            // Stop resources
            resourcesStop();
/s
org.apache.catalina.core.StandardContext.resourcesStop() line: 5308	

this	org.apache.catalina.core.StandardContext  (id=2824)	
	resources	org.apache.naming.resources.ProxyDirContext  (id=3031)	
		dirContext	org.apache.naming.resources.FileDirContext  (id=3674)	
			absoluteBase	"/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/webapps/servlets" (id=3676)	
			base	java.io.File  (id=3690)	
			docBase	"/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build/webapps/servlets" (id=3691)	
	webappResources	org.apache.naming.resources.FileDirContext  (id=3674)	/= resources.dirContext

            if (resources != null) {
                if (webappResources instanceof BaseDirContext) {
                    ((BaseDirContext) webappResources).release();
/ WH NIETS
/ TODO
                // Unregister the cache in JMX
                if (isCachingAllowed()) {
                    String contextName = getName();
                    if (!contextName.startsWith("/")) {
                        contextName = "/" + contextName;
                    }
                    ObjectName resourcesName =
                        new ObjectName(this.getDomain()
                                       + ":type=Cache,host="
                                       + getHostname() + ",context="
                                       + contextName);
                    Registry.getRegistry(null, null)
                        .unregisterComponent(resourcesName);
/ TODO
        this.resources = null;
        return (ok);
/t
org.apache.catalina.core.StandardContext.stopInternal() line: 5864	
            // Stop resources
            resourcesStop();
/d
            Realm realm = getRealmInternal();
null
            if ((loader != null) && (loader instanceof Lifecycle)) {
                ((Lifecycle) loader).stop();
/ TODO

        // Reset application context
        context = null;

        // This object will no longer be visible or used.
        try {
            resetContext();
/s
org.apache.catalina.core.StandardContext.resetContext() line: 5969	
/ TODO
/t
        //reset the instance manager
        setInstanceManager(null);
/t
org.apache.catalina.core.StandardContext(org.apache.catalina.util.LifecycleBase).stop() line: 225	
            stopInternal();
/d
/t
org.apache.catalina.core.ContainerBase$StopChild.call() line: 1589	
        @Override
        public Void call() throws LifecycleException {
            if (child.getState().isAvailable()) {
                child.stop();
/d
            }
            return null;
/t
/ stack
Daemon Thread [localhost-startStop-2] (Suspended)	
	java.util.concurrent.FutureTask<V>.run() line: 262	
	java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) line: 1145	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 615	
	java.lang.Thread.run() line: 745	

/c
/ Tomcat is terminated	, omdat we de server hadden stopped	, 

/ MORGENOCHTEND
/ Start weer,	 hoe pakt server op	?


/ Einde STOP SERVER


/ Einde DEBUG SESSIONS.ser 

/ SESSIONS.ser 

$ vi src/main/java/SessionServlet.java

	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
		
		String name=getServletName();		
		ps.println("name: "+ name);
	}

/ 7	. 

[eric@localhost build]$ pwd
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/output/build
/ Stel er is GEEN
./work/Catalina/localhost/servlets/SESSIONS.ser

/ start server, 
/ geef in browser http://localhost:9090/servlets/session
/ we zien 
null
/ maar daarna is wel het attribute title in de session set	, 

/ we stop server
[eric@localhost build]$ find -name SESSIONS.ser
./work/Catalina/localhost/servlets/SESSIONS.ser

/ als er een attribute in de session is set	, dan onstaat er SESSIONS.ser in het fs	, 
/ als we de page niet bezoeken , en er dus ook niets in de session staat	, dan onstaat SESSIONS.ser NIET	, 

/ start server	, 
/ geef in browser http://localhost:9090/servlets/session
/ we zien 
Foo Bar

/ Dus de session wordt serialized als we tomcat stop	, als er attrs in de session zijn set	,  
/ het is alsof tomcat niet is gestopt geweest	,  
/ want toen we null zagen bij http://localhost:9090/servlets/session,  toen er geen SESSIONS.ser was	, en als we toen  nogmaals http://localhost:9090/servlets/session hadden  gegeven, dan hadden we ook Foo Bar gezien	, 

/ 13	. 

/ als een attr eenmaal in de session staat	, dan blijft hij dat	, we hoeven http://localhost:9090/servlets/session niet steeds te geven	, want de 1ste keer dat we hem gaven	, werd title in session write	, en wordt SESSIONS.ser steeds create als we de server stop, met deze title er in	, 

/ stel er is geen SESSIONS.ser	,
/ start server	,
/ Als we geven in browser http://localhost:9090/servlets/session
/ dan wordt attr title in session set
/ stop server
/ we zien SESSIONS.ser
/ start server 
/ SESSIONS.ser is rm, en we zien Foo Bar
/ stop server
/ we zien SESSIONS.ser
/ start server 
/ SESSIONS.ser is rm, en we zien Foo Bar
...

/ 13.	 

/ voor 
http://localhost:9090/manager/html
/ geldt precies hetzelfde 

/ 7	.  

/////////////////////
/ Als er geen cookie is die refs naar de session die is created uit SESSIONS.ser	, dan zien we ook null als we http://localhost:9090/servlets/session geven	,

/ in devtools 
Disable cache: check

/ stel er is een SESSIONS.ser
/ rm alle localhost cookies
/ start server
/ Geef http://localhost:9090/servlets/session
/ we zien 
null
/ in devtools we zien	, 
Request headers: GEEN cookies

/ stop server,
/ we zien	, 
./work/Catalina/localhost/servlets/SESSIONS.ser
/ deze is altijd new	, dat is altijd zo	, want als er een is, en we start de server,	 dan verdwijnt hij	,
/ we zien in browser 1 cookie	;
Name:	JSESSIONID
Content:	B6F69FAD00EA85AFF2E7537A9BF4EE6C
Domain:	localhost
Path:	/servlets
Send for:	Any kind of connection
Accessible to script:	No (HttpOnly)
Created:	Thursday, April 13, 2017 at 8:40:48 AM
Expires:	When the browsing session ends

/ start server
/ Geef http://localhost:9090/servlets/session
/ we zien 
Request headers: Cookie:JSESSIONID=B6F69FAD00EA85AFF2E7537A9BF4EE6C
/ we zien 
Foo Bar

/ 7	. 

/ er is 1 SESSIONS.ser	, bij verschillende servlets/SESSIONS.ser	,

/ start server
/ Geef http://localhost:9090/servlets/session
/ we zien ,
Foo Bar
/ in devtools	, 
Request headers: Cookie:JSESSIONID=B6F69FAD00EA85AFF2E7537A9BF4EE6C

/ we openen incognito window	, 
/ Geef http://localhost:9090/servlets/session
/ we zien 
null
/ en in devtools:
Request headers: geen cookies
Request reponse:
Set-Cookie:JSESSIONID=73498B650CB4F56C2E72D9B38B4E597E; Path=/servlets; HttpOnly

/ stop server,	 
/ we zien 1 
./work/Catalina/localhost/servlets/SESSIONS.ser

/ start server	,
/ Geef http://localhost:9090/servlets/session
/ we zien 
Foo Bar

/ in incognito	, 
/ Geef http://localhost:9090/servlets/session
/ we zien 
Foo Bar
/ we zien in 
Request headers; Cookie:JSESSIONID=73498B650CB4F56C2E72D9B38B4E597E

/ Maar in de browser bij cookies van localhost zien we alleen B6F69FAD00EA85AFF2E7537A9BF4EE6C	, niet die van het incognito 	,
/ TODO

/ 7	. 

/ 13	. 

/ rm cookies (localhost) in browser	,
/ Geef http://localhost:9090/servlets/session
/ we zien op page
null
/ we zien in devtools	,
Response headers:
Set-Cookie:JSESSIONID=DC427168AE7B52C14C7D6A5F54817386; Path=/servlets; HttpOnly

/ we zien in chrome's settings de cookie
Name:	JSESSIONID
Content:	DC427168AE7B52C14C7D6A5F54817386
Domain:	localhost
Path:	/servlets
Send for:	Any kind of connection
Accessible to script:	No (HttpOnly)
Created:	Friday, April 14, 2017 at 8:05:13 AM
Expires:	When the browsing session end

/ stop server	,
[eric@localhost build]$ find -name SESSIONS.ser
./work/Catalina/localhost/servlets/SESSIONS.ser

/ 13	. 

$ vi SessionServlet.java

	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
		ps.println("<h1>"+session.getAttribute("name")+"</h1>");			<- erbij	, 
		session.setAttribute("name", "Baz");
	}


/ start server
/ deploy	,
/ Geef http://localhost:9090/servlets/session
/ we zien op page
null
null
/ we zien in devtools	,
Request headers:
Cookie:JSESSIONID=DC427168AE7B52C14C7D6A5F54817386												/ vorige	, session is er niet meer	,
Response headers:
Set-Cookie:JSESSIONID=FDBF9572D7A79361CA93F11AFF851FEC; Path=/servlets; HttpOnly

/ we zien in settings,
Name:	JSESSIONID
Content:	FDBF9572D7A79361CA93F11AFF851FEC
Domain:	localhost
Path:	/servlets
Send for:	Any kind of connection
Accessible to script:	No (HttpOnly)
Created:	Friday, April 14, 2017 at 8:16:43 AM
Expires:	When the browsing session ends

/ we zien dat de DC427168AE7B52C14C7D6A5F54817386 in chrome rm is
/ TODO

/ controle	,

/ we deploy nog een keer	, 

 
/ Geef http://localhost:9090/servlets/session
/ we zien op page
null
null
/ we zien in devtools	,
Request headers:
Cookie:JSESSIONID=FDBF9572D7A79361CA93F11AFF851FEC
Response headers:
Set-Cookie:JSESSIONID=7B78F8F9641C6CDCE6705FA72F277190; Path=/servlets; HttpOnly

/ we zien in settings,
Name:	JSESSIONID
Content:	7B78F8F9641C6CDCE6705FA72F277190
Domain:	localhost
Path:	/servlets
Send for:	Any kind of connection
Accessible to script:	No (HttpOnly)
Created:	Friday, April 14, 2017 at 8:40:55 AM
Expires:	When the browsing session ends

/ Inderdaad	, in chrome is FDBF9572D7A79361CA93F11AFF851FEC rm	, 
/ TODO

/ 13	. 

/ HttpSession.invalidate

/ Iedere response geeft een nieuwe cookie	,

$ vi SessionServlet.java

	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
		ps.println("<h1>"+session.getAttribute("name")+"</h1>");
		session.setAttribute("name", "Baz");
		
		session.invalidate();												<-
	}

/ de server runs nog	, 
/ deploy servlets app	, 

/ Geef http://localhost:9090/servlets/session
/ we zien op page
null
null
/ we zien in devtools	,
Request headers:
Cookie:JSESSIONID=7B78F8F9641C6CDCE6705FA72F277190							/ vorige	, 
Response headers:
Set-Cookie:JSESSIONID=957A8F2AA4C56CE28E5B35BCA76C8A7A; Path=/servlets; HttpOnly

/ we zien in settings,
Name:	JSESSIONID
Content:	957A8F2AA4C56CE28E5B35BCA76C8A7A
Domain:	localhost
Path:	/servlets
Send for:	Any kind of connection
Accessible to script:	No (HttpOnly)
Created:	Friday, April 14, 2017 at 8:51:20 AM
Expires:	When the browsing session ends

/ geef nog een keer	http://localhost:9090/servlets/session
/ we zien op page
null
null
/ we zien in devtools	,
Request headers:
Cookie:JSESSIONID=957A8F2AA4C56CE28E5B35BCA76C8A7A					/ vorige	,
Response headers:
Set-Cookie:JSESSIONID=DADE546DB8F1C2336CAFB4C4C323F623; Path=/servlets; HttpOnly

/ we zien in settings,
Name:	JSESSIONID
Content:	DADE546DB8F1C2336CAFB4C4C323F623
Domain:	localhost
Path:	/servlets
Send for:	Any kind of connection
Accessible to script:	No (HttpOnly)
Created:	Friday, April 14, 2017 at 8:55:27 AM
Expires:	When the browsing session ends

/ 13	. 

/ HttpSession.setMaxInactiveInterval

/ de 1ste response geeft nieuwe cookie	, (in request staat vorige cookie, die niet meer in chrome is TODO)
/ we zien 
null
null
/ als de 2de response binnen de minuut	, dan geeft response geen nieuwe cookie	, 
/ we zien 
Foo Bar
Baz
/ als de 3de response later dan 1 minuut	, geeft de response een nieuwe cookie (in in de request staat de oude cookie)
/ we zien 	
null
null

$ vi SessionServlet.java
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session=req.getSession(true);
		PrintWriter ps=resp.getWriter();
		ps.println("<h1>"+session.getAttribute("title")+"</h1>");
		session.setAttribute("title", "Foo Bar");
		ps.println("<h1>"+session.getAttribute("name")+"</h1>");
		session.setAttribute("name", "Baz");
		
		session.setMaxInactiveInterval(60);								<-
	}

/ server runs nog	, 
/ deploy servlets app	, 
/ geef http://localhost:9090/servlets/session
/ we zien op page
null
null
/ we zien in devtools	,
Request headers:
Cookie:	JSESSIONID=DADE546DB8F1C2336CAFB4C4C323F623
Response headers:
Set-Cookie:JSESSIONID=9B1594F5717D71E604622E2DBC2A1A01; Path=/servlets; HttpOnly

/ we zien in settings,

/ Geef opnieuw http://localhost:9090/servlets/session
/ we zien op page 
Foo Bar
Baz
/ we zien in devtools	,
Response headers:
Set-Cookie:JSESSIONID=9B1594F5717D71E604622E2DBC2A1A01; Path=/servlets; HttpOnly

/ wacht 1 minuut	, 
/ Geef opnieuw http://localhost:9090/servlets/session
/ we zien op page 
null
null
/ we zien in devtools	,
Request headers:
Cookie:JSESSIONID=9B1594F5717D71E604622E2DBC2A1A01
Response headers:
Set-Cookie:JSESSIONID=C146DDB6F2AD9F393E964EE268151FF6; Path=/servlets; HttpOnly

/ 13	. 

/ Set time session	, 

/ Lees LOG_wicket.txt	,

package org.apache.catalina.connector;
public class Request
    implements HttpServletRequest {

    protected Session doGetSession(boolean create) {
        session = manager.createSession(sessionId);

        // Creating a new session cookie based on that session
        if ((session != null) && (getContext() != null)
               && getContext().getServletContext().
                       getEffectiveSessionTrackingModes().contains(
                               SessionTrackingMode.COOKIE)) {
            Cookie cookie =
                ApplicationSessionCookieConfig.createSessionCookie(
                        context, session.getIdInternal(), isSecure());

            response.addSessionCookieInternal(cookie);


/ Lees	, 
http://stackoverflow.com/questions/4933143/jsessionid-cookie-with-expiration-date-in-tomcat

$ vi web.xml

<session-config>
    <session-timeout>525600</session-timeout> 
    <cookie-config>
        <max-age>31536000</max-age>
    </cookie-config>
</session-config>

/ Of in @WebServlet
/ TODO


/ Einde SESSIONS.ser 




/ TOMCAT SECURITY

/ 7	. 

/ ipv	, 
http://localhost:9090/servlets/session
/ Geef 
http://localhost:9090/manager

/ We zien een login window 
/ TODO Ga na hoe dat werkt in tomcat	, 

[eric@localhost apache-tomcat-7.0.76-src]$ less output/build/webapps/manager/WEB-INF/web.xml 

<web-app ...> 

  <!-- Define a Security Constraint on this Application -->
  <!-- NOTE:  None of these roles are present in the default users file -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>HTML Manager interface (for humans)</web-resource-name>
      <url-pattern>/html/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
       <role-name>manager-gui</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Text Manager interface (for scripts)</web-resource-name>
      <url-pattern>/text/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
       <role-name>manager-script</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>JMX Proxy interface</web-resource-name>
      <url-pattern>/jmxproxy/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
       <role-name>manager-jmx</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Status interface</web-resource-name>
      <url-pattern>/status/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
       <role-name>manager-gui</role-name>
       <role-name>manager-script</role-name>
       <role-name>manager-jmx</role-name>
       <role-name>manager-status</role-name>
    </auth-constraint>
  </security-constraint>

  <!-- Define the Login Configuration for this Application -->
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>Tomcat Manager Application</realm-name>
  </login-config>

  <!-- Security roles referenced by this web application -->
  <security-role>
    <description>
      The role that is required to access the HTML Manager pages
    </description>
    <role-name>manager-gui</role-name>
  </security-role>
  <security-role>
    <description>
      The role that is required to access the text Manager pages
    </description>
    <role-name>manager-script</role-name>
  </security-role>
  <security-role>
    <description>
      The role that is required to access the HTML JMX Proxy
    </description>
    <role-name>manager-jmx</role-name>
  </security-role>
  <security-role>
    <description>
      The role that is required to access to the Manager Status pages
    </description>
    <role-name>manager-status</role-name>
  </security-role>

  <error-page>
    <error-code>401</error-code>
    <location>/WEB-INF/jsp/401.jsp</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/WEB-INF/jsp/403.jsp</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/jsp/404.jsp</location>
  </error-page>

</web-app>

 


/ Einde TOMCAT SECURITY

/ SESSIONS



/ USE TOMCAT

/ 7	. 

/ JBossTools verwacht tomcat 7	, 
/ we hebben server config cp voor 

[eric@localhost apache-tomcat-7.0.76]$ pwd
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76
[eric@localhost apache-tomcat-7.0.76]$ less conf/server.xml 
    <Connector port="9090" protocol="HTTP/1.1"							<- 9090
               connectionTimeout="20000"
               redirectPort="8443" />

[eric@localhost apache-tomcat-7.0.76]$ less bin/catalina.sh 
JPDA_ADDRESS=9966														/ TODO

[eric@localhost apache-tomcat-7.0.76]$ less conf/tomcat-users.xml 
    <role rolename="manager-gui"/>
    <role rolename="manager-script"/>
    <user username="tomcat" password="s3cret" roles="manager-script,manager-gui"/>
</tomcat-users>

/ In eclipse, in server configuration
Server locations
Use tomcat installation : check															<-


/ start op de command line	, 
[eric@localhost apache-tomcat-7.0.76]$ bin/catalina.sh jpda run
Using CATALINA_BASE:   /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76
Using CATALINA_HOME:   /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76
Using CATALINA_TMPDIR: /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/temp
Using JRE_HOME:        /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71-2.5.3.0.fc20.x86_64
Using CLASSPATH:       /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/bin/bootstrap.jar:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/bin/tomcat-juli.jar
Listening for transport dt_socket at address: 9966

/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71-2.5.3.0.fc20.x86_64/bin/java 
	-Djava.util.logging.config.file=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/conf/logging.properties 
	-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager 
	-Djdk.tls.ephemeralDHKeySize=2048 
	-Djava.endorsed.dirs=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/endorsed 
	-Dcatalina.base=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76 
	-Dcatalina.home=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76 
	-Djava.io.tmpdir=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/temp 
	-agentlib:jdwp=transport=dt_socket,address=9966,server=y,suspend=n 
	-classpath /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/bin/bootstrap.jar:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/bin/tomcat-juli.jar 
org.apache.catalina.startup.Bootstrap start

/ als we tomcat start in eclipse	, 
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71-2.5.3.0.fc20.x86_64/bin/java 
	-Dcatalina.base=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76 
	-Dcatalina.home=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76 
	-Dwtp.deploy=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/wtpwebapps 
	-Djava.endorsed.dirs=/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/endorsed 
	-Dfile.encoding=UTF-8 
	-agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:60351 
	-classpath /home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/bin/bootstrap.jar:/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76/bin/tomcat-juli.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71-2.5.3.0.fc20.x86_64/lib/tools.jar 
org.apache.catalina.startup.Bootstrap start

/ Als we NIET bij Server locations	, dan  
	-Dcatalina.base=/home/eric/Devel/Java/Eclipse/eclipse-jee-test/workspace-wicket7_7/.metadata/.plugins/org.eclipse.wst.server.core/tmp0 
/ en dan geeft localhost:9090 NIETS	,

/ Wat is deploy path	, dus -Dwtp.deploy	?
/ TODO

/ we moeten in server config bij  , open launch configuration, source
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.76-src/java
Search subfolders															<-





/ Einde USE TOMCAT

/ ECLIPSE

[eric@localhost Eclipse]$ mkdir eclipse-jee-test-8

[eric@localhost eclipse-jee-test-8]$ pwd
/home/eric/Devel/Java/Eclipse/eclipse-jee-test-8
[eric@localhost eclipse-jee-test-8]$ tar xvzf ~/Downloads/eclipse-jee-neon-1-linux-gtk-x86_64.tar.gz 

[eric@localhost bin]$ cat env-eclipse-neon.sh 
#!/usr/bin/bash
export JAVA_HOME=$HOME/Devel/Java/jdk1.8.0_121			/ TODO export
PATH=$JAVA_HOME:$PATH

/ use	, 
$ . ~/bin/env-eclipse-neon.sh


/ Einde ECLIPSE

/ 7	.

/ Lees over jconsole & memory leaks	, 
http://programtalk.com/java/jconsole-guide-for-simple-connection/



