/ HIBERNATE MAPPINGS


/ workspace

/ proj. hibernate_mappings

/ 7	. 

/ N_1

public class Club {
    private long id;
    private String name;

public class Sporter {
    private long id;
    private String name;
    private Club club;

<class name="Club" table="club2" >
	<id name="id" column="id_" >	<generator class="increment"/> </id>
	<property name="name" column="name_" />

<class name="Sporter" table="sporter2" >
	<id name="id" column="id_" >	<generator class="increment"/> </id>
	<property name="name" column="name_" /> 
	<many-to-one name="club" column="club_"/>	

$ vi MainN_1.java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

		  	Sporter sporter=new Sporter("Sporter");
		  	Club club=new Club("Club");
		  	sporter.setClub(club);

		  	session.save(club); // moet eerst, 
		  	session.save(sporter);// anders hier TransientPropertyValueException
		  	session.flush();
/ OK
		  	session.beginTransaction().commit();
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();


/ 1313
			Club club2=new Club("Club2");
			sporter.setClub(club2);
			session2.update(sporter);
		  	session2.flush();

/ ERR
/ -> update sporter	 in SQL	,
/ sporter staat in session2	, en club2 niet	,  dat hoeft ook niet, want hij gaat alleen table sporter update	,

////////////////////////////////////////////////////////////////
/ 1313	

			Club club2=new Club("Club2");
			session2.save(club2);
			sporter.setClub(club2);
			session2.update(sporter);
		  	session2.flush();
		  	session2.beginTransaction().commit();
/ of	,
			session2.update(sporter);
		  	session2.flush();
		  	session2.beginTransaction().commit();
/ OK
/ de save geeft club2 id 2	, en geeft een insert bij flush	, 
/ de update geeft een update bij flush	, deze checks of club2 een id heeft	: of dit nou nieuw is of oud (bij 2de oud, bij 1ste nieuw)	, H verwacht dat deze ook in de db is als de update (bij flush) inderdaad execs	)
/ dus de SQL save en update  staan los van elkaar	, H. ziet dat club2 een id heeft	, en dus is hij er in de database denkt H, en dus is de update OK	,
///////////////////////////////////////////////////////////////


/ Intermezzo

/ H. haalt uit het obj de id	, 
/ ook al zit club 1 niet in de session	, het feit dat club 1 bestaat , daarmee kan update sporter met club 1  	,

/s
	SingleTableEntityPersister(AbstractEntityPersister).getIdentifier(Object, SessionImplementor) line: 4746	
		return getEntityTuplizer().getIdentifier( entity, session );

	SingleTableEntityPersister(AbstractEntityPersister).isTransient(Object, SessionImplementor) line: 4465	
		if ( canExtractIdOutOfEntity() ) {
			id = getIdentifier( entity, session );

	ForeignKeys.isTransient(String, Object, Boolean, SessionImplementor) line: 243	
		// let the persister inspect the instance to decide
		final EntityPersister persister = session.getEntityPersister( entityName, entity );
		isUnsaved = persister.isTransient( entity, session );

	ForeignKeys.getEntityIdentifierIfNotUnsaved(String, Object, SessionImplementor) line: 293	
				if ( isTransient( entityName, object, Boolean.FALSE, session ) ) {

	ManyToOneType(EntityType).getIdentifier(Object, SessionImplementor) line: 537	
		if ( isReferenceToPrimaryKey() || uniqueKeyPropertyName == null ) {
			return ForeignKeys.getEntityIdentifierIfNotUnsaved( getAssociatedEntityName(), value, session ); //tolerates nulls

	ManyToOneType.nullSafeSet(PreparedStatement, Object, int, boolean[], SessionImplementor) line: 165	
		getIdentifierOrUniqueKeyType( session.getFactory() )
				.nullSafeSet( st, getIdentifier( value, session ), index, settable, session );

	SingleTableEntityPersister(AbstractEntityPersister).dehydrate(Serializable, Object[], Object, boolean[], boolean[][], int, PreparedStatement, SessionImplementor, int, boolean) line: 2843	
		for ( int i = 0; i < entityMetamodel.getPropertySpan(); i++ ) {
				getPropertyTypes()[i].nullSafeSet( ps, fields[i], index, includeColumns[i], session );

	SingleTableEntityPersister(AbstractEntityPersister).update(Serializable, Object[], Object[], Object, boolean[], int, Object, Object, String, SessionImplementor) line: 3248	
				//Now write the values of fields onto the prepared statement
				index = dehydrate( id, fields, rowId, includeProperty, propertyColumnUpdateable, j, update, session, index, true );

	SingleTableEntityPersister(AbstractEntityPersister).updateOrInsert(Serializable, Object[], Object[], Object, boolean[], int, Object, Object, String, SessionImplementor) line: 3183	
	SingleTableEntityPersister(AbstractEntityPersister).update(Serializable, Object[], int[], boolean, Object[], Object, Object, Object, SessionImplementor) line: 3525	
	EntityUpdateAction.execute() line: 159	
	ActionQueue.executeActions(ExecutableList<E>) line: 463	
	ActionQueue.executeActions() line: 349	
	DefaultFlushEventListener(AbstractFlushingEventListener).performExecutions(EventSource) line: 350	
	DefaultFlushEventListener.onFlush(FlushEvent) line: 56	
	SessionImpl.flush() line: 1222	
	MainN_1.testBasicUsage() line: 130	
	MainN_1.<init>() line: 76	
	MainN_1.main(String[]) line: 70	




/ Einde Intermezzo

/ 1313	.
//			Club club2=new Club("Club2");
//			sporter.setClub(club2);
			session2.update(sporter);
		  	session2.flush();
		  	session2.beginTransaction().commit();
/ OK	, 
/ er staat geen club in session2	, en dat hoeft ook niet	, 
/ we kunnen met psql sporter2.club_=null set	, en dan  na de commit zien we dat sporter2.club_=1	,
Hibernate: update sporter2 set name_=?, club_=? where id_=?
HibernateLog --> 13:01:19 TRACE org.hibernate.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Sporter]
HibernateLog --> 13:01:19 TRACE org.hibernate.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
HibernateLog --> 13:01:19 TRACE org.hibernate.type.descriptor.sql.BasicBinder - binding parameter [3] as [BIGINT] - [1]

/ als we ook delete club2	, dan pg? ERR	, want de fk 1 wijst naar niet bestaande row in club2	, 

/ 1313	.

/ Als we cascade,  
<class name="Sporter" table="sporter2" >
	<many-to-one name="club" column="club_" not-null="false" cascade="true"/>	

/ dan hoeven we niet session.save(club)	, en 	,
			Club club2=new Club("Club2");
			sporter.setClub(club2);
			session2.update(sporter);
		  	session2.flush();
/ OK

/ 7	.

/ N-1 bidir

/ 1313	.

/////////////////////////
/ in club's mapping : <set inverse="true"><key column="club_"></set>
/ we hoeven dan alleen sporter.setClub	, we zien in de sporter_ table dat de club_ is set	, 

/ als we in club's mapping : <set inverse="false"><key column="club2_"><?set>	, dan krijgt de sporter_ table een extra column bluc2_	, en moeten we in MainN_1_bidir ook club.getSporters().add(sporter)	, anders komt er geen value in column club2_	,   
/////////////////////

<class name="Club" table="club2" >

	<id name="id" column="id_"	>	
		<generator class="increment"/>
	</id>
	
	<property name="name" column="name_" />
	
	<set name="sporters" inverse="true" >
		<key column="club_"/>
		<one-to-many class="Sporter"/>
	</set>
/ erbij	,

<class name="Sporter" table="sporter2" >

	<id name="id" column="id_" >	
		<generator class="increment"/>
	</id>
	
	<property name="name" column="name_" />
	
	<many-to-one name="club" column="club_" />
/ Onveranderd	,

public class Club {
    private long id;
    private String name;
    private Set<Sporter>sporters=new HashSet<Sporter>();
   ... 
	public Set<Sporter> getSporters(){
		return sporters;
	}
	public void setSporters(Set<Sporter>sporters){
		this.sporters=sporters;
	}
}
/ MOET setSporters 	, anders ERR	,

$ vi MainN_1java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

		  	Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	sporter.setClub(club);
		  	sporter2.setClub(club);

		  	session.save(club); // moet eerst, 
		  	session.save(sporter);// anders hier TransientPropertyValueException
		  	session.save(sporter2);
		  	session.flush();
		  	session.beginTransaction().commit();
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
			
			Club club2=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters=club2.getSporters();

/ 1313	. 

/ Waar is bidir in N-1-bidir voor	?

$ vi MainN_1.java

		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
			
			Club club2=(Club)session2.get(Club.class,1l);
			System.out.println(club2)	;
my.test.own.hibernate_mappings.Club@442b2df0
/ altijd, dat is N_1
			Set<Sporter>sporters=club2.getSporters();
			System.out.println(sporters)	;
/ Als we in Club's mapping	,
	<set 
		name="sporters"
		inverse="true"
	>
		<key column="club_" not-null="true"/>
		<one-to-many class="Sporter"/>
	</set>
/ dan is sporters=
[my.test.own.hibernate_mappings.Sporter@79681a61, my.test.own.hibernate_mappings.Sporter@219c148c]

/ Maar als we deze <set/> NIET	, dan is sporters=[],

/ WH is inverse="false" de default	, 
/ TODO

/ 7	.


/ 1-N bidir,

/ Maar ook 1-N & N-1 bidir	,

/ we maken in de sporter2 table 2 fk's	,  club_ en club2_	, 
/ we hebben beide fk's not-null="true"	,
/ we hebben in Sporter's <many-to-one> NIET insert="false" update="false"	,
/ we moeten in Main1_N aan beide kanten insert	, 
		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
		  	sporter.setClub(club);
		  	sporter2.setClub(club);

/ we moeten eerst club save, daarna sporter, sporter2	,
/ TODO

/ 1313

<class name="Club" table="club" >

	<id name="id" column="id_"	>	
		<generator class="increment"/>
	</id>
	
	<property name="name" column="name_" />
	
	<set 
		name="sporters"
		inverse="false"
	>
		<key column="club_" not-null="true"/>				/ fk aan de andere kant, in sporter tbl	,
		<one-to-many class="Sporter"/>
	</set>


<class name="Sporter" table="sporter" >

	<id name="id" column="id_" >	
		<generator class="increment"/>
	</id>
	
	<property name="name" column="name_" />
	
	<many-to-one 
		name="club"
		column="club2_"
		not-null="true"
	>
	</many-to-one>

$ vi Main1_N.java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
		  	sporter.setClub(club);					/ voor club2_ 	, aan de <many-to-one/> kant	, 
		  	sporter2.setClub(club);					
		  	
		  	session.save(club); 		  	
		  	session.save(sporter);
		  	session.save(sporter2);
	  	
		  	session.flush();
		  	session.beginTransaction().commit();
  	
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
			
			Club club2=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters=club2.getSporters();
			for(Sporter sporter3:sporters){
				Club club3=sporter3.getClub();
				if(club3==null)System.out.println("null");
				else System.out.println(club3.getName());
			}

/ 1313	.

/ Sporter's mapping	,
	<many-to-one 
		name="club"
		column="club2_"
		
		insert="false"
		update="false"
	>
/ OK	,
/ we zien dat de club2_ column NULL's bevat	, ondanks dat we in Main1_N sporter.setClub, sporter2.setClub doen	, deze laatsten doen dus niets	,

/ 1313	. 

/ Als we in Sporter's mapping <many-to-one column="club_"/> ook naar club_, dan kunnen we wel not-null="true"	, want de andere kant doet de inserts	, 
/ de inserts komen in Main1_N van club.getSporters().add	, de sporter.setClub, sporter2.setClub doet niets	,

/ 1313	.  

Club's 
	<set 
		name="sporters"
		inverse="false"
	>
		<key column="club_" not-null="true"/>
		<one-to-many class="Sporter"/>
	</set>

Sporter's	,
	<many-to-one 
		name="club"
		column="club_"
		not-null="true"
	>
	</many-to-one>
/ ERR
/ als we in Club's mapping  not-null="true" in  <key column="club_" not-null="true"/> 	, dan moeten we in Sporter's mapping <many-to-one insert="false" update="false"	, 
/ WH: als <key column="club_" not-null="true"/>, dan maakt deze kant een value in de column club_ , en mag de andere kant dat niet doen	, of veranderen	, dus insert="false" update="false"	,

/ 1313	. 

/ we hadden dat in 1ste instantie een null wordt insert in club_ of club2_ 	, en daarna owerwrite 	, als je dan not-null="true" hebt, dan valt hij daarover	, 
/ TODO

/ 1313	. 

/ wat is betekenis van bidir in 1-N?

/ Als we NIET in Sporter's mapping	,
	<many-to-one 
		name="club"
		column="club_"
		not-null="true"
		insert="false"
		update="false"

	>
	</many-to-one>
/ dan 	,
			Club club2=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters=club2.getSporters();
			for(Sporter sporter3:sporters){
				System.out.println(sporter3);
			}
my.test.own.hibernate_mappings.Sporter@720ad2c9
my.test.own.hibernate_mappings.Sporter@2494c49d
/ Dit is 1-N	, bidir of niet	,

			Sporter sporter3=(Sporter)session2.get(Sporter.class, 1l);
			Club club3=sporter3.getClub();
			System.out.println(club3);
null											/ als we NIET bidir		
/ anders 
Club											/ als we bidir	,

/ 7	.

/ 1_N + join 

/ de relaties verschijnen in een aparte table, de instances blijven onveranderd	,

/ we use Main1_N	,

/ 13

/ 1_N unidir join	,

/ Club	,
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" unique="true"/>
		
	</set>

/ Sporter
/ GEEN <many-to-one/>	, alleen <id/> en <property/> voor name	,

$ vi Main1_N.java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
//		  	sporter.setClub(club);
//		  	sporter2.setClub(club);
		  	
		  	session.save(club); 		  	
		  	session.save(sporter);
		  	session.save(sporter2);
	  	
		  	session.flush();
		  	session.beginTransaction().commit();
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
			
			Club club2=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters=club2.getSporters();
			for(Sporter sporter3:sporters){
				System.out.println(sporter3);
			}
			
			Sporter sporter3=(Sporter)session2.get(Sporter.class, 1l);
			Club club3=sporter3.getClub();
			System.out.println(club3);

/ we zien	,
my.test.own.hibernate_mappings.Sporter@3ea102e8
my.test.own.hibernate_mappings.Sporter@50f9c7a0
null
/ want unidir	,

/ we zien	,

foo=> \d club
             Table "public.club"
 Column |          Type          | Modifiers 
--------+------------------------+-----------
 id_    | bigint                 | not null
 name_  | character varying(255) | 
Indexes:
    "club_pkey" PRIMARY KEY, btree (id_)
Referenced by:
    TABLE "club_sporters" CONSTRAINT "fk_gmq364l55apelblrugu0qau57" FOREIGN KEY (club_) REFERENCES club(id_)

foo=> \d sporter
           Table "public.sporter"
 Column |          Type          | Modifiers 
--------+------------------------+-----------
 id_    | bigint                 | not null
 name_  | character varying(255) | 
Indexes:
    "sporter_pkey" PRIMARY KEY, btree (id_)
Referenced by:
    TABLE "club_sporters" CONSTRAINT "fk_328ocd02cikea2g8x5ujiqdv8" FOREIGN KEY (sporter_) REFERENCES sporter(id_)

foo=> \d club_sporters
 Table "public.club_sporters"
  Column  |  Type  | Modifiers 
----------+--------+-----------
 club_    | bigint | not null
 sporter_ | bigint | not null
Indexes:
    "club_sporters_pkey" PRIMARY KEY, btree (club_, sporter_)
    "uk_328ocd02cikea2g8x5ujiqdv8" UNIQUE CONSTRAINT, btree (sporter_)
Foreign-key constraints:
    "fk_328ocd02cikea2g8x5ujiqdv8" FOREIGN KEY (sporter_) REFERENCES sporter(id_)
    "fk_gmq364l55apelblrugu0qau57" FOREIGN KEY (club_) REFERENCES club(id_)

/ we zien de relaties in de club_sporters 	, 

foo=> select*from club;
 id_ | name_ 
-----+-------
   1 | Club
(1 row)

foo=> select*from sporter;
 id_ |  name_   
-----+----------
   1 | Sporter
   2 | Sporter2
(2 rows)

foo=> select*from club_sporters;
 club_ | sporter_ 
-------+----------
     1 |        2
     1 |        1
(2 rows)

/ Dus bij 1-N moeten voor join table 
			<one-to-many class="Sporter"/>
/ vervangen door	,
		<many-to-many class="Sporter" column="sporter_" unique="true"/>


/  13	.

/ 1_N join bidir	,

/ Sporter's mapping	,

	<join 
		table="club_sporters"
		inverse="true"
		optional="true"
	>
		<key column="sporter_"/>
		<many-to-one 
			name="club"
			column="club_"
			not-null="true"
		/>
	</join>

/ Dus pak de <many-to-one/> in een <join/>	,

/ Vervangt	,  
	<many-to-one 
		name="club"
		column="club_"
		not-null="true"
		insert="false"
		update="false"

	>
	</many-to-one>

/ Dus die insert="false", update="false" verdwijnen	,

/ We doen in dezelfde Main1_N	,

			Club club2=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters=club2.getSporters();
			for(Sporter sporter3:sporters){
				System.out.println(sporter3);
			}
			Sporter sporter3=(Sporter)session2.get(Sporter.class, 1l);
			Club club3=sporter3.getClub();
			System.out.println(club3);

/ we zien	,
my.test.own.hibernate_mappings.Sporter@3efeb738
my.test.own.hibernate_mappings.Sporter@4a0d8a7b
/ altijd
my.test.own.hibernate_mappings.Club@7cb36b17
/ Nu, omdat bidir	,

/ 7	. 

/ N-1 unidir join

Sporter	,
	<join 
		table="club_sporters"
		inverse="false"
		optional="true"
	>
		<key column="sporter_"/>
		<many-to-one 
			name="club"
			column="club_"
			not-null="true"
		/>
	</join>

Club,
/ GEEN <set/>

$ vi MainN_1.java
			Club club2=(Club)session2.get(Club.class,1l);
			System.out.println(club2);
			
			Set<Sporter>sporters=club2.getSporters();
			System.out.println(sporters)	;

/ we zien	,

my.test.own.hibernate_mappings.Club@420630d8
[]


/ 13	. 

/ N-1 bidir join

/ we verwisselen inverse in join en set	,

Club
	<set 
		name="sporters"
		inverse="true"	
		table="club_sporters"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" unique="true"/>
		
	</set>

Sporter
	<join 
		table="club_sporters"
		inverse="false"
		optional="true"
	>
		<key column="sporter_"/>
		<many-to-one 
			name="club"
			column="club_"
			not-null="true"
		/>
	</join>

MainN_1
			Club club2=(Club)session2.get(Club.class,1l);
			System.out.println(club2);
			
			Set<Sporter>sporters=club2.getSporters();
			System.out.println(sporters)	;

/we zien	,

my.test.own.hibernate_mappings.Club@55baee33
...
[my.test.own.hibernate_mappings.Sporter@96a687b, my.test.own.hibernate_mappings.Sporter@28f16811]

/ 7	.

/ Many-to-many 

/ Nu automatisch join tables	, 

/ 13	. 

/ many-to-many , unidir	,

Club
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" />
	</set>

$ vi MainM_N.java

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);

		  	session.save(club); 		  	
		  	session.save(sporter);
		  	session.save(sporter2);
	  	
		  	session.flush();
		  	session.beginTransaction().commit();
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
			
			Club club2=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters=club2.getSporters();
			for(Sporter sporter3:sporters){
				System.out.println(sporter3);
			}
			
			Sporter sporter3=(Sporter)session2.get(Sporter.class, 1l);
			Club club3=sporter3.getClub();
			System.out.println(club3);

/ we zien	,

my.test.own.hibernate_mappings.Sporter@44aeddd7
my.test.own.hibernate_mappings.Sporter@3466717b
/ altijd	,
null
/ want unidir	,

/ 13	. 

/ M_N bidir

/ Let op	,

/ Verschil M_N bidir en M_1 bidir	,

/ Bij N_1 bidir kunnen beide kanten inverse="true" zijn ( een ervan is het)	, de ene kant is een <set/> 	, de andere een <join/>	,
/ Het ene type heeft een Set<Other>	, de andere een Other	,

/ Bij M_N bidir zijn kinnen beide kanten inverse="true" zijn, en zijn beide <set/>	,
/ Beide types hebben een Set<Other>	,

/ de data om te persist kan maar aan 1 kant, dat is altijd zo	,

/ De query is dus een andere	,
/ als de owning site altijd een Set<Other> is	, dan vraag de bij N_1 via Other, bij M_N via Set<Other>	,

$ vi Main1_N.java
			Sporter sporter3=(Sporter)session2.get(Sporter.class, 1l);
			Club club3=sporter3.getClub();
			System.out.println(club3);

$ vi MainM_N.java
			Sporter sporter4=(Sporter)session2.get(Sporter.class, 1l);
			Set<Club>clubs4=sporter4.getClubs();
			for(Club club4:clubs4){
				System.out.println(club4);
			}

/ 1313

$ vi Sporter.java
    private Set<Club>clubs=new HashSet<Club>();

Club
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" />
	</set>

Sporter
	<set 
		name="clubs"
		inverse="true"	
		table="club_sporters"
	>
		<key column="sporter_" not-null="true"/>
		<many-to-many class="Club" column="club_" />
	</set>

$ vi MainM_N.java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

			Club club=new Club("Club");
			Club club2=new Club("Club2");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter2);
		  	club2.getSporters().add(sporter);
		  	club.getSporters().add(sporter);
		  	club2.getSporters().add(sporter2);
/ in db	,
		  	
		  	session.save(club); 		
		  	session.save(club2); 	
		  	session.save(sporter);
		  	session.save(sporter2);
	  	
		  	session.flush();
		  	session.beginTransaction().commit();
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
			
			Club club3=(Club)session2.get(Club.class,1l);
			Set<Sporter>sporters3=club3.getSporters();
			for(Sporter sporter3:sporters3){
				System.out.println(sporter3);
			}
			
			Sporter sporter4=(Sporter)session2.get(Sporter.class, 1l);
			Set<Club>clubs4=sporter4.getClubs();
			for(Club club4:clubs4){
				System.out.println(club4);
			}

/ 7	. 

/ N_1 bidir	, 
/ we create new club, en set deze op bestaande sporters	, we save de nieuwe club, en update sporters	, 
/ OK

Club
	<set 
		name="sporters"
		inverse="true"
	>
		<key column="club_" not-null="true"/>
		<one-to-many class="Sporter"/>
	</set>

Sporter
	<many-to-one 
		name="club"
		column="club_"
		not-null="true"
	/>

$ vi MainN_1_add.java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

		  	Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	sporter.setClub(club);
		  	sporter2.setClub(club);
		  	
		  	session.save(club); 
		  	session.save(sporter);
		  	session.save(sporter2);
		  	session.flush();
		  	session.beginTransaction().commit();
		  	
		  	session2=sessionFactory.openSession();
			PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();

			Club club2=new Club("Club");
			sporter.setClub(club2);
			sporter2.setClub(club2);

			session2.save(club2);
			session2.update(sporter);
			
			session2.flush();
			session2.beginTransaction().commit();
			
			
			session3=sessionFactory.openSession();
			
			Club club3=(Club)session3.get(Club.class,2l);
			System.out.println(club3);			
			Set<Sporter>sporters3=club3.getSporters();
			System.out.println(sporters3)	;
			
			session3.beginTransaction().commit();

/ we zien,	
foo=> select*from sporter;
 id_ |  name_   | club_ 
-----+----------+-------
   2 | Sporter2 |     1
   1 | Sporter  |     2
(2 rows)

/ we zien	,
my.test.own.hibernate_mappings.Club@584eff2
[my.test.own.hibernate_mappings.Sporter@28d0037]
/ Klopt	, in club2 zit 1 shipment order	.

/ 1_N bidir	, 
/ we create new club, en set deze op bestaande sporters	, we save de nieuwe club, en update sporters	, 
/ OK

/ 7	. 


$ vi Main1_N_add

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
		  	
		  	session.save(club); 		  	
		  	session.save(sporter);		/ MOET	, anders ERR .flush hieronder: org.hibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing: my.test.own.hibernate_mappings.Sporter
		  	session.save(sporter2);
	  	
		  	session.flush();
		  	session.beginTransaction().commit();
	  	
		  	session2=sessionFactory.openSession();			
		  	PersistenceContext context2=((SessionImplementor)session2).getPersistenceContext();
		  	
		  	Club club2=new Club("Club2");
		  	club2.getSporters().add(sporter);
		  	club2.getSporters().add(sporter2);
		  	session2.save(club2);				/ OK, verschil transient en detached objects	,
		  	session2.flush();
		  	session2.beginTransaction().commit();
		  	
		  	session3=sessionFactory.openSession();
			PersistenceContext context3=((SessionImplementor)session3).getPersistenceContext();

			Club club3=(Club)session2.get(Club.class,2l);
			Set<Sporter>sporters3=club3.getSporters();
			for(Sporter sporter3:sporters3){
				System.out.println(sporter3);
			}

/ we zien dat we moeten .save(sporter) in de 1ste session: anders .flush ERR dat de cluc een transient obj (sporter/sporter2) refs,	 
/ Maar in de 2de session hoeft dat niet	,
/ TODO

/ 1313

/ Main1_N_add, unidir	, fk's in entities	,

Club
	<set 
		name="sporters"
		inverse="false"	
		
	>
		<key column="club_" not-null="true"/>
		<one-to-many class="Sporter"/>
	</set>

/ we zien	,            
foo=> select*from sporter;
 id_ |  name_   | club_ 
-----+----------+-------
   2 | Sporter2 |     2
   1 | Sporter  |     2
(2 rows)

/ we zien	,
my.test.own.hibernate_mappings.Sporter@41466e6
my.test.own.hibernate_mappings.Sporter@29c5f7df


/ 1313. 

/ Main1_N_add 	, undir	, fk's in join table	,

Club
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" unique="false"/>
	</set>

		
/ we zien	,
foo=> select*from  club_sporters;
 club_ | sporter_ 
-------+----------
     1 |        1
     1 |        2
     2 |        1
     2 |        2
(4 rows)

/ OK	, maar NIET de bedoeling	, we willen de collection update	,
/ TODO

/ we zien 	, 
my.test.own.hibernate_mappings.Sporter@6749863b
my.test.own.hibernate_mappings.Sporter@c0bc077

	





/ 7	. 

		<set name="privileges" inverse="false" table="ROLE_PRIVILEGE" lazy="false" cascade="all">
			<cache usage="read-write" />
			<key>
				<column name="ROLE_SYSTEMID" not-null="true" />
			</key>
			<many-to-many entity-name="com.mpobjects.oms.model.privilegeentity.vo.PrivilegeVO">
				<column name="PRIVILEGE_SYSTEMID" not-null="true" />
			</many-to-many>
		</set>


/ 7	. 

/ 13. 

$ vi Main1_N_add.java
		  	session.save(club); 		  	
//		  	session.save(sporter);
//		  	session.save(sporter2);
		  	session.flush();
/ ERR
/s
org.hibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing: my.test.own.hibernate_mappings.Sporter
	at org.hibernate.engine.internal.ForeignKeys.getEntityIdentifierIfNotUnsaved(ForeignKeys.java:294)
	at org.hibernate.type.EntityType.getIdentifier(EntityType.java:537)
	at org.hibernate.type.ManyToOneType.nullSafeSet(ManyToOneType.java:165)
	at org.hibernate.persister.collection.AbstractCollectionPersister.writeElement(AbstractCollectionPersister.java:899)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1308)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:67)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:463)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:349)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:350)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:56)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1222)
	at my.test.own.hibernate_mappings.Main1_N_add.testBasicUsage(Main1_N_add.java:116)
	at my.test.own.hibernate_mappings.Main1_N_add.<init>(Main1_N_add.java:72)
	at my.test.own.hibernate_mappings.Main1_N_add.main(Main1_N_add.java:66)

/ hij doet een collection recreate 

/ 13	,

$ vi Main1_N_add.java
	...
		  	session2.save(club2);
		  	session2.flush();
/ OK
	BigIntTypeDescriptor$1.doBind(PreparedStatement, X, int, WrapperOptions) line: 64	
				st.setLong( index, javaTypeDescriptor.unwrap( value, Long.class, options ) );

	BigIntTypeDescriptor$1(BasicBinder<J>).bind(PreparedStatement, J, int, WrapperOptions) line: 90	
	LongType(AbstractStandardBasicType<T>).nullSafeSet(PreparedStatement, Object, int, WrapperOptions) line: 286	
	LongType(AbstractStandardBasicType<T>).nullSafeSet(PreparedStatement, Object, int, SessionImplementor) line: 281	
	LongType(AbstractSingleColumnStandardBasicType<T>).nullSafeSet(PreparedStatement, Object, int, boolean[], SessionImplementor) line: 56	
	ManyToOneType.nullSafeSet(PreparedStatement, Object, int, boolean[], SessionImplementor) line: 165	
	BasicCollectionPersister(AbstractCollectionPersister).writeElement(PreparedStatement, Object, int, SessionImplementor) line: 899	
	BasicCollectionPersister(AbstractCollectionPersister).recreate(PersistentCollection, Serializable, SessionImplementor) line: 1308	
	CollectionRecreateAction.execute() line: 67	
	ActionQueue.executeActions(ExecutableList<E>) line: 463	
	ActionQueue.executeActions() line: 349	
	DefaultFlushEventListener(AbstractFlushingEventListener).performExecutions(EventSource) line: 350	
	DefaultFlushEventListener.onFlush(FlushEvent) line: 56	
	SessionImpl.flush() line: 1222	
	Main1_N_add.testBasicUsage() line: 127	
	Main1_N_add.<init>() line: 72	
	Main1_N_add.main(String[]) line: 66	

/ Hij ziet omdat id in de sporter 1 is 	, dat hij niet trransient is	, 
/ TODO / 

/ Intermezzo

[eric@localhost java]$ pwd
/home/eric/Devel/Java/Hibernate/hibernate-orm
[eric@localhost java]$ git checkout tags/3.6.10.Final
Previous HEAD position was 7ee941e... 4.3.5.Final release
HEAD is now at ba46673... update version from 3.6.10-SNAPSHOT to 3.6.10.Final
[eric@localhost java]$ git describe
3.6.10.Final

/ we hebben hibernate_mappings_3.6.10 create	,
/ we moesten javassist add in pom.xml	,



/ Einde Intermezzo

/ 7	. 

/ 13	. 

/ Lees  ,
http://stackoverflow.com/questions/6378526/org-hibernate-persistentobjectexception-detached-entity-passed-to-persist

/ project hibernate_mappings_3.6.10

Club
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
		cascade="all"
	>
		<key >
			<column  name="club_" not-null="true"/>
		</key>
		<many-to-many entity-name="my.test.own.hibernate_mappings.Sporter" >
			<column name="sporter_" not-null="true"/>
		</many-to-many>
		
	</set>

$ vi Main1_N_add.java

            session = sessionFactory.openSession();

            Club club=new Club("Club");
            Sporter sporter=new Sporter("Sporter");
            Sporter sporter2=new Sporter("Sporter2");

            club.getSporters().add(sporter);
            club.getSporters().add(sporter2);

            session.persist(club);
/ OF
            session.save(club);
/(**)

            session.flush();
            session.beginTransaction().commit();

            session2=sessionFactory.openSession();


            Club club2=new Club("Club2");
            club2.getSporters().add(sporter);
            club2.getSporters().add(sporter2);
            session2.persist(club2);
/(*)
            session2.flush();
            session2.beginTransaction().commit();


            session3=sessionFactory.openSession();

            Club club3=(Club)session2.get(Club.class,2l);
            Set<Sporter>sporters3=club3.getSporters();
            for(Sporter sporter3:sporters3){
                System.out.println(sporter3);
            }

/ we zien	,
org.hibernate.PersistentObjectException: detached entity passed to persist: my.test.own.hibernate_mappings.Sporter
	at org.hibernate.event.def.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:137)
	at org.hibernate.impl.SessionImpl.firePersist(SessionImpl.java:799)
	at org.hibernate.impl.SessionImpl.persist(SessionImpl.java:791)
	at org.hibernate.engine.CascadingAction$8.cascade(CascadingAction.java:329)
	at org.hibernate.engine.Cascade.cascadeToOne(Cascade.java:392)
	at org.hibernate.engine.Cascade.cascadeAssociation(Cascade.java:335)
	at org.hibernate.engine.Cascade.cascadeProperty(Cascade.java:204)
	at org.hibernate.engine.Cascade.cascadeCollectionElements(Cascade.java:425)
	at org.hibernate.engine.Cascade.cascadeCollection(Cascade.java:362)
	at org.hibernate.engine.Cascade.cascadeAssociation(Cascade.java:338)
	at org.hibernate.engine.Cascade.cascadeProperty(Cascade.java:204)
	at org.hibernate.engine.Cascade.cascade(Cascade.java:161)
	at org.hibernate.event.def.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:475)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:353)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:203)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:143)
	at org.hibernate.event.def.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:201)
	at org.hibernate.event.def.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:147)
	at org.hibernate.event.def.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:71)
	at org.hibernate.impl.SessionImpl.firePersist(SessionImpl.java:808)
	at org.hibernate.impl.SessionImpl.persist(SessionImpl.java:782)
	at org.hibernate.impl.SessionImpl.persist(SessionImpl.java:786)
	at my.test.own.hibernate_mappings.Main1_N_add.testBasicUsage(Main1_N_add.java:102)
/ (*)
	at my.test.own.hibernate_mappings.Main1_N_add.<init>(Main1_N_add.java:51)
	at my.test.own.hibernate_mappings.Main1_N_add.main(Main1_N_add.java:45)

/ we kunnen bij (**) .save of .persist	,

/ 13	. 

/ Maar als we NIET in Club <set cascade="true"/>	,

/ 7	. 

/ SOLUTION PERSIST EXCEPTION 

/ TODO

/ 7	. 

$ vi Main1_N_add.java

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
		  	
		  	session.persist(club); 		  	
		  	session.flush();
/ OK

		  	Club club2=new Club("Club2");
		  	
		  	club2.getSporters().add(sporter);
		  	club2.getSporters().add(sporter2);
		  	
		  	session2.persist(club2);
		  	session2.flush();
/ ERR
org.hibernate.PersistentObjectException: detached entity passed to persist: my.test.own.hibernate_mappings.Sporter
/ In 1ste session hebben sporter/sporter2 id=0	, dit is OK voor .persist
/ In 1ste session hebben sporter/sporter2 id!=0	, dit is ERR voor .persist
/ TODO




 

/ Einde HIBERNATE MAPPINGS


/ DEBUG HIBERNATE MAPPINGS

/ 7	.

Club
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" unique="false"/>
	</set>

Main1_N_add
			session = sessionFactory.openSession();

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
		  	
		  	session.persist(club); 		  	
...
/s
DefaultPersistEventListener.entityIsTransient(PersistEvent, Map) line: 206	
			saveWithGeneratedId( entity, event.getEntityName(), createCache, source, false );
/s
DefaultPersistEventListener(AbstractSaveEventListener).saveWithGeneratedId(Object, String, Object, EventSource, boolean) line: 117	
		EntityPersister persister = source.getEntityPersister( entityName, entity );
		Serializable generatedId = persister.getIdentifierGenerator().generate( source, entity );
			return performSave( entity, generatedId, persister, false, anything, source, true );
/s
DefaultPersistEventListener(AbstractSaveEventListener).performSave(Object, Serializable, EntityPersister, boolean, Object, EventSource, boolean) line: 174	
			key = source.generateEntityKey( id, persister );
			persister.setIdentifier( entity, id, source );
/ set id in entity	,
		return performSaveOrReplicate(
				entity,
				key,
				persister,
				useIdentityColumn,
				anything,
				source,
				requiresImmediateIdAccess
		);
...
/s
WrapVisitor.processArrayOrNewCollection(Object, CollectionType) line: 111	
			else {
				PersistentCollection persistentCollection = collectionType.wrap( session, collection );
				persistenceContext.addNewCollection( persister, persistentCollection );

/ adds persistentCollection:collectionEntry to H. pc	, collectionEntry:loadedKey=null (TODO)
/ er is al entity:entityEntry	, entityEntry's loadedState=null	,

/t
DefaultPersistEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 277	
			substitute = substitute || visitCollectionsBeforeSave( entity, id, values, types, source );
true
		if ( substitute ) {
			persister.setPropertyValues( entity, values );
/ vervang in entity HashSet door PersistentSet	,

		AbstractEntityInsertAction insert = addInsertAction(
				values, id, entity, persister, useIdentityColumn, source, shouldDelayIdentityInserts
		);
...
/s
ActionQueue.addResolvedEntityInsertAction(AbstractEntityInsertAction) line: 199	
			insertions.add( insert );
		insert.makeEntityManaged();
/s
		getSession().getPersistenceContext().addEntity(
				getInstance(),
				( getPersister().isMutable() ? Status.MANAGED : Status.READ_ONLY ),
				getState(),																/ -> entityEntry's loadedState	,
				getEntityKey(),
				version,
				LockMode.WRITE,
				isExecuted,
				getPersister(),
				isVersionIncrementDisabled,
				false
		);
/ Nu is loadedState in entityEntry!=null	,
loadedState	Object[2]  (id=243)	
	[0]	"Club" (id=101)	
	[1]	PersistentSet  (id=295)	

/ entityEntry -> db	, later	,


/ Einde DEBUG HIBERNATE MAPPINGS

/ DEBUG HIBERNATE CASCADE

Club
	<set 
		name="sporters"
		inverse="false"	
		table="club_sporters"
		cascade="all"
	>
		<key column="club_" not-null="true"/>
		<many-to-many class="Sporter" column="sporter_" unique="false"/>
		
	</set>



$ vi Main1_N_add.java

			session = sessionFactory.openSession();
			PersistenceContext context=((SessionImplementor)session).getPersistenceContext();

			Club club=new Club("Club");
		  	Sporter sporter=new Sporter("Sporter");
		  	Sporter sporter2=new Sporter("Sporter2");

		  	club.getSporters().add(sporter);
		  	club.getSporters().add(sporter2);
		  	
		  	session.save(club); 		  	
	  	
		  	session.flush();

/ we komen in 	,
/ stacktrace	,
Thread [main] (Suspended)	
	DefaultSaveEventListener(AbstractSaveEventListener).saveWithGeneratedId(Object, String, Object, EventSource, boolean) line: 116	
	DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).saveWithGeneratedOrRequestedId(SaveOrUpdateEvent) line: 209	
		return saveWithGeneratedId(
				event.getEntity(),
				event.getEntityName(),
				null,
				event.getSession(),
				true
		);

	DefaultSaveEventListener.saveWithGeneratedOrRequestedId(SaveOrUpdateEvent) line: 55	
	DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).entityIsTransient(SaveOrUpdateEvent) line: 194	
		Serializable id = saveWithGeneratedOrRequestedId( event );

	DefaultSaveEventListener.performSaveOrUpdate(SaveOrUpdateEvent) line: 49	
			return entityIsTransient(event);

	DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).onSaveOrUpdate(SaveOrUpdateEvent) line: 90	
			event.setResultId( performSaveOrUpdate( event ) );

	SessionImpl.fireSave(SaveOrUpdateEvent) line: 715	
		for ( SaveOrUpdateEventListener listener : listeners( EventType.SAVE ) ) {
			listener.onSaveOrUpdate( event );

	SessionImpl.save(String, Object) line: 707	
		return fireSave( new SaveOrUpdateEvent( entityName, object, this ) );

	SessionImpl.save(Object) line: 702	

	Main1_N_add.testBasicUsage() line: 112	
		  	session.save(club); 		  	

	Main1_N_add.<init>() line: 72	
	Main1_N_add.main(String[]) line: 66	

/ we debug verder	,
DefaultSaveEventListener(AbstractSaveEventListener).saveWithGeneratedId(Object, String, Object, EventSource, boolean) line: 117	
		Serializable generatedId = persister.getIdentifierGenerator().generate( source, entity );
			return performSave( entity, generatedId, persister, false, anything, source, true );
/s
DefaultSaveEventListener(AbstractSaveEventListener).performSave(Object, Serializable, EntityPersister, boolean, Object, EventSource, boolean) line: 176	
			key = source.generateEntityKey( id, persister );
key	EntityKey  (id=85)	
	hashCode	630	
	identifier	Long  (id=76)	
	persister	SingleTableEntityPersister  (id=49)	

		return performSaveOrReplicate(
				entity,
				key,
				persister,
				useIdentityColumn,
				anything,
				source,
				requiresImmediateIdAccess
		);
/s
DefaultSaveEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 251	

		Serializable id = key == null ? null : key.getIdentifier();
1
		boolean inTxn = source.getTransactionCoordinator().isTransactionInProgress();
false
		boolean shouldDelayIdentityInserts = !inTxn && !requiresImmediateIdAccess;
/ requiresImmediateIdAccess is parameter	, =true

		cascadeBeforeSave( source, persister, entity, anything );
/s
DefaultSaveEventListener(AbstractSaveEventListener).cascadeBeforeSave(EventSource, EntityPersister, Object, Object) line: 432	
			new Cascade( getCascadeAction(), CascadePoint.BEFORE_INSERT_AFTER_DELETE, source ).cascade(
					persister,
					entity,
					anything
			);
/s
DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).getCascadeAction() line: 384	
		return CascadingActions.SAVE_UPDATE;
/t
/s
Cascade.<init>(CascadingAction, CascadePoint, EventSource) line: 73	
		this.cascadePoint = cascadePoint;
BEFORE_INSERT_AFTER_DELETE
		this.eventSource = eventSource;
sessionImpl
		this.action = action;
ACTION_SAVE_UPDATE
/t
/s
Cascade.cascade(EntityPersister, Object, Object) line: 99	
		if ( persister.hasCascades() || action.requiresNoCascadeChecking() ) {
true || false
			final Type[] types = persister.getPropertyTypes();
[org.hibernate.type.StringType@2c9810f1, org.hibernate.type.SetType(my.test.own.hibernate_mappings.Club.sporters)]
			final CascadeStyle[] cascadeStyles = persister.getPropertyCascadeStyles();
[STYLE_NONE, [STYLE_ALL]]
/=
cascadeStyles	CascadeStyle[2]  (id=219)	
	[0]	CascadeStyles$12  (id=222)	
	[1]	CascadeStyles$MultipleCascadeStyle  (id=223)	
		styles	CascadeStyle[1]  (id=245)	
			[0]	CascadeStyles$2  (id=250)	

/ Intermezzo

public class CascadeStyles {
	/**
	 * save / delete / update / evict / lock / replicate / merge / persist
	 */
	public static final CascadeStyle ALL = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return true;
		}

		@Override
		public String toString() {
			return "STYLE_ALL";
		}
	};

	/**
	 * no cascades
	 */
	public static final CascadeStyle NONE = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return false;
		}

		@Override
		public String toString() {
			return "STYLE_NONE";
		}
	};

	public static final class MultipleCascadeStyle extends BaseCascadeStyle {
		private final CascadeStyle[] styles;
		...
	}



/ Einde Intermezzo

			final boolean hasUninitializedLazyProperties = persister.hasUninitializedLazyProperties( parent );
false
			for ( int i=0; i<types.length; i++) {
				final CascadeStyle style = cascadeStyles[i];
STYLE_NONE
				final String propertyName = persister.getPropertyNames()[i];
name
 				if ( style.doCascade( action ) ) {
/ NEE	, 
/want	,
/s
	public static final CascadeStyle NONE = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return false;
/t
/ volgende,	
			for ( int i=0; i<types.length; i++) {
				final CascadeStyle style = cascadeStyles[i];
style	CascadeStyles$MultipleCascadeStyle  (id=223)	
	styles	CascadeStyle[1]  (id=245)	
		[0]	CascadeStyles$2  (id=250)	
/=
[STYLE_ALL]

				final String propertyName = persister.getPropertyNames()[i];
sporters
				if ( style.doCascade( action ) ) {
/s
CascadeStyles$MultipleCascadeStyle.doCascade(CascadingAction) line: 315	
			for ( CascadeStyle style : styles ) {
				if ( style.doCascade( action ) ) {
/s
	public static final CascadeStyle ALL = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return true;
/t
					return true;
/t
Cascade.cascade(EntityPersister, Object, Object) line: 118	
				if ( style.doCascade( action ) ) {
/d
					cascadeProperty(
							parent,
							persister.getPropertyValue( parent, i ),
/ (*)
parent=Club inst	,
=sporters=[my.test.own.hibernate_mappings.Sporter@6afd9125, my.test.own.hibernate_mappings.Sporter@2e412d4]
							types[i],
org.hibernate.type.SetType(my.test.own.hibernate_mappings.Club.sporters)
							style,
							propertyName,
							anything,
							false
					);

/ Ad (*)
/=
	public Object getPropertyValue(Object object, int i) {
		return getEntityTuplizer().getPropertyValue( object, i );
/s
Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 157	
		if ( child != null ) {
sporters
			if ( type.isAssociationType() ) {
/ JA
				final AssociationType associationType = (AssociationType) type;
org.hibernate.type.SetType(my.test.own.hibernate_mappings.Club.sporters)
				if ( cascadeAssociationNow( associationType ) ) {
/s
Cascade.cascadeAssociationNow(AssociationType) line: 255	
		return associationType.getForeignKeyDirection().cascadeNow( cascadePoint );
/s
CollectionType.class
	public ForeignKeyDirection getForeignKeyDirection() {
		return ForeignKeyDirection.FOREIGN_KEY_TO_PARENT;
/t
/s
	/**
	 * A foreign key from child to parent
	 */
	public static final ForeignKeyDirection FOREIGN_KEY_TO_PARENT = new ForeignKeyDirection() {
		@Override
		public boolean cascadeNow(CascadePoint cascadePoint) {
			return cascadePoint != CascadePoint.BEFORE_INSERT_AFTER_DELETE;
/t
Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 170	
		
		if ( child != null ) {
			if ( type.isAssociationType() ) {
				final AssociationType associationType = (AssociationType) type;
				if ( cascadeAssociationNow( associationType ) ) {
/ NEE
/t
DefaultSaveEventListener(AbstractSaveEventListener).cascadeBeforeSave(EventSource, EntityPersister, Object, Object) line: 439	
		try {
			new Cascade( getCascadeAction(), CascadePoint.BEFORE_INSERT_AFTER_DELETE, source ).cascade(
					persister,
					entity,
					anything
			);
/d
/ NIETS
/t
DefaultSaveEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 267	
		cascadeBeforeSave( source, persister, entity, anything );
/d
/ NIETS
		Object[] values = persister.getPropertyValuesToInsert( entity, getMergeMap( anything ), source );
/s
SingleTableEntityPersister(AbstractEntityPersister).getPropertyValuesToInsert(Object, Map, SessionImplementor) line: 4817	
		return getEntityTuplizer().getPropertyValuesToInsert( object, mergeMap, session );
...
/s
PojoEntityTuplizer(AbstractEntityTuplizer).getPropertyValuesToInsert(Object, Map, SessionImplementor) line: 624	
		for ( int j = 0; j < span; j++ ) {
2
			result[j] = getters[j].getForInsert( entity, mergeMap, session );
/s
BasicPropertyAccessor$BasicGetter.getForInsert(Object, Map, SessionImplementor) line: 204	
this=BasicGetter(my.test.own.hibernate_mappings.Club.name)
			return get( target );
target=my.test.own.hibernate_mappings.Club@19a41610
/s
		public Object get(Object target) throws HibernateException {
			try {
				return method.invoke( target, (Object[]) null );
/t
PojoEntityTuplizer(AbstractEntityTuplizer).getPropertyValuesToInsert(Object, Map, SessionImplementor) line: 624	
		for ( int j = 0; j < span; j++ ) {
			result[j] = getters[j].getForInsert( entity, mergeMap, session );
/d
/ volgende	,
		for ( int j = 0; j < span; j++ ) {
			result[j] = getters[j].getForInsert( entity, mergeMap, session );
...
/s
BasicPropertyAccessor$BasicGetter.get(Object) line: 169	
this=BasicGetter(my.test.own.hibernate_mappings.Club.sporters)
		@Override
		public Object get(Object target) throws HibernateException {
			try {
				return method.invoke( target, (Object[]) null );
/t
PojoEntityTuplizer(AbstractEntityTuplizer).getPropertyValuesToInsert(Object, Map, SessionImplementor) line: 626	
		for ( int j = 0; j < span; j++ ) {
			result[j] = getters[j].getForInsert( entity, mergeMap, session );
		}
		return result;
result	Object[2]  (id=378)	
	[0]	"Club" (id=33)	
	[1]	HashSet<E>  (id=37)	
/t
DefaultSaveEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 268	
		Object[] values = persister.getPropertyValuesToInsert( entity, getMergeMap( anything ), source );
/d
values	Object[2]  (id=378)	
	[0]	"Club" (id=33)	
	[1]	HashSet<E>  (id=37)	

		if ( persister.hasCollections() ) {
			substitute = substitute || visitCollectionsBeforeSave( entity, id, values, types, source );
...
/s
DefaultSaveEventListener(AbstractSaveEventListener).visitCollectionsBeforeSave(Object, Serializable, Object[], Type[], EventSource) line: 372	
		WrapVisitor visitor = new WrapVisitor( source );
		visitor.processEntityPropertyValues( values, types );
/s
WrapVisitor(AbstractVisitor).processEntityPropertyValues(Object[], Type[]) line: 76	
		for ( int i=0; i<types.length; i++ ) {
[org.hibernate.type.StringType@45a79117, org.hibernate.type.SetType(my.test.own.hibernate_mappings.Club.sporters)]
			if ( includeEntityProperty(values, i) ) {
/ JA
				processValue( i, values, types );
/ Niets voor StringType	, 
/ Wel voor SetType	,
/s
WrapVisitor(AbstractVisitor).processValue(Object, Type) line: 121	
		if ( type.isCollectionType() ) {
			return processCollection( value, (CollectionType) type );
/s
			return processArrayOrNewCollection( collection, collectionType );
/s
WrapVisitor.processArrayOrNewCollection(Object, CollectionType) line: 111	
		else {
				PersistentCollection persistentCollection = collectionType.wrap( session, collection );
PersistentSet
				persistenceContext.addNewCollection( persister, persistentCollection );
/ adds PersistentSet:CollectionEntry to pc's collectionEntries

/ we hebben nu in de pc in 
	collectionEntries 1 PersistentSet:CollectionEntry , 
	entityEntryContext 1 Club:EntityEntry	, 				/ deze is voorlopig	? See hieronder bij makeEntityManaged	, 

...
/t
DefaultSaveEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 276	
		if ( persister.hasCollections() ) {
			substitute = substitute || visitCollectionsBeforeSave( entity, id, values, types, source );
/d
/ values is nu "Club", PersistentSet	,
		if ( substitute ) {
			persister.setPropertyValues( entity, values );

		AbstractEntityInsertAction insert = addInsertAction(
				values, id, entity, persister, useIdentityColumn, source, shouldDelayIdentityInserts
		);
/s
			source.getActionQueue().addAction( insert );
/s
ActionQueue.addAction(EntityInsertAction) line: 166	
/=
	public void addAction(EntityInsertAction action) {

/ Intermezzo

/ 'n ActionQueue heeft al die queues	,

this	ActionQueue  (id=2678)	
	afterTransactionProcesses	ActionQueue$AfterTransactionCompletionProcessQueue  (id=2704)	
	beforeTransactionProcesses	ActionQueue$BeforeTransactionCompletionProcessQueue  (id=2705)	
	collectionCreations	ExecutableList<E>  (id=2706)	
	collectionQueuedOps	ExecutableList<E>  (id=2708)	
	collectionRemovals	ExecutableList<E>  (id=2710)	
	collectionUpdates	ExecutableList<E>  (id=2711)	
	deletions	ExecutableList<E>  (id=2712)	
	executableLists	Collections$UnmodifiableRandomAccessList<E>  (id=2713)	
	insertions	ExecutableList<E>  (id=2714)	
	isTransactionCoordinatorShared	false	
	orphanRemovals	ExecutableList<E>  (id=2715)	
	session	SessionImpl  (id=2528)	
	unresolvedInsertions	UnresolvedEntityInsertActions  (id=2716)	
	updates	ExecutableList<E>  (id=2718)	

/ Einde Intermezzo

		addInsertAction( action );
/ hij kiest deze method vanwege argument type	, 'n EntityInsertAction	,
/s
ActionQueue.addInsertAction(AbstractEntityInsertAction) line: 179	
		NonNullableTransientDependencies nonNullableTransientDependencies = insert.findNonNullableTransientEntities();
/ TODO NULLABLE
		if ( nonNullableTransientDependencies == null ) {
			addResolvedEntityInsertAction( insert );
/s
ActionQueue.addResolvedEntityInsertAction(AbstractEntityInsertAction) line: 199	
		else {
			insertions.add( insert );
		insert.makeEntityManaged();
/s
EntityInsertAction(AbstractEntityInsertAction).makeEntityManaged() line: 141	
		nullifyTransientReferencesIfNotAlready();
/ TODO NULLABLE
		getSession().getPersistenceContext().addEntity(
				getInstance(),
				( getPersister().isMutable() ? Status.MANAGED : Status.READ_ONLY ),
				getState(),
				getEntityKey(),
				version,
				LockMode.WRITE,
				isExecuted,
				getPersister(),
				isVersionIncrementDisabled,
				false
		);
	}
/s
StatefulPersistenceContext.addEntity(Object, Status, Object[], EntityKey, Object, LockMode, boolean, EntityPersister, boolean, boolean) line: 461	
		addEntity( entityKey, entity );
/s
		entitiesByKey.put( key, entity );
		getBatchFetchQueue().removeBatchLoadableEntityKey( key );
/t
		return addEntry(
				entity,
				status,
				loadedState,
				null,
				entityKey.getIdentifier(),
				version,
				lockMode,
				existsInDatabase,
				persister,
				disableVersionIncrement,
				lazyPropertiesAreUnfetched
		);
/s
		entityEntryContext.addEntityEntry( entity, e );
/t
DefaultSaveEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 294	
		AbstractEntityInsertAction insert = addInsertAction(
				values, id, entity, persister, useIdentityColumn, source, shouldDelayIdentityInserts
		);
/d
		// postpone initializing id in case the insert has non-nullable transient dependencies
		// that are not resolved until cascadeAfterSave() is executed
		cascadeAfterSave( source, persister, entity, anything );
/s
DefaultSaveEventListener(AbstractSaveEventListener).cascadeAfterSave(EventSource, EntityPersister, Object, Object) line: 460	
			new Cascade( getCascadeAction(), CascadePoint.AFTER_INSERT_BEFORE_DELETE, source ).cascade(
					persister,
					entity,
					anything
			);
/ Eerder deden we	,
			new Cascade( getCascadeAction(), CascadePoint.BEFORE_INSERT_AFTER_DELETE, source ).cascade(
/  getCascadeAction()=
		return CascadingActions.SAVE_UPDATE;
/s
Cascade.<init>(CascadingAction, CascadePoint, EventSource) line: 74	
		this.cascadePoint = cascadePoint; 	/ AFTER_INSERT_BEFORE_DELETE
		this.eventSource = eventSource;		/ sessionImpl
		this.action = action;				/ 	ACTION_SAVE_UPDATE
/t
/s
Cascade.cascade(EntityPersister, Object, Object) line: 99	
		if ( persister.hasCascades() || ...
persister=SingleTableEntityPersister(my.test.own.hibernate_mappings.Club)
/ JA
/ TODO
/t
		for ( int i=0; i<types.length; i++) {
			final Type[] types = persister.getPropertyTypes();
			final CascadeStyle[] cascadeStyles = persister.getPropertyCascadeStyles();
[STYLE_NONE, [STYLE_ALL]]
/ Dit hebben we configured in Club.hbm.xml	, met cascade="all"	,
			final boolean hasUninitializedLazyProperties = persister.hasUninitializedLazyProperties( parent );
/ TODO NULLABLE
				if ( style.doCascade( action ) ) {
style	CascadeStyles$12  (id=2823)	
STYLE_NONE
/s
	public static final CascadeStyle NONE = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return false;
/t
				else if ( action.requiresNoCascadeChecking() ) {
/s
CascadingActions$5(CascadingActions$BaseCascadingAction).requiresNoCascadeChecking() line: 469	
/=
	public abstract static class BaseCascadingAction implements CascadingAction {
		@Override
		public boolean requiresNoCascadeChecking() {
			return false;
/t

/ volgende	,
			for ( int i=0; i<types.length; i++) {
				final CascadeStyle style = cascadeStyles[i];
style	CascadeStyles$MultipleCascadeStyle  (id=2824)	
[STYLE_ALL]
				final String propertyName = persister.getPropertyNames()[i];
"sporters"
				if ( style.doCascade( action ) ) {
					return true;
/ want	
/s
CascadeStyles$MultipleCascadeStyle.doCascade(CascadingAction) line: 315	
/=
	public static final class MultipleCascadeStyle extends BaseCascadeStyle {
		@Override
		public boolean doCascade(CascadingAction action) {
/ action=ACTION_SAVE_UPDATE
			for ( CascadeStyle style : styles ) {
/ styles=[STYLE_ALL]
				if ( style.doCascade( action ) ) {
/s
CascadeStyles$2.doCascade(CascadingAction) line: 72	
/=
	public static final CascadeStyle ALL = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return true;
/t
Cascade.cascade(EntityPersister, Object, Object) line: 118	
				if ( style.doCascade( action ) ) {
/ d
					cascadeProperty(
							parent,
							persister.getPropertyValue( parent, i ),
							types[i],
							style,
							propertyName,
							anything,
							false
					);
				}
/ parent=Club inst	,
/ i=1
/s
this	SingleTableEntityPersister  (id=2573)	
	public Object getPropertyValue(Object object, int i) {
		return getEntityTuplizer().getPropertyValue( object, i );
/t
/s
Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 157	
/=
	private void cascadeProperty(
			final Object parent,
			final Object child,
			final Type type,
			final CascadeStyle style,
			final String propertyName,
			final Object anything,
			final boolean isCascadeDeleteEnabled) throws HibernateException {
this	Cascade  (id=2675)	
parent	Club  (id=21)	
child	PersistentSet  (id=2672)	
type	SetType  (id=2638)	
style	CascadeStyles$MultipleCascadeStyle  (id=2639)	
propertyName	"sporters" (id=2640)	
anything	null	
isCascadeDeleteEnabled	false	
associationType	SetType  (id=2638)	

		if ( child != null ) {
			if ( type.isAssociationType() ) {
				final AssociationType associationType = (AssociationType) type;
				if ( cascadeAssociationNow( associationType ) ) {
/s
Cascade.cascadeAssociationNow(AssociationType) line: 255	
		return associationType.getForeignKeyDirection().cascadeNow( cascadePoint );
/s
SetType(CollectionType).getForeignKeyDirection() line: 369	
		return ForeignKeyDirection.FOREIGN_KEY_TO_PARENT;
/t
/s
ForeignKeyDirection$1.cascadeNow(CascadePoint) line: 53	
/=
public abstract class ForeignKeyDirection implements Serializable {
	public static final ForeignKeyDirection FOREIGN_KEY_TO_PARENT = new ForeignKeyDirection() {
		@Override
		public boolean cascadeNow(CascadePoint cascadePoint) {
			return cascadePoint != CascadePoint.BEFORE_INSERT_AFTER_DELETE;
true
/t
Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 161	
				if ( cascadeAssociationNow( associationType ) ) {
/d
					cascadeAssociation(
							parent,
							child,
							type,
							style,
							anything,
							isCascadeDeleteEnabled
						);
				}
/s
Cascade.cascadeAssociation(Object, Object, Type, CascadeStyle, Object, boolean) line: 296	
		else if ( type.isCollectionType() ) {
			cascadeCollection( parent, child, style, anything, (CollectionType) type );
/s
Cascade.cascadeCollection(Object, Object, CascadeStyle, Object, CollectionType) line: 309	
		final CollectionPersister persister = eventSource.getFactory().getCollectionPersister( type.getRole() );
BasicCollectionPersister(my.test.own.hibernate_mappings.Club.sporters)
		final Type elemType = persister.getElementType();
org.hibernate.type.ManyToOneType(my.test.own.hibernate_mappings.Sporter)
/ TODO
		final CascadePoint originalCascadePoint = cascadePoint;
		if ( cascadePoint == CascadePoint.AFTER_INSERT_BEFORE_DELETE) {
			cascadePoint = CascadePoint.AFTER_INSERT_BEFORE_DELETE_VIA_COLLECTION;

		//cascade to current collection elements
		if ( elemType.isEntityType() ||  ...){
/ JA
			cascadeCollectionElements(
				parent,
				child,
				type,
				style,
				elemType,
				anything,
				persister.isCascadeDeleteEnabled()
false
			);
/s
Cascade.cascadeCollectionElements(Object, Object, CollectionType, CascadeStyle, Type, Object, boolean) line: 369	
		final boolean reallyDoCascade = style.reallyDoCascade( action ) && child != CollectionType.UNFETCHED_COLLECTION;
/s
CascadeStyles$MultipleCascadeStyle.reallyDoCascade(CascadingAction) line: 325	
/=
	public static final class MultipleCascadeStyle extends BaseCascadeStyle {
		@Override
		public boolean reallyDoCascade(CascadingAction action) {
			for ( CascadeStyle style : styles ) {
STYLE_ALL
				if ( style.reallyDoCascade( action ) ) {
					return true;
/s
CascadeStyles$2(CascadeStyles$BaseCascadeStyle).reallyDoCascade(CascadingAction) line: 297	
/=
	public static abstract class BaseCascadeStyle implements CascadeStyle {
		@Override
		public boolean reallyDoCascade(CascadingAction action) {
			return doCascade( action );
/s
CascadeStyles$2(CascadeStyles$BaseCascadeStyle).reallyDoCascade(CascadingAction) line: 297	
/=
	public static final CascadeStyle ALL = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return true;
/t
Cascade.cascadeCollectionElements(Object, Object, CollectionType, CascadeStyle, Type, Object, boolean) line: 371	
		final boolean reallyDoCascade = style.reallyDoCascade( action ) && child != CollectionType.UNFETCHED_COLLECTION;
/d
			final Iterator itr = action.getCascadableChildrenIterator( eventSource, collectionType, child );
org.hibernate.collection.internal.AbstractPersistentCollection$IteratorProxy@57ab648b
/TODO
			while ( itr.hasNext() ) {
				cascadeProperty(
						parent,
						itr.next(),
						elemType,
						style,
						null,
						anything,
						isCascadeDeleteEnabled
				);
			}
/s
Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 157	
/=
	private void cascadeProperty(
			final Object parent,
			final Object child,
			final Type type,
			final CascadeStyle style,
			final String propertyName,
			final Object anything,
			final boolean isCascadeDeleteEnabled) throws HibernateException {
this	Cascade  (id=2675)	
parent	Club  (id=21)	
child	Sporter  (id=23)	
type	ManyToOneType  (id=2688)	
style	CascadeStyles$MultipleCascadeStyle  (id=2639)	
propertyName	null	
anything	null	
isCascadeDeleteEnabled	false	

/ rec. call, we zijn nog in bovenste cascadeProperty, zonet	,
this	Cascade  (id=2675)	
parent	Club  (id=21)	
child	PersistentSet  (id=2672)	
type	SetType  (id=2638)	
style	CascadeStyles$MultipleCascadeStyle  (id=2639)	
propertyName	"sporters" (id=2640)	
anything	null	
isCascadeDeleteEnabled	false	
associationType	SetType  (id=2638)	

		if ( child != null ) {
			if ( type.isAssociationType() ) {
				final AssociationType associationType = (AssociationType) type;
				if ( cascadeAssociationNow( associationType ) ) {
					cascadeAssociation(
							parent,
							child,
							type,
							style,
							anything,
							isCascadeDeleteEnabled
						);
/s
Cascade.cascadeAssociation(Object, Object, Type, CascadeStyle, Object, boolean) line: 293	
		if ( type.isEntityType() || type.isAnyType() ) {
/ JA
			cascadeToOne( parent, child, type, style, anything, isCascadeDeleteEnabled );
/s
Cascade.cascadeToOne(Object, Object, Type, CascadeStyle, Object, boolean) line: 343	
		final String entityName = type.isEntityType()
				? ( (EntityType) type ).getAssociatedEntityName()
				: null;
my.test.own.hibernate_mappings.Sporter
		if ( style.reallyDoCascade( action ) ) {
/ style=[STYLE_ALL]
/s
CascadeStyles$MultipleCascadeStyle.reallyDoCascade(CascadingAction) line: 325	
/=
	public static final class MultipleCascadeStyle extends BaseCascadeStyle {
		@Override
		public boolean reallyDoCascade(CascadingAction action) {
			for ( CascadeStyle style : styles ) {
				if ( style.reallyDoCascade( action ) ) {
					return true;
/s
	public static abstract class BaseCascadeStyle implements CascadeStyle {
		@Override
		public boolean reallyDoCascade(CascadingAction action) {
			return doCascade( action );
this=STYLE_ALL
/s
	public static final CascadeStyle ALL = new BaseCascadeStyle() {
		@Override
		public boolean doCascade(CascadingAction action) {
			return true;
/t
Cascade.cascadeToOne(Object, Object, Type, CascadeStyle, Object, boolean) line: 348	
		if ( style.reallyDoCascade( action ) ) {
/d
/ JA
			//not really necessary, but good for consistency...
			eventSource.getPersistenceContext().addChildParent( child, parent );
/s
				parentsByChild.put( child, parent );
/t
			try {
				action.cascade( eventSource, child, entityName, anything, isCascadeDeleteEnabled );

/ Intermezzo

/ In H's pc zit nu	,
collectionEntries
	PersistentSet:CollectionEntry
entityEntryContext
	Club:EntityEntry

/ Einde Intermezzo

/s
CascadingActions$5.cascade(EventSource, Object, String, Object, boolean) line: 234	
/=
		public void cascade(
				EventSource session,
				Object child,
				String entityName,
				Object anything,
				boolean isCascadeDeleteEnabled)
				throws HibernateException {
this	CascadingActions$5  (id=2770)	
session	SessionImpl  (id=2591)	
child	Sporter  (id=23)	
entityName	"my.test.own.hibernate_mappings.Sporter" (id=2691)	
anything	null	
isCascadeDeleteEnabled	false	

			session.saveOrUpdate( entityName, child );
/s


/s
SessionImpl.saveOrUpdate(String, Object) line: 676	
		fireSaveOrUpdate( new SaveOrUpdateEvent( entityName, obj, this ) );
/s
SessionImpl.fireSaveOrUpdate(SaveOrUpdateEvent) line: 680	
		for ( SaveOrUpdateEventListener listener : listeners( EventType.SAVE_UPDATE ) ) {
			listener.onSaveOrUpdate( event );


/s
DefaultSaveOrUpdateEventListener.onSaveOrUpdate(SaveOrUpdateEvent) line: 68	
		else {
			//initialize properties of the event:
			final Object entity = source.getPersistenceContext().unproxyAndReassociate( object );
Sporter inst	,
			event.setEntity( entity );
			event.setEntry( source.getPersistenceContext().getEntry( entity ) );
null
			//return the id in the event object
			event.setResultId( performSaveOrUpdate( event ) );
/s
DefaultSaveOrUpdateEventListener.performSaveOrUpdate(SaveOrUpdateEvent) line: 100	
		EntityState entityState = getEntityState(
				event.getEntity(),
				event.getEntityName(),
				event.getEntry(),
				event.getSession()
		);
/s
DefaultSaveOrUpdateEventListener(AbstractSaveEventListener).getEntityState(Object, String, EntityEntry, SessionImplementor) line: 489	
/=
	protected EntityState getEntityState(
			Object entity,
			String entityName,
			EntityEntry entry, //pass this as an argument only to avoid double looking
			SessionImplementor source) {
this	DefaultSaveOrUpdateEventListener  (id=2879)	
entity	Sporter  (id=23)	
entityName	"my.test.own.hibernate_mappings.Sporter" (id=2691)	
entry	null	
source	SessionImpl  (id=2591)	

		if ( ForeignKeys.isTransient( entityName, entity, getAssumedUnsaved(), source ) ) {
/ getAssumedUnsaved()=null
/s
ForeignKeys.isTransient(String, Object, Boolean, SessionImplementor) line: 229	
		// let the persister inspect the instance to decide
		final EntityPersister persister = session.getEntityPersister( entityName, entity );
/s
SessionImpl.getEntityPersister(String, Object) line: 1452	
				return factory.getEntityPersister( entityName ).getSubclassEntityPersister( object, getFactory() );
/s
SessionFactoryImpl.getEntityPersister(String) line: 1094	

		EntityPersister result = entityPersisters.get(entityName);
SingleTableEntityPersister(my.test.own.hibernate_mappings.Sporter)
		return result;
/t

/ Intermezzo

this	SessionFactoryImpl  (id=2793)	
	collectionPersisters	HashMap<K,V>  (id=2902)	
		entrySet	HashMap$EntrySet  (id=3306)	
		hashSeed	0	
		keySet	null	
		loadFactor	0.75	
		modCount	2	
		size	2	
		table	HashMap$Entry<K,V>[16]  (id=3309)	
			[6]	HashMap$Entry<K,V>  (id=3314)	
			[12]	HashMap$Entry<K,V>  (id=3315)	
				hash	2107623772	
				key	"my.test.own.hibernate_mappings.Club.sporters" (id=3317)	
				next	null	
				value	BasicCollectionPersister  (id=2682)	
					baseIndex	0	
					batchSize	1	
					cacheAccessStrategy	null	
					cacheEntryStructure	UnstructuredCacheEntry  (id=2684)	
					collectionPropertyColumnAliases	HashMap<K,V>  (id=2685)	
					collectionPropertyColumnNames	HashMap<K,V>  (id=3321)	
					collectionType	SetType  (id=3323)	
					deleteAllCallable	false	
					deleteAllCheckStyle	ExecuteUpdateResultCheckStyle  (id=3324)	
					deleteBatchKey	null	
					deleteCallable	false	
					deleteCheckStyle	ExecuteUpdateResultCheckStyle  (id=3324)	
					dialect	PostgreSQLDialect  (id=2908)	
					elementClass	null	
					elementColumnAliases	String[1]  (id=3330)	
					elementColumnIsInPrimaryKey	(id=3331)	
					elementColumnIsSettable	(id=3333)	
					elementColumnNames	String[1]  (id=3335)	
					elementColumnReaders	String[1]  (id=3337)	
					elementColumnReaderTemplates	String[1]  (id=3338)	
					elementColumnWriters	String[1]  (id=3340)	
					elementFormulas	String[1]  (id=3342)	
					elementFormulaTemplates	String[1]  (id=3344)	
					elementIsPureFormula	false	
					elementNodeName	"Sporter" (id=3346)	
					elementPersister	SingleTableEntityPersister  (id=2692)	
					elementPropertyMapping	SingleTableEntityPersister  (id=2692)	
					elementType	ManyToOneType  (id=2688)	
					entityName	"my.test.own.hibernate_mappings.Club" (id=2664)	
					factory	SessionFactoryImpl  (id=2793)	
					fetchMode	FetchMode  (id=3351)	
					filterHelper	FilterHelper  (id=3353)	
					hasIdentifier	false	
					hasIndex	false	
					hasManyToManyOrder	false	
					hasOrder	false	
					hasOrphanDelete	false	
					hasWhere	false	
					identifierColumnAlias	null	
					identifierColumnName	null	
					identifierGenerator	null	
					identifierType	null	
					indexColumnAliases	null	
					indexColumnIsSettable	null	
					indexColumnNames	null	
					indexContainsFormula	false	
					indexFormulas	null	
					indexFormulaTemplates	null	
					indexFragments	null	
					indexNodeName	null	
					indexType	null	
					initializer	CollectionLoader  (id=3369)	
					insertBatchKey	null	
					insertCallable	false	
					insertCheckStyle	ExecuteUpdateResultCheckStyle  (id=3372)	
					isArray	false	
					isExtraLazy	false	
					isInverse	false	
					isLazy	true	
					isMutable	true	
					isPrimitiveArray	false	
					isVersioned	true	
					keyColumnAliases	String[1]  (id=3379)	
					keyColumnNames	String[1]  (id=3381)	
					keyType	LongType  (id=3382)	
					manyToManyFilterHelper	FilterHelper  (id=3384)	
					manyToManyOrderByTranslation	null	
					manyToManyWhereString	null	
					manyToManyWhereTemplate	null	
					mappedByProperty	null	
					nodeName	"sporters" (id=2640)	
					orderByTranslation	null	
					ownerPersister	SingleTableEntityPersister  (id=2623)	
					qualifiedTableName	"club_sporters" (id=3391)	
					queryLoaderName	null	
					recreateBatchKey	null	
					removeBatchKey	null	
					role	"my.test.own.hibernate_mappings.Club.sporters" (id=3317)	
					spaces	String[1]  (id=3396)	
					sqlDeleteRowString	"delete from club_sporters where club_=? and sporter_=?" (id=3398)	
					sqlDeleteString	"delete from club_sporters where club_=?" (id=3399)	
					sqlDetectRowByElementString	"select 1 from club_sporters where club_ =? and sporter_ =?" (id=3401)	
					sqlDetectRowByIndexString	null	
					sqlExceptionHelper	SqlExceptionHelper  (id=3403)	
					sqlInsertRowString	"insert into club_sporters (club_, sporter_) values (?, ?)" (id=3405)	
					sqlSelectRowByIndexString	null	
					sqlSelectSizeString	"select count(sporter_) from club_sporters where club_ =?" (id=3408)	
					sqlUpdateRowString	"update club_sporters set sporter_=? where club_=? and sporter_=?" (id=3409)	
					sqlWhereString	null	
					sqlWhereStringTemplate	null	
					subselectLoadable	false	
					updateBatchKey	null	
					updateCallable	false	
					updateCheckStyle	ExecuteUpdateResultCheckStyle  (id=3372)	
		threshold	12	
		values	HashMap$Values  (id=3312)	
	collectionRolesByEntityParticipant	Collections$UnmodifiableMap<K,V>  (id=2903)	
	currentSessionContext	ThreadLocalSessionContext  (id=2906)	
	currentTenantIdentifierResolver	null	
	customEntityDirtinessStrategy	SessionFactoryImpl$3  (id=2907)	
	dialect	PostgreSQLDialect  (id=2908)	
	entityNameResolvers	ConcurrentHashMap<K,V>  (id=2909)	
	entityPersisters	HashMap<K,V>  (id=2895)	
		entrySet	HashMap$EntrySet  (id=2897)	
		hashSeed	0	
		keySet	null	
		loadFactor	0.75	
		modCount	4	
		size	4	
		table	HashMap$Entry<K,V>[16]  (id=2917)	
			[3]	HashMap$Entry<K,V>  (id=2922)	
				hash	-65779309	
				key	"my.test.own.hibernate_mappings.Sporter" (id=2691)	
				next	null	
				value	SingleTableEntityPersister  (id=2692)	
			[9]	HashMap$Entry<K,V>  (id=2925)	
				hash	-90184279	
				key	"my.test.own.hibernate_mappings.Club" (id=2664)	
				next	null	
				value	SingleTableEntityPersister  (id=2623)	
					affectingFetchProfileNames	HashSet<E>  (id=2679)	
					attributeDefinitions	Collections$UnmodifiableRandomAccessList<E>  (id=2680)	
					batchSize	1	
					cacheAccessStrategy	null	
					cachedPkByNonNullableNaturalIdQuery	null	
					cacheEntryHelper	AbstractEntityPersister$NoopCacheEntryHelper  (id=2938)	
					cascadeDeleteEnabled	(id=2940)	
					constraintOrderedKeyColumnNames	String[1][]  (id=2941)	
					constraintOrderedTableNames	String[1]  (id=2943)	
					customSQLDelete	String[1]  (id=2945)	
					customSQLInsert	String[1]  (id=2947)	
					customSQLUpdate	String[1]  (id=2948)	
					deleteBatchKey	null	
					deleteCallable	(id=2951)	
					deleteResultCheckStyles	ExecuteUpdateResultCheckStyle[1]  (id=2952)	
					discriminatorAlias	null	
					discriminatorColumnName	null	
					discriminatorColumnReaders	null	
					discriminatorColumnReaderTemplate	null	
					discriminatorFormula	null	
					discriminatorFormulaTemplate	null	
					discriminatorInsertable	false	
					discriminatorMetadata	null	
					discriminatorSQLValue	null	
					discriminatorType	null	
					discriminatorValue	null	
					embeddedCompositeIdentifierAttributes	null	
					entityIdentifierDefinition	EntityIdentifierDefinitionHelper$1  (id=2961)	
					entityMetamodel	EntityMetamodel  (id=2962)	
					entityTuplizer	PojoEntityTuplizer  (id=2963)	
					factory	SessionFactoryImpl  (id=2793)	
					filterHelper	FilterHelper  (id=2964)	
					forceDiscriminator	false	
					fullDiscriminatorValues	null	
					hasFormulaProperties	false	
					hasSequentialSelects	false	
					hasSubselectLoadableCollections	false	
					identifierAliases	String[1]  (id=2969)	
					identifierColumnSpan	1	
					identityDelegate	null	
					inserBatchKey	null	
					insertCallable	(id=2973)	
					insertResultCheckStyles	ExecuteUpdateResultCheckStyle[1]  (id=2977)	
					isClassOrSuperclassTable	(id=2980)	
					isInverseSubclassTable	(id=2983)	
					isInverseTable	(id=2984)	
					isLazyPropertiesCacheable	true	
					isNullableSubclassTable	(id=2991)	
					isNullableTable	(id=2994)	
					joinSpan	1	
					keyColumnNames	String[1][]  (id=2997)	
					lazyProperties	HashSet<E>  (id=3000)	
					lazyPropertyColumnAliases	String[0][]  (id=3001)	
					lazyPropertyNames	String[0]  (id=3002)	
					lazyPropertyNumbers	(id=3003)	
					lazyPropertyTypes	Type[0]  (id=3004)	
					loaderName	null	
					loaders	HashMap<K,V>  (id=3009)	
					lobProperties	ArrayList<E>  (id=3011)	
					lockers	HashMap<K,V>  (id=3013)	
					naturalIdIsNonNullable	null	
					naturalIdRegionAccessStrategy	null	
					propertyColumnAliases	String[2][]  (id=3016)	
					propertyColumnFormulaTemplates	String[2][]  (id=3018)	
					propertyColumnInsertable	(id=3019)	
					propertyColumnNames	String[2][]  (id=3021)	
					propertyColumnReaderTemplates	String[2][]  (id=3023)	
					propertyColumnSpans	(id=3035)	
					propertyColumnUpdateable	(id=3036)	
					propertyColumnWriters	String[2][]  (id=3037)	
					propertyDefinedOnSubclass	(id=3038)	
					propertyMapping	BasicEntityPropertyMapping  (id=3039)	
					propertySelectable	(id=3040)	
					propertySubclassNames	String[2]  (id=3041)	
					propertyTableNumbers	(id=3042)	
					propertyTableNumbersByNameAndSubclass	HashMap<K,V>  (id=3043)	
					propertyUniqueness	(id=3044)	
					qualifiedTableNames	String[1]  (id=3045)	
					queryLoader	null	
					rootTableKeyColumnNames	String[1]  (id=3005)	
					rootTableKeyColumnReaders	String[1]  (id=3046)	
					rootTableKeyColumnReaderTemplates	String[1]  (id=3047)	
					rowIdName	null	
					sequentialSelectStringsByEntityName	HashMap<K,V>  (id=3048)	
					spaces	String[1]  (id=3049)	
					sqlDeleteStrings	String[1]  (id=3050)	
[delete from club where id_=?]
					sqlIdentityInsertString	null	
					sqlInsertGeneratedValuesSelectString	null	
					sqlInsertStrings	String[1]  (id=3051)	
[insert into club (name_, id_) values (?, ?)]
					sqlLazySelectString	null	
					sqlLazyUpdateByRowIdString	null	
					sqlLazyUpdateStrings	String[1]  (id=3052)	
[update club set name_=? where id_=?]
					sqlSnapshotSelectString	"select club_.id_, club_.name_ as name_2_1_ from club club_ where club_.id_=?" (id=3053)	
					sqlUpdateByRowIdString	null	
					sqlUpdateGeneratedValuesSelectString	null	
					sqlUpdateStrings	String[1]  (id=3054)	
[update club set name_=? where id_=?]
					sqlVersionSelectString	"select id_ from club where id_ =?" (id=3055)	
					sqlWhereString	null	
					sqlWhereStringTemplate	null	
					subclassClosure	String[1]  (id=3056)	
					subclassColumnAliasClosure	String[1]  (id=3057)	
					subclassColumnClosure	String[1]  (id=3058)	
					subclassColumnLazyClosure	(id=3059)	
					subclassColumnReaderTemplateClosure	String[1]  (id=3060)	
					subclassColumnSelectableClosure	(id=3061)	
					subclassColumnTableNumberClosure	(id=3062)	
					subclassesByDiscriminatorValue	HashMap<K,V>  (id=3063)	
					subclassFormulaAliasClosure	String[0]  (id=3064)	
					subclassFormulaClosure	String[0]  (id=3065)	
					subclassFormulaLazyClosure	(id=3066)	
					subclassFormulaTableNumberClosure	(id=3067)	
					subclassFormulaTemplateClosure	String[0]  (id=3068)	
					subclassPropertyAliases	HashMap<K,V>  (id=3069)	
					subclassPropertyCascadeStyleClosure	CascadeStyle[2]  (id=3070)	
					subclassPropertyColumnNameClosure	String[2][]  (id=3071)	
					subclassPropertyColumnNames	HashMap<K,V>  (id=3072)	
					subclassPropertyColumnNumberClosure	(id=3073)	
					subclassPropertyColumnReaderClosure	String[2][]  (id=3074)	
					subclassPropertyColumnReaderTemplateClosure	String[2][]  (id=3075)	
					subclassPropertyFetchModeClosure	FetchMode[2]  (id=3076)	
					subclassPropertyFormulaNumberClosure	(id=3079)	
					subclassPropertyFormulaTemplateClosure	String[2][]  (id=3080)	
					subclassPropertyNameClosure	String[2]  (id=3081)	
					subclassPropertyNullabilityClosure	(id=3087)	
					subclassPropertySubclassNameClosure	String[2]  (id=3088)	
					subclassPropertyTableNumberClosure	(id=3089)	
					subclassPropertyTypeClosure	Type[2]  (id=3090)	
					subclassTableIsLazyClosure	(id=3091)	
					subclassTableKeyColumnClosure	String[1][]  (id=3092)	
					subclassTableNameClosure	String[1]  (id=3093)	
					subclassTableSequentialSelect	(id=3094)	
					tableHasColumns	(id=3097)	
					temporaryIdTableDDL	"create temporary table HT_club (id_ int8 not null) on commit drop" (id=3104)	
					temporaryIdTableName	"HT_club" (id=3105)	
					uniqueKeyLoaders	HashMap<K,V>  (id=3106)	
					updateBatchKey	null	
					updateCallable	(id=3107)	
					updateResultCheckStyles	ExecuteUpdateResultCheckStyle[1]  (id=3108)	
					versionColumnName	null	
		threshold	12	
		values	HashMap$Values  (id=2920)	
	fetchProfiles	HashMap<K,V>  (id=2910)	
	filters	HashMap<K,V>  (id=2911)	
	identifierGenerators	HashMap<K,V>  (id=2912)	
	imports	HashMap<K,V>  (id=2932)	
	isClosed	false	
	jdbcServices	JdbcServicesImpl  (id=3268)	
	name	null	
	namedQueryRepository	NamedQueryRepository  (id=3269)	
	observer	SessionFactoryObserverChain  (id=3270)	
	properties	Properties  (id=3271)	
	queryPlanCache	QueryPlanCache  (id=3273)	
	schemaExport	null	
	serviceRegistry	SessionFactoryServiceRegistryImpl  (id=2589)	
	sessionFactoryOptions	SessionFactoryImpl$1  (id=3274)	
	settings	Settings  (id=3276)	
	sqlFunctionRegistry	SQLFunctionRegistry  (id=3277)	
	transactionEnvironment	TransactionEnvironmentImpl  (id=3278)	
	typeHelper	TypeLocatorImpl  (id=3279)	
	typeResolver	TypeResolver  (id=3281)	
	uuid	"475fab2b-9e25-40fa-b9b5-156f97b2766c" (id=3282)	
entityName	"my.test.own.hibernate_mappings.Sporter" (id=2691)	

/ Einde Intermezzo

/t
ForeignKeys.isTransient(String, Object, Boolean, SessionImplementor) line: 243	
		final EntityPersister persister = session.getEntityPersister( entityName, entity );
/d
		isUnsaved = persister.isTransient( entity, session );
/s
SingleTableEntityPersister(AbstractEntityPersister).isTransient(Object, SessionImplementor) line: 4464	
		if ( canExtractIdOutOfEntity() ) {
			id = getIdentifier( entity, session );
/s
SingleTableEntityPersister(AbstractEntityPersister).getIdentifier(Object, SessionImplementor) line: 4746	
		return getEntityTuplizer().getIdentifier( entity, session );
/s
PojoEntityTuplizer(AbstractEntityTuplizer).getIdentifier(Object, SessionImplementor) line: 330	
			else {
                id = idGetter.get( entity );
/ idGetter=BasicGetter(my.test.own.hibernate_mappings.Sporter.id)
0
			return (Serializable) id;
/t
SingleTableEntityPersister(AbstractEntityPersister).isTransient(Object, SessionImplementor) line: 4472	
			id = getIdentifier( entity, session );
/d
0
		// check the id unsaved-value
		Boolean result = entityMetamodel.getIdentifierProperty()
/s
			return identifierAttribute;
identifierAttribute	IdentifierProperty  (id=3617)	
	attributeName	"id" (id=3619)	
	attributeType	LongType  (id=3382)	
	unsavedValue	IdentifierValue  (id=3632)	
		value	Long  (id=3641)	
0
/ = entityMetamodel.getVersionProperty() .getUnsavedValue()

/t
				.getUnsavedValue().isUnsaved( id );
/s
IdentifierValue.isUnsaved(Object) line: 147	
		return id == null || id.equals( value );
false || true
/t
SingleTableEntityPersister(AbstractEntityPersister).isTransient(Object, SessionImplementor) line: 4491	
			id = getIdentifier( entity, session );
0
		// check the id unsaved-value
		Boolean result = entityMetamodel.getIdentifierProperty()
				.getUnsavedValue().isUnsaved( id );
true
/ de id uit de Sporter = entityMetamodel.getIdentifierProperty() .getUnsavedValue()  dus	,

			return result;
/s
ForeignKeys.isTransient(String, Object, Boolean, SessionImplementor) line: 244	
		isUnsaved = persister.isTransient( entity, session );
true
		if ( isUnsaved != null ) {
			return isUnsaved;
/t
DefaultSaveOrUpdateEventListener(AbstractSaveEventListener).getEntityState(Object, String, EntityEntry, SessionImplementor) line: 512	
		if ( ForeignKeys.isTransient( entityName, entity, getAssumedUnsaved(), source ) ) {
true
			return EntityState.TRANSIENT;
/t
DefaultSaveOrUpdateEventListener.performSaveOrUpdate(SaveOrUpdateEvent) line: 107	
	EntityState entityState = getEntityState(
				event.getEntity(),
				event.getEntityName(),
				event.getEntry(),
				event.getSession()
		);
/d

		switch ( entityState ) {
			case DETACHED:
/ NEE
				entityIsDetached( event );
				return null;
			case PERSISTENT:
/ NEE
				return entityIsPersistent( event );
			default: //TRANSIENT or DELETED
/ JA
				return entityIsTransient( event );
/s
DefaultSaveOrUpdateEventListener.entityIsTransient(SaveOrUpdateEvent) line: 180	

/ Intermezzo

	DefaultSaveOrUpdateEventListener.entityIsTransient(SaveOrUpdateEvent) line: 180	
	DefaultSaveOrUpdateEventListener.performSaveOrUpdate(SaveOrUpdateEvent) line: 114	
	DefaultSaveOrUpdateEventListener.onSaveOrUpdate(SaveOrUpdateEvent) line: 90	
->	SessionImpl.fireSaveOrUpdate(SaveOrUpdateEvent) line: 684	
	SessionImpl.saveOrUpdate(String, Object) line: 676	
	CascadingActions$5.cascade(EventSource, Object, String, Object, boolean) line: 235	
	Cascade.cascadeToOne(Object, Object, Type, CascadeStyle, Object, boolean) line: 350	
	Cascade.cascadeAssociation(Object, Object, Type, CascadeStyle, Object, boolean) line: 293	
	Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 161	
	Cascade.cascadeCollectionElements(Object, Object, CollectionType, CascadeStyle, Type, Object, boolean) line: 379	
	Cascade.cascadeCollection(Object, Object, CascadeStyle, Object, CollectionType) line: 319	
	Cascade.cascadeAssociation(Object, Object, Type, CascadeStyle, Object, boolean) line: 296	
	Cascade.cascadeProperty(Object, Object, Type, CascadeStyle, String, Object, boolean) line: 161	
	Cascade.cascade(EntityPersister, Object, Object) line: 118	
	DefaultSaveEventListener(AbstractSaveEventListener).cascadeAfterSave(EventSource, EntityPersister, Object, Object) line: 460	
	DefaultSaveEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 294	
	DefaultSaveEventListener(AbstractSaveEventListener).performSave(Object, Serializable, EntityPersister, boolean, Object, EventSource, boolean) line: 194	
	DefaultSaveEventListener(AbstractSaveEventListener).saveWithGeneratedId(Object, String, Object, EventSource, boolean) line: 137	
	DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).saveWithGeneratedOrRequestedId(SaveOrUpdateEvent) line: 209	
	DefaultSaveEventListener.saveWithGeneratedOrRequestedId(SaveOrUpdateEvent) line: 55	
	DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).entityIsTransient(SaveOrUpdateEvent) line: 194	
	DefaultSaveEventListener.performSaveOrUpdate(SaveOrUpdateEvent) line: 49	
	DefaultSaveEventListener(DefaultSaveOrUpdateEventListener).onSaveOrUpdate(SaveOrUpdateEvent) line: 90	
->	SessionImpl.fireSave(SaveOrUpdateEvent) line: 715	
	SessionImpl.save(String, Object) line: 707	
	SessionImpl.save(Object) line: 702	
	Main1_N_add.testBasicUsage() line: 112	
	Main1_N_add.<init>() line: 72	
	Main1_N_add.main(String[]) line: 66	

/ Kijk bij 2 ->'s	, 
/ Hetzelfde	,

/ Einde Intermezzo

/ MORGENOCHTEND






















 













/ Einde DEBUG HIBERNATE CASCADE

/ PCT-656


myFullCode	"table_shipment_order_order_status_description" (id=22443)	
"order_status_description" 


/ Einde PCT-656

/ BARD-22

/ 13	. 

/ we maken 4 nieuwe scripts	,

[eric@localhost Backup]$ vi ~/bin/bard-ssh-t.sh 
echo 'h^Zgcyr&Q'
ssh vanderveldene@bard-app-t.intermax.mp-objects.com

[eric@localhost Backup]$ vi ~/bin/bard-psql-t.sh 
PGPASSWORD=h^Zgcyr\&Q psql -U vanderveldene -h  bard-app-t.intermax.mp-objects.com bard

[eric@localhost Backup]$ vi ~/bin/bard-pg_dump-t.sh 
PGPASSWORD=h^Zgcyr\&Q pg_dump -Fc -U vanderveldene -h bard-app-t.intermax.mp-objects.com bard > /home/eric/DB_TAP/Postgres/Backup/bard-t-$(date +%F).dump

[eric@localhost Backup]$ cat ~/bin/bard-pg_restore-l.sh 
PGPASSWORD=mpopostgres@mpo pg_restore -U mpopostgres -d "$1" "$2" 

/ 13	. 


/ We zien de ERR	,

org.postgresql.util.PSQLException: ERROR: column this_.on_update does not exist Position: 275

/ we zoeken in eclipse in de patch files (patch*.sql)  naar on_update	,

/ we zien 	,
patch-511-shotrigger-update-expr.sql

/ we zien in de bard database	,

bard=> select*from mpo_scs_patch where  name like '%511%';
 system_id |       entry_date        | module |                 name                 |                                   sql_script 
                                   | status  | patch_comment 
-----------+-------------------------+--------+--------------------------------------+----------------------------------------------
-----------------------------------+---------+---------------
       807 | 2015-07-15 07:07:52.916 | oms    | patch-511-message-locale.sql         | alter table tms_message add locale varchar(50
) not null default 'en_GB';\r     +| APPLIED | 
           |                         |        |                                      | \r                                           
                                  +|         | 
           |                         |        |                                      | update tms_message set locale='en_GB' where l
ocale is null;                     |         | 
       808 | 2015-07-15 07:07:52.92  | oms    | patch-511-shotrigger-update-expr.sql | ALTER TABLE SHIPMENT_ORDER_TRIGGER ADD ON_UPD
ATE SMALLINT DEFAULT 0 NOT NULL;\r+| APPLIED | 
           |                         |        |                                      | \r                                           
                                  +|         | 
           |                         |        |                                      | ALTER TABLE SHIPMENT_ORDER_TRIGGER ADD ON_UPD
ATE_EXPRESSION VARCHAR(2000);      |         | 
(2 rows)

/ we moeten de 2de patch met de hand doen	,
/ Vanuit eclipse	,
ALTER TABLE SHIPMENT_ORDER_TRIGGER ADD ON_UPDATE SMALLINT DEFAULT 0 NOT NULL;
ALTER TABLE SHIPMENT_ORDER_TRIGGER ADD ON_UPDATE_EXPRESSION VARCHAR(2000);

/ 13	. 

/ met psql	,
pnllogistics3=# create database bard;
CREATE DATABASE

[eric@localhost Backup]$ bard-pg_dump-t.sh 
$ ls -ltr
-rw-rw-r--. 1 eric     eric       1807427 Sep 11 14:58 bard-t-2015-09-11.dump

[eric@localhost Backup]$ bard-pg_restore-l.sh bard bard-t-2015-09-11.dump 

/  13	. 

[eric@localhost server]$ pwd
/home/eric/Devel/Java/JBoss/jboss-4.0.5.GA/server
[eric@localhost server]$ cp -a pnllogistics/ bard

$ cd deploy
$ vi postgres-ds.xml
<datasources>
    <xa-datasource>
        <xa-datasource-property name="DatabaseName">bard</xa-datasource-property>
    <local-tx-datasource>
                <connection-url>jdbc:postgresql://127.0.0.1:5432/bard</connection-url>

[eric@localhost deploy]$ mv pnllogistics-schedule-service.xml bard-schedule-service.xml 
[eric@localhost deploy]$ vi bard-schedule-service.xml 
<server>
    <mbean code="org.jboss.varia.scheduler.Scheduler" name=":service=BardInterfaces">
        <attribute name="SchedulableArguments">ejb/BardInterfaceRunnerFacade,all-admin,admin123@MPO</attribute>

$ vi application.properties
base.product = bard

/ we maken een server aan in eclipse	,
Server name: bard

Progam arguments
-c bard
VM arguments
${jrebel_args} -Dprogram.name=run.bat -Djava.endorsed.dirs="/home/eric/Devel/Java/JBoss/jboss-4.0.5.GA/bin/../lib/endorsed" -Xms128m -Xmx512m

Working directory
home/eric/Devel/Java/JBoss/jboss-4.0.5.GA/bin

Server Configuration: bard

# select*from tms_user
      626 | djansen   | Dries Ying Jansen       | dries.ying@ziggo.nl          |          1 |          0 | 2015-09-09 15:20:58.897 
|             0 |              0 | 2015-08-28 10:52:33.037 |          0 |           0 |      10100 | 2015-08-28 | Italia72      |   
/ log hiermee in	, maak zelf:











/ Einde BARD-22

/ DEBUG BARD-22

Back to previous screen Sorry, an error occurred
java.lang.NullPointerException 

at com.mpobjects.oms.service.shipmentordercostpart.ShipmentOrderCostPartServiceImpl.updateShipmentOrderCostPartDueToShipmentOrderUpdateEvent(ShipmentOrderCostPartServiceImpl.java:316) 
at com.mpobjects.oms.ratecalc.model.eventhandler.util.AllocationEventListener.handleEvent(AllocationEventListener.java:76) 
at com.mpobjects.oms.model.eventhandler.util.ListenerList.fireEvent(ListenerList.java:82) 
at com.mpobjects.oms.service.event.EventHandlerServiceImpl.handleEvent(EventHandlerServiceImpl.java:109) 
at com.mpobjects.oms.model.service.ShipmentOrderServiceImpl.triggerEventHandler(ShipmentOrderServiceImpl.java:2541) 
at com.mpobjects.oms.model.service.ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderServiceImpl.java:2053) 
at com.mpobjects.oms.model.service.ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderServiceImpl.java:1989) 
at com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderSaveAction.handleSave(ShipmentOrderSaveAction.java:102) 
at com.mpobjects.oms.ratecalc.control.shipmentorder.action.ShipmentOrderSaveAction.handleSave(ShipmentOrderSaveAction.java:19) 
at com.mpobjects.control.action.AbstractSaveAction.act(AbstractSaveAction.java:69) 
at com.mpobjects.control.action.AbstractAction.act(AbstractAction.java:171) 

/ we click 'Save shipment item'	,

/ we moeten voor debug sources cannot find:
/ Kies Project
/ 	Kies 'trunk'
/s
ShipmentOrderSaveAction(ShipmentOrderSaveAction).handleSave() line: 80	
			ShipmentOrderVO shipmentOrderVO = (ShipmentOrderVO) getValueObject();
/ TODO
			} else {
				ShipmentOrderService shipmentOrderService = ShipmentOrderUtil.getShipmentOrderFacadeLocal();
				ShipmentOrderVO myOldVO = shipmentOrderService.getShipmentOrder(shipmentOrderVO.getSystemId());
				shipmentOrderVO.setSchedule(null);
				shipmentOrderVO.setScheduleXml(myOldVO.getScheduleXml());
				shipmentOrderVO.setScheduleDescription(myOldVO.getScheduleDescription());
/s
ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, boolean, boolean) line: 1974	
				myOldVO = shipmentOrderDao.getBySystemId(aShipmentOrder.getSystemId());
			return updateShipmentOrder(aShipmentOrder, new TMSEventContext(), propagateChange);
/s
ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 2007	

jericho-html-3.3.jar



/ Einde DEBUG BARD-22

/ PCT-678

/ Geef in db	, 
module.oms.shipmentOrder.requestedServiceLevel.hidden=true
module.oms.shipmentOrder.reasonCode.hidden=true
module.oms.shipmentOrder.plannedStartAfter.hidden=true
module.oms.shipmentOrder.plannedEndAfter.hidden=true
module.oms.shipmentOrder.emission.hidden=true
module.oms.shipmentOrder.salesOrganization.hidden=true
module.oms.shipmentOrder.reference8.hidden=true
module.oms.shipmentOrder.reference9.hidden=true
module.oms.shipmentOrder.reference10.hidden=true

hide requested service level on the shipment order form
hide reason code field on the shipment order form
hide planned start after field on the shipment order form
hide planned end after field on the shipment order form
hide emission field on the shipment order form
hide sales organization field on the shipment order form
hide reference8 field on the shipment order form
hide reference9 field on the shipment order form
hide reference10 field on the shipment order form

/ In de db is al module.oms.shipmentOrder.requestedservicelevel.hidden
/ onze GUI zit case NIET	, 
/ TODO

select*from properties_value v where v.properties_system_id =(select system_id from properties p where p.property_name='module.oms.shipmentOrder.salesOrganization.hidden');

/ we moeten deza eerst rm	,
delete from properties_value v where v.properties_system_id =(select system_id from properties p where p.property_name='module.oms.shipmentorder.requestedservicelevel.hidden');
delete from properties p where p.property_name='module.oms.shipmentorder.requestedservicelevel.hidden';

delete from properties_value v where v.properties_system_id =(select system_id from properties p where p.property_name='module.oms.shipmentorder.salesorganization.hidden');
delete from properties p where p.property_name='module.oms.shipmentorder.salesorganization.hidden';

delete from properties_value v where v.properties_system_id =(select system_id from properties p where p.property_name='module.oms.shipmentorder.salesorganization.hidden');
delete from properties p where p.property_name='module.oms.shipmentorder.salesorganization.hidden';

update  properties set property_name='module.oms.shipmentOrder.salesOrganization.hidden' where property_name='module.oms.shipmentorder.salesOrganization.hidden';
update  properties set property_name='module.oms.shipmentOrder.reference8.hidden' where property_name='module.oms.shipmentorder.reference8.hidden';
update  properties set property_name='module.oms.shipmentOrder.reference10.hidden' where property_name='module.oms.shipmentorder.reference10.hidden';

/ Einde PCT-678

module.oms.shipmentOrder.requestedServiceLevel.hidden

/ PCT-649

/s
/ stacktrace	, 
	ListFieldTag(FieldTag).checkForPropertyOverwrites(String, String) line: 230	
aFieldName	"orderProcess" (id=21495)	
		String myPropertyPrefix = getPropertyPrefix(aFieldName);
module.oms.shipmentorder.orderprocess.

		String myTagProperty = myPropertyPrefix + anAtrribute;
module.oms.shipmentorder.orderprocess.hidden
		return getProperty(myTagProperty, null);

	ListFieldTag(FieldTag).handleOverridable() line: 1210	
		if (isOverRideable()) {
			String myHiddenPropertyValue = checkForPropertyOverwrites(getName(), "hidden");
			if (myHiddenPropertyValue != null) {
				setHidden(BooleanUtils.isTrue(myHiddenPropertyValue));
			}
			String myRequiredPropertyValue = checkForPropertyOverwrites(getName(), "required");
			if (myRequiredPropertyValue != null) {
				setRequired(BooleanUtils.isTrue(myRequiredPropertyValue));
			}
			String myReadOnlyPropertyValue = checkForPropertyOverwrites(getName(), "readonly");
			if (myReadOnlyPropertyValue != null) {
				setReadOnly(myReadOnlyPropertyValue);
			}
			String myMaxLengthPropertyValue = checkForPropertyOverwrites(getName(), "maxlength");
			if (myMaxLengthPropertyValue != null) {
				setMaxLength(myMaxLengthPropertyValue);
			}
		}
	ListFieldTag(FieldTag).doStartTag() line: 319	
			handleOverridable();

	shipment-order_edit.jsp line: 202	
								<mpo:listField name="orderProcess" type="orderProcess" overRideable="true" required="true"/>

/ we debug verder	,
ListFieldTag(FieldTag).checkForPropertyOverwrites(String, String) line: 230	
		return getProperty(myTagProperty, null);
/s
ListFieldTag(FieldTag).getProperty(String, String) line: 1175	
		EntityInterface myValueObject = getFieldOwner().getValueObjects().iterator().next();
ShipmentOrder: SH000002974(SystemId:26845726; Org:PNL-CARGO)
			myPropertyValue = ApplicationPropertyManager.getInstance().getProperty(myOrganizationSystemid, aProperty, aDefaultValue);
aProperty	"module.oms.shipmentorder.orderprocess.hidden" (id=23333)	

$ vi shipment-order_edit.jsp
	<mpo:dateFieldTZ name="requestedStartBefore" timeZone="${formVO.fromPartyVO.timeZoneId}" type="DATE_TIME" overRideable="true" />

/ we maken in db: module.oms.shipmentorder.requestedstartbefore.required:true 


/ FIX PCT-649

$ vi FieldTag.java

	public String getPropertyPrefix(String aFieldName) {
		String ret = "module." + EntityActionUtil.getModule(getRequest()) + "." + getFieldOwner().getEntity() + ".";
		if (org.apache.commons.lang.StringUtils.isNotBlank(getPrefix())) {
			ret += getPrefix() + ".";
		}
		ret += aFieldName + ".";
		return ret;
	}

	public void resetTag() {
		...
		setRequired(false);
		setMaxLength(250);	 // ook maar meteen	,
	}

/ Aan deze method hebben we niets veranderd	, maar bijbehorende 4 properties moeten we  altijd reset	,
$ vi FieldTag.java
	protected void handleOverridable() {
		if (isOverRideable()) {
			String myHiddenPropertyValue = checkForPropertyOverwrites(getName(), "hidden");
			if (myHiddenPropertyValue != null) {
				setHidden(BooleanUtils.isTrue(myHiddenPropertyValue));
			}
			String myRequiredPropertyValue = checkForPropertyOverwrites(getName(), "required");
			if (myRequiredPropertyValue != null) {
				setRequired(BooleanUtils.isTrue(myRequiredPropertyValue));
			}
			String myReadOnlyPropertyValue = checkForPropertyOverwrites(getName(), "readonly");
			if (myReadOnlyPropertyValue != null) {
				setReadOnly(myReadOnlyPropertyValue);
			}
			String myMaxLengthPropertyValue = checkForPropertyOverwrites(getName(), "maxlength");
			if (myMaxLengthPropertyValue != null) {
				setMaxLength(myMaxLengthPropertyValue);
			}
		}


/ Add in db	,

module.oms.shipmentOrder.from.address.required
module.oms.shipmentOrder.from.address2.required
module.oms.shipmentOrder.from.city.required
module.oms.shipmentOrder.from.postalCode.required
module.oms.shipmentOrder.to.address.required
module.oms.shipmentOrder.to.address2.required
module.oms.shipmentOrder.to.city.required
module.oms.shipmentOrder.to.postalCode.required
module.oms.shipmentOrder.billTo.billToParty.required

FieldTag.getPropertyPrefix now calls FieldTag.getPrefix, so together with the overRideable property in JSP we can create a database property which determines is the field is required, or hidden fpr example. 



/ Einde FIX PCT-649

/ 7		. 

/ In de properties table staat nog

pnllogistics3=# select*from properties  where property_name like '%address2%';
 system_id | is_deleted |                  property_name                  | property_type | mandatory | is_visible |           descr
iption            
-----------+------------+-------------------------------------------------+---------------+-----------+------------+----------------
------------------
  26849122 |          1 | module.oms.shipmentorder.from.address2.required | BOOLEAN       |         0 |          0 | require address
 on shipment from
(1 row)

/ Maar de GUI geeft deze NIET	,

/ Configuration, Administration, Properties	,
/ wicket page: PropertyPage

/ 13	. 

PropertyPage
	EvoEditPage
		EvoListPage

/ EvoListPage is de belangrijkste parent van PropertyPage:
	public EvoListPage() {
		super();
		daoWrapper = getBeanWrapper();
com.mpobjects.view.wicket.util.BeanWrapper@229be90[type=interface com.mpobjects.oms.dao.property.PropertyDAO,beanName=<null>]
		setDataProperties();
		createPage();
...
/s
PropertyPage.createListPanel() line: 30	
		searchListPanel = new PropertySearchListPanel("evoSearchList", null, webComponentEventSwitchBoard, daoWrapper, getListActions()) {
/ See de daoWrapper	,
/ TODO
/ Wat triggers de filter button	,


 





/ Einde PCT-649

/ DEBUG PCT-675

https://test-pnl.mp-objects.com/pnllogistics/exwicket

/ 7	. 

/ Waar wordt de language file ingelezen?

/ we start de application, 

/ de ExtendedWicketWebApplication en de WicketWebApplication worden .init()	, die ApplicationUtils.init() calls	, en die doet	,
		IResourceSettings myResourceSettings = anApplication.getResourceSettings();
		myResourceSettings.addStringResourceLoader(4, new LanguageManagerStringResourceLoader());


/ en geef  http://localhost:8080/tms/core/index_frameset, Enter, dus login	 deel appl,
/s
/ stacktrace	,
	LanguageManager.<clinit>() line: 61	
	static {
		propertiesFiles = new HashMap<Locale, Properties>();
		// ensure "en" is loaded
		getPropertiesFile(DEFAULT_LOCALE);
/t
	LabelTag(TagBase).getLanguageManager() line: 45	
			theLanguageManager = new LanguageManager(getRequest());
/t
	LabelTag.doStartTag() line: 41	
		String myString = getLanguageManager().getByJavaName(theEntity, theName);
/t
	login_form.jsp line: 41	
<div id="content">
	<div class="box" id="loginBox">
		<div class="boxHead"><h3>Login</h3></div>
		<div class="boxBody">
			<form id="loginForm" action="../j_spring_security_check" method="post">
				<dl>
->					<dt><mpo:label name="userId" /></dt>

/ Dus we zitten in een new LanguageManager	, maar omdat dat de 1ste keer is, moet hij eerst LanguageManager.<clinit> doen	,

/ we gaan debug	,

/ Start appl	, geef enter , dus start login deel appl	,
/s
LanguageManager.<clinit>() line: 61	
		propertiesFiles = new HashMap<Locale, Properties>();
		// ensure "en" is loaded
		getPropertiesFile(DEFAULT_LOCALE);
/s
LanguageManager.getPropertiesFile(Locale) line: 201	
/=
	protected static Properties getPropertiesFile(Locale aLocale) {
aLocale="en"
		if (propertiesFiles.containsKey(aLocale)) {
/ NEE
/ propertiesFiles={}
		synchronized (propertiesFiles) {
			Properties langauge = new Properties(getParentPropertiesFile(aLocale));
{}
/want
/s
		if (aLocale == null || DEFAULT_LOCALE.equals(aLocale)) {
/ JA
			// this one should be loaded by default
			return propertiesFiles.get(DEFAULT_LOCALE);
/t
			InputStream languageResc = getLanguageResource(aLocale);
/s
LanguageManager.getLanguageResource(Locale) line: 129	
		rescNames.add(String.format(LANGUAGE_RESOURCE_NAME, aLocale.toString()));
/ LANGUAGE_RESOURCE_NAME=/language_%s.properties
[/language_en.properties]
		for (String resourceName : rescNames) {
			InputStream res = LanguageManager.class.getResourceAsStream(resourceName);
			if (res != null) {
				return res;
/t
			if (languageResc != null) {
				try {
					langauge.load(new InputStreamReader(languageResc, Charsets.UTF_8));
{...}
/ aantal=2353
			propertiesFiles.put(aLocale, langauge);

/c
/ we vallen in	,
/ waar het eig. om te doen is	, vanuit de JSP	,
LanguageManager.<init>(HttpServletRequest) line: 77	

/ De locale VOOR de login van een user is en_GB	,
/ LanguageManager.<clinit> heeft als language_en properties loaded	, met key "en"	,

		setLocale(LocaleUtils.getActiveLocale());
/s
LocaleUtils.getActiveLocale() line: 63	
		ScsUserDetails ud = AuthenticationUtils.getUserDetails();
null
/ Want we zijn VOOR login	,
		if (ud != null) {
/ NEE
			return ud.getLocale();
/ NIET
		}
		return getSystemLocale();
en_GB
/t
LanguageManager.<init>(HttpServletRequest) line: 79	
		setLocale(LocaleUtils.getActiveLocale());
/s
LanguageManager.setLocale(Locale) line: 552	
		theLocale = aLocale;
		...
/t
LanguageManager.<init>(HttpServletRequest) line: 79	
		setLocale(LocaleUtils.getActiveLocale());
d/
en_GB
		getPropertiesFile();
/s
LanguageManager.getPropertiesFile() line: 557	
		return getPropertiesFile(getLocale());
/ getLocale()=theLocale="en_GB"
/s
LanguageManager.getPropertiesFile(Locale) line: 210	
		if (propertiesFiles.containsKey(aLocale)) {
/ NEE
			Properties langauge = new Properties(getParentPropertiesFile(aLocale));
/ aLocale="en_GB"
aLocale	Locale  (id=1120)	
/s
LanguageManager.getParentPropertiesFile(Locale) line: 182	
aLocale
	defaultLocale	Locale  (id=1122)	
en_US
		language	"en" (id=18273)	
		region	"US" (id=18275)	
		script	"" (id=18252)	
		variant	"" (id=18252)	

	baseLocale	BaseLocale  (id=18255)	
en_GB
		language	"en" (id=18273)	
		region	"GB" (id=18275)	
		script	"" (id=18252)	
		variant	"" (id=18252)	

		if (!org.apache.commons.lang.StringUtils.isBlank(aLocale.getCountry())) {
GB
			return getPropertiesFile(new Locale(aLocale.getLanguage(), "", ""));
/ aLocale.getLanguage()="en"
/s
	protected static Properties getPropertiesFile(Locale aLocale) {
/ aLocale=en
/ propertiesFiles=hashmap{Locale(en):Properties{...}}
		if (propertiesFiles.containsKey(aLocale)) {
/ JA
			return propertiesFiles.get(aLocale);
/ Vindt "en"	, zonet in propertiesFiles set	,
/t
	protected static Properties getPropertiesFile(Locale aLocale) {
/ aLocale="en_GB"
			Properties langauge = new Properties(getParentPropertiesFile(aLocale));
{}
/=
langauge	Properties  (id=18428)	
	count	0	
	defaults	Properties  (id=1126)	
		count	2354	
		defaults	null	

			InputStream languageResc = getLanguageResource(aLocale);
null
/ Er is GEEN language_en_GB.properties file	,
			propertiesFiles.put(aLocale, langauge);
en_GB:{}
/ waar {} betekent: Properties met 0 entries	, default=Properties achter en	, 

/t
LanguageManager.<init>(HttpServletRequest) line: 80	
		setLocale(LocaleUtils.getActiveLocale());
en_GB
		getPropertiesFile();
/d
		if (aRequest != null) {
			if (!AuthenticationUtils.isAuthenticated()) {
				// User not logged in. check user browser pref language
				String myLang = aRequest.getHeader("Accept-Language");
en-US,en;q=0.8
				if (myLang != null && myLang.length() >= 2) {
					setLocale(new Locale(myLang.substring(0, 2)));
en

 
/ het login scherm verschijnt	, 
/ eric logs in	,
/ dan vallen we in 	,
/s
LanguageManager.<init>(HttpServletRequest) line: 77	

/ Intermezzo

	LanguageManager.<init>(HttpServletRequest) line: 78	
	MenuGenerateAction.act() line: 58	
	MenuGenerateAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 171	


/ Einde Intermezzo

/ we vallen weer in LanguageManager.<init>	,
/s
	public LanguageManager(HttpServletRequest aRequest) {
		setLocale(LocaleUtils.getActiveLocale());
/s
LocaleUtils.getActiveLocale() line: 60	
		ScsUserDetails ud = AuthenticationUtils.getUserDetails();
ud	ScsUserDetails  (id=18758)	
	accountNonExpired	true	
	accountNonLocked	true	
	activeOrganizationAuthority	OrganizationGrantedAuthority  (id=18862)	
	authorities	ArrayList  (id=18864)	
	credentialsNonExpired	true	
	enabled	true	
	locale	Locale  (id=18880)	
en_GB_pnllogistics
	password	null	
	systemId	26682479	
	username	"eric" (id=18883)	
			return ud.getLocale();
/t
		setLocale(LocaleUtils.getActiveLocale());
/d
		getPropertiesFile();
/s
LanguageManager.getPropertiesFile() line: 557	
/s
LanguageManager.getPropertiesFile(Locale) line: 201	
		if (propertiesFiles.containsKey(aLocale)) {
/ NEE
		synchronized (propertiesFiles) {
			Properties langauge = new Properties(getParentPropertiesFile(aLocale));
/s
LanguageManager.getParentPropertiesFile(Locale) line: 172	
		if (!org.apache.commons.lang.StringUtils.isBlank(aLocale.getVariant())) {
/ JA
aLocale	Locale  (id=17380)	
	defaultLocale	Locale  (id=17381)	
n_US
	isoCountries	null	
	isoLanguages	null	
	baseLocale	BaseLocale  (id=17382)	
		hash	110499041	
		language	"en" (id=17383)	
		region	"GB" (id=17384)	
		script	"" (id=17385)	
		variant	"pnllogistics" (id=17386)	

			return getPropertiesFile(new Locale(aLocale.getLanguage(), aLocale.getCountry(), ""));
/ De parent: laat de variant weg	, logisch	,

/  getPropertiesFile is een misnomer: het is een Properties inst	,
/s
LanguageManager.getPropertiesFile(Locale) line: 201	
/=
	protected static Properties getPropertiesFile(Locale aLocale) {
aLocale=en_GB
		if (propertiesFiles.containsKey(aLocale)) {
			return propertiesFiles.get(aLocale);
/t
LanguageManager.getPropertiesFile(Locale) line: 210	
			Properties langauge = new Properties(getParentPropertiesFile(aLocale));
/s
Properties.<init>(Properties) line: 143	
        this.defaults = defaults;
/t
LanguageManager.getPropertiesFile(Locale) line: 210	
			Properties langauge = new Properties(getParentPropertiesFile(aLocale));
/d
langauge	Properties  (id=18033)	
	count	0	
	defaults	Properties  (id=18034)	
		count	0	
		defaults	Properties  (id=18076)	
			count	2354	
			defaults	null	
			modCount	2363	

			InputStream languageResc = getLanguageResource(aLocale);
			if (languageResc != null) {
				try {
					langauge.load(new InputStreamReader(languageResc, Charsets.UTF_8));
langauge	Properties  (id=18033)	
	count	168	
	defaults	Properties  (id=18034)	
		count	0	
		defaults	Properties  (id=18076)	
			count	2354	
			defaults	null	
			modCount	2363	
			propertiesFiles.put(aLocale, langauge);

/ bij een volgende tag	, weer
LanguageManager.<init>(HttpServletRequest) line: 79	
		setLocale(LocaleUtils.getActiveLocale());
		getPropertiesFile();
/ Maar nu is hij er al	, de Properties inst achter Locale en_GB_pnllogistics	,
/s
	protected static Properties getPropertiesFile(Locale aLocale) {
		if (propertiesFiles.containsKey(aLocale)) {
			return propertiesFiles.get(aLocale);
/ is er al	,


/ 7	. 

/ Geef http://localhost:8080/tms/exwicket	, Enter	,

/ we vallen NIET in	...
/ TODO

$ vi deploy/tms.war/WEB-INF/web.xml

<servlet>
    <servlet-name>WicketServlet</servlet-name>
    <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>
    <init-param>
        <param-name>applicationClassName</param-name>
        <param-value>com.mpobjects.view.wicket.WicketWebApplication</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
</servlet>

<servlet>
    <servlet-name>ExtendedWicketServlet</servlet-name>
    <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>
    <init-param>
        <param-name>applicationClassName</param-name>
        <param-value>com.mpobjects.view.wicket.ExtendedWicketWebApplication</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
</servlet>

/ 7	. 

/ 13	.

/ Aan de ene kant	,

/ Menu:
planning, shipment order, mass update

$ vi ShipmentOrderMassUpdatePage.html
<wicket:extend>
    <h1><wicket:message key="shipmentordermassupdatepage.title"></wicket:message></h1>
    <div wicket:id="query"></div>
</wicket:extend>

conf
language_en.properties
2,927: shipmentordermassupdatepage.title=Shipment Order Mass Update  
language_nl_NL_pnltms.properties
538: shipmentordermassupdatepage.title=Mass Update Dashboard 

/ 1313	. 

/ Aan de andere kant	,

/ Menu:
configuration, planning, role	,

$ vi RolePage.java
entityName=Role
create=Create a Role
pageTitle=Roles
edit=Edit
create=Create new Role
pageTitle=Role
entityName=Role
code=Name
name=Code
description=Description

/ ad 13	, 

$ vi ApplicationUtils.java
	public static void init(WebApplication anApplication) {
		myResourceSettings.addStringResourceLoader(4, new LanguageManagerStringResourceLoader());

/ we zien dat tijdens render fase	,
/s
MarkupInheritanceResolver$TransparentWebMarkupContainer(Component).render(MarkupStream) line: 2525	
				onRender(markupStream);
...
/s
LanguageManagerStringResourceLoader.loadStringResource(Component, String) line: 46	
/=
	public String loadStringResource(Component aComponent, String aKey) {
aKey	"shipmentordermassupdatepage.title" (id=16822)	
				return getLanguageManager().getTranslation(aComponent.getClass().getSimpleName(), aKey, aComponent.getLocale(), aComponent.getStyle(), true);

/ getLanguageManager()=WicketLanguageManager	,
/ deze extends LanguageManager	, waar we tot nu toe altijd waren	, 

/ Dus 
LanguageManagerStringResourceLoader.loadStringResource(Class<?>, String, Locale, String) line: 31	
/ wordt calledn in render fase	,


/ als we de wicket page opnieuw willen debug 	,
LanguageManagerStringResourceLoader.loadStringResource(Class<?>, String, Locale, String) line: 31	
/ dan moeten we reload config doen	, 
/ anders pakt cache, en valt hij niet in deze fct	,

/ 7	. 

/ als we een .oroperties files maken, leest hij eerst daaruit	, 
/ we maken	,
$ vi ShipmentOrderMassUpdatePage.properties 
shipmentordermassupdatepage.title=TITLE
/ en we doen : reload config	, 
/ Geef	, 
planning, shipment order, mass update	, 
/ we zien title TITLE	,
/ Als we de file ShipmentOrderMassUpdatePage.properties rm, en reload config, blijven we TITLE zien	, 
/ we moesten de appl opnieuw start	,
/ TODO

/ 7	. 

/ core/index_frameset	,

/ login page is een JSP	, met ...Tag.doStartTag	,

LabelTag.doStartTag() line: 41	
		String myString = getLanguageManager().getByJavaName(theEntity, theName);
/s
LabelTag(TagBase).getLanguageManager() line: 45	
		if (theLanguageManager == null) {
			theLanguageManager = new LanguageManager(getRequest());
/s
LanguageManager.<init>(HttpServletRequest) line: 78	
		setLocale(LocaleUtils.getActiveLocale());
/s
LocaleUtils.getActiveLocale() line: 59	
		ScsUserDetails ud = AuthenticationUtils.getUserDetails();
		if (ud != null) {
			return ud.getLocale();
eric
en_GB_pnllogistics

/ 7	. 

/ nu geven we een wicket page,	 RolePage	,

/ stack trace	,

	LanguageManagerStringResourceLoader.loadStringResource(Component, String) line: 46	
				return getLanguageManager().getTranslation(aComponent.getClass().getSimpleName(), aKey, aComponent.getLocale(), aComponent.getStyle(), true);

	Localizer.getStringIgnoreSettings(String, Component, IModel<?>, String) line: 241	
				value = loader.loadStringResource(component, key);

	Localizer.getString(String, Component, IModel<?>, String) line: 313	
		String value = getStringIgnoreSettings(key, component, model, null);

	StringResourceModel.getString() line: 503	
			value = localizer.getString(getResourceKey(), component, model, defaultValue);

	StringResourceModel.load() line: 647	
		return getString();

	StringResourceModel.load() line: 181	

	StringResourceModel(LoadableDetachableModel).getObject() line: 120	
			transientModelObject = load();

	RoleEditFormPage$5.createButton(IModel<RoleVO>, String) line: 242	
					String jsCode = "if (!confirm('"
							+ JavascriptUtils.escapeQuotes(new StringResourceModel("cancelConfirm", RoleEditFormPage.this, aModel, "Ignore all changes made?") .getObject()) + "')) return false;";

	RoleEditFormPage$5(EntityActionButton).createComponent(String, IModel<T>) line: 49	
		return new EntityABPanel(aComponentId, createButton(aModel, "button"));

	EntityFormActionBuilder(BaseActionBuilder).createActions(RepeatingView, IModel<T>) line: 75	
			Component component = action.createComponent(view.newChildId(), aModel);

	BaseActionBuilder$EntityActionPanel.<init>(String, BaseWebComponent, WebComponentEventSwitchBoard, IModel<T>) line: 34	
			createActions(view, aModel);

	EntityFormActionBuilder.build(String, CompoundPropertyModel<T>, WebComponentEventSwitchBoard, GenericFormPanel<T>) line: 38	
		return new EntityActionPanel(aId, aParent, aWebComponentEventSwitchBoard, aModel);

	RoleEditPanel(GenericFormPanel).getActionsPanel(String, CompoundPropertyModel<T>) line: 187	
		return panelBuilder.build(componentId, model, webComponentEventSwitchBoard, this);

	RoleEditPanel(GenericFormPanel).createPanel(CompoundPropertyModel<T>) line: 170	
		AbstractActionsPanel<T> actionPanel = getActionsPanel("actionPanel", model);

	RoleEditPanel(EvoEditPanel).createPanel(CompoundPropertyModel<T>) line: 84	
			super.createPanel(aModel);

	RoleEditPanel(EvoEditPanel).<init>(String, WebComponentEventSwitchBoard, FormActionsPanelBuilder<T>, BeanWrapper<EnumeratedValueObjectDAOInterface<T>>, EvoDataProperties) line: 54	
		createPanel(tempModel);

	RoleEditPanel.<init>(String, WebComponentEventSwitchBoard, FormActionsPanelBuilder<RoleVO>, BeanWrapper<EnumeratedValueObjectDAOInterface<RoleVO>>, EvoDataProperties) line: 38	
		super(aId, aWebComponentEventSwitchBoard, aFormActionsPanelBuilder, aDaoWrapper, aDataProperties);

	RoleEditFormPage.createEditPanel() line: 172	
		editPanel = new RoleEditPanel("editPanel", new WebComponentEventSwitchBoard(), panelBuilder, daoWrapper, dataProperties);

	RoleEditFormPage(EvoEditFormPage).createPage() line: 143	
		createEditPanel();

	RoleEditFormPage(EvoEditFormPage).<init>(EvoEditFormCallback, BeanWrapper<EnumeratedValueObjectDAOInterface<T>>, EvoDataProperties) line: 90	
		daoWrapper = aDaoWrapper;
		dataProperties = aDataProperties;
		createPage();

	RoleEditFormPage.<init>(EvoEditFormCallback, BeanWrapper<EnumeratedValueObjectDAOInterface<RoleVO>>, EvoDataProperties) line: 71	
		super(aCallback, aDaoWrapper, aDataProperties);

	RolePage.createPage() line: 46	
		editPage = new RoleEditFormPage(this, daoWrapper, dataProperties);

	RolePage(EvoListPage).<init>() line: 51	
		daoWrapper = getBeanWrapper();
/ TODO
		setDataProperties();
		createPage();

	RolePage(EvoEditPage).<init>() line: 80	
		super();

	RolePage.<init>() line: 35	
		super();

/ we gaan debug	,
LanguageManagerStringResourceLoader.loadStringResource(Component, String) line: 51	
				return getLanguageManager().getTranslation(aComponent.getClass().getSimpleName(), aKey, aComponent.getLocale(), aComponent.getStyle(), true);
/s
		if (languageManager == null || ...) 
/ JA
/ 1 keer	,
			languageManager = new WicketLanguageManager();
/s
	public LanguageManager() {
		setLocale(LocaleUtils.getActiveLocale());
/s
	public static final Locale getActiveLocale() {
		ScsUserDetails ud = AuthenticationUtils.getUserDetails();
		if (ud != null) {
			return ud.getLocale();
/ OK, eric's locale	,

////////////////////
/ Onthoud	, 
LanguageManagerStringResourceLoader.loadStringResource(Component, String) line: 51	
				return getLanguageManager().getTranslation(aComponent.getClass().getSimpleName(), aKey, aComponent.getLocale(), aComponent.getStyle(), true);

/ wicket string method calls a LanguageManagerStringResourceLoader's method calls WicketLanguageManager's methods	, set the language manager in the  LanguageManagerStringResourceLoader	, 1 keer	,   als een language manager wordt create	, wordt getActiveLocale() called, die van de login de locale ask	,

///////////////////////

aKey	com.mpobjects.scannerinterface.view.wicket.MenuPage.pageTitle
aKey	"warehouseScanning" (id=19865)	
aKey	"infoScanning" (id=19887)	
aKey	expectedEvent1

/ 7	. 

/s
LanguageManagerStringResourceLoader.loadStringResource(Component, String) line: 51	
			if (aComponent != null) {
				return getLanguageManager().getTranslation(aComponent.getClass().getSimpleName(), aKey, aComponent.getLocale(), aComponent.getStyle(), true);
/ In de getLanguageManager() zit de goede locale, van de user , en_GB_pnllogistics	, 
/ maar aComponent.getLocale() doet Session.get().getLocale()	, en dat is en_US	, en daar werkt .getTranslation() mee	,

$ vi web.xml

<servlet-mapping>
    <servlet-name>WicketServlet</servlet-name>
    <url-pattern>/wicket/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
    <servlet-name>ExtendedWicketServlet</servlet-name>
    <url-pattern>/exwicket/*</url-pattern>
</servlet-mapping>

<servlet>
    <servlet-name>WicketServlet</servlet-name>
    <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>
    <init-param>
        <param-name>applicationClassName</param-name>
        <param-value>com.mpobjects.view.wicket.WicketWebApplication</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
</servlet>

<servlet>
    <servlet-name>ExtendedWicketServlet</servlet-name>
    <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>
    <init-param>
        <param-name>applicationClassName</param-name>
        <param-value>com.mpobjects.view.wicket.ExtendedWicketWebApplication</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
</servlet>

/ Dus als we exwicket in url hebben , is ExtendedWicketWebApplication de WebApplication	,

/ Hoe wordt deze web.xml create	?
/ we zien servlet-mappings.xml, servlets.xml
/ TODO

/ 7	.

/ we zien verschil	,

$ vi WicketWebApplication.java
	@Override
	public Session newSession(Request request, Response response) {
		return new BaseWebSession(request);
	}

$ vi ExtendedWicketWebApplication.java
	@Override
	public Session newSession(Request request, Response response) {
		return new WicketAuthenticatedWebSession(request);
	}

/ we gaan debug	,
/ eric logs in , dus nog geen wicket,	 maar toch wicket filter	, maar alleen WicketWebApplication	,
/s
/ stack trace	,
	WicketWebApplication.newSession(Request, Response) line: 49	
	Session.findOrCreate(Request, Response) line: 231	
	Session.findOrCreate() line: 214	
	Session.get() line: 253	
	RequestLogger.requestTime(long) line: 229	
	MpoWebRequestCycle(RequestCycle).detach() line: 1192	
	MpoWebRequestCycle(RequestCycle).steps() line: 1491	
	MpoWebRequestCycle(RequestCycle).request() line: 545	
	WicketFilter.doGet(HttpServletRequest, HttpServletResponse) line: 486	
	WicketServlet.doGet(HttpServletRequest, HttpServletResponse) line: 138	
		if (wicketFilter.doGet(servletRequest, servletResponse) == false)

	WicketServlet(HttpServlet).service(HttpServletRequest, HttpServletResponse) line: 697	
	WicketServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 810	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 252	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	FirstLoginFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 76	
			} else {
				aChain.doFilter(aRequest, aResponse);

	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 202	
	...

/ we gaan debug	,
/s
WicketWebApplication.newSession(Request, Response) line: 49	
		return new BaseWebSession(request);
/s
	public BaseWebSession(final Request request) {
		super(request);

		if (AuthenticationUtils.isAuthenticated()) {
			LOG.debug("Starting new session for user [" + AuthenticationUtils.getUserId() + "]");
			setLocale(LocaleUtils.getActiveLocale());
/s
	public static final Locale getActiveLocale() {
		ScsUserDetails ud = AuthenticationUtils.getUserDetails();
		if (ud != null) {
			return ud.getLocale();
en_GB_pnllogistics

/ we login op	,
http://localhost:8080/tms/exwicket/?wicket:bookmarkablePage=:com.mpobjects.view.wicket.login.LoginPage
/s
/stacktrace	,

	ExtendedWicketWebApplication.newSession(Request, Response) line: 69	
	Session.findOrCreate(Request, Response) line: 231	
	Session.findOrCreate() line: 214	
	Session.get() line: 253	
	ExtendedWicketWebApplication$1(RequestCycle).getSession() line: 482	
	WebRequestCycleProcessor(AbstractRequestCycleProcessor).resolveBookmarkablePage(RequestCycle, RequestParameters) line: 241	
	WebRequestCycleProcessor.resolve(RequestCycle, RequestParameters) line: 78	
	ExtendedWicketWebApplication$1(RequestCycle).step() line: 1339	
	ExtendedWicketWebApplication$1(RequestCycle).steps() line: 1465	
	ExtendedWicketWebApplication$1(RequestCycle).request() line: 545	
	WicketFilter.doGet(HttpServletRequest, HttpServletResponse) line: 486	
	WicketServlet.doPost(HttpServletRequest, HttpServletResponse) line: 160	
	WicketServlet(HttpServlet).service(HttpServletRequest, HttpServletResponse) line: 717	
	WicketServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 810	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 252	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	FirstLoginFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 79	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 202	
	...

/ we gaan debug	,
ExtendedWicketWebApplication.newSession(Request, Response) line: 69	
/=
	@Override
	public Session newSession(Request request, Response response) {
		return new WicketAuthenticatedWebSession(request);
/s
	public WicketAuthenticatedWebSession(Request aRequest) {
		super(aRequest);

/ we repareen	,
/ we copy van BaseWebSession	,
	public WicketAuthenticatedWebSession(Request aRequest) {
		super(aRequest);

		if (AuthenticationUtils.isAuthenticated()) {
			LOG.debug("Starting new session for user [" + AuthenticationUtils.getUserId() + "]");
			setLocale(LocaleUtils.getActiveLocale());
		}
	}


 7	. 

/s
$ vi MenuPage.java

	public static final String ARRIVAL_SCANNING = "arrivalScanning";
	public static final String BUILD_CONTAINER = "buildContainer";
	public static final String COLLECTION_ACTION_SCAN = "collectionActionScan";
	public static final String CONTENT_CHECK = "contentCheck";
	public static final String DELIVERY_ACTION_SCAN = "deliveryActionScan";
	public static final String DIRECTION = "directionscan";
	public static final String EXPECTED_1 = "expectedEvent1";
	public static final String EXPECTED_2 = "expectedEvent2";
	public static final String EXPECTED_3 = "expectedEvent3";
	public static final String EXPECTED_4 = "expectedEvent4";
	public static final String EXPECTED_5 = "expectedEvent5";
	public static final String INFO_SCAN = "infoScanning";
	public static final String SCAN_TO_DELIVERY = "scanToDelivery";
	public static final String SCAN_TO_LINEHAUL = "scanToLinehaul";
	public static final Map<String, Class<? extends Page>> SCANNER_PAGES;
	public static final String WAREHOUSE_SCAN = "warehouseScanning";

	static {
		SCANNER_PAGES = new HashMap<String, Class<? extends Page>>();
		SCANNER_PAGES.put(ARRIVAL_SCANNING, ContentCheckPage.class);
		SCANNER_PAGES.put(BUILD_CONTAINER, BuildContainerPage.class);
		SCANNER_PAGES.put(SCAN_TO_LINEHAUL, ScanToLinehaulPage.class);
		SCANNER_PAGES.put(SCAN_TO_DELIVERY, ScanToDeliveryPage.class);
		SCANNER_PAGES.put(CONTENT_CHECK, ContentCheckPage.class);
		SCANNER_PAGES.put(WAREHOUSE_SCAN, WarehouseScanPage.class);
		SCANNER_PAGES.put(INFO_SCAN, InfoScanPage.class);
		SCANNER_PAGES.put(EXPECTED_1, ExpectedEventScanPage.class);
		SCANNER_PAGES.put(EXPECTED_2, ExpectedEventScanPage.class);
		SCANNER_PAGES.put(EXPECTED_3, ExpectedEventScanPage.class);
		SCANNER_PAGES.put(EXPECTED_4, ExpectedEventScanPage.class);
		SCANNER_PAGES.put(EXPECTED_5, ExpectedEventScanPage.class);
		SCANNER_PAGES.put(DIRECTION, DirectionScanPage.class);
		SCANNER_PAGES.put(DELIVERY_ACTION_SCAN, DeliveryActionScanPage.class);
		SCANNER_PAGES.put(COLLECTION_ACTION_SCAN, CollectionActionScanPage.class);
	}

		items = MpoBeanFactory.getBean(ScanningService.class).getAuthorizedPages(items);
/ Alle items die de user mag	,
		for (String item : items) {
			Class<? extends Page> myClass = SCANNER_PAGES.get(item);
			} else {
				btn = new NavigationButton("menuItemLink", myClass);

/ item="warehouseScanning"
/ myClass= class com.mpobjects.scannerinterface.view.wicket.warehouse.WarehouseScanPage

$ vi ScannerBasePage.html
				<div class="titleContainer">
					<span wicket:id="title">Scanner page</span>


$ vi ScannerBasePage.java
	@Override
	protected void createPageComponents() {
		add(new Label("title", new ResourceModel(getName() + ".title")));
/s
WarehouseScanPage.getName() line: 65	
		return MenuPage.WAREHOUSE_SCAN;
warehouseScanning


	public static final String ARRIVAL_SCANNING = "arrivalScanning";
	public static final String BUILD_CONTAINER = "buildContainer";
	public static final String COLLECTION_ACTION_SCAN = "collectionActionScan";
	public static final String CONTENT_CHECK = "contentCheck";
	public static final String DELIVERY_ACTION_SCAN = "deliveryActionScan";
	public static final String DIRECTION = "directionscan";
	public static final String EXPECTED_1 = "expectedEvent1";
	public static final String EXPECTED_2 = "expectedEvent2";
	public static final String EXPECTED_3 = "expectedEvent3";
	public static final String EXPECTED_4 = "expectedEvent4";
	public static final String EXPECTED_5 = "expectedEvent5";
	public static final String INFO_SCAN = "infoScanning";
	public static final String SCAN_TO_DELIVERY = "scanToDelivery";
	public static final String SCAN_TO_LINEHAUL = "scanToLinehaul";
	public static final Map<String, Class<? extends Page>> SCANNER_PAGES;
	public static final String WAREHOUSE_SCAN = "warehouseScanning";

warehouseScanning.title=Warehouse Scanning
infoScanning.title=Info Scanning
xpectedEvent1.title=
xpectedEvent2.title
xpectedEvent3.title
expectedEvent4.title
expectedEvent5.title
directionscan.title
collectionActionScan.title
deliveryActionScan.title



/ 7	. 

/ we zien de keys in de language files	,
warehouseScanning=Warehouse Scan	 			/ title op button
warehouseScanning.title=Warehouse Scanning		/ title van de warehouse scanning page	,

/ hoe gaat dat , die title op de button	?
/ Via het model	,

//////////////////////////////////
/ Uiteindelijk zijn de items in item array de keys in de language file	, lower case ! 

$ vi MenuPage.java

		items = MpoBeanFactory.getBean(ScanningService.class).getAuthorizedPages(items);
		for (String item : items) {
			} else {
				btn = new NavigationButton("menuItemLink", myClass);
			}
			btn.setModel(new ResourceModel(item, item).wrapOnAssignment(this));

/ item="warehousescanning"	,

/ we hebben de stacktrace	,
/s
	LanguageManagerStringResourceLoader.loadStringResource(Component, String) line: 46	
aKey	"warehouseScanning" (id=1322)	

	Localizer.getStringIgnoreSettings(String, Component, IModel<?>, String) line: 241	
	Localizer.getString(String, Component, IModel<?>, String) line: 313	
	Localizer.getString(String, Component, String) line: 138	
	ResourceModel$AssignmentWrapper.getObject() line: 125	
			return Application.get().getResourceSettings().getLocalizer().getString(resourceKey,
				component, defaultValue);

	ResourceModel$AssignmentWrapper.getObject() line: 92	
	NavigationButton(Component).getDefaultModelObject() line: 1729	
	NavigationButton(Component).getDefaultModelObjectAsString() line: 1748	
	NavigationButton(Button).onComponentTag(ComponentTag) line: 202	
	NavigationButton(Component).renderComponent(MarkupStream) line: 2696	
	NavigationButton(MarkupContainer).onRender(MarkupStream) line: 1559	
	NavigationButton(Component).render(MarkupStream) line: 2525	
	WebMarkupContainer(MarkupContainer).renderNext(MarkupStream) line: 1461	
	WebMarkupContainer(MarkupContainer).renderComponentTagBody(MarkupStream, ComponentTag) line: 1624	
	WebMarkupContainer(MarkupContainer).onComponentTagBody(MarkupStream, ComponentTag) line: 1548	
	WebMarkupContainer(Component).renderComponent(MarkupStream) line: 2725	
	WebMarkupContainer(MarkupContainer).onRender(MarkupStream) line: 1559	
	WebMarkupContainer(Component).render(MarkupStream) line: 2525	
	RepeatingView(AbstractRepeater).renderChild(Component) line: 122	
	RepeatingView(AbstractRepeater).onRender(MarkupStream) line: 103	
	RepeatingView(Component).render(MarkupStream) line: 2525	
	Form(MarkupContainer).renderNext(MarkupStream) line: 1461	
	Form(MarkupContainer).renderComponentTagBody(MarkupStream, ComponentTag) line: 1624	
	Form(MarkupContainer).onComponentTagBody(MarkupStream, ComponentTag) line: 1548	
	Form.onComponentTagBody(MarkupStream, ComponentTag) line: 2035	
	Form(Component).renderComponent(MarkupStream) line: 2725	
	Form(MarkupContainer).onRender(MarkupStream) line: 1559	
	Form(Component).render(MarkupStream) line: 2525	
	...


/ 7. 	

$ vi ExpectedEventScanPage.java
	@Override
	public String getName() {
		return MenuPage.INFO_SCAN;

/ we moeten child class deze ExpectedEventScanPage ,	nu op 5 items dezelfde page	,

/7	. 

/ b's in
AuthenticationUtils [line: 172] - isAuthenticated()	
BaseWebSession [line: 21] - BaseWebSession(Request)	
ExtendedWicketWebApplication [line: 69] - newSession(Request, Response)	
LanguageManager [line: 61] - {...}	
LanguageManager [line: 70] - LanguageManager()	
LanguageManager [line: 78] - LanguageManager(HttpServletRequest)	
LanguageManagerStringResourceLoader [line: 31] - loadStringResource(Class<?>, String, Locale, String)	
LanguageManagerStringResourceLoader [line: 46] - loadStringResource(Component, String)	


/ Einde PCT-675

/ PCT-683

/ we maken een user
superuser
rtdMpo45
R_SUPERUSER

[eric@localhost pnllogistics]$ grep scanner conf/application.properties | grep menu
module.scannerinterface.menu=warehouseScanning,infoScanning,expectedEvent1,expectedEvent2,expectedEvent3,expectedEvent4,expectedEvent5,directionscan,collectionActionScan,deliveryActionScan

$ vi MenuPage.java

		String[] items = StringUtils.split(
				ApplicationPropertyManager.getInstance().getModuleProperty("scannerinterface", "menu",
						"arrivalScanning,buildContainer,scanToDelivery,scanToLinehaul,warehouseScanning,infoScanning"), ",");
[warehouseScanning, infoScanning, expectedEvent1, expectedEvent2, expectedEvent3, expectedEvent4, expectedEvent5, directionscan, collectionActionScan, deliveryActionScan]

		items = MpoBeanFactory.getBean(ScanningService.class).getAuthorizedPages(items);
[warehouseScanning] 
/ als we R_SUPERUSER zijn	,
/s
ScanningServiceImpl.getAuthorizedPages(String[]) line: 377	
		for (String item : items) {
			for (RoleVO role : myResource.getRoles()) {
SystemId:26632027	Name:R_SUPERUSER	Description:Role for SUPERUSER
				if (role.hasPrivilege(item.toLowerCase(), "view")) {
/s
	public boolean hasPrivilege(String aBusinessObjectName, String aPrivilegeType) {
		return hasPrivilege(new PrivilegeVO(aBusinessObjectName, aPrivilegeType));
aBusinessObjectName	"warehousescanning" (id=21542)	
aPrivilegeType	"view" (id=21543)	

/ FIX

/ we maken businessobjects	, privileges	, en add to role R_SUPERUSERj:w

warehouseScanning.view
infoScanning.view
expectedEvent1.view 
expectedEvent2.view 
expectedEvent3.view 
expectedEvent4.view 
expectedEvent5.view 
directionscan.view
collectionActionScan.view 
deliveryActionScan.view

/ Einde FIX


/ Einde PCT-683

/ OPDRACHT VAN PAUL

[eric@localhost Firebird]$ scp vanderveldene@scs-application-p.intermax.mp-objects.com:/backup/mpo-backup/db/dsvcts.fdb_20150915-035406.fbk.gz .
[eric@localhost Firebird]$ scp dsvcts.fdb_20150915-035406.fbk.gz eric@mposerv8:/tmp
> pwd
/tmp
[12:26:07] jboss@mposerv8 /tmp:
> gzip -c dsvcts.fdb_20150915-035406.fbk.gz >dsvcts.fdb_20150915-035406.fbk 

//////////////////
/ Doe $ gunzip	, 

> ls -ltr
-rw-r--r-- 1 eric     domain users 2081922678 Sep 15 12:01 dsvcts.fdb_20150915-035406.fbk.gz
-rw-rw-r-- 1 jboss    jboss        2049752396 Sep 15 12:18 dsvcts.fdb_20150915-035406.fbk

/ op mopserv11	,
jboss@mposerv11:~$ dsvcts stop
NOTICE : Sending SIGTERM to JBoss instance dsvcts; PID=9766 ...
.....
/ op mposerv8	,
> gbak -c -v -n -rep -user "SYSDBA" -password "masterkey" dsvcts.fdb_20150915-035406.fbk localhost://local/apps/firebird/dsvcts.fdb

////////////////
/ -rep is replace 	, -c is create	, dus NIET samen	, maar of	,

/ dan weer op mposerv11	, 
jboss@mposerv11:~$ dsvcts start track


/ Intermezzo

/ op mposerv8	,
/ login als jboss	,
> pwd
/home/jboss/bin
[11:54:01] jboss@mposerv8 ~/bin:
> cat restore-dsvcts.sh 
gbak -c -v -n -rep -user "SYSDBA" -password "masterkey" ~/dsvcts-14-2.bgk localhost://local/apps/firebird/dsvcts-tst.fdb
/ Deze moeten we aanpassen	,
gbak -c -v -n -rep -user "SYSDBA" -password "masterkey" ~/dsvcts-14-2.bgk localhost://local/apps/firebird/dsvcts.fdb

/ Einde Intermezzo 



/ Einde OPDRACHT VAN PAUL

/ SCS-4844 

/ 7	. 

config, planning, parties
/ we zien alle parties onderverdeeld onder party types	,
config, planning, party types
/ we zien alle party types	, die we ook zien onder config, planning, parties	,

config, planning, party type groups
/ groups van party types	,
/  bijv	,
Collection
/=
	adres
	adres_vaste_collect
	sorteerhub

/ als we op shipment order edit , ship from , bij From Party de icon click 	, krijgen we alle parties uit de Collection party type group	, dus alle parties die in een van de groepen 'adres', 'adres_vaste_collect' , of 'sorteerhub' zitten	,

/ bij ship to zie je alle parties in de party type group DELIVERY	, dat zijn die onder de party types : 'adres_vaste_collect',	 'retouradres', 'sorteerhub'	, 

/ bij ship from zien we de COLLECTION party type group
/ bij ship to zien we de DELIVERY party type group
/ bij bill to zien we de BILL_TO party type group
/ bij CollectionDepot zien we de CollectionDepot party type group
/ bij DistrbutionDepot zien we de DistributionDepot party type group

config, planning, 

/ 7	. 

/ we zien dat  een XSP/JSP	,
config, planning, parties 

/ we zien dat Wicket pages	,
config, planning party types 
config, planning party type groups
config, planning party groups

/ structure van deze EvoEdit pages	,

public abstract class EvoListPage<T extends DescribedUniqueFieldValueObject> extends BaseContextPage {
	protected BeanWrapper<? extends EnumeratedValueObjectDAOInterface<T>> daoWrapper;
	protected EvoSearchListPanel<T> searchListPanel;

	protected void createPage() {
		...
		createListPanel();

	protected void createListPanel() {
		searchListPanel = new EvoSearchListPanel<T>("evoSearchList", null, webComponentEventSwitchBoard, daoWrapper, getListActions()) {

public class EvoSearchListPanel<T extends DescribedUniqueFieldValueObject> extends GenericListPanel<T> {
/ TODO
/ Bestudeer eerst filters	,


public abstract class EvoEditPage<T extends DescribedUniqueFieldValueObject> extends EvoListPage<T> implements EvoEditFormCallback {
	protected AjaxFallbackButton createButton;
	protected EvoEditFormPage<T> editPage;
/ wordt 1 keer create, en reused	, wordt create in PartyTypePage.new EvoEditFormPage	,

	protected void createCreateButton() {
/ deze zien we op de page onder de list	,

	protected Collection<EntityAction<T>> getListActions() {
		EntityActionButton<T> button = new EntityActionAjaxButton<T>("edit", new ResourceModel("edit")) {
			@Override
			protected void onSubmit(Button aButton, AjaxRequestTarget aTarget, IModel<T> aSelection) {
				EvoEditFormPage<T> page = getEditPage();
					...
					setResponsePage(page);
				
		...
		button = new EntityActionAjaxButton<T>("delete", new ResourceModel("delete")) {
		...
/ de 2 buttons edit, delete op een row	,


public class PartyTypePage extends EvoEditPage<PartyType> {
	@Override
	protected void createPage() {
		...
		editPage = new EvoEditFormPage<PartyType>(this, daoWrapper, dataProperties) {
			@Override
			protected void createEditPanel() {
				EntityFormActionBuilder<PartyType> panelBuilder = new EntityFormActionBuilder<PartyType>(getFormActions());
				editPanel = new PartyTypeEditPanel("editPanel", new WebComponentEventSwitchBoard(), panelBuilder, daoWrapper, dataProperties);
				editPanel.setOutputMarkupId(true);
				add(editPanel);
			}
		};
/ Als we click op edit, 	verschijnt het de form page	van in dit geval een party type	,

public class EvoEditFormPage<T extends DescribedUniqueFieldValueObject> extends BaseContextPage {

	protected void createEditPanel() {
/ wordt overwrite hierboven	,

	protected void createPage() {
		...
		createEditPanel();
/ komen in PartyTypePage.new EvoEditFormPage	,

	protected Collection<EntityAction<T>> getFormActions() {
		...
		EntityActionButton<T> saveBtn = new EntityActionAjaxButton<T>("ok", new ResourceModel("save")) {
		...
		EntityActionButton<T> cancelBtn = new EntityActionAjaxButton<T>("cancel", new ResourceModel("cancel")) {
		...
/ EvoEditFormPage heeft save/cancel buttons	, omdat elke form page dat moet hebben	,


/	 7	. 

/ welke wicket pages zijn dit	?


/ 13	.

config, planning, party types
PartyTypePage

$ vi PartyTypePage.java
	@Override
	protected void createPage() {
		super.createPage();
/ (*)
		editPage = new EvoEditFormPage<PartyType>(this, daoWrapper, dataProperties) {

			@Override
			protected void createEditPanel() {
				EntityFormActionBuilder<PartyType> panelBuilder = new EntityFormActionBuilder<PartyType>(getFormActions());
/ (**)

/ Ad (*)
$ vi EvoEditPage.java

public abstract class EvoEditPage<T extends DescribedUniqueFieldValueObject> extends EvoListPage<T> implements EvoEditFormCallback {
	@Override
	protected Collection<EntityAction<T>> getListActions() {
		List<EntityAction<T>> actions = new ArrayList<EntityAction<T>>();

		EntityActionButton<T> button = new EntityActionAjaxButton<T>("edit", new ResourceModel("edit")) {
			@Override
			protected void onSubmit(Button aButton, AjaxRequestTarget aTarget, IModel<T> aSelection) {
->				EvoEditFormPage<T> page = getEditPage();

/ click op een row op edit	, dan vallen we hierin	,

/ (**)
$ vi EvoEditFormPage.java
	protected Collection<EntityAction<T>> getFormActions() {
		EntityActionButton<T> saveBtn = new EntityActionAjaxButton<T>("ok", new ResourceModel("save")) {
			@Override
			protected void onSubmit(Button aButton, AjaxRequestTarget aTarget, IModel<T> aSelection) {
->				T evo = aSelection.getObject();

/ click op Save op de edit page	, dan vallen we hier in	,

/ Hier werkt de Cancel wel	,

/ 7	.

/ config, planning, parties

/ = party-type_preselect_list

$ vi oms-sitemap.xmap

			<map:action logger="party" name="partyTypeList" src="com.mpobjects.oms.control.partytype.action.PartyTypeListAction"/>

			<map:match pattern="party-type_preselect_list">
				<map:act type="partyTypeList"/>
				<map:call resource="dynatablePage">
				    <map:parameter name="xsp" value="xsp/party-type_list.xml"/>
				    <map:parameter name="xsl" value="xsl/party-type-preselection-list.xsl"/>
				    <map:parameter name="edit" value="false"/>
				</map:call>
			</map:match>







/ Einde PCT-665

/ PCT-623

/ 7	. 

/ See EventServiceImpl.java

	@Override
	public void closeAllEventsOnBooking(EventVO anEvent) {
		LOG.debug("Closing all events for [" + anEvent + "]");
		int myOffset = getCloseDateOffset();
		...

	private int getCloseDateOffset() {
		return ApplicationPropertyManager.getInstance().getApplicationProperty("module.event.close.earlier.offset.sec", 0);
	}

	private void closePreviousEvents(EventUpdateResultTracker aTracker) {

		int myOffset = getCloseDateOffset();

		for (EventVO myClosedEvent : aTracker.getEventsForAction(EventProcessAction.CLOSE)) {
			...


/ 7	. 

/ sho SH000002963
/ deze is ingeplanned	,
/ we zien sa's
print_label			seo N0004854.1
check				seo N0004772.1
collect				seo N0004885.1
linehaul			seo N0004886.1
delivery	 		seo N0004888.1	
delivery_note		seo N0004887.1

/ we zien dus het verschil tussen sho's en seo's : een andere groepering van sa's	,
/ we zien hier een sho=collectiie sa's 	, en elke sa zit in een andere seo	, 
/ elke seo=collectie sa's, die elk in een andere sho zijn,

/ click op sho SH000002963	,
/ click Save
/ we zien dat hij nu ingeplanned is	,
/ we zien delivery sa	, click op de seo	,
/ we zien dat deze seo maar 1 sa heeft	, we zien events	,
/ ze zijn niet gesloten. Als we click op icon onder Closedon op I01, dan worden ook alle J05 gesloten	, 


/ click op seo N0004888
/ events kunnen alleen op een seo	,

/ 7	. 

/ we click op icon	,
/ we kiezen datum vandaag	, 

///////////////////////////
Save
/ de seo
/s
/ stacktrace	,
	EventServiceImpl.closePreviousEvents(EventServiceImpl$EventUpdateResultTracker) line: 959	
		int myOffset = getCloseDateOffset();

	EventServiceImpl.save(Collection<EventVO>) line: 708	
					// Now close and add all earlier events to the list.
					closePreviousEvents(myTracker);

/tx
	ServiceOrderSaveListener.postSubmit() line: 210	
				// Now save all the events in one go.
				MpoBeanFactory.getBean(EventService.class).save(myUpdateList);

	ServiceOrderSaveAction(BoundSaveAction).afterSave() line: 66	
		for (SubmitListener myListener : getSubmitListenerList()) {
			myListener.postSubmit();

	ServiceOrderSaveAction(AbstractSaveAction).act() line: 70	
			beforeSave();
			handleSave();
			afterSave();

	ServiceOrderSaveAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 171	
				Map myMap = act();

/ we gaan debug	,

/s
EventServiceImpl.closePreviousEvents(EventServiceImpl$EventUpdateResultTracker) line: 959	
/=
	private void closePreviousEvents(EventUpdateResultTracker aTracker) {

		int myOffset = getCloseDateOffset();
60
/want
/s
	private int getCloseDateOffset() {
		return ApplicationPropertyManager.getInstance().getApplicationProperty("module.event.close.earlier.offset.sec", 0);
/t
		int myOffset = getCloseDateOffset();
/d
		for (EventVO myClosedEvent : aTracker.getEventsForAction(EventProcessAction.CLOSE)) {
/ myClosedEvent=Event id: [26851984], event type: [I01], status: [CLOSED_LATE]
/ Het I01 event	,

			List<EventVO> myEarlierEvents = getEarlierEventsToClose(myClosedEvent);
[
Event id: [26851983], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851982], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851981], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851980], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851979], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851978], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851977], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851976], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851975], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851974], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851973], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851972], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851971], event type: [J05], status: [OPEN_ALERTED], 
Event id: [26851970], event type: [J05], status: [OPEN_ALERTED]]

/ FIX PCT-623

$ vi EventServiceImpl.java
	private void closePreviousEvents(EventUpdateResultTracker aTracker) {

		int myOffset = getCloseDateOffset();

		for (EventVO myClosedEvent : aTracker.getEventsForAction(EventProcessAction.CLOSE)) {
I01
			List<EventVO> myEarlierEvents = getEarlierEventsToClose(myClosedEvent);
			DateTime myCloseDate = new DateTime(myClosedEvent.getClosedOn());
			if (myOffset != 0) {
				myCloseDate = myCloseDate.minusSeconds(myOffset);
			}
/ 1 keer	, stond eerst in de for loop hieronder	,
			for (EventVO myEarlierEvent : myEarlierEvents) {
				myEarlierEvent.setClosedOn(myCloseDate.toDate());


/ Einde FIX PCT-623

/ schermen	,

/ 13	. 

$ vi oms-sitemap.xmap

			<map:action logger="shipmentorder" name="shipmentOrderEdit" src="com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderEditAction"/>

			<map:match pattern="shipment-order_edit">
				<map:act type="shipmentOrderEdit">
					<map:select type="session-attribute">
						<map:parameter name="attribute-name" value="builder"/>
						<map:when test="jsp">
							<map:read mime-type="text/html" type="jsp" src="jsp/shipment-order_edit.jsp"/>
						</map:when>
						<map:otherwise>
							<map:redirect-to uri="../wicket?module=oms&amp;wicketpage=shipmentorder.edit.ShipmentOrderEditSelectionPage"/>
						</map:otherwise>			
					</map:select>
				</map:act>
			</map:match>

$ vi ShipmentOrderEditAction.java
	@Override
	public Map act() throws java.lang.Exception {
			myVO = MpoBeanFactory.getBean(ShipmentOrderDao.class).getBySystemId(mySystemId);
			getRequest().setAttribute("formVO", myVO);


$ vi shipment-order_edit.jsp

<%@taglib prefix="tmstags" tagdir="/WEB-INF/tags/oms/"%>

				<c:if test="${!empty formVO.shipmentItemList or true}">
					<mpo:tab name="shipmentItems">
						<tmstags:sho-shipmentitems />
					</mpo:tab>
				</c:if>


$ vi ./module/oms/war/WEB-INF/tags/oms/sho-shipmentitems.tag
	<c:forEach var="currentItem" items="${formVO.flattenedShipmentItems}">
		<c:set var="shipmentItemList" value="${currentItem.shipmentItemVO}" />
		<mpo:setFormVO valueObject="${shipmentItemList}" prefix="shipmentItemList${shipmentItemList.systemId}">
...
				<td>${shipmentItemList.reference1}</td>
/ TODO

$ vi shipment-order_edit.jsp

		<div id="serviceActions">
					<mpo:setFormVO valueObject="${activeServiceAction}">

$ vi SetFormVOTag.java
	@Override
	public int doStartTag() throws JspTagException {
		getForm().addValueObject(getValueObject());

/ Dus het form bij save writes in wat valueObject is	, hier reset naar activeServiceAction

/ Dan de link op een row=sa naar de consignment	,
					<mpo:setFormVO valueObject="${activeServiceAction}">
						...
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<%
								} else {
							%>
							<td><a href="#" onclick="javascript:gotoServiceOrder('<%=myConsignmentVO.getServiceOrderVO().getSystemId()%>');return false"><%=myConsignmentVO.getConsignmentNr()%></a></td>

/ we doen in devtools, Search onderin	, naar gotoServiceOrder	,
$ vi ./module/oms/war/oms/script/class.shipment-order_edit.js
function gotoServiceOrder(aSystemId){
	var myUrl = "../oms/service-order_edit?base_sessionLevelOffset=1&systemId=" + aSystemId;

$ vi oms-sitemap.xmap

			<map:action logger="serviceorder" name="serviceOrderEdit" src="com.mpobjects.oms.control.serviceorder.action.ServiceOrderEditAction"/>

			<map:match pattern="service-order_edit">
				<map:act type="serviceOrderEdit">
				<map:select type="session-attribute">
					<map:parameter name="attribute-name" value="builder"/>
					<map:when test="jsp">
						<map:read mime-type="text/html" type="jsp" src="jsp/service-order_edit.jsp"/>
					</map:when>
					<map:otherwise>
						<map:redirect-to uri="../wicket?module=oms&amp;wicketpage=serviceorder.edit.ServiceOrderEditSelectionPage"/>
					</map:otherwise>			
				</map:select>
				</map:act>
			</map:match>

$ vi ServiceOrderEditAction.java



$ vi service-order_edit.jsp

							<etf:service-order-tab-events />

$ vi ./module/oms/war/WEB-INF/tags/event/service-order-tab-events.tag
...
/ TODO

/ we zien in HTML
<td nowrap="nowrap">
	<input type="text" name="event26851984ClosedOnDate" onmouseover="dateTimeInfo(this ,'event26851984ClosedOnDate','Europe/Amsterdam','Europe/Amsterdam','Europe/Amsterdam');" id="event26851984ClosedOnDate" size="12" value="" class="dateField " readonly="readonly">
	<a href="#" onclick="NewCal('event26851984ClosedOnDate','ddmmmyyyy',true,'Europe/Amsterdam',24); return false;"><img class="imgPosition" src="../lookandfeel/styles/images/icons/calendar16.gif" border="0" alt="Pick a date"></a><input type="text" name="event26851984ClosedOnDateTime" id="event26851984ClosedOnDateTime" size="5" value="" class=" timeField " readonly="readonly">
</td>

$ vi ./base-framework/core/war/core/script/datetimepicker-timezone.js

$ vi 







/ Einde PCT-623

/ PCT-516

/ 7	. 

pnllogistics3=# select shipment_order_id from shipment_order order by system_id desc limit 5;
 shipment_order_id 
-------------------
 SH000002981
 SH000002980
 SH000002979
 SH000002978
 SH000002977
(5 rows)


/ we maken sho	SH000002985	,
/ see SAMENVATTING CREATE SHIPMENTORDER	, LOG_23_jul_2015.txt	,
Save
/ we zien 
Hold Status: COLLO_HOLD

/ click 'cost'	, als we de rc bekijken	, use dan de back button om terug  te keren naar de sho	,
$ vi LOG_PCT-516_save_zonder_items.txt 

 	RC-HOLD : RP-HOLD ( IF ) = COLLO_HOLD
 		RP-PRODUCT-HOLD ( IF ) = COLLO_HOLD
 			RP-UNKNOWN-PC-HOLD ( IF ) = COLLO_HOLD
 				RP-ADDRESS-HOLD ( IF ) = COLLO_HOLD
 					RT-ADDRESS-HOLD_OUTPUT ( RATE TABLE ) = 0
						 FROM_ADDRESS2 ( ) = 7
						 TO CITY ( ) = Eindhoven
						 TO POSTALCODE ( ) = 5626gh
						 TO ADDRESS 2 ( ) = 13
						 TO COUNTRY ( ) = NL
						 FROM POSTALCODE ( ) = 3012cn
						 FROM COUNTRY ( ) = NL
					 RP-BARCODE-HOLD ( IF ) = COLLO_HOLD
					 	RP-DUPLICATE-HOLD ( IF ) = COLLO_HOLD
					 		RP-COLLO-HOLD ( IF ) = COLLO_HOLD
						 		RT-COLLI-HOLD_OUTPUT ( RATE TABLE ) = COLLO_HOLD
						 			NR_OF_COLLO ( ) = 0.0 PC							/ !!!
						 		RP_ADR_HOLD ( IF ) = NL
						 			TO COUNTRY ( ) = NL
 								RT-COLLI-HOLD_OUTPUT ( RATE TABLE ) = COLLO_HOLD
 									NR_OF_COLLO ( ) = 0.0 PC							/ !!!
 					RT-ADDRESS-HOLD_OUTPUT ( RATE TABLE ) = 0
						 FROM_ADDRESS2 ( ) = 7
						 TO CITY ( ) = Eindhoven
						 TO POSTALCODE ( ) = 5626gh
						 TO ADDRESS 2 ( ) = 13
						 TO COUNTRY ( ) = NL
						 FROM POSTALCODE ( ) = 3012cn
						 FROM COUNTRY ( ) = NL

...
 [14:21:19.139] PARAMETER: RP-COLLO-HOLD start evaluation of parameter
 [14:21:19.142] FUNCTION TYPE: If
 [14:21:19.142] PARAMETER: RT-COLLI-HOLD_OUTPUT start evaluation of parameter
 [14:21:19.146] Evaluating criteria for rate table [RT-COLLI-HOLD]
 [14:21:19.146] Retrieved value for detail [COLLO_HOLD_CHECK], for entity [ShipmentOrder: SH000002985], result: 0
 [14:21:19.146] - Comparing [COLLO_HOLD_CHECK] with value [0] (No conversion) with from-value [0] and to-value [null] result [true]
 [14:21:19.147] Retrieved value for detail [HOLD_STATUS], for entity [ShipmentOrder: SH000002985], result:
 [14:21:19.147] - Comparing [HOLD_STATUS] with value [] (No conversion) with from-value [!.+] and to-value [null] result [true]
 [14:21:19.147] Retrieved value for detail [NR_OF_PALLET], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:21:19.147] - Comparing [NR_OF_PALLET] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:21:19.147] Retrieved value for detail [NR_OF_ROLCONTAINER], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:21:19.147] - Comparing [NR_OF_ROLCONTAINER] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:21:19.148] Retrieved value for detail [NR_OF_MINIPALLET], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:21:19.148] - Comparing [NR_OF_MINIPALLET] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:21:19.148] Retrieved value for detail [NR_OF_BLOKPALLET], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:21:19.148] - Comparing [NR_OF_BLOKPALLET] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:21:19.148] FUNCTION TYPE: RateTable
 [14:21:19.148] Retrieved value for detail [NR_OF_COLLO], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:21:19.148] Order detail [NR_OF_COLLO] results in:0.0 PC
 [14:21:19.148] LOOKUP in table : RT-COLLI-HOLD results in: COLLO_HOLD
 [14:21:19.149] PARAMETER: RT-COLLI-HOLD_OUTPUT evaluates to: COLLO_HOLD
 [14:21:19.149] PARAMETER: RP_ADR_HOLD start evaluation of parameter
 [14:21:19.150] FUNCTION TYPE: If
 [14:21:19.150] PARAMETER: RT_ADR_HOLD_OUTPUT start evaluation of parameter
 [14:21:19.152] Evaluating criteria for rate table [RT_ADR_HOLD]
 [14:21:19.153] Retrieved value for detail [UN_NUMBER(1043)], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:21:19.153] - Comparing [UN_NUMBER(1043)] with value [0.0] (No conversion) with from-value [1] and to-value [99999] result [false]
 [14:21:19.153] PARAMETER: RT_ADR_HOLD_OUTPUT evaluates to: null
 [14:21:19.153] PARAMETER: RT_ADR_HOLD_OUTPUT start evaluation of parameter
 [14:21:19.153] PARAMETER: RT_ADR_HOLD_OUTPUT evaluates to: null
 [14:21:19.153] Retrieved value for detail [TO COUNTRY], for entity [ShipmentOrder: SH000002985], result: NL
 [14:21:19.153] Order detail [TO COUNTRY] results in:NL
 [14:21:19.153] DEBUG [RP_ADR_HOLD] Input parameter RT_ADR_HOLD_OUTPUT is false, returning value: NL
 [14:21:19.153] PARAMETER: RP_ADR_HOLD evaluates to: NL
 [14:21:19.153] PARAMETER: RT-COLLI-HOLD_OUTPUT start evaluation of parameter
 [14:21:19.153] PARAMETER: RT-COLLI-HOLD_OUTPUT evaluates to: COLLO_HOLD
 [14:21:19.153] DEBUG [RP-COLLO-HOLD] Input parameter RT-COLLI-HOLD_OUTPUT is true, returning value: COLLO_HOLD
 [14:21:19.153] PARAMETER: RP-COLLO-HOLD evaluates to: COLLO_HOLD
 [14:21:19.153] DEBUG [RP-DUPLICATE-HOLD] Input parameter RT-DUPLICATE-HOLD_OUTPUT is false, returning value: COLLO_HOLD
 [14:21:19.153] PARAMETER: RP-DUPLICATE-HOLD evaluates to: COLLO_HOLD

/ we add 4 shi's, save shipment item	, 
/ rm COLLO_HOLD Hold status	,
/ save sho	,
/ Hij is ingeplanned	,

/ we zien in rc log	,
$ vi LOG_PCT-516_save_met_items.txt

 RC-HOLD : RP-HOLD ( IF ) = NL
    RC-REQUESTED-END-AFTER : IF_END_AFTER_014 ( IF ) = 2015-08-19 08:00:00 DATE
        RC-HOLD : RP-HOLD ( IF ) = NL
            RP-PRODUCT-HOLD ( IF ) = NL
                RP-UNKNOWN-PC-HOLD ( IF ) = NL
                    RP-ADDRESS-HOLD ( IF ) = NL
                        RT-ADDRESS-HOLD_OUTPUT ( RATE TABLE ) = 0
                         FROM_ADDRESS2 ( ) = 7
                         TO CITY ( ) = Eindhoven
                         TO POSTALCODE ( ) = 5626gh
                         TO ADDRESS 2 ( ) = 13
                         TO COUNTRY ( ) = NL
                         FROM POSTALCODE ( ) = 3012cn
                         FROM COUNTRY ( ) = NL
                     RP-BARCODE-HOLD ( IF ) = NL
                        RP-DUPLICATE-HOLD ( IF ) = NL
                            RP-COLLO-HOLD ( IF ) = NL
                                RT-COLLI-HOLD_OUTPUT ( RATE TABLE ) = 0
                                    NR_OF_COLLO ( ) = 2.0 PC
                                RP_ADR_HOLD ( IF ) = NL
                                    TO COUNTRY ( ) = NL
                                RT-COLLI-HOLD_OUTPUT ( RATE TABLE ) = 0
                                    NR_OF_COLLO ( ) = 2.0 PC
                    RT-ADDRESS-HOLD_OUTPUT ( RATE TABLE ) = 0
                         FROM_ADDRESS2 ( ) = 7
                         TO CITY ( ) = Eindhoven
                         TO POSTALCODE ( ) = 5626gh
                         TO ADDRESS 2 ( ) = 13
                         TO COUNTRY ( ) = NL
                         FROM POSTALCODE ( ) = 3012cn
 
 [14:48:46.194] PARAMETER: RP-COLLO-HOLD start evaluation of parameter
 [14:48:46.194] FUNCTION TYPE: If
 [14:48:46.194] PARAMETER: RT-COLLI-HOLD_OUTPUT start evaluation of parameter
 [14:48:46.194] Evaluating criteria for rate table [RT-COLLI-HOLD]
 [14:48:46.194] Retrieved value for detail [COLLO_HOLD_CHECK], for entity [ShipmentOrder: SH000002985], result: 0
 [14:48:46.194] - Comparing [COLLO_HOLD_CHECK] with value [0] (No conversion) with from-value [0] and to-value [null] result [true]
 [14:48:46.194] Retrieved value for detail [HOLD_STATUS], for entity [ShipmentOrder: SH000002985], result:
 [14:48:46.194] - Comparing [HOLD_STATUS] with value [] (No conversion) with from-value [!.+] and to-value [null] result [true]
 [14:48:46.195] Retrieved value for detail [NR_OF_PALLET], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:48:46.195] - Comparing [NR_OF_PALLET] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:48:46.195] Retrieved value for detail [NR_OF_ROLCONTAINER], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:48:46.195] - Comparing [NR_OF_ROLCONTAINER] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:48:46.195] Retrieved value for detail [NR_OF_MINIPALLET], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:48:46.195] - Comparing [NR_OF_MINIPALLET] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:48:46.195] Retrieved value for detail [NR_OF_BLOKPALLET], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:48:46.195] - Comparing [NR_OF_BLOKPALLET] with value [0.0] , converted to [0.0] with from-value [0] and to-value [0] result [true]
 [14:48:46.195] FUNCTION TYPE: RateTable
 [14:48:46.195] Retrieved value for detail [NR_OF_COLLO], for entity [ShipmentOrder: SH000002985], result: 2.0
 [14:48:46.195] Order detail [NR_OF_COLLO] results in:2.0 PC
 [14:48:46.195] LOOKUP in table : RT-COLLI-HOLD results in: 0
 [14:48:46.195] PARAMETER: RT-COLLI-HOLD_OUTPUT evaluates to: 0
 [14:48:46.195] PARAMETER: RP_ADR_HOLD start evaluation of parameter
 [14:48:46.195] FUNCTION TYPE: If
 [14:48:46.195] PARAMETER: RT_ADR_HOLD_OUTPUT start evaluation of parameter
 [14:48:46.195] Evaluating criteria for rate table [RT_ADR_HOLD]
 [14:48:46.195] Retrieved value for detail [UN_NUMBER(1043)], for entity [ShipmentOrder: SH000002985], result: 0.0
 [14:48:46.195] - Comparing [UN_NUMBER(1043)] with value [0.0] (No conversion) with from-value [1] and to-value [99999] result [false]
 [14:48:46.195] PARAMETER: RT_ADR_HOLD_OUTPUT evaluates to: null
 [14:48:46.195] PARAMETER: RT_ADR_HOLD_OUTPUT start evaluation of parameter
 [14:48:46.195] PARAMETER: RT_ADR_HOLD_OUTPUT evaluates to: null
 [14:48:46.196] Retrieved value for detail [TO COUNTRY], for entity [ShipmentOrder: SH000002985], result: NL
 [14:48:46.196] Order detail [TO COUNTRY] results in:NL
 [14:48:46.196] DEBUG [RP_ADR_HOLD] Input parameter RT_ADR_HOLD_OUTPUT is false, returning value: NL
 [14:48:46.196] PARAMETER: RP_ADR_HOLD evaluates to: NL
 [14:48:46.196] PARAMETER: RT-COLLI-HOLD_OUTPUT start evaluation of parameter
 [14:48:46.196] PARAMETER: RT-COLLI-HOLD_OUTPUT evaluates to: 0
 [14:48:46.196] DEBUG [RP-COLLO-HOLD] Input parameter RT-COLLI-HOLD_OUTPUT is false, returning value: NL
 [14:48:46.196] PARAMETER: RP-COLLO-HOLD evaluates to: NL

/ we click 'create return	,
SH000002985RO
/ click 'cost'

/ we zien 	,

 RC-HOLD : RP-HOLD ( IF ) = NL
    RP-PRODUCT-HOLD ( IF ) = NL
        RP-UNKNOWN-PC-HOLD ( IF ) = NL
            RP-ADDRESS-HOLD ( IF ) = NL
                RT-ADDRESS-HOLD_OUTPUT ( RATE TABLE ) = 0
                     FROM_ADDRESS2 ( ) = 13
                     TO CITY ( ) = Schiedam
                     TO POSTALCODE ( ) = 3012cn
                     TO ADDRESS 2 ( ) = 7 
                     TO COUNTRY ( ) = NL
                     FROM POSTALCODE ( ) = 5626gh
                     FROM COUNTRY ( ) = NL
                 RP-BARCODE-HOLD ( IF ) = NL
                    RP-DUPLICATE-HOLD ( IF ) = NL
                        RP-COLLO-HOLD ( IF ) = NL
                            RP_ADR_HOLD ( IF ) = NL
                                TO COUNTRY ( ) = NL
                RT-ADDRESS-HOLD_OUTPUT ( RATE TABLE ) = 0
                         FROM_ADDRESS2 ( ) = 13
                         TO CITY ( ) = Schiedam
                         TO POSTALCODE ( ) = 3012cn
                         TO ADDRESS 2 ( ) = 7
                         TO COUNTRY ( ) = NL
                         FROM POSTALCODE ( ) = 5626gh
                         FROM COUNTRY ( ) = NL

 [15:19:19.058] PARAMETER: RP-COLLO-HOLD start evaluation of parameter
 [15:19:19.058] FUNCTION TYPE: If
 [15:19:19.058] PARAMETER: RT-COLLI-HOLD_OUTPUT start evaluation of parameter
 [15:19:19.058] Evaluating criteria for rate table [RT-COLLI-HOLD]
 [15:19:19.058] Retrieved value for detail [COLLO_HOLD_CHECK], for entity [ShipmentOrder: SH000002985RO], result: 0
 [15:19:19.058] - Comparing [COLLO_HOLD_CHECK] with value [0] (No conversion) with from-value [0] and to-value [null] result [true]
 [15:19:19.058] Retrieved value for detail [HOLD_STATUS], for entity [ShipmentOrder: SH000002985RO], result: COLLO_HOLD
 [15:19:19.058] - Comparing [HOLD_STATUS] with value [COLLO_HOLD] (No conversion) with from-value [!.+] and to-value [null] result [false]
 [15:19:19.059] PARAMETER: RT-COLLI-HOLD_OUTPUT evaluates to: null
 [15:19:19.059] PARAMETER: RP_ADR_HOLD start evaluation of parameter
 [15:19:19.059] FUNCTION TYPE: If
 [15:19:19.059] PARAMETER: RT_ADR_HOLD_OUTPUT start evaluation of parameter
 [15:19:19.059] Evaluating criteria for rate table [RT_ADR_HOLD]
 [15:19:19.059] Retrieved value for detail [UN_NUMBER(1043)], for entity [ShipmentOrder: SH000002985RO], result: 0.0
 [15:19:19.059] - Comparing [UN_NUMBER(1043)] with value [0.0] (No conversion) with from-value [1] and to-value [99999] result [false]
 [15:19:19.059] PARAMETER: RT_ADR_HOLD_OUTPUT evaluates to: null
 [15:19:19.059] PARAMETER: RT_ADR_HOLD_OUTPUT start evaluation of parameter
 [15:19:19.059] PARAMETER: RT_ADR_HOLD_OUTPUT evaluates to: null
 [15:19:19.059] Retrieved value for detail [TO COUNTRY], for entity [ShipmentOrder: SH000002985RO], result: NL
 [15:19:19.059] Order detail [TO COUNTRY] results in:NL
 [15:19:19.059] DEBUG [RP_ADR_HOLD] Input parameter RT_ADR_HOLD_OUTPUT is false, returning value: NL
 [15:19:19.059] PARAMETER: RP_ADR_HOLD evaluates to: NL
 [15:19:19.059] PARAMETER: RT-COLLI-HOLD_OUTPUT start evaluation of parameter
 [15:19:19.059] PARAMETER: RT-COLLI-HOLD_OUTPUT evaluates to: null
 [15:19:19.059] DEBUG [RP-COLLO-HOLD] Input parameter RT-COLLI-HOLD_OUTPUT is false, returning value: NL
 [15:19:19.059] PARAMETER: RP-COLLO-HOLD evaluates to: NL

/ Als we dus vergl de rc bij sho save (met of zonder shi), 	en de rc van de return	, dan zien we	,

/ sho save (met of zonder shi)	,
                     RP-BARCODE-HOLD ( IF ) = NL
                        RP-DUPLICATE-HOLD ( IF ) = NL
                            RP-COLLO-HOLD ( IF ) = NL
                                RT-COLLI-HOLD_OUTPUT ( RATE TABLE ) = 0
                                    NR_OF_COLLO ( ) = 2.0 PC
                                RP_ADR_HOLD ( IF ) = NL
                                    TO COUNTRY ( ) = NL
                                RT-COLLI-HOLD_OUTPUT ( RATE TABLE ) = 0
                                    NR_OF_COLLO ( ) = 2.0 PC

/ return sho	,
                 RP-BARCODE-HOLD ( IF ) = NL
                    RP-DUPLICATE-HOLD ( IF ) = NL
                        RP-COLLO-HOLD ( IF ) = NL
                            RP_ADR_HOLD ( IF ) = NL
                                TO COUNTRY ( ) = NL
 
/ Dus bij return sho, heeft hij GEEN RT-COLLI-HOLD_OUTPUT ( RATE TABLE ),	 


/ Einde PCT-516

/ DEBUG PCT-516

/ Intermezzo

/ Abstract hoe te debug	,


	RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1107	
	/ runFor van een ra	,
					componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					for (RateResult myResult : myCostComp.run(this)) {
	/ loop over rc's 
	/ myCostComp.theName="RC-HOLD"
/ TODO (cond. b)

	RateCalculationVO.calculateWithoutVariables() line: 1335	
	/ loop over ra's waar de sho op past (selection criteria)	,
			for (RateAgreementVO myAgreement : getRateAgreementVO()) {
				runFor(myAgreement, myAlterNative);

	RateCalculationVO.runFor(List<RateAgreementVO>) line: 765	
	/ runFor list van ra's

	CalculationServiceImpl.recalculate(LogisticsOrderVO, AgreementType, TMSEventContext) line: 576	
	RateCalcEventListener.recalculate(ShipmentOrderVO, AgreementType, TMSEventContext) line: 336	
	RateCalcEventListener.recalcShipOrderPrice(Event) line: 92	
	RateCalcEventListener.handleEvent(Event) line: 78	
	ListenerList.fireEvent(Event<?>) line: 82	
	PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).triggerEventHandler(ShipmentOrderVO, ShipmentOrderVO, TMSEventContext) line: 2543	
	PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createShipmentOrder(ShipmentOrderVO, TMSEventContext) line: 863	
	PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createShipmentOrder(ShipmentOrderVO) line: 820	
	CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO, CustomDuplicateAction) line: 54	
->			myNewShipmentOrderVO = shipmentOrderService.createShipmentOrder(myNewShipmentOrderVO);
			for (ProductItemVO myOriginalProductItem : myOriginalProductItems) {
				myNewProductItem.setShipmentOrder(myNewShipmentOrderVO);
			for (ShipmentItemVO myOriginalShipmentItem : myOriginalShipmentItems) {
				myNewShipmentItem = shipmentItemService.save(myNewShipmentItem);

	CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO) line: 33	
	PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createReturnShipmentOrder(ShipmentOrderVO) line: 727	
		// get a plain copy
		ShipmentOrderVO myShipmentOrderVO = shipmentOrderDuplicator.duplicate(aShipmentOrder);

	PnlLogisticsShipmentOrderServiceImpl.createReturnShipmentOrder(ShipmentOrderVO) line: 20	
		ShipmentOrderVO myShipmentOrder = super.createReturnShipmentOrder(aShipmentOrder);



/ Einde Intermezzo

/ Intermezzo

/ We hebben b's in 	,

CalculationServiceImpl [line: 499] - recalculate(LogisticsOrderVO, AgreementType, TMSEventContext)	
CalculationServiceImpl [line: 563] - recalculate(LogisticsOrderVO, AgreementType, TMSEventContext)	
CompleteShipmentOrderDuplicator [line: 44] - duplicate(ShipmentOrderVO, CustomDuplicateAction)	
EntityDetailServiceImpl [line: 131] - initialize(EntityDetailSupport)	
EventHandlerServiceImpl [line: 72] - handleEvent(Event)	
EventServiceImpl [line: 336] - compare(EventVO, EventVO)	
EventServiceImpl [line: 959] - checkAndPerformCloseAction(EventUpdateResultTracker)	
EventServiceImpl [line: 1003] - checkExecutionExpression(Rule, EventVO, ServiceOrderVO)	
FieldTag [line: 227] - checkForPropertyOverwrites(String, String)	
FieldTag [line: 1215] - handleOverridable()	
IfFunction [line: 31] - calculate(Collection<InputParameterVO>, RateCalculationVO)	
InputParameterVO [line: 71] - calculate(RateCalculationVO)	
InputParameterVO [line: 110] - calculate(RateCalculationVO)	
PartyTypePage [line: 29] - createPage()	
PnlLogisticsShipmentOrderServiceImpl [line: 20] - createReturnShipmentOrder(ShipmentOrderVO)	
RateCalcEventListener [line: 66] - handleEvent(Event)	
RateCalcEventListener [line: 86] - recalcShipOrderPrice(Event)	
RateCalculationVO [line: 765] - runFor(List<RateAgreementVO>)	
RateCalculationVO [line: 850] - runFor(List<RateAgreementVO>)	
RateCalculationVO [line: 1107] - runFor(RateAgreementVO, RateCalculationAlternative)	
ShipmentOrderCalculationServiceImpl [line: 338] - updateShipmentOrder(ShipmentOrderVO, AlternativeResultSet, List<String>)	
ShipmentOrderCalculationServiceImpl [line: 1150] - setPropertyResults(Collection<Entry<CostComponentSpecificationVO, List<RateResult>>>, ShipmentOrderVO, List<String>)	
ShipmentOrderCalculationServiceImpl [line: 1181] - setPropertyResults(Collection<Entry<CostComponentSpecificationVO, List<RateResult>>>, ShipmentOrderVO, List<String>)	
ShipmentOrderCreateReturnAction [line: 47] - act()	
ShipmentOrderSaveAction [line: 77] - handleSave()	
ShipmentOrderServiceImpl [line: 727] - createReturnShipmentOrder(ShipmentOrderVO)	
ShipmentOrderServiceImpl [line: 825] - createShipmentOrder(ParsedShipmentOrder)	
ShipmentOrderServiceImpl [line: 833] - createShipmentOrder(ParsedShipmentOrder)	
ShipmentOrderServiceImpl [line: 874] - createShipmentOrder(ShipmentOrderVO, TMSEventContext)	
ShipmentOrderServiceImpl [line: 1298] - recalculateShipmentOrder(ShipmentOrderVO)	
ShipmentOrderServiceImpl [line: 1966] - updateShipmentOrder(ParsedShipmentOrder, TMSEventContext, boolean)	
ShipmentOrderVO [line: 413] - copy()	


/ Einde Intermezzo

/ we maken SH000002986	, 
/ see SAMENVATTING CREATE SHIPMENTORDER	, LOG_23_jul_2015.txt	,

/ click 'Save'	,

/ Lees LOG_6_OCT_2014.txt	,
/ rond	,
/t
ShipmentOrderServiceImpl.createShipmentOrder(ShipmentOrderVO, TMSEventContext) line: 918
                myVO = shipmentOrderDao.save(aShipmentOrder);


$ vi shipment-order_edit.jsp
				<input type="button" value="<mpo:label name="save"/>" onclick="document.getElementById('selectPath').value='yes'; theShipmentorderFormManager.submit('../oms/shipment-order_save', false, 0);" />

$ vi oms-sitemap.xmap

			<map:action logger="shipmentorder" name="shipmentOrderSave" src="com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderSaveAction"/>

            <map:match pattern="shipment-order_save">
                <!-- The shipment order is saved and via redirection send to the correct page -->
				<map:act type="shipmentOrderSave">
...

public class ShipmentOrderSaveAction extends AbstractShipmentSaveAction {
	@Override
	public void handleSave() throws java.lang.Exception {
			ShipmentOrderVO shipmentOrderVO = (ShipmentOrderVO) getValueObject();
/ TODO
			int mySystemid = shipmentOrderVO.getSystemId();
0
			if (mySystemid == ValueObject.VOLATILE_SYSTEM_ID) {
				shipmentOrderVO = ShipmentOrderUtil.getShipmentOrderFacadeLocal().createShipmentOrder(shipmentOrderVO);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createShipmentOrder(ShipmentOrderVO) line: 820	
		return createShipmentOrder(aShipmentOrder, new TMSEventContext());
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createShipmentOrder(ShipmentOrderVO, TMSEventContext) line: 855	
			if (aShipmentOrder.isTemplate()) {
/ NEE
			} else {
				myVO = shipmentOrderDao.save(aShipmentOrder);
myVO ShipmentOrderVO
	systemId	26845751	

/c
RateCalcEventListener.handleEvent(Event) line: 66	
				recalcServiceOrderCost(anEvent);
/ NIETS	,
				recalcShipOrderPrice(anEvent);
...
/s
RateCalcEventListener.recalculate(ShipmentOrderVO, AgreementType, TMSEventContext) line: 303	
/=
	private void recalculate(ShipmentOrderVO anOrder, AgreementType aRateType, TMSEventContext anEventContext) throws AbstractException {
anOrder	ShipmentOrderVO  (id=19791)	
ShipmentOrder: SH000002986(SystemId:26845754; Org:PNL-CARGO)
/ de nieuwe sho die we willen save	,
...
/s
CalculationServiceImpl.recalculate(LogisticsOrderVO, AgreementType, TMSEventContext) line: 501	

			List<RateAgreementVO> mySelectedRateAgreement = getMatchingRateAgreement(anOrder, aRateType);
/ Iedere ra heeft een list van selection criteria=order detail	, deze heeft een reg ex waar de sho aan moet match	,

theSystemId: 26768606Name :VT-9148459-2015
Description :Verkooptarief Gildewerk BV 2015
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SHIPMENT_ORDER

theSystemId: 26773867Name :RA-BUSINESSRULES SHO
Description :Business rules PostNL
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SHIPMENT_ORDER

/ 7	. 

/ we create een shipment order	, SH000002986	, en plan 'm in 	, 

/ we create return order	,

$ vi shipment-order_edit.jsp
				<input type="button" value="<mpo:label name="Create return"/>"
					onclick="document.location.href='../oms/shipment-order_create-return?shipmentorder_systemid=${formVO.systemId}&amp;base_sessionLevelOffset=1';" />

$ vi oms-sitemap.xmap
			<map:action logger="shipmentorder" name="shipmentOrderCreateReturn" src="com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderCreateReturnAction"/>

			<map:match pattern="shipment-order_create-return">
				<map:act type="shipmentOrderCreateReturn"/>
				<map:read mime-type="text/html" type="jsp" src="jsp/shipment-order_edit.jsp"/>
			</map:match>

/ click 'Create return'	,
ShipmentOrderCreateReturnAction.act() line: 47	

		ShipmentOrderVO myOriginalShipmentOrder = ShipmentOrderUtil.getShipmentOrderFacadeLocal().getShipmentOrder(Integer.valueOf(SystemOrderSystemId));
/ db call	,
		ShipmentOrderVO myVO = MpoBeanFactory.getBean(ShipmentOrderService.class).createReturnShipmentOrder(myOriginalShipmentOrder);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createReturnShipmentOrder(ShipmentOrderVO) line: 723	
		ShipmentOrderVO myShipmentOrderVO = shipmentOrderDuplicator.duplicate(aShipmentOrder);
...
/s
CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO, CustomDuplicateAction) line: 54	

		// copy header
		ShipmentOrderVO myNewShipmentOrderVO = anOriginalShipmentOrderVO.copy();

		// id must be altered
		myNewShipmentOrderVO.setShipmentOrderId(anOriginalShipmentOrderVO.getShipmentOrderId().trim() + "copy");

		try {
			myNewShipmentOrderVO = shipmentOrderService.createShipmentOrder(myNewShipmentOrderVO);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createShipmentOrder(ShipmentOrderVO, TMSEventContext) line: 828	
...
				triggerEventHandler(null, myVO, new TMSEventContext());

/ 7	. 

/ dan wordt er een shi add aan de sho	,

/ we herhalen	,

CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO, CustomDuplicateAction) line: 79	

		try {
			myNewShipmentOrderVO = shipmentOrderService.createShipmentOrder(myNewShipmentOrderVO);
/ d
/ copy header, & rc	,

			for (ShipmentItemVO myOriginalShipmentItem : myOriginalShipmentItems) {
				myNewShipmentItem = shipmentItemService.save(myNewShipmentItem);
...
/s
ShipmentItemServiceImpl.save(ShipmentItemVO, boolean, boolean, boolean, boolean) line: 587	
		if (aPropagate && aRecalcualate) {
			recalculateShipmentOrder(myShipmentOrder, aIsEvict);
/s
ShipmentItemServiceImpl(ShipmentOrderChildService).recalculateShipmentOrder(ShipmentOrderVO, boolean) line: 24	
		getShipmentOrderService().recalculateShipmentOrder(aShipmentOrder, anIsEvict);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).recalculateShipmentOrder(ShipmentOrderVO, boolean) line: 1292	
			updateShipmentOrder(aShipmentOrder, true);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 2055	
		eventHandlerService.handleEvent(myEvent);
/s
EventHandlerServiceImpl.handleEvent(Event) line: 72	
			listenerList.fireEvent(anEvent);

/t
CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO, CustomDuplicateAction) line: 94	

		try {
			myNewShipmentOrderVO = shipmentOrderService.createShipmentOrder(myNewShipmentOrderVO);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createShipmentOrder(ShipmentOrderVO, TMSEventContext) line: 863	
				triggerEventHandler(null, myVO, new TMSEventContext());
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).triggerEventHandler(ShipmentOrderVO, ShipmentOrderVO, TMSEventContext) line: 2543	
		eventHandlerService.handleEvent(myEvent);
/s
EventHandlerServiceImpl.handleEvent(Event) line: 109	
			listenerList.fireEvent(anEvent);
/s
RateCalcEventListener.handleEvent(Event) line: 78	
				recalcShipOrderPrice(anEvent);
/s
RateCalcEventListener.recalcShipOrderPrice(Event) line: 92	
				recalculate(myNewShipmentOrderVO, AgreementType.SHIPMENT_ORDER, anEvent.getEventContext());
/s
RateCalcEventListener.recalculate(ShipmentOrderVO, AgreementType, TMSEventContext) line: 336	
			getCalculationService().recalculate(anOrder, aRateType, anEventContext);
/s
CalculationServiceImpl.recalculate(LogisticsOrderVO, AgreementType, TMSEventContext) line: 576	

			List<RateAgreementVO> mySelectedRateAgreement = getMatchingRateAgreement(anOrder, aRateType);
/ mySelectedRateAgreement misnomer: is inderdaad de list van ra's	, waar de sho op past	,

				} else if (anOrder instanceof ShipmentOrderVO) {
					ShipmentOrderVO myShipmentOrder = (ShipmentOrderVO) anOrder;
					if (!myRateCalculationVO.rateCalculationRequired()) {
/ JA
/ TODO (debug)	,
				// Now calculate the rates
				myRateCalculationVO.runFor(mySelectedRateAgreement);
/s
RateCalculationVO.runFor(List<RateAgreementVO>) line: 765	
		setRateAgreementVO(aRateAgreementVO);
/ sets the list of ra's aRateAgreement in de rate calc	, in this.rateAgreement	,
				calculateWithoutVariables();
/s
RateCalculationVO.calculateWithoutVariables() line: 1332	
			for (RateAgreementVO myAgreement : getRateAgreementVO()) {
				runFor(myAgreement, myAlterNative);
/s
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1066	

aRateAgreementVO	RateAgreementVO  (id=31050)	
/=
theSystemId: 26773867Name :RA-BUSINESSRULES SHO
Description :Business rules PostNL
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SHIPMENT_ORDER

			// Clear object map
			initObjectMap();
/ this.objectMap="SHIPMENT_ORDER":ShipmentOrder: SH000002986copy(SystemId:26845794; Org:PNL-CARGO)

			for (CostComponentSpecificationVO myCostComponent : aRateAgreementVO.getCostComponentSpecificationList()) {
CostComponentSpecification:26791329/RC-REQUESTED-END-AFTER/SET REQUESTED END AFTER							/ sho
CostComponentSpecification:26790877/CollectionDepot/Set collection depot									/ sho
CostComponentSpecification:26823743/RC_REQ_START_BEFORE/Req Start Before									/ sho
CostComponentSpecification:26774379/TotaalADRPuntenAantal/SET TOTAL HAZ POINTS ON SHIPMENT ORDER HEADER		/ sho
CostComponentSpecification:26774262/DefaultWeight/SET DEFAULT WEIGHT										/ sho
CostComponentSpecification:26790789/RC-SHIPPING_UNIT/SET DEFAULT SHIPPING UNIT								/ shi (*)
CostComponentSpecification:26773874/RC-PRODUCTCODE/SET PRODUCT CODE ALS ACTUAL SERVICE LEVEL				/ sho
CostComponentSpecification:26820290/TijdsVenster/Set field Tijdsvenster										/ sho
CostComponentSpecification:26791330/RC-REQUESTED-END-BEFORE/SET REQUESTED END BEFORE						/ sho
CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS													/ sho
CostComponentSpecification:26773957/MaxTemp/Set maximum temperature field									/ product item (*)
CostComponentSpecification:26823742/RC_REQ_START_AFTER/Req Start After										/ sho
CostComponentSpecification:26774028/EilandToeslag/Bepaal Eilandtoeslag										/ sho
CostComponentSpecification:26790876/DistributionDepot/Set distribution depot								/ sho
CostComponentSpecification:26773948/RC-SHIPMENTTYPE/SET SHIPMENT TYPE										/ sho
CostComponentSpecification:26774374/ADRPuntenAant/SET ADR POINTS ON PRODUCT ITEM							/ product item (*)
CostComponentSpecification:26773893/MinTemp/Set minimum temperature field									/ product item (*)

				if (!myAgreementType.equals(myCostComponent.getEntityType())) {
					subEntityComponentMap.put(myCostComponent.getRateParameter(), myCostComponent);			/ (*) 
				} else {
					myCostComponentSpecificationList.add(myCostComponent);

/ Als we een RC edit, zien we bij 'Entity type' of het sho, shi, of product item is	,

				componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {

/ RATE COMPONENT RC-REQUESTED-END-AFTER 
					for (RateResult myResult : myCostComp.run(this)) {
/s
CostComponentSpecificationVO.run(RateCalculationVO) line: 195	
this	CostComponentSpecificationVO  (id=31337)	
	calculationType	CalculationType  (id=31481)	
POSTCALCULATED
	entityType	EntityType  (id=31302)	
SHIPMENT_ORDER
	rateAgreement	RateAgreementVO  (id=31050)	
theSystemId: 26773867Name :RA-BUSINESSRULES SHO
	rateComponentType	RateComponentType  (id=32086)	
NONE(PRICE)
	rateParameter	RateParameterVO  (id=32150)	
theSystemId: 26847411Name :IF_END_AFTER_014						/ !
	ratePlusMode	RatePlusMode  (id=32151)	
	systemId	26791329	
	theDescription	"SET REQUESTED END AFTER" (id=32206)	
	theName	"RC-REQUESTED-END-AFTER" (id=32207)	
	theSequenceNr	0	

		} else {
			RateParameterVO myParameter = getRateParameter();
theSystemId: 26847411Name :IF_END_AFTER_014
			RateResult myResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
this	RateParameterVO  (id=32150)	
theSystemId: 26847411Name :IF_END_AFTER_014

							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);

/ Intermezzo

/ Onder Rate Components	,
RC-REQUESTED-END-AFTER=IF_END_AFTER_014

/ Onder Parameters	,
IF_END_AFTER_014
RT_OPTIE14_OUTPUT
SHO_REQ_END_BEFORE 	/ false
RP-REQ-END-BEFORE	/ true

/ Einde Intermezzo

/s
RateCalculationVO.getRateFunction(RateParameterVO) line: 624	

/ Intermezzo

/ een rc heeft een rp. Deze heeft een fct (outputfromfunction) die het verband geeft met input params	, dat kunnen ook rate_params zijn, of order details of free values	,

/ 7	.

/ de if function IF_END_AFTER_014 heeft ook 3 input parameters	, de test param, en de true en false param	, de true param is een order detial, de false ook een rate param	,

pnllogistics3=#   select rp.*from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='IF_END_AFTER_014' and ra.name='RA-BUSINESSRULES SHO';
 system_id |       name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequen
ce_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+------------------+-------------+------------------------------+-------------------------+---------------+-------
------+-------------------------+------------------+------------------+------------------
  26847411 | IF_END_AFTER_014 |             |                     26847410 |                26773867 |             0 |       
    0 |                         |                0 |                  | 
(1 row)
/ Er zijn 2 ra's met naam IF_END_AFTER_014, maar zitten in verschillende ra's	,

pnllogistics3=#   select rf.*from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id join rate_function rf on rp.outputfrom_function_systemid=rf.system_id where rp.name='IF_END_AFTER_014' and ra.name='RA-BUSINESSRULES SHO';
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26847410 |                      3500018 |               0 |               |                     |              
(1 row)


pnllogistics3=# select fd.*from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join function_definition fd on rf.function_definition_systemid=fd.system_id where rp.name = 'IF_END_AFTER_014';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF

pnllogistics3=# select ip.*from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id where rp.system_id=26847411;
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | ord
er_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+----
-------------------+------------
  26847413 |                    |                     2 |           26847410 |                    |                     |    
          26674110 |           
  26847414 |           26791328 |                     1 |           26847410 |                    |                     |    
                   |           
  26847412 |           26847476 |                     3 |           26847410 |                    |                     |    
                   |           
(3 rows)

pnllogistics3=# select irp.*f from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id join rate_parameter irp on ip.parameter_systemid=irp.system_id where rp.system_id=26847411;
 system_id |          name          |        description         | outputfrom_function_systemid | rate_agreement_systemid | i
s_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+------------------------+----------------------------+------------------------------+-------------------------+--
-------------+-------------+-------------------------+------------------+------------------+------------------
  26791328 | RP-REQ-END-AFTER-TI    | ZET REQUESTED START BEFORE |                     26791325 |                26773867 |  
           0 |           0 |                         |                0 |                  | 
  26847476 | RT_OPTIE14-copy_OUTPUT |                            |                     26847475 |                26773867 |  
           0 |           0 |                         |                0 |                  | 
(2 rows)

pnllogistics3=# 
pnllogistics3=# select iod.* from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id join order_detail iod on ip.order_detail_systemid=iod.system_id where rp.system_id=26847411;
 system_id |         path_or_class         |     name      | unit_systemid | parameter_type_systemid |  entity_type   
-----------+-------------------------------+---------------+---------------+-------------------------+----------------
  26674110 | ./dateSetVO/requestedEndAfter | REQ_END_AFTER |       1000536 |                 3700005 | SHIPMENT_ORDER
(1 row)

/ 7	.

/ de rp RP_REQ_START_AFTER heeft 3 input params	, 2 rate params en 1 order detail	, 
/ we zien ze in de GUI als we de rp edit,	 we zien 'free parameter', 'parameters' , 'order details'	, 

pnllogistics3=# select fd.*from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join function_definition fd on rf.function_definition_systemid=fd.system_id where rp.name = 'RP_REQ_START_AFTER';
 system_id |                            definition                             |   name   
-----------+-------------------------------------------------------------------+----------
   3500020 | com.mpobjects.oms.ratecalc.model.process.function.SetTimeFunction | SET TIME

pnllogistics3=# select irp.*f from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id join rate_parameter irp on ip.parameter_systemid=irp.system_id where rp.name = 'RP_REQ_START_AFTER';
 system_id |              name               | description | outputfrom_function_systemid | rate_agreement_systemid | is_pers
istent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+---------------------------------+-------------+------------------------------+-------------------------+--------
-------+-------------+-------------------------+------------------+------------------+------------------
  26817129 | RT-START-TIME-118_OUTPUT        |             |                     26817128 |                26780275 |        
     0 |           0 |                         |                0 |                  | 
  26817135 | RT-START-TIME-ALL-OTHERS_OUTPUT |             |                     26817134 |                26780275 |        
     0 |           0 |                         |                0 |                  | 



pnllogistics3=# select iod.*f from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id join order_detail iod on ip.order_detail_systemid=iod.system_id where rp.name = 'RP_REQ_START_AFTER';
 system_id |          path_or_class          |      name       | unit_systemid | parameter_type_systemid |  entity_type   
-----------+---------------------------------+-----------------+---------------+-------------------------+----------------
  41000528 | ./dateSetVO/requestedStartAfter | REQ_START_AFTER |       1000536 |                 3700005 | SHIPMENT_ORDER


/ Einde Intermezzo

							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
myAbstractRateFunction	IfFunction  (id=32514)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_84  (id=32579)	
/=
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
/ overbodig?
/ TODO
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26847413, SystemId: 26847412, SystemId: 26847414]
/ Klopt	,

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			OrderDetail myServiceorderDetail = getOrderDetailVO();
SystemId: 26674110, Name :REQ_END_AFTER, PathOrClass :./dateSetVO/requestedEndAfter
				myRateResult = aRateCalculation.evaluate(myServiceorderDetail);
2015-09-22 08:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	
					myRateResult.setResultName(myServiceorderDetail.getName());
theResultName	"REQ_END_AFTER" (id=34459)	

			setRateResult(myRateResult);
/t
RateParameterVO.calculate(RateCalculationVO) line: 155	
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
									if (mySub != null) {
										mySubResults.add(mySub);
mySub	RateResult  (id=34222)	
	theResultName	"REQ_END_AFTER" (id=34459)	
	theUnitVO	Unit  (id=34391)	
theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0
	theValue	"2015-09-22 08:00:00" (id=34409)	

/ een RateResult is vnl. name, value	. Ongeacht of het een rate param is , of een order detail , of een free value	,

/ volgende,	
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			RateParameterVO myParameter = getParameterVO();
theSystemId: 26847476Name :RT_OPTIE14-copy_OUTPUT

/ t
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1090	
			for (CostComponentSpecificationVO myCostComponent : aRateAgreementVO.getCostComponentSpecificationList()) {

/ volgende	,

/ RATE COMPONENT DefaultWeight

myCostComponent	CostComponentSpecificationVO  (id=21648)	
	rateParameter	RateParameterVO  (id=22469)	
theSystemId: 26774261
Name :RP-SET-DEF-WEIGHT
Description :DETERMINE TOTAL DEFAULT WEIGHT (SUM OF ALL SHIPMENT ITEMS)
	systemId	26774262	
	theDescription	"SET DEFAULT WEIGHT" (id=22554)	
	theName	"DefaultWeight" (id=22555)	

/ Intermezzo

/ 13	. 

RP-SET-DEF-WEIGHT=SUM(
	RT-DEFAULT-WEIGHT_OUTPUT=RT-DEFAULT-WEIGHT(
	 	SHIPUNIT
	)
)	
		

/ 13	. 

pnllogistics3=# select*from cost_component_specification where name like '%Weight%';
 system_id |     name      |    description     | parameter_systemid | order_rate_part_systemid | sequence_nr | rate_agreemen
t_systemid | rate_plus_mode | correction_type | evaluation_objective | calculation_type |  entity_type   
-----------+---------------+--------------------+--------------------+--------------------------+-------------+--------------
-----------+----------------+-----------------+----------------------+------------------+----------------
  26774262 | DefaultWeight | SET DEFAULT WEIGHT |           26774261 |                 26673607 |           0 |              
  26773867 | NONE           | ENTITY_DETAIL   | PRICE                | POSTCALCULATED   | SHIPMENT_ORDER
(1 row)

pnllogistics3=# select rp. *from cost_component_specification ccs join rate_parameter rp on ccs.parameter_systemid=rp.system_id where ccs.name like '%Weight%';
 system_id |       name        |                        description                         | outputfrom_function_systemid | 
rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | itera
tion_action 
-----------+-------------------+------------------------------------------------------------+------------------------------+-
------------------------+---------------+-------------+-------------------------+------------------+------------------+------
------------
  26774261 | RP-SET-DEF-WEIGHT | DETERMINE TOTAL DEFAULT WEIGHT (SUM OF ALL SHIPMENT ITEMS) |                     26774259 | 
               26773867 |             0 |           0 |                         |                0 | SHIPMENT_ITEM    | SUM
(1 row)

pnllogistics3=#   select rct. *from cost_component_specification ccs join rate_component_type rct on ccs.order_rate_part_systemid=rct.system_id where ccs.name like '%Weight%';
 system_id | code | description | is_deleted | reason_mandatory | sequence_nr | rct_group 
-----------+------+-------------+------------+------------------+-------------+-----------
  26673607 | NONE | None        |          0 |                0 |         999 | PRICE
(1 row)

/ 13	.

pnllogistics3=# select*from rate_parameter rp where rp.name like 'RP-SET-DEF-WEIGHT';
 system_id |       name        |                        description                         | outputfrom_function_systemid | 
rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | itera
tion_action 
-----------+-------------------+------------------------------------------------------------+------------------------------+-
------------------------+---------------+-------------+-------------------------+------------------+------------------+------
------------
  26774261 | RP-SET-DEF-WEIGHT | DETERMINE TOTAL DEFAULT WEIGHT (SUM OF ALL SHIPMENT ITEMS) |                     26774259 | 
               26773867 |             0 |           0 |                         |                0 | SHIPMENT_ITEM    | SUM
(1 row)

pnllogistics3=# select rf.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id where rp.name like 'RP-SET-DEF-WEIGHT';
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26774259 |                      3500006 |               0 |               |                     |       1000532
(1 row)

pnllogistics3=# select fd.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join function_definition fd on rf.function_definition_systemid=fd.system_id where rp.name like 'RP-SET-DEF-WEIGHT';
 system_id |                          definition                           | name 
-----------+---------------------------------------------------------------+------
   3500006 | com.mpobjects.oms.ratecalc.model.process.function.SumFunction | SUM
(1 row)

pnllogistics3=# select ip.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join input_parameter ip on ip.rate_func_systemid=rf.system_id where rp.name like 'RP-SET-DEF-WEIGHT';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | ord
er_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+----
-------------------+------------
  26774260 |           26774240 |                       |           26774259 |                    |                     |    
                   |           
(1 row)

pnllogistics3=# select irp.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join input_parameter ip on ip.rate_func_systemid=rf.system_id join rate_parameter irp on ip.parameter_systemid=irp.system_id where rp.name like 'RP-SET-DEF-WEIGHT';
 system_id |           name           | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent 
| sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+--------------------------+-------------+------------------------------+-------------------------+---------------
+-------------+-------------------------+------------------+------------------+------------------
  26774240 | RT-DEFAULT-WEIGHT_OUTPUT |             |                     26774239 |                26773867 |             0 
|           0 |                         |                0 |                  | 
(1 row)

/ 13	. 

pnllogistics3=# select rp.* from rate_parameter rp where rp.name='RT-DEFAULT-WEIGHT_OUTPUT';
 system_id |           name           | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence
_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+--------------------------+-------------+------------------------------+-------------------------+---------------+---------
----+-------------------------+------------------+------------------+------------------
  26774240 | RT-DEFAULT-WEIGHT_OUTPUT |             |                     26774239 |                26773867 |             0 |         
  0 |                         |                0 |                  | 
(1 row)

pnllogistics3=# select fd.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join function_definition fd on rf.function_definition_systemid=fd.system_id where rp.name like 'RT-DEFAULT-WEIGHT_OUTPUT';
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)


pnllogistics3=# select*from rate_table where name like '%RT-DEFAULT-WEIGHT%';
-[ RECORD 1 ]--------------+----------------------------------
rate_agreement_systemid    | 26773867
system_id                  | 26774236
name                       | RT-DEFAULT-WEIGHT
description                | Default weights per shipment unit
unit_systemid              | 1000532
rate_table_xml             | 
min_charge                 | 
max_charge                 | 
rounding                   | 0
excel_formatted            | 0
default_value              | 
rate_table_content         | BLK     250
                           | C       20
                           | C+      30
                           | COL     20
                           | EUR     250
                           | EWP     250
                           | FTL     24.000
                           | HEP     100
                           | KTF     250
                           | LDM     800
                           | MP      80
                           | P       250
                           | P XL    300
                           | P XXL   300
                           | P XXXL  300
                           | P+      300
                           | RC      125
                           | RK      40
                           | ZAK     10
is_user_editable           | 0
is_shared                  | 0
linked_rate_table_systemid | 
linked_multiplication      | 
linked_addition            | 
last_update                | 2015-07-28 12:04:07.913

pnllogistics3=# select ip.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join input_parameter ip on ip.rate_func_systemid=rf.system_id where rp.name like 'RT-DEFAULT-WEIGHT_OUTPUT';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26774238 |                    |                       |           26774239 |                    |                     |              
26680730 |           
(1 row)

pnllogistics3=# select iod.* from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id join order_detail iod on ip.order_detail_systemid=iod.system_id where rp.name = 'RT-DEFAULT-WEIGHT_OUTPUT';
 system_id |    path_or_class    |   name   | unit_systemid | parameter_type_systemid |  entity_type  
-----------+---------------------+----------+---------------+-------------------------+---------------
  26680730 | ./shippingUnit/code | SHIPUNIT |               |                 3700001 | SHIPMENT_ITEM
(1 row)

/ 13	. 

pnllogistics3=# select*from dimension where name like '%SHIPUNIT%';
 system_id |     name     | rate_table_systemid | unit_systemid | rounding | discrete | basic_charge_applicable | sequence_nr | max_min
_mode | regex_permitted | range_permitted | input_parameter_systemid 
-----------+--------------+---------------------+---------------+----------+----------+-------------------------+-------------+--------
------+-----------------+-----------------+--------------------------
  26774237 | RTD-SHIPUNIT |            26774236 |               |        0 |        1 |                       0 |           1 |        
      |               0 |               0 |                 26774238
(1 row)

/ TODO

/ Einde Intermezzo

/ we waren in	, 
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1090	
			for (CostComponentSpecificationVO myCostComponent : aRateAgreementVO.getCostComponentSpecificationList()) {
					for (RateResult myResult : myCostComp.run(this)) {
/s
		} else {
			RateParameterVO myParameter = getRateParameter();
			RateResult myResult = myParameter.calculate(aRateCalculation);
theSystemId: 26774261Name :RP-SET-DEF-WEIGHT
Description :DETERMINE TOTAL DEFAULT WEIGHT (SUM OF ALL SHIPMENT ITEMS)
/s
RateParameterVO.calculate(RateCalculationVO) line: 121	

this	RateParameterVO  (id=22469)	
	iterationEntity	"SHIPMENT_ITEM" (id=24952)	
	theDescription	"DETERMINE TOTAL DEFAULT WEIGHT (SUM OF ALL SHIPMENT ITEMS)" (id=25147)	
	theName	"RP-SET-DEF-WEIGHT" (id=25163)	
	theOutputfromFunction	RateFunctionVO_$$_javassist_84  (id=24073)	

						if (aRateCalculation.shouldCalculate(this)) {
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
myAbstractRateFunction	SumFunction  (id=24004)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_84  (id=24073)	
/=
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26774259
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26774260]
							if (getIterationEntity() != null && !getIterationEntity().equals(aRateCalculation.getCurrentEntityType().name())) {
/ JA	, 
"SHIPMENT_ITEM"!="SHIPMENT_ORDER"
								if (getIterationAction() != null) {
									switch (getIterationAction()) {
										case SUM:
											myResult = new SumFunction().calculate(myList, aRateCalculation);
/s
SumFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 23	
		for (InputParameterVO myInputParameterVO : anInputParameterList) {
[]
/ TODO

/t
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1107	

/ RATE COMPONENT  RC_REQ_START_BEFORE/Req Start Before

				componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					for (RateResult myResult : myCostComp.run(this)) {

/ Intermezzo

/ We zien in de GUI	,

RC_REQ_START_BEFORE:RP_REQ_START_BEFORE=SET TIME(
	RT-END-TIME-118_OUTPUT	 			/ rate param
	RT-END-TIME-ALL-OTHERS_OUTPUT		/ rate param	
	SHO-REQ_START_BEFORE(SHO)			/ order detail	,
)

pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP_REQ_START_BEFORE' and ra.name='RA-BUSINESSRULES SHO';
 system_id |        name         | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_nr |
 parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+---------------------+-------------+------------------------------+-------------------------+---------------+-------------+
-------------------------+------------------+------------------+------------------
  26823741 | RP_REQ_START_BEFORE |             |                     26823737 |                26773867 |             0 |           0 |
                         |                0 |                  | 
(1 row)

pnllogistics3=# select ip.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join input_parameter ip on ip.rate_func_systemid=rf.system_id  join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name like 'RP_REQ_START_BEFORE' and ra.name='RA-BUSINESSRULES SHO';;
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26823738 |                    |                       |           26823737 |                    |                     |              
26674109 |           
  26823739 |           26791310 |                       |           26823737 |                    |                     |              
         |           
  26823740 |           26791316 |                       |           26823737 |                    |                     |              
          |           

/ De eerste is een order detail, de 2de en 3de een rate_parameter	,

pnllogistics3=# select oid.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join input_parameter ip on ip.rate_func_systemid=rf.system_id  join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id join order_detail oid on ip.order_detail_systemid=oid.system_id  where rp.name like 'RP_REQ_START_BEFORE' and ra.name='RA-BUSINESSRULES SHO'; 
 system_id |          path_or_class           |       name       | unit_systemid | parameter_type_systemid |  entity_type   
-----------+----------------------------------+------------------+---------------+-------------------------+----------------
  26674109 | ./dateSetVO/requestedStartBefore | REQ_START_BEFORE |       1000536 |                 3700005 | SHIPMENT_ORDER
(1 row)


pnllogistics3=# select irp.* from rate_parameter rp join rate_function rf on rp.outputfrom_function_systemid=rf.system_id join input_parameter ip on ip.rate_func_systemid=rf.system_id  join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id join rate_parameter irp on ip.parameter_systemid=irp.system_id where rp.name like 'RP_REQ_START_BEFORE' and ra.name='RA-BUSINESSRULES SHO'; 
 system_id |             name              | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | seq
uence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+-------------------------------+-------------+------------------------------+-------------------------+---------------+----
---------+-------------------------+------------------+------------------+------------------
  26791310 | RT-END-TIME-118_OUTPUT        |             |                     26791309 |                26773867 |             0 |    
       0 |                         |                0 |                  | 
  26791316 | RT-END-TIME-ALL-OTHERS_OUTPUT |             |                     26791315 |                26773867 |             0 |    
       0 |                         |                0 |                  | 
(2 rows)



pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-END-TIME-118_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id |          name          | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_n
r | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+------------------------+-------------+------------------------------+-------------------------+---------------+-----------
--+-------------------------+------------------+------------------+------------------
  26791310 | RT-END-TIME-118_OUTPUT |             |                     26791309 |                26773867 |             0 |           
0 |                         |                0 |                  | 
(1 row)




pnllogistics3=# select iod.* from input_parameter ip join rate_function rf on ip.rate_func_systemid=rf.system_id join rate_parameter rp  on rp.outputfrom_function_systemid=rf.system_id join order_detail iod on ip.order_detail_systemid=iod.system_id where rp.name = 'RT-END-TIME-118_OUTPUT';
 system_id |                path_or_class                 |    name     | unit_systemid | parameter_type_systemid |  entity_type   
-----------+----------------------------------------------+-------------+---------------+-------------------------+----------------
  26820310 | ./entityDetailValueMap[@name='TijdsVenster'] | TIME_WINDOW |               |                 3700001 | SHIPMENT_ORDER
  26786424 | ./entityDetailValueMap[@name='OptieSoort']   | OPTIE_SOORT |               |                 3700001 | SHIPMENT_ORDER
(2 rows)

/ Einde Intermezzo

/ t

/ RATE COMPONENT RC-HOLD

				componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					for (RateResult myResult : myCostComp.run(this)) {

/ Intermezzo

pnllogistics3=#  select*from cost_component_specification ccs join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |  name   |   description   | parameter_systemid | order_rate_part_systemid | sequence_nr | rate_agreement_systemid | rate_p
lus_mode | correction_type | evaluation_objective | calculation_type |  entity_type   | system_id |         name         |      descrip
tion      | organization_systemid | unit_systemid | is_deleted |   rate_type    | is_quotation | is_template | reference1 | reference2 
| reference3 | reference4 | reference5 | reference6 | reference7 | reference8 | reference9 | reference10 | is_last | priority 
-----------+---------+-----------------+--------------------+--------------------------+-------------+-------------------------+-------
---------+-----------------+----------------------+------------------+----------------+-----------+----------------------+-------------
----------+-----------------------+---------------+------------+----------------+--------------+-------------+------------+------------
+------------+------------+------------+------------+------------+------------+------------+-------------+---------+----------
  26774022 | RC-HOLD | ZET HOLD STATUS |           26774021 |                 26673607 |           0 |                26773867 | NONE  
         | HOLD_STATUS     | PRICE                | POSTCALCULATED   | SHIPMENT_ORDER |  26773867 | RA-BUSINESSRULES SHO | Business rul
es PostNL |                   500 |       1000072 |          0 | SHIPMENT_ORDER |            0 |           0 |            |            
|            |            |            |            |            |            |            |             |       0 |        0
(1 row)

pnllogistics3=#  select rp.* from rate_parameter rp join cost_component_specification ccs on rp.system_id=ccs.parameter_systemid join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |  name   |                          description                           | outputfrom_function_systemid | rate_agreement_s
ystemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+---------+----------------------------------------------------------------+------------------------------+-----------------
--------+---------------+-------------+-------------------------+------------------+------------------+------------------
  26774021 | RP-HOLD | IF CUSTOMER IS UNKOWN SET CUSTOMER HOLD, ELSE SET PRODUCT HOLD |                     26773967 |                2
6773867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=#  select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join cost_component_specification ccs on rp.system_id=ccs.parameter_systemid join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26773967 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join cost_component_specification ccs on rp.system_id=ccs.parameter_systemid join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=#  select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join cost_component_specification ccs on rp.system_id=ccs.parameter_systemid join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26773974 |           26773973 |                     2 |           26773967 |                    |                     |              
         |           
  26774019 |           26774018 |                     1 |           26773967 |                    |                     |              
         |           
  26774020 |           26773973 |                     3 |           26773967 |                    |                     |              
         |           
(3 rows)


pnllogistics3=#  select ip.system_id,irp.* from rate_parameter irp join  input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join cost_component_specification ccs on rp.system_id=ccs.parameter_systemid join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |              name               |                              description                              | outp
utfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iterati
on_entity | iteration_action 
-----------+-----------+---------------------------------+-----------------------------------------------------------------------+-----
-------------------------+-------------------------+---------------+-------------+-------------------------+------------------+--------
----------+------------------
  26773974 |  26773973 | RT-CUSTOMER-UNKNOWN-HOLD_OUTPUT |                                                                       |     
                26773969 |                26773867 |             0 |           0 |                         |                0 |        
          | 
  26774019 |  26774018 | RP-PRODUCT-HOLD                 | IF PRODUCT IS UNKNOWN, SET UNKOWN PRODUCT HOLD, ELSE SET BARCODE HOLD |     
                26773975 |                26773867 |             0 |           0 |                         |                0 |        
          | 
  26774020 |  26773973 | RT-CUSTOMER-UNKNOWN-HOLD_OUTPUT |                                                                       |     
                26773969 |                26773867 |             0 |           0 |                         |                0 |        
          | 
(3 rows)
                                         ^

/ Alle 3 rp's,	 geen od, of fv	,

pnllogistics3=#  select ip.system_id,iod.* from order_detail iod join  input_parameter ip on iod.system_id=ip.order_detail_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join cost_component_specification ccs on rp.system_id=ccs.parameter_systemid join rate_agreement ra on ccs.rate_agreement_systemid=ra.system_id where ccs.name='RC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | path_or_class | name | unit_systemid | parameter_type_systemid | entity_type 
-----------+---------------+------+---------------+-------------------------+-------------
(0 rows)



/ Einde Intermezzo

/ we waren in	,
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1108	
				componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					for (RateResult myResult : myCostComp.run(this)) {
/s
CostComponentSpecificationVO.run(RateCalculationVO) line: 195	
		} else {
			RateParameterVO myParameter = getRateParameter();
theSystemId: 26774021Name :RP-HOLD
Description :IF CUSTOMER IS UNKOWN SET CUSTOMER HOLD, ELSE SET PRODUCT HOLD
			RateResult myResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
						if (aRateCalculation.shouldCalculate(this)) {
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@1c182f0d
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26774019, SystemId: 26773974, SystemId: 26774020]
							Collection<RateResult> mySubResults = new ArrayList<RateResult>();

							} else {
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=26007)	
	systemId	26774019	
	theParameter	RateParameterVO  (id=26140)	
theSystemId: 26774018Name :RP-PRODUCT-HOLD
Description :IF PRODUCT IS UNKNOWN, SET UNKOWN PRODUCT HOLD, ELSE SET BARCODE HOLD

									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			RateParameterVO myParameter = getParameterVO();
theSystemId: 26774018Name :RP-PRODUCT-HOLD
Description :IF PRODUCT IS UNKNOWN, SET UNKOWN PRODUCT HOLD, ELSE SET BARCODE HOLD

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
/ this=
theSystemId: 26774018Name :RP-PRODUCT-HOLD
Description :IF PRODUCT IS UNKNOWN, SET UNKOWN PRODUCT HOLD, ELSE SET BARCODE HOLD

/ Intermezzo

pnllogistics3=#  select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-PRODUCT-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |      name       |                              description                              | outputfrom_function_systemid | r
ate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action
 
-----------+-----------------+-----------------------------------------------------------------------+------------------------------+--
-----------------------+---------------+-------------+-------------------------+------------------+------------------+-----------------
-
  26774018 | RP-PRODUCT-HOLD | IF PRODUCT IS UNKNOWN, SET UNKOWN PRODUCT HOLD, ELSE SET BARCODE HOLD |                     26773975 |  
              26773867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=#  select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-PRODUCT-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26773975 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-PRODUCT-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=#  select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-PRODUCT-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26774010 |           26813350 |                     1 |           26773975 |                    |                     |              
         |           
  26774016 |           26774015 |                     2 |           26773975 |                    |                     |              
         |           
  26774017 |           26774015 |                     3 |           26773975 |                    |                     |              
         |           
(3 rows)

pnllogistics3=#  select ip.system_id,irp.* from rate_parameter irp join  input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-PRODUCT-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |              name              |                              description                               | outp
utfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iterati
on_entity | iteration_action 
-----------+-----------+--------------------------------+------------------------------------------------------------------------+-----
-------------------------+-------------------------+---------------+-------------+-------------------------+------------------+--------
----------+------------------
  26774010 |  26813350 | RP-UNKNOWN-PC-HOLD             | IF POSTAL CODE IS INVALID, SET ADDRESS HOLD, ELSE CHECK ADDRESS FIELDS |     
                26813349 |                26773867 |             0 |           0 |                         |                0 |        
          | 
  26774016 |  26774015 | RT-UNKNOWN-PRODUCT-HOLD_OUTPUT |                                                                        |     
                26774012 |                26773867 |             0 |           0 |                         |                0 |        
          | 
  26774017 |  26774015 | RT-UNKNOWN-PRODUCT-HOLD_OUTPUT |                                                                        |     
                26774012 |                26773867 |             0 |           0 |                         |                0 |        
          | 
(3 rows)

/ Dus weer 3 rp's	,

/ Einde Intermezzo

/ we waren in	,
RateParameterVO.calculate(RateCalculationVO) line: 77	

/ this=
theSystemId: 26774018Name :RP-PRODUCT-HOLD
Description :IF PRODUCT IS UNKNOWN, SET UNKOWN PRODUCT HOLD, ELSE SET BARCODE HOLD

							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@3ba593c0
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26774010, SystemId: 26774017, SystemId: 26774016]
							Collection<RateResult> mySubResults = new ArrayList<RateResult>();

							} else {
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=26335)	
	systemId	26774010	
	theParameter	RateParameterVO  (id=26347)	
theSystemId: 26813350
Name :RP-UNKNOWN-PC-HOLD
Description :IF POSTAL CODE IS INVALID, SET ADDRESS HOLD, ELSE CHECK ADDRESS FIELDS

									RateResult mySub = myInputParameter.calculate(aRateCalculation);

/ Intermezzo

/ In een andere run is eerst 
myInputParameter	InputParameterVO  (id=22974)	
	systemId	26774016	
	theParameter	RateParameterVO  (id=22980)	
theSystemId: 26774015
Name :RT-UNKNOWN-PRODUCT-HOLD_OUTPUT

/ set de debugger uit en eval in eclipse myInputParameter.calculate(aRateCalculation)	, =null	, 
/ we slaan hem over	,
/ we zien hem ook niet in de samenvatting (boom)	,

/ Einde Intermezzo

/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			RateParameterVO myParameter = getParameterVO();
theSystemId: 26813350
Name :RP-UNKNOWN-PC-HOLD
Description :IF POSTAL CODE IS INVALID, SET ADDRESS HOLD, ELSE CHECK ADDRESS FIELDS

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s

/ Intermezzo

pnllogistics3=#  select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-UNKNOWN-PC-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id |        name        |                              description                               | outputfrom_function_systemid
 | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_ac
tion 
-----------+--------------------+------------------------------------------------------------------------+-----------------------------
-+-------------------------+---------------+-------------+-------------------------+------------------+------------------+-------------
-----
  26813350 | RP-UNKNOWN-PC-HOLD | IF POSTAL CODE IS INVALID, SET ADDRESS HOLD, ELSE CHECK ADDRESS FIELDS |                     26813349
 |                26773867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=#  select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-UNKNOWN-PC-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26813349 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-UNKNOWN-PC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=#  select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-UNKNOWN-PC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26813351 |           26787711 |                     3 |           26813349 |                    |                     |              
         |           
  26813352 |           26787711 |                     2 |           26813349 |                    |                     |              
         |           
  26813353 |           26813355 |                     1 |           26813349 |                    |                     |              
         |           
(3 rows)

pnllogistics3=#  select ip.system_id,irp.* from rate_parameter irp join  input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-UNKNOWN-PC-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |           name            |                                 description                                 | outp
utfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iterati
on_entity | iteration_action 
-----------+-----------+---------------------------+-----------------------------------------------------------------------------+-----
-------------------------+-------------------------+---------------+-------------+-------------------------+------------------+--------
----------+------------------
  26813351 |  26787711 | RT-POSTALCODE-HOLD_OUTPUT |                                                                             |     
                26787710 |                26773867 |             0 |           0 |                         |                0 |        
          | 
  26813352 |  26787711 | RT-POSTALCODE-HOLD_OUTPUT |                                                                             |     
                26787710 |                26773867 |             0 |           0 |                         |                0 |        
          | 
  26813353 |  26813355 | RP-ADDRESS-HOLD           | CHECK ALL ADDRESS FIELDS FILLED, IF NO SET ADDRESS HOLD, ELSE CHECK BARCODE |     
                26813354 |                26773867 |             0 |           0 |                         |                0 |        
          | 
(3 rows)

/ Einde Intermezzo

/ RT-POSTALCODE-HOLD_OUTPUT hadden we over moeten slaan	, want levert null	,
/ TODO

/ we zijn in	,
InputParameterVO.calculate(RateCalculationVO) line: 109	

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	

						if (aRateCalculation.shouldCalculate(this)) {
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@4a33b18c
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26813351, SystemId: 26813352, SystemId: 26813353]
							Collection<RateResult> mySubResults = new ArrayList<RateResult>();

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
SystemId: 26813351
									RateResult mySub = myInputParameter.calculate(aRateCalculation);

/ Intermezzo

pnllogistics3=#  select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-POSTALCODE-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO'; 
 system_id |           name            | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequenc
e_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+---------------------------+-------------+------------------------------+-------------------------+---------------+--------
-----+-------------------------+------------------+------------------+------------------
  26787711 | RT-POSTALCODE-HOLD_OUTPUT |             |                     26787710 |                26773867 |             0 |        
   0 |                         |                0 |                  | 
(1 row)

pnllogistics3=#  select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-POSTALCODE-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO'; 
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26787710 |                      3500001 |               0 |               |            26787701 |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-POSTALCODE-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)

pnllogistics3=# select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-POSTALCODE-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26787708 |                    |                       |           26787710 |                    |                     |              
 4200508 |           
  26787709 |                    |                       |           26787710 |                    |                     |              
 4200507 |           
  26787706 |                    |                       |           26787710 |                    |                     |              
 4200503 |           
  26787707 |                    |                       |           26787710 |                    |                     |              
 4200506 |           
(4 rows)

pnllogistics3=# select ip.system_id,iod.* from order_detail iod join  input_parameter ip on iod.system_id=ip.order_detail_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-POSTALCODE-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |        path_or_class         |      name       | unit_systemid | parameter_type_systemid |  entity_type   
-----------+-----------+------------------------------+-----------------+---------------+-------------------------+----------------
  26787708 |   4200508 | ./fromPartyVO/postalCode     | FROM POSTALCODE |               |                 3700001 | SHIPMENT_ORDER
  26787709 |   4200507 | ./toPartyVO/postalCode       | TO POSTALCODE   |               |                 3700001 | SHIPMENT_ORDER
  26787706 |   4200503 | ./fromPartyVO/countryVO/code | FROM COUNTRY    |               |                 3700001 | SHIPMENT_ORDER
  26787707 |   4200506 | ./toPartyVO/countryVO/code   | TO COUNTRY      |               |                 3700001 | SHIPMENT_ORDER
(4 rows)


/ alle 4 order details	,

/ Einde Intermezzo

/ we zijn in 	,
RateParameterVO.calculate(RateCalculationVO) line: 153	
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=26438)	
	systemId	26813351	
	theParameter	RateParameterVO  (id=26528)	
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT

									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
/ this=SystemId: 26813351
theSystemId: 26787711
Name :RT-POSTALCODE-HOLD_OUTPUT

			RateParameterVO myParameter = getParameterVO();
			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
/ this=
theSystemId: 26787711
Name :RT-POSTALCODE-HOLD_OUTPUT

						if (aRateCalculation.shouldCalculate(this)) {
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction@28e2f54
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26787707, SystemId: 26787708, SystemId: 26787706, SystemId: 26787709]
							Collection<RateResult> mySubResults = new ArrayList<RateResult>();

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			OrderDetail myServiceorderDetail = getOrderDetailVO();
SystemId: 4200506, Name :TO COUNTRY, PathOrClass :./toPartyVO/countryVO/code

			if (myServiceorderDetail != null) {
				myRateResult = aRateCalculation.evaluate(myServiceorderDetail);
NL
					myRateResult.setResultName(myServiceorderDetail.getName());
						myRateResult.setUnitVO(myServiceorderDetail.getUnit());
			setRateResult(myRateResult);
			return getRateResult();

/t
RateParameterVO.calculate(RateCalculationVO) line: 154	
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
									if (mySub != null) {
										mySubResults.add(mySub);
/ Zo alle 4	,
[NL , 3012cn , NL , 5626gh ]

								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
RateTableFunction.convertAndCalculate(Collection<InputParameterVO>, RateCalculationVO) line: 335	
		convertInputUnitsToOutputUnit(anInputParameterList);
/ NIETS
		RateResult myResult = calculate(anInputParameterList, aRateCalculation);
/s
RateTableFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 39	

this	RateTableFunction  (id=26590)	
	theRateContext	RateCalculationVO  (id=20732)	
	theRateFunctionVO	RateFunctionVO  (id=26623)	
		systemId	26787710	
		theInputParameterList	PersistentSet  (id=26625)	
[SystemId: 26787707, SystemId: 26787708, SystemId: 26787706, SystemId: 26787709]
		theRateParameter	RateParameterVO  (id=26528)	
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT
		theRateTable	RateTableVO  (id=27292)	

		RateTableVO myRateTable = getRateFunctionVO().getRateTableVO();

		for (DimensionVO dim : myRateTable.getDimensionList()) {
			RateResult dimRes = dim.getInputParameter().getRateResult();
3012cn
5626gh 
NL 
NL
		final String cacheKey = myKeyBuilder.toString();
		} else {
			myRateResult = calculateWithoutCache(anInputParameterList, aRateCalculation);
/s
RateTableFunction.calculateWithoutCache(Collection<InputParameterVO>, RateCalculationVO) line: 95	

			myKeyBuilder.append(dimRes.getValue()).append('|');

		} else {
			myRateResult = calculateWithoutCache(anInputParameterList, aRateCalculation);
/s
RateTableFunction.calculateWithoutCache(Collection<InputParameterVO>, RateCalculationVO) line: 115	
/=
	/**
	 * This function performs the lookup in the rate table. Before it performs the lookup, it evaluates if all rate
	 * table criteria match the (test) service order.
	 */
	public RateResult calculateWithoutCache(Collection<InputParameterVO> anInputParameterList, RateCalculationVO aRateCalculation) throws RateException {

		/*
		 * First we need to evaluate the input parameters and lookup the relevant column and row(s) in the rate table.
		 * Since only dimension 2 determines the column there is only one lookup for the column. For looking up the row,
		 * there is a knock out system: the matchRowDimension eliminates non matching rows from the myRowMap map.
		 */

		InputParameterVO[] myInputParamArray = new InputParameterVO[myNoOfDimensions == 1 ? 1 : myNoOfDimensions - 1];

		for (DimensionVO myDimension : myRateTable.getDimensionList()) {
			if (myDimension.getSequenceNr() == 2) {
				mySecondInputParam = myDimension.getInputParameter();
			} else if (myDimension.getSequenceNr() == 1) {
				myInputParamArray[0] = myDimension.getInputParameter();
			} else {
				myInputParamArray[myDimension.getSequenceNr() - 2] = myDimension.getInputParameter();
			}
			/* Determine mode */
			if (StringUtils.isNotEmpty(myDimension.getMaxMinMode())) {
				myMaxMinInputParameter = myDimension.getInputParameter();
			}
		}

myInputParamArray	InputParameterVO[3]  (id=28156)	
[SystemId: 26787706, SystemId: 26787708, SystemId: 26787709]

		boolean mySecondDimension = myRateTable.getLastDataColumn() < myRateTable.getLastDataRow();
		mainloop: for (int i = 0; i < 2; i++) {
			/* Lookup row (dimension 1, 3+) or column (dimension 2) */
			if (mySecondDimension && myNoOfDimensions > 1) {
/ NEE
			if (!mySecondDimension) {
				myResult = myRateTable.matchRowDimension(myInputParamArray);
/s
RateTableVO.matchRowDimension(InputParameterVO[]) line: 912	

/ Intermezzo

/ we zien de rate table	,

												TO_COUNTRY 	NL 				NL	
FROM_COUNTRY	FROM_POSTALCODE	TO_POSTALCODE	
NL				0.*				0.*							ADRESS_HOLD		0	
NL				.*				.*							ADRESS_HOLD		ADDRESS_HOLD

/ Einde Intermezzo

		int myLast = getLastDataRow();
2
		rowLoop: for (int r = getFirstDataRow(); r <= myLast; r++) {
/  getFirstDataRow()==1
			RateTableRow myRow = getRow(r);
/ myRow=NL				.*				.*							ADRESS_HOLD		ADDRESS_HOLD

			for (int c = 0; c < anInputArray.length; c++) {
/ inputArray=[SystemId: 26787706, SystemId: 26787708, SystemId: 26787709]

				if (!myInputCell.match(this, anInputArray[c].getRateResult())) {

			for (int c = 0; c < anInputArray.length; c++) {
				RateTableCell myObject = myRow.get(c);

/ TODO

/t
RateTableFunction.calculateWithoutCache(Collection<InputParameterVO>, RateCalculationVO) line: 145	

			if (!mySecondDimension) {
				myResult = myRateTable.matchRowDimension(myInputParamArray);
false
			mySecondDimension = !mySecondDimension;

/ volgende	,
		mainloop: for (int i = 0; i < 2; i++) {
			/* Lookup row (dimension 1, 3+) or column (dimension 2) */
			if (mySecondDimension && myNoOfDimensions > 1) {
				myColumnNumber = myRateTable.matchSecondDimension(mySecondInputParam.getRateResult());
3

		if (myResult == null || myColumnNumber == 0) {
			aRateCalculation.addToLog("No output result found in rate table : " + myRateTable.getName());

		return myRateResult;
null

/t
RateTableFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 74	
		} else {
			myRateResult = calculateWithoutCache(anInputParameterList, aRateCalculation);
/d
		return myRateResult;
/t
RateTableFunction.convertAndCalculate(Collection<InputParameterVO>, RateCalculationVO) line: 336	
		RateResult myResult = calculate(anInputParameterList, aRateCalculation);
/d
null
		return myResult;
/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
null
								aRateCalculation.processIntermediateResult(this, myResult);
/ NIETS	,
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 111	
			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/d
null
			setRateResult(myRateResult);
			return getRateResult();
/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
null

/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=28685)	
	systemId	26813352	
	theParameter	RateParameterVO  (id=26528)	
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT
/ De 2de	,
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null

/ we hadden RT-POSTALCODE-HOLD_OUTPUT over moeten slaan	,
/ TODO

/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=28720)	
	systemId	26813353	
	theParameter	RateParameterVO  (id=28721)	
theSystemId: 26813355Name :RP-ADDRESS-HOLD
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	

this	InputParameterVO  (id=28720)	
	systemId	26813353	
	theParameter	RateParameterVO  (id=28721)	
theSystemId: 26813355Name :RP-ADDRESS-HOLD
Description :CHECK ALL ADDRESS FIELDS FILLED, IF NO SET ADDRESS HOLD, ELSE CHECK BARCODE

			RateParameterVO myParameter = getParameterVO();

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
						if (aRateCalculation.shouldCalculate(this)) {

							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26813354
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26813358, SystemId: 26813357, SystemId: 26813356]
							Collection<RateResult> mySubResults = new ArrayList<RateResult>();

/ Intermezzo

pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-ADDRESS-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |      name       |                                 description                                 | outputfrom_function_system
id | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_
action 
-----------+-----------------+-----------------------------------------------------------------------------+---------------------------
---+-------------------------+---------------+-------------+-------------------------+------------------+------------------+-----------
-------
  26813355 | RP-ADDRESS-HOLD | CHECK ALL ADDRESS FIELDS FILLED, IF NO SET ADDRESS HOLD, ELSE CHECK BARCODE |                     268133
54 |                26773867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=# select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-ADDRESS-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26813354 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-ADDRESS-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=# select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-ADDRESS-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26813356 |           26817021 |                     3 |           26813354 |                    |                     |              
         |           
  26813357 |           26817021 |                     2 |           26813354 |                    |                     |              
         |           
  26813358 |           26774009 |                     1 |           26813354 |                    |                     |              
         |           
(3 rows)

pnllogistics3=# select ip.system_id,irp.* from rate_parameter irp join input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-ADDRESS-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |          name          |                           description                            | outputfrom_functio
n_systemid | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | it
eration_action 
-----------+-----------+------------------------+------------------------------------------------------------------+-------------------
-----------+-------------------------+---------------+-------------+-------------------------+------------------+------------------+---
---------------
  26813356 |  26817021 | RT-ADDRESS-HOLD_OUTPUT |                                                                  |                   
  26817020 |                26773867 |             0 |           0 |                         |                0 |                  | 
  26813357 |  26817021 | RT-ADDRESS-HOLD_OUTPUT |                                                                  |                   
  26817020 |                26773867 |             0 |           0 |                         |                0 |                  | 
  26813358 |  26774009 | RP-BARCODE-HOLD        | IF BARCODE HOLD = TRUE SET BARCODE HOLD, ELSE SET DUPLICATE HOLD |                   
  26773976 |                26773867 |             0 |           0 |                         |                0 |                  | 
(3 rows)

/ Dus alle 3 zijn rp's	,

/ Einde Intermezzo

/  RT-ADDRESS-HOLD_OUTPUT geeft 0 in de samenvattingsboom	, 
/ TODO (uitvoeren) 


/ we zijn in 	,
RateParameterVO.calculate(RateCalculationVO) line: 81	
this.theName="RP-ADDRESS-HOLD"

						if (aRateCalculation.shouldCalculate(this)) {
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@632cd3d5
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26813358, SystemId: 26813357, SystemId: 26813356]
							Collection<RateResult> mySubResults = new ArrayList<RateResult>();

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=29014)	
	systemId	26813358	
	theParameter	RateParameterVO  (id=29022)	
theSystemId: 26774009Name :RP-BARCODE-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	

/ Intermezzo

pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-BARCODE-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id |      name       |                           description                            | outputfrom_function_systemid | rate_a
greement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+-----------------+------------------------------------------------------------------+------------------------------+-------
------------------+---------------+-------------+-------------------------+------------------+------------------+------------------
  26774009 | RP-BARCODE-HOLD | IF BARCODE HOLD = TRUE SET BARCODE HOLD, ELSE SET DUPLICATE HOLD |                     26773976 |       
         26773867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=# select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-BARCODE-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26773976 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-BARCODE-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=# select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-BARCODE-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26774000 |           26773999 |                     1 |           26773976 |                    |                     |              
         |           
  26774007 |           26774006 |                     3 |           26773976 |                    |                     |              
         |           
  26774008 |           26774006 |                     2 |           26773976 |                    |                     |              
         |           
(3 rows)

pnllogistics3=# select ip.system_id,irp.* from rate_parameter irp join input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-BARCODE-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |          name          |                            description                            | outputfrom_functi
on_systemid | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | i
teration_action 
-----------+-----------+------------------------+-------------------------------------------------------------------+------------------
------------+-------------------------+---------------+-------------+-------------------------+------------------+------------------+--
----------------
  26774000 |  26773999 | RP-DUPLICATE-HOLD      | IF DUPLICATE HOLD = TRUE, SET DUPLICATE HOLD, ELSE SET COLLO HOLD |                  
   26773977 |                26773867 |             0 |           0 |                         |                0 |                  | 
  26774007 |  26774006 | RT-BARCODE-HOLD_OUTPUT |                                                                   |                  
   26774002 |                26773867 |             0 |           0 |                         |                0 |                  | 
  26774008 |  26774006 | RT-BARCODE-HOLD_OUTPUT |                                                                   |                  
   26774002 |                26773867 |             0 |           0 |                         |                0 |                  | 
(3 rows)

/ Einde Intermezzo

/ we zijn in	,
InputParameterVO.calculate(RateCalculationVO) line: 110	
			RateParameterVO myParameter = getParameterVO();
theSystemId: 26774009Name :RP-BARCODE-HOLD
Description :IF BARCODE HOLD = TRUE SET BARCODE HOLD, ELSE SET DUPLICATE HOLD

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 77	
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@2b4810bf
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26774007, SystemId: 26774000, SystemId: 26774008]

							} else {
								for (InputParameterVO myInputParameter : myInputParameterList) {
SystemId: 26774007
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			RateParameterVO myParameter = getParameterVO();
theSystemId: 26774006Name :RT-BARCODE-HOLD_OUTPUT
			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
null
/ TOOD ( we slaan over)	,

/t
RateParameterVO.calculate(RateCalculationVO) line: 152	
							} else {
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=30861)	
	systemId	26774000	
	theParameter	RateParameterVO  (id=30869)	
theSystemId: 26773999Name :RP-DUPLICATE-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);

/ Intermezzo

pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-DUPLICATE-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id |       name        |                            description                            | outputfrom_function_systemid | rat
e_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+-------------------+-------------------------------------------------------------------+------------------------------+----
---------------------+---------------+-------------+-------------------------+------------------+------------------+------------------
  26773999 | RP-DUPLICATE-HOLD | IF DUPLICATE HOLD = TRUE, SET DUPLICATE HOLD, ELSE SET COLLO HOLD |                     26773977 |    
            26773867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=# select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-DUPLICATE-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26773977 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-DUPLICATE-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=# select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-DUPLICATE-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26773984 |           26773983 |                     3 |           26773977 |                    |                     |              
         |           
  26773985 |           26773983 |                     2 |           26773977 |                    |                     |              
         |           
  26773998 |           26773997 |                     1 |           26773977 |                    |                     |              
         |           
(3 rows)

pnllogistics3=# select ip.system_id,irp.* from rate_parameter irp join input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-DUPLICATE-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |           name           |                      description                      | outputfrom_function_systemi
d | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_a
ction 
-----------+-----------+--------------------------+-------------------------------------------------------+----------------------------
--+-------------------------+---------------+-------------+-------------------------+------------------+------------------+------------
------
  26773984 |  26773983 | RT-DUPLICATE-HOLD_OUTPUT |                                                       |                     2677397
9 |                26773867 |             0 |           0 |                         |                0 |                  | 
  26773985 |  26773983 | RT-DUPLICATE-HOLD_OUTPUT |                                                       |                     2677397
9 |                26773867 |             0 |           0 |                         |                0 |                  | 
  26773998 |  26773997 | RP-COLLO-HOLD            | IF COLLO HOLD = TRUE SET COLLO_HOLD, ELSE LEAVE BLANK |                     2677398
6 |                26773867 |             0 |           0 |                         |                0 |                  | 
(3 rows)

/ Einde Intermezzo 

/ we zijn in	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
this	InputParameterVO  (id=30861)	
	systemId	26774000	
	theParameter	RateParameterVO  (id=30869)	
theSystemId: 26773999Name :RP-DUPLICATE-HOLD

			RateParameterVO myParameter = getParameterVO();
			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@608ace11
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26773998, SystemId: 26773985, SystemId: 26773984]

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=30990)	
	systemId	26773998	
	theParameter	RateParameterVO  (id=30997)	
theSystemId: 26773997Name :RP-COLLO-HOLD
Description :IF COLLO HOLD = TRUE SET COLLO_HOLD, ELSE LEAVE BLANK

									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			RateParameterVO myParameter = getParameterVO();

/ Intermezzo

pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-COLLO-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id |     name      |                      description                      | outputfrom_function_systemid | rate_agreement_syst
emid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+---------------+-------------------------------------------------------+------------------------------+--------------------
-----+---------------+-------------+-------------------------+------------------+------------------+------------------
  26773997 | RP-COLLO-HOLD | IF COLLO HOLD = TRUE SET COLLO_HOLD, ELSE LEAVE BLANK |                     26773986 |                2677
3867 |             0 |           0 |                         |                0 |                  | 
(1 row)

pnllogistics3=# select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-COLLO-HOLD' and ra.name='RA-BUSINESSRULES SHO'; system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26773986 |                      3500018 |               0 |               |                     |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-COLLO-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                          definition                          | name 
-----------+--------------------------------------------------------------+------
   3500018 | com.mpobjects.oms.ratecalc.model.process.function.IfFunction | IF
(1 row)

pnllogistics3=# select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-COLLO-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26773995 |           26773994 |                     3 |           26773986 |                    |                     |              
         |           
  26773996 |           26773994 |                     2 |           26773986 |                    |                     |              
         |           
  26773987 |           26825865 |                     1 |           26773986 |                    |                     |              
         |           
(3 rows)

pnllogistics3=# select ip.system_id,irp.* from rate_parameter irp join input_parameter ip on irp.system_id=ip.parameter_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RP-COLLO-HOLD' and ra.name='RA-BUSINESSRULES SHO';
 system_id | system_id |         name         | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | 
sequence_nr | parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+-----------+----------------------+-------------+------------------------------+-------------------------+---------------+-
------------+-------------------------+------------------+------------------+------------------
  26773995 |  26773994 | RT-COLLI-HOLD_OUTPUT |             |                     26773989 |                26773867 |             0 | 
          0 |                         |                0 |                  | 
  26773996 |  26773994 | RT-COLLI-HOLD_OUTPUT |             |                     26773989 |                26773867 |             0 | 
          0 |                         |                0 |                  | 
  26773987 |  26825865 | RP_ADR_HOLD          |             |                     26825864 |                26773867 |             0 | 
          0 |                         |                0 |                  | 
(3 rows)

/ 3 rp's	, maar 2 zijn rt's	,

/ Einde Intermezzo

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
theSystemId: 26773997Name :RP-COLLO-HOLD
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.IfFunction@5f215b5c
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26773987, SystemId: 26773996, SystemId: 26773995]

							} else {
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter
	theSystemId: 26825865
	Name :RP_ADR_HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
NL

/ volgende	, 
                                for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=31146)	
	systemId	26773996	
	theParameter	RateParameterVO  (id=31152)	
theSystemId: 26773994
Name :RT-COLLI-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			RateParameterVO myParameter = getParameterVO();
theSystemId: 26773994Name :RT-COLLI-HOLD_OUTPUT

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/s
RateParameterVO.calculate(RateCalculationVO) line: 66	

/ Intermezzo

pnllogistics3=# select rp.* from rate_parameter rp join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-COLLI-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO'; system_id |         name         | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_nr 
| parameter_type_systemid | is_user_editable | iteration_entity | iteration_action 
-----------+----------------------+-------------+------------------------------+-------------------------+---------------+-------------
+-------------------------+------------------+------------------+------------------
  26773994 | RT-COLLI-HOLD_OUTPUT |             |                     26773989 |                26773867 |             0 |           0 
|                         |                0 |                  | 
(1 row)

pnllogistics3=# select rf.* from rate_function rf join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-COLLI-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO'; system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26773989 |                      3500001 |               0 |               |            26773988 |              
(1 row)

pnllogistics3=#  select fd.* from function_definition fd join  rate_function rf on fd.system_id=rf.function_definition_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-COLLI-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)

pnllogistics3=# select ip.* from input_parameter ip join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-COLLI-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order_detail_
systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--------------
---------+------------
  26773990 |                    |                       |           26773989 |                    |                     |              
26681731 |           
(1 row)

pnllogistics3=# select iod.* from order_detail iod join  input_parameter ip on iod.system_id=ip.order_detail_systemid join  rate_function rf on rf.system_id=ip.rate_func_systemid join  rate_parameter rp on rf.system_id=rp.outputfrom_function_systemid join rate_agreement ra on rp.rate_agreement_systemid=ra.system_id where rp.name='RT-COLLI-HOLD_OUTPUT' and ra.name='RA-BUSINESSRULES SHO';
 system_id |                      path_or_class                      |    name     | unit_systemid | parameter_type_systemid |  entity_
type   
-----------+---------------------------------------------------------+-------------+---------------+-------------------------+---------
-------
  26681731 | count(./topLevelShipmentItems[shippingUnitVO/code='C']) | NR_OF_COLLO |      26632357 |                 3700003 | SHIPMENT
_ORDER
(1 row)

/ Einde Intermezzo

/ we zijn in 	,
RateParameterVO.calculate(RateCalculationVO) line: 66	
this	RateParameterVO  (id=31152)	
theSystemId: 26773994Name :RT-COLLI-HOLD_OUTPUT

							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction@546ceb80
							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26773990]

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/s
InputParameterVO.calculate(RateCalculationVO) line: 71	
			OrderDetail myServiceorderDetail = getOrderDetailVO();
SystemId: 26681731, Name :NR_OF_COLLO, PathOrClass :count(./topLevelShipmentItems[shippingUnitVO/code='C'])

				myRateResult = aRateCalculation.evaluate(myServiceorderDetail);
0.0 theSystemId: 26632357	Symbol :PC	Description :Pieces	UnitType :NORMAL	IsDeleted :0	

					myRateResult.setResultName(myServiceorderDetail.getName());
////////////////////////////////////////////////
			setRateResult(myRateResult);
/ See (*) bij match in rt: dan wordt er .getRateResult() gedaan	, wordt deze calc value opgevraagd	,
/////////////////////////////////////////////////////

			return getRateResult();
/t
RateParameterVO.calculate(RateCalculationVO) line: 154	
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
0.0 theSystemId: 26632357	Symbol :PC	Description :Pieces	UnitType :NORMAL	IsDeleted :0	
									if (mySub != null) {
										mySubResults.add(mySub);

/ Wat doet hij met mySubResults	?
/ See (**)	, in myResult uiteindelijk	, 

								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
RateTableFunction.convertAndCalculate(Collection<InputParameterVO>, RateCalculationVO) line: 334	
		RateResult myResult = calculate(anInputParameterList, aRateCalculation);
/s
RateTableFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 39	
		RateTableVO myRateTable = getRateFunctionVO().getRateTableVO();
Name :RT-COLLI-HOLD
		} else {
			myRateResult = calculateWithoutCache(anInputParameterList, aRateCalculation);
/s
RateTableFunction.calculateWithoutCache(Collection<InputParameterVO>, RateCalculationVO) line: 95	

		/* Values only used in singleDimension case */
		int myColumnNumber = myRateTable.firstDimBasicCharge() ? 2 : 1;
1

		for (DimensionVO myDimension : myRateTable.getDimensionList()) {
			if (myDimension.getSequenceNr() == 2) {
/ NEE
			} else if (myDimension.getSequenceNr() == 1) {
/ JA
				myInputParamArray[0] = myDimension.getInputParameter();
[SystemId: 26773990]

		boolean mySecondDimension = myRateTable.getLastDataColumn() < myRateTable.getLastDataRow();
false
/ 2 < 2 is NIET	,
/ .getLastDataRow() is een index	, 
/ TODO

/ Intermezzo

rate_table_content         | 0       COLLO_HOLD
                           | 30      0
                           | 999     COLLO_HOLD

/ Einde Intermezzo

		mainloop: for (int i = 0; i < 2; i++) {
			/* Lookup row (dimension 1, 3+) or column (dimension 2) */
			if (mySecondDimension && myNoOfDimensions > 1) {
/ NEE
			if (!mySecondDimension) {
/ JA
				myResult = myRateTable.matchRowDimension(myInputParamArray);
/s
RateTableVO.matchRowDimension(InputParameterVO[]) line: 907	
		int myLast = getLastDataRow();
2
/ index
		rowLoop: for (int r = getFirstDataRow(); r <= myLast; r++) {
/ getFirstDataRow()=0
			RateTableRow myRow = getRow(r);
0 COLLO_HOLD

			for (int c = 0; c < anInputArray.length; c++) {
				RateTableCell myObject = myRow.get(c);
myObject	RateTableDimensionInputCell  (id=25927)	
	theText	"0" (id=25971)	
					myInputCell = (RateTableDimensionInputCell) myObject;

				if (!myInputCell.match(this, anInputArray[c].getRateResult())) {
/s
InputParameterVO.getRateResult() line: 240	
		return theRateResult.get();
0.0 theSystemId: 26632357	Symbol :PC	Description :Pieces	UnitType :NORMAL	IsDeleted :0	
/ (*)
/t
/s
RateTableDimensionInputCell.match(RateTableVO, RateResult) line: 105	
			} else {
				BigDecimal myLow = LOW;
				BigDecimal myHigh = HIGH;
				BigDecimal myResultFloatValue = RateResultUtils.getBigDecimalValue(aRateResult);
/ aRateResult=0.0 theSystemId: 26632357	Symbol :PC	Description :Pieces	UnitType :NORMAL	IsDeleted :0	
/ myResultFloatValue=BigDecimal(0.0)

				} else {
					myHigh = theRateTable.getValueAsBigDecimal(this);
BigDecimal(0)
/ this=rt input cell	, daar staat "0" in	,
					if (getFormerCell(theRateTable) != null) {
/ NEE
					myRet = myLow.compareTo(myResultFloatValue) < 0 && myResultFloatValue.compareTo(myHigh) <= 0;
true
/ 2147483648<0.0 && 0.0<=0
/ TODO

/t
RateTableVO.matchRowDimension(InputParameterVO[]) line: 924	
				if (!myInputCell.match(this, anInputArray[c].getRateResult())) {
/ NEE
					break;
/ NIET
				} else {
					if (c == anInputArray.length - 1) {
/ JA
						myResult = myRow;
0 COLLO_HOLD
						break rowLoop;
		return myResult;
/t
RateTableFunction.calculateWithoutCache(Collection<InputParameterVO>, RateCalculationVO) line: 145	
		mainloop: for (int i = 0; i < 2; i++) {
			if (!mySecondDimension) {
				myResult = myRateTable.matchRowDimension(myInputParamArray);
/d
0 COLLO_HOLD

			mySecondDimension = !mySecondDimension;
/ Volgende loop doet NIETS	,

		if (myResult != null && myColumnNumber > 0) {

			/* Now get the content of the found cell */
			int myRowNumber = myResult.getRowNumber();
0
			RateTableOutputCell myRateTableOutputCell = (RateTableOutputCell) myResult.get(myColumnNumber);
/ myRateTableOutputCell.theText="COLLO_HOLD"
			String myOutputValue = myRateTableOutputCell.getText();
COLLO_HOLD
			} else {
				// alpha numeric output.
				myRateResult = new RateResult(myOutputValue);
		return myRateResult;
/t
RateTableFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 74	
		} else {
			myRateResult = calculateWithoutCache(anInputParameterList, aRateCalculation);
		return myRateResult;
/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
							if (myResult != null) {
								myResult.setResultName(getName());
								myResult.setFunctionName(getOutputfromFunctionVO().getFunctionDefinitionVO().getName());
								myResult.setSubResultList(mySubResults);
/ (**)
								// Only set the Unit if this is not set yet. E.g. the ratetable function
								// sets the unit, while others don't
								if (myResult.getUnitVO() == null) {
									myResult.setUnitVO(getUnit());
			return myResult;
myResult	RateResult  (id=26577)	
	theFunctionName	"RATE TABLE" (id=26601)	
	theResultName	"RT-COLLI-HOLD_OUTPUT" (id=26602)	
	theSubResultList	ArrayList  (id=24569)	
	theUnitVO	null	
	theValue	"COLLO_HOLD" (id=25968)	

/t
InputParameterVO.calculate(RateCalculationVO) line: 110	
				myRateResult = myParameter.calculate(aRateCalculation);
/d
COLLO_HOLD 
				if (myRateResult != null && myRateResult.getUnitVO() == null) {
					myRateResult.setUnitVO(myParameter.getOutputfromFunctionVO().getUnit());
null
/ TODO

			setRateResult(myRateResult);
			return getRateResult();

/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
this	RateParameterVO  (id=24823)	
	systemId	26773997	
	theDescription	"IF COLLO HOLD = TRUE SET COLLO_HOLD, ELSE LEAVE BLANK" (id=24950)	
	theName	"RP-COLLO-HOLD" (id=24952)	
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
COLLO_HOLD 
									if (mySub != null) {
										mySubResults.add(mySub);

/ Volgende	, 
/ Is ook een  RT-COLLI-HOLD_OUTPUT	, 
theSystemId: 26773994
Name :RT-COLLI-HOLD_OUTPUT
/ Deze geeft ook COLLO_HOLD

mySubResults	ArrayList  (id=24496)	
[COLLO_HOLD , COLLO_HOLD, NL ]

								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
IfFunction(AbstractRateFunction).convertAndCalculate(Collection<InputParameterVO>, RateCalculationVO) line: 82	
		myInputParameterVOList.addAll(convertInputUnitsToOutputUnit(anInputParameterList));
[SystemId: 26773987, SystemId: 26773996, SystemId: 26773995]
		RateResult myResult = calculate(myInputParameterVOList, aRateCalculation);
/s
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	

anInputParameterList	ArrayList  (id=25279)	
	elementData	Object[10]  (id=25321)	
		[0]	InputParameterVO  (id=24897)	
			systemId	26773996	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
				name	"IfFunctionTrue" (id=25338)	
				systemId	2	
			theParameter	RateParameterVO  (id=24919)	
		[1]	InputParameterVO  (id=25230)	
			systemId	26773995	
			theFuncParDef	FuncParameterDefVO  (id=22762)	
				name	"IfFunctionFalse" (id=25355)	
				systemId	3	
			theParameter	RateParameterVO  (id=24919)	
		[2]	InputParameterVO  (id=25242)	
			systemId	26773987	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
				name	"IfFunctionArgument" (id=25359)	
				systemId	1	
			theParameter	RateParameterVO  (id=25243)	
	size	3	

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
theSystemId: 26825865Name :RP_ADR_HOLD

			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();
NL

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
myInputParameterVO	InputParameterVO  (id=24897)	
	systemId	26773996	
	theParameter	RateParameterVO  (id=24919)	
theSystemId: 26773994Name :RT-COLLI-HOLD_OUTPUT

			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
COLLO_HOLD

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
myInputParameterVO	InputParameterVO  (id=25230)	
	systemId	26773995	
	theParameter	RateParameterVO  (id=24919)	
theSystemId: 26773994Name :RT-COLLI-HOLD_OUTPUT

			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
				condParamName = myInputParameterVO.getName();
RT-COLLI-HOLD_OUTPUT
				myArgument = myInputParameterVO.getRateResult();
COLLO_HOLD

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
myInputParameterVO	InputParameterVO  (id=25242)	
	systemId	26773987	
	theParameter	RateParameterVO  (id=25243)	
theSystemId: 26825865Name :RP_ADR_HOLD

			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();

		if (RateResultUtils.isTrue(myArgument)) {
/s
RateResultUtils.isTrue(RateResult) line: 152	
	if (isEmpty(aResult)) {
/ NEE	,
/ want	,
/s
		return aResult == null || StringUtils.isEmpty(aResult.getValue());
/ Dus als aResult==null of aResult.theValue= 'n string en: str == null || str.length() == 0;
/t
		} else {
			BigDecimal myNumValue = getBigDecimalValue(aResult);
null
			if (myNumValue == null) {
/ JA
				return true;
			} else {
				return !NumberUtils.isZero(myNumValue);
/t
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 48	
		if (RateResultUtils.isTrue(myArgument)) {
/ JA
			return new RateResult(myTrueValue);
COLLO_HOLD

/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
COLLO_HOLD 

							if (myResult != null) {
								myResult.setResultName(getName());
								myResult.setFunctionName(getOutputfromFunctionVO().getFunctionDefinitionVO().getName());
								myResult.setSubResultList(mySubResults);
								// Only set the Unit if this is not set yet. E.g. the ratetable function
								// sets the unit, while others don't
								if (myResult.getUnitVO() == null) {
									myResult.setUnitVO(getUnit());
								}
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 110	
this	InputParameterVO  (id=24822)	
	theParameter	RateParameterVO  (id=24823)	
theSystemId: 26773997Name :RP-COLLO-HOLD

			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/d
			setRateResult(myRateResult);
			return getRateResult();
/t

/ Intermezzo

/ We zien in de GUI	,

If function
Name: RP-COLLO-HOLD
Argument id: RT-COLLI-HOLD_OUTPUT
True id: RT-COLLI-HOLD_OUTPUT
False id: RP_ADR_HOLD

/ Dat betekent : als result RT-COLLI-HOLD_OUTPUT !null of theValue!=null of ""	, dan
return result van RT-COLLI-HOLD_OUTPUT
/ anders return result van RP_ADR_HOLD

/ Einde Intermezzo

/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
this	RateParameterVO  (id=24777)	
	systemId	26773999	
	theDescription	"IF DUPLICATE HOLD = TRUE, SET DUPLICATE HOLD, ELSE SET COLLO HOLD" (id=25772)	
	theName	"RP-DUPLICATE-HOLD" (id=25773)	

/ Intermezzo

If function
Name: RP-DUPLICATE-HOLD
Argument id: RT-DUPLICATE-HOLD_OUTPUT
True id: RT-DUPLICATE-HOLD_OUTPUT
False id: RP_COLLO_HOLD

/ Dat betekent : als result RT-DUPLICATE-HOLD_OUTPUT !null of theValue!=null of ""	, dan
return result van RT-DUPLICATE-HOLD_OUTPUT
/ anders return result van RP_COLLO_HOLD

/ Einde Intermezzo

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=24822)	
	theParameter	RateParameterVO  (id=24823)	
theSystemId: 26773997Name :RP-COLLO-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
COLLO_HOLD
									if (mySub != null) {
										mySubResults.add(mySub);


/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=25838)	
	theParameter	RateParameterVO  (id=24815)	
theSystemId: 26773983Name :RT-DUPLICATE-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null

/ Geen for loops meer	,
/ 2 input params gaven null	, en  een gaf COLLO_HOLD	, ze zijn alle 3 met setRateResult in de input param geschreven	, 
/ mySubResults=[COLLO_HOLD]	, want null's komen er niet in	,

								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
IfFunction(AbstractRateFunction).convertAndCalculate(Collection<InputParameterVO>, RateCalculationVO) line: 92	
		RateResult myResult = calculate(myInputParameterVOList, aRateCalculation);
/s

/Intermezzo

IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	
	public static final int ARGUMENT_VALUE_SYSTEMID = 3;
	public static final int TRUE_VALUE_SYSTEMID = 2;
	public static final int FALSE_VALUE_SYSTEMID = 1;

pnllogistics3=# select*From func_parameter_def;
 system_id |          name          | func_def_systemid | parameter_type_systemid 
-----------+------------------------+-------------------+-------------------------
         1 | IfFunctionArgument     |           3500018 |                 3700001
         2 | IfFunctionTrue         |           3500018 |                 3700001
         3 | IfFunctionFalse        |           3500018 |                 3700001


anInputParameterList	ArrayList  (id=25990)	
	elementData	Object[10]  (id=25992)	
		[0]	InputParameterVO  (id=24808)	
			systemId	26773985	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
				systemId	2									/ true
			theOrderDetail	null	
			theParameter	RateParameterVO  (id=24815)	
theSystemId: 26773983Name :RT-DUPLICATE-HOLD_OUTPUT


		[1]	InputParameterVO  (id=24822)	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
				systemId	1									/ false
			theParameter	RateParameterVO  (id=24823)	
theSystemId: 26773997Name :RP-COLLO-HOLD


		[2]	InputParameterVO  (id=25838)	
			systemId	26773984	
			theFuncParDef	FuncParameterDefVO  (id=22762)	
				systemId	3									/ arg	,
			theParameter	RateParameterVO  (id=24815)	
theSystemId: 26773983Name :RT-DUPLICATE-HOLD_OUTPUT

/ Einde Intermezzo

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
				condParamName = myInputParameterVO.getName();
condParamName	"RT-DUPLICATE-HOLD_OUTPUT" (id=26147)	
				myArgument = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();
COLLO_HOLD
			}

		if (RateResultUtils.isTrue(myArgument)) {
/ NEE
		} else {
			return new RateResult(myFalseValue);
COLLO_HOLD

/t
RateParameterVO.calculate(RateCalculationVO) line: 160	
/ this=theSystemId: 26773999Name :RP-DUPLICATE-HOLD
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
COLLO_HOLD
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 110	
				myRateResult = myParameter.calculate(aRateCalculation);
/d
			setRateResult(myRateResult);
			return getRateResult();
/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
/ this=theSystemId: 26774009Name :RP-BARCODE-HOLD
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=24771)	
	theParameter	RateParameterVO  (id=24777)	
theSystemId: 26773999Name :RP-DUPLICATE-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
COLLO_HOLD
/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=26356)	
	theParameter	RateParameterVO  (id=26362)	
theSystemId: 26774006Name :RT-BARCODE-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null
/ volgende
								for (InputParameterVO myInputParameter : myInputParameterList) {
myInputParameter	InputParameterVO  (id=26356)	
	theParameter	RateParameterVO  (id=26362)	
theSystemId: 26774006Name :RT-BARCODE-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null

/ Geen for loops meer	,
mySubResults	ArrayList  (id=24761)	
[COLLO_HOLD ]
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
		RateResult myResult = calculate(myInputParameterVOList, aRateCalculation);
/s
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	

this	IfFunction  (id=24758)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_84  (id=24759)	
		handler	JavassistLazyInitializer  (id=26490)	
			target	RateFunctionVO  (id=26504)	
				theInputParameterList	PersistentSet  (id=24760)	
				theRateParameter	RateParameterVO  (id=24756)	
theSystemId: 26774009Name :RP-BARCODE-HOLD

anInputParameterList	ArrayList  (id=26391)	
	elementData	Object[10]  (id=26392)	
		[0]	InputParameterVO  (id=24771)	
			systemId	26774000	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
				systemId	1									/ false
			theParameter	RateParameterVO  (id=24777)	
theSystemId: 26773999Name :RP-DUPLICATE-HOLD
		[1]	InputParameterVO  (id=26356)	
			systemId	26774007	
			theFuncParDef	FuncParameterDefVO  (id=22762)	
				systemId	3									/ arg
			theParameter	RateParameterVO  (id=26362)	
theSystemId: 26774006Name :RT-BARCODE-HOLD_OUTPUT
		[2]	InputParameterVO  (id=26373)	
			systemId	26774008	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
				systemId	2									/ true
			theParameter	RateParameterVO  (id=26362)	
theSystemId: 26774006Name :RT-BARCODE-HOLD_OUTPUT

/ Intermezzo

/ we zien in GUI	,

Name: RP_BARCODE_HOLD
Argument id: RT-BARCODE-HOLD_OUTPUT
True id: RT-BARCODE-HOLD_OUTPUT
Falseid: RP-DUPLICATE-HOLD 

/ Einde Intermezzo

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
theSystemId: 26774006Name :RT-BARCODE-HOLD_OUTPUT
				condParamName = myInputParameterVO.getName();
				myArgument = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
theSystemId: 26773999Name :RP-DUPLICATE-HOLD
				myFalseValue = myInputParameterVO.getRateResult();
COLLO_HOLD
			}
		}

		if (RateResultUtils.isTrue(myArgument)) {
/ NEE
		} else {
			return new RateResult(myFalseValue);
COLLO_HOLD
/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
theSystemId: 26774009Name :RP-BARCODE-HOLD
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
COLLO_HOLD
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 110	
				myRateResult = myParameter.calculate(aRateCalculation);
/d
			setRateResult(myRateResult);
			return getRateResult();

/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
theSystemId: 26813355Name :RP-ADDRESS-HOLD

/ Intermezzo

/ we zien in GUI	,

Name: RP_ADDRESS_HOLD
Argument id: RT-ADDRESS-HOLD_OUTPUT
True id: RT-ADDRESS-HOLD_OUTPUT
Falseid: RP-BARCODE-HOLD 

/ Einde Intermezzo

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26774009Name :RP-BARCODE-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
COLLO_HOLD

/Geen for loops meer	,

mySubResults=[0 , 0 , COLLO_HOLD ]

								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	

anInputParameterList	ArrayList  (id=26931)	
	elementData	Object[10]  (id=26989)	
		[0]	InputParameterVO  (id=24568)	
			systemId	26813357	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
theSystemId: 2																/ true
			theParameter	RateParameterVO  (id=24574)	
theSystemId: 26817021Name :RT-ADDRESS-HOLD_OUTPUT
		[1]	InputParameterVO  (id=24750)	
			systemId	26813356	
			theRateFunc	RateFunctionVO_$$_javassist_84  (id=24528)	
theSystemId: 3																/ false
			theParameter	RateParameterVO  (id=24574)	
theSystemId: 26817021Name :RT-ADDRESS-HOLD_OUTPUT
		[2]	InputParameterVO  (id=24755)	
			systemId	26813358	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
theSystemId: 1																/ arg
			theParameter	RateParameterVO  (id=24756)	
theSystemId: 26774009Name :RP-BARCODE-HOLD

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
				condParamName = myInputParameterVO.getName();
				myArgument = myInputParameterVO.getRateResult();
0
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
0
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();
COLLO_HOLD
			}
		}

		if (RateResultUtils.isTrue(myArgument)) {
/s
	public static final boolean isTrue(RateResult aResult) {
		if (isEmpty(aResult)) {
/ aResult=null of aResult.theValue=null of ""
/ NEE
		} else {
			BigDecimal myNumValue = getBigDecimalValue(aResult);
0
/ Als aResult.theValue="COLLO_HOLD", dan myNumValue=null	,k
			if (myNumValue == null) {
/ NEE
			} else {
				return !NumberUtils.isZero(myNumValue);
false
/t
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 52	
		if (RateResultUtils.isTrue(myArgument)) {
/ NEE
		} else {
			return new RateResult(myFalseValue);
COLLO_HOLD

/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
theSystemId: 26813355Name :RP-ADDRESS-HOLD
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 110	
			} else if (myParameter != null) {
				myRateResult = myParameter.calculate(aRateCalculation);
/d
COLLO_HOLD 
			setRateResult(myRateResult);
			return getRateResult();
/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
this=theSystemId: 26813350Name :RP-UNKNOWN-PC-HOLD
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26813355Name :RP-ADDRESS-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
/d
COLLO_HOLD

/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null
/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null

/ Geen for loop meer	,
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	

this	IfFunction  (id=24519)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_84  (id=24520)	
		handler	JavassistLazyInitializer  (id=27331)	
			target	RateFunctionVO  (id=27334)	
				theRateParameter	RateParameterVO  (id=24494)	
theSystemId: 26813350Name :RP-UNKNOWN-PC-HOLD

/ Intermezzo

/ we zien in de GUI	,

Name: RP-UNKNOWN-PC-HOLD
Argument id: RT-POSTALCODE-HOLD_OUTPUT
True id: RT-POSTALCODE-HOLD_OUTPUT
Falseid: RP-ADDRESS-HOLD 

/ Einde Intermezzo

this	IfFunction  (id=24519)	
anInputParameterList	ArrayList  (id=27329)	
	elementData	Object[10]  (id=27388)	
		[0]	InputParameterVO  (id=24524)	
			systemId	26813353	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
1																/ false
			theParameter	RateParameterVO  (id=24525)	
theSystemId: 26813355Name :RP-ADDRESS-HOLD
		[1]	InputParameterVO  (id=27277)	
			systemId	26813352	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
2																/ true
			theParameter	RateParameterVO  (id=27284)	
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT
		[2]	InputParameterVO  (id=27303)	
			systemId	26813351	
			theFuncParDef	FuncParameterDefVO  (id=22762)	
3																/ arg
			theParameter	RateParameterVO  (id=27284)	
theSystemId: 26787711Name :RT-POSTALCODE-HOLD_OUTPUT

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
				condParamName = myInputParameterVO.getName();
				myArgument = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();
COLLO_HOLD
			}
		}

		if (RateResultUtils.isTrue(myArgument)) {
/ NEE
		} else {
			return new RateResult(myFalseValue);
COLLO_HOLD
		}

/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
COLLO_HOLD
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 111	
				myRateResult = myParameter.calculate(aRateCalculation);
/d
COLLO_HOLD
			setRateResult(myRateResult);
			return getRateResult();
/t
RateParameterVO.calculate(RateCalculationVO) line: 154	
this=theSystemId: 26774018Name :RP-PRODUCT-HOLD

							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26813350Name :RP-UNKNOWN-PC-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
COLLO_HOLD
									if (mySub != null) {
										mySubResults.add(mySub);

/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26774015Name :RT-UNKNOWN-PRODUCT-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null

/ Geen for loops meer	,
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	

this	IfFunction  (id=24468)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_84  (id=24469)	
		handler	JavassistLazyInitializer  (id=27574)	
			target	RateFunctionVO  (id=27577)	
				systemId	26773975	
				theRateParameter	RateParameterVO  (id=24369)	
theSystemId: 26774018Name :RP-PRODUCT-HOLD


/ Intermezzo

/ we zien in de GUI	,

Name: RP-PRODUCT-HOLD
Argument id: RT-UNKNOWN-PRODUCT-HOLD_OUTPUT
True id: RT-UNKNOWN-PRODUCT-HOLD_OUTPUT
Falseid: RP-UNKNOWN-PC-HOLD 

/ Einde Intermezzo

anInputParameterList	ArrayList  (id=27561)	
	elementData	Object[10]  (id=27633)	
		[0]	InputParameterVO  (id=24481)	
			systemId	26774016	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
2
			theParameter	RateParameterVO  (id=24487)	
theSystemId: 26774015Name :RT-UNKNOWN-PRODUCT-HOLD_OUTPUT
		[1]	InputParameterVO  (id=24493)	
			systemId	26774010	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
1
			theParameter	RateParameterVO  (id=24494)	
theSystemId: 26813350Name :RP-UNKNOWN-PC-HOLD
		[2]	InputParameterVO  (id=27536)	
			systemId	26774017	
			theFuncParDef	FuncParameterDefVO  (id=22762)	
3
			theParameter	RateParameterVO  (id=24487)	
theSystemId: 26774015Name :RT-UNKNOWN-PRODUCT-HOLD_OUTPUT

		for (InputParameterVO myInputParameterVO : anInputParameterList) {
			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
				condParamName = myInputParameterVO.getName();
				myArgument = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();
COLLO_HOLD
			}
		}

		if (RateResultUtils.isTrue(myArgument)) {
/ NEE
		} else {
			return new RateResult(myFalseValue);
COLLO_HOLD
		}

/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
			return myResult;
/t
InputParameterVO.calculate(RateCalculationVO) line: 110	

				myRateResult = myParameter.calculate(aRateCalculation);
/d
			setRateResult(myRateResult);
			return getRateResult();
/t
RateParameterVO.calculate(RateCalculationVO) line: 153	
theSystemId: 26774021Name :RP-HOLD
							} else {
								// First, make sure all input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26774018Name :RP-PRODUCT-HOLD
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
COLLO_HOLD

/ volgende	,
								for (InputParameterVO myInputParameter : myInputParameterList) {
theSystemId: 26773973Name :RT-CUSTOMER-UNKNOWN-HOLD_OUTPUT
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
null

/ geen volgende for loop meer	,
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/s
IfFunction.calculate(Collection<InputParameterVO>, RateCalculationVO) line: 31	

this	IfFunction  (id=23337)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_84  (id=23339)	
		handler	JavassistLazyInitializer  (id=23578)	
			target	RateFunctionVO  (id=27845)	
				systemId	26773967	
				theRateParameter	RateParameterVO  (id=23276)	
theSystemId: 26774021Name :RP-HOLD

/ Intermezzo

/ we zien in de GUI	,

Name: RP-HOLD
Argument id: RT-CUSTOMER-UNKNOWN_OUTPUT
True id: RT-CUSTOMER-UNKNOWN_OUTPUT
False id: RP-PRODUCT-HOLD 

/ Einde Intermezzo

s	IfFunction  (id=23337)	
anInputParameterList	ArrayList  (id=27829)	
	elementData	Object[10]  (id=27897)	
		[0]	InputParameterVO  (id=24229)	
			systemId	26773974	
			theFuncParDef	FuncParameterDefVO  (id=24333)	
2																			/ true
			theParameter	RateParameterVO  (id=24335)	
theSystemId: 26773973Name :RT-CUSTOMER-UNKNOWN-HOLD_OUTPUT
		[1]	InputParameterVO  (id=24367)	
			systemId	26774019	
			theFuncParDef	FuncParameterDefVO  (id=24368)	
1																			/ false
			theParameter	RateParameterVO  (id=24369)	
theSystemId: 26774018Name :RP-PRODUCT-HOLD
		[2]	InputParameterVO  (id=27806)	
			systemId	26774020	
			theFuncParDef	FuncParameterDefVO  (id=22762)	
3																			/ arg
			theParameter	RateParameterVO  (id=24335)	
theSystemId: 26773973Name :RT-CUSTOMER-UNKNOWN-HOLD_OUTPUT


		for (InputParameterVO myInputParameterVO : anInputParameterList) {
			if (myInputParameterVO.getFuncParDefVO().getSystemId() == ARGUMENT_VALUE_SYSTEMID) {
				condParamName = myInputParameterVO.getName();
				myArgument = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == TRUE_VALUE_SYSTEMID) {
				myTrueValue = myInputParameterVO.getRateResult();
null
			} else if (myInputParameterVO.getFuncParDefVO().getSystemId() == FALSE_VALUE_SYSTEMID) {
				myFalseValue = myInputParameterVO.getRateResult();
COLLO_HOLD
			}
		}

		if (RateResultUtils.isTrue(myArgument)) {
/ NEE
		} else {
			return new RateResult(myFalseValue);
COLLO_HOLD
		}

/t
RateParameterVO.calculate(RateCalculationVO) line: 161	
								myResult = myAbstractRateFunction.convertAndCalculate(myInputParameterList, aRateCalculation);
/d
			return myResult;
/t
CostComponentSpecificationVO.run(RateCalculationVO) line: 205	
			RateResult myResult = myParameter.calculate(aRateCalculation);
/d
myResult	RateResult  (id=27975)	
	theResultName	"RP-HOLD" (id=28011)	
	theValue	"COLLO_HOLD" (id=24944)	

				myResultList.add(myResult);
		return myResultList;
/t
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1108	
				componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					addToLog("Starting evaluation of component [" + myCostComp.getName() + "]");
					for (RateResult myResult : myCostComp.run(this)) {
/d
myCostComp=CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS
myResult	RateResult  (id=27975)	
						anAlternative.addResult(getCurrentEntityType(), getCurrentEntitySystemId(), myCostComp, myResult);
getCurrentEntityType()=SHIPMENT_ORDER
getCurrentEntitySystemId()=system_id return sho	,
myCostCommp=CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS
myResult=COLLO_HOLD
/s
RateCalculationAlternative.addResult(EntityType, int, CostComponentSpecificationVO, RateResult) line: 70	
		String myKey = aCurrentEntityType.name() + "#" + aCurrentEntitySystemId;
SHIPMENT_ORDER#26845834
		AlternativeResultSet myResultSet = resultSetList.get(myKey);

		if (myResultSet == null) {
			myResultSet = new AlternativeResultSet(this, aCurrentEntityType, aCurrentEntitySystemId);
			resultSetList.put(myKey, myResultSet);
		}
		myResultSet.addResult(aCostComp, aResult);
s	RateCalculationAlternative  (id=21219)	
aCurrentEntityType	EntityType  (id=21992)	
aCurrentEntitySystemId	26845834	
aCostComp	CostComponentSpecificationVO  (id=23053)	
aResult	RateResult  (id=27975)	
myKey	"SHIPMENT_ORDER#26845834" (id=28227)	
myResultSet	AlternativeResultSet  (id=28230)	
	...
	propertyMap	HashMap  (id=28416)	
/=
	resultMap	HashMap  (id=28417)	
		entrySet	HashMap$EntrySet  (id=28436)	
		hashSeed	0	
		keySet	HashMap$KeySet  (id=28438)	
		loadFactor	0.75	
		modCount	7	
		size	7	
		table	HashMap$Entry[16]  (id=28442)	
			[2]	HashMap$Entry  (id=28499)	
			[4]	HashMap$Entry  (id=28500)	
			[5]	HashMap$Entry  (id=28501)	
			[6]	HashMap$Entry  (id=28503)	
			[11]	HashMap$Entry  (id=28504)	
			[15]	HashMap$Entry  (id=28505)	
				key	CostComponentSpecificationVO  (id=23053)	
				value	ArrayList  (id=28632)	
CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS=[COLLO_HOLD ]

/t
RateCalculationVO.runFor(RateAgreementVO, RateCalculationAlternative) line: 1108	
				componentLoop: for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					addToLog("Starting evaluation of component [" + myCostComp.getName() + "]");
					for (RateResult myResult : myCostComp.run(this)) {
/ Nog een aantal rc's	,

				// Now check if there are subEntities which are not calculated yet.
				if (subEntityComponentMap.size() > calculatedComponents.size()) {
					ArrayList<CostComponentSpecificationVO> myUncalculated = new ArrayList(subEntityComponentMap.values());
					myUncalculated.removeAll(calculatedComponents);
					for (CostComponentSpecificationVO myCostComp : myUncalculated) {
						RateParameterVO myRateParameter = myCostComp.getRateParameter();
						if (StringUtils.isNotEmpty(myRateParameter.getIterationEntity())) {
							myCostComp.run(this);
						} else {
							LOG.debug("Skipping non iterating component [" + myCostComp + "]");
						}
					}
				}
/ TODO

				if (subEntityComponentMap.size() > calculatedComponents.size()) {
					for (CostComponentSpecificationVO myCostComp : subEntityComponentMap.values()) {
						if (!calculatedComponents.contains(myCostComp)) {
							addToLog("Cost component [" + myCostComp.getName()
									+ "] could not be calculated ignored. Iteration is missing or not used in other calculations");
						}
					}
				}
/ TODO

				anAlternative.setSuccess(true);
/t
RateCalculationVO.calculateWithoutVariables() line: 1338	
			for (RateAgreementVO myAgreement : getRateAgreementVO()) {
				runFor(myAgreement, myAlterNative);
/d
/t
RateCalculationVO.runFor(List<RateAgreementVO>) line: 785	
/ AFKIJKEN
				calculateWithoutVariables();
/d
					if (serviceOrder != null || shipmentOrder != null || customerOrderLine != null) {
/ JA
						RateCalculationAlternative firstAlt = alternativeList.iterator().next();
						for (AlternativeResultSet mySet : firstAlt.getResultSetList().values()) {
mySet	AlternativeResultSet  (id=28230)	
	...
	entitySystemId	26845834					/ system_id van de return sho	,
	...
	propertyMap	HashMap  (id=28416)	
/=
	resultMap	HashMap  (id=28417)	
		entrySet	HashMap$EntrySet  (id=28436)	
		hashSeed	0	
		keySet	HashMap$KeySet  (id=28438)	
		loadFactor	0.75	
		modCount	9	
		size	9	
		table	HashMap$Entry[16]  (id=28442)	
{
CostComponentSpecification:26790877/CollectionDepot/Set collection depot=[DOR ], 
CostComponentSpecification:26791330/RC-REQUESTED-END-BEFORE/SET REQUESTED END BEFORE=[2015-09-22 18:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	], 
CostComponentSpecification:26823742/RC_REQ_START_AFTER/Req Start After=[2015-09-21 08:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	], 
CostComponentSpecification:26790876/DistributionDepot/Set distribution depot=[EHV ], 
CostComponentSpecification:26773874/RC-PRODUCTCODE/SET PRODUCT CODE ALS ACTUAL SERVICE LEVEL=[3610 ], 
CostComponentSpecification:26773948/RC-SHIPMENTTYPE/SET SHIPMENT TYPE=[BENELUXFREIGHT ], 
CostComponentSpecification:26823743/RC_REQ_START_BEFORE/Req Start Before=[2015-09-21 18:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	], 
CostComponentSpecification:26791329/RC-REQUESTED-END-AFTER/SET REQUESTED END AFTER=[2015-09-22 08:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	], 
CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS=[COLLO_HOLD ]}
		threshold	12	
		values	null	
	totalCost	null	
	totalPrice	null	

							switch (mySet.getEntityType()) {
								case SHIPMENT_ORDER:
									ShipmentOrderVO myShipmentOrder = MpoBeanFactory.getBean(ShipmentOrderDao.class).getBySystemId(mySet.getEntitySystemId());
									if (agreementType.equals(AgreementType.SHIPMENT_ORDER_PROPERTIES)) {
										if (myShipmentOrder == null) {
/ NEE
agreementType=SHIPMENT_ORDER
AgreementType.SHIPMENT_ORDER_PROPERTIES=SHIPMENT_ORDER_PROPERTIES
									} else {
										/* Used to set the requested dates on a shipment order */
										MpoBeanFactory.getBean(ShipmentOrderCalculationService.class).updateShipmentOrder(myShipmentOrder, mySet, myLog);
/s
ShipmentOrderCalculationServiceImpl.updateShipmentOrder(ShipmentOrderVO, AlternativeResultSet, List<String>) line: 347	

		// Update the shipment order for the non-monetary stuff.
		boolean shipmentOrderChanged = setPropertyResults(anAlternative.getPropertyResults(), shipmentOrder, aLog);
/s
ShipmentOrderCalculationServiceImpl.setPropertyResults(Collection<Entry<CostComponentSpecificationVO,List<RateResult>>>, ShipmentOrderVO, List<String>) line: 1144	
		for (Entry<CostComponentSpecificationVO, List<RateResult>> entry : aEntries) {

entry	HashMap$Entry  (id=22763)	
	key	CostComponentSpecificationVO  (id=23048)	
CostComponentSpecification:26823743/RC_REQ_START_BEFORE/Req Start Before
	value	ArrayList  (id=23050)	
[2015-09-21 18:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	]

			CostComponentSpecificationVO component = entry.getKey();
CostComponentSpecification:26823743/RC_REQ_START_BEFORE/Req Start Before

			List<RateResult> rateResultList = entry.getValue();
[2015-09-21 18:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	]

			// We are not dealing with costs here so we can assume there is only one entry in the list
			RateResult rateResult = rateResultList.get(0);
2015-09-21 18:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	

			if (applyPropertyResult(aShipmentOrder, component, rateResult, aLog)) {
/s
ShipmentOrderCalculationServiceImpl.applyPropertyResult(ShipmentOrderVO, CostComponentSpecificationVO, RateResult, List<String>) line: 84	
/=
	public boolean applyPropertyResult(ShipmentOrderVO shipmentOrder, CostComponentSpecificationVO aComponent, RateResult rateResult, List<String> aLog) {
this	ShipmentOrderCalculationServiceImpl  (id=21008)	
shipmentOrder	ShipmentOrderVO  (id=19571)	
ShipmentOrder: SH000002986copy(SystemId:26845844; Org:PNL-CARGO)
aComponent	CostComponentSpecificationVO  (id=23048)	
CostComponentSpecification:26823743/RC_REQ_START_BEFORE/Req Start Before
rateResult	RateResult  (id=23286)	
2015-09-21 18:00:00 theSystemId: 1000536	Symbol :DATE	Description :Datum	UnitType :DATE	IsDeleted :0	
aLog	ArrayList  (id=19976)	
[]

		CorrectionType correctionType = aComponent.getCorrectionType();
REQUESTED_START_BEFORE
		switch (correctionType) {
			case REQUESTED_START_BEFORE:
				myDate = RateResultUtils.getDateValue(rateResult);
Mon Sep 21 18:00:00 CEST 2015
				myShipmentOrderDate = shipmentOrder.getDateSetVO().getRequestedStartBefore();
2015-09-21 18:00:00.0
				if (!DateUtils.equals(myDate, myShipmentOrderDate)) {
/ NEE
					shipmentOrder.getDateSetVO().setRequestedStartBefore(myDate);
					shipmentOrderChanged = true;
				}
				break;
		return shipmentOrderChanged;
false

/t
ShipmentOrderCalculationServiceImpl.setPropertyResults(Collection<Entry<CostComponentSpecificationVO,List<RateResult>>>, ShipmentOrderVO, List<String>) line: 1149	

			if (applyPropertyResult(aShipmentOrder, component, rateResult, aLog)) {
/ NEE
				shoUpdated = true;
/ NIET


/ volgende	,
		for (Entry<CostComponentSpecificationVO, List<RateResult>> entry : aEntries) {
			CostComponentSpecificationVO component = entry.getKey();
CostComponentSpecification:26773948/RC-SHIPMENTTYPE/SET SHIPMENT TYPE
			List<RateResult> rateResultList = entry.getValue();
			// We are not dealing with costs here so we can assume there is only one entry in the list
			RateResult rateResult = rateResultList.get(0);
BENELUXFREIGHT 

			if (applyPropertyResult(aShipmentOrder, component, rateResult, aLog)) {
/s
ShipmentOrderCalculationServiceImpl.applyPropertyResult(ShipmentOrderVO, CostComponentSpecificationVO, RateResult, List<String>) line: 84	
		CorrectionType correctionType = aComponent.getCorrectionType();
SHIPMENT_TYPE
		switch (correctionType) {
			case SHIPMENT_TYPE:
				shipmentOrderChanged = setShipmentType(correctionType, rateResult, shipmentOrder);
/s
ShipmentOrderCalculationServiceImpl.setShipmentType(CorrectionType, RateResult, ShipmentOrderVO) line: 1212	
		String myResult = aRateResult.getValue();
BENELUXFREIGHT
		if (StringUtils.isNotEmpty(myResult)) {
			ShipmentType myType = aShipmentOrder.getShipmentType();
myType	ShipmentType_$$_javassist_72  (id=23931)	
	handler	JavassistLazyInitializer  (id=24271)	
		target	ShipmentType  (id=24278)	
			code	"BENELUXFREIGHT" (id=24279)	

/ Intermezzo

/ Het feit dat het een H. proxy is betekent dat het een fk is	,

$ vi ShipmentOrder.standard.hbm.xml

	<class name="com.mpobjects.oms.model.shipmentorder.vo.ShipmentOrderVO" table="SHIPMENT_ORDER">
		<many-to-one name="shipmentType" class="com.mpobjects.oms.model.entity.shipmenttype.ShipmentType" column="SHIPM_TYPE_SYSTEMID" />

/ Einde Intermezzo


			if (myType == null || !myType.getCode().equals(myResult)) {
/ NEE
		return myChanged;
false
/t
			case SHIPMENT_TYPE:
				shipmentOrderChanged = setShipmentType(correctionType, rateResult, shipmentOrder);
false
				break;
		return shipmentOrderChanged;
false
/t
ShipmentOrderCalculationServiceImpl.setPropertyResults(Collection<Entry<CostComponentSpecificationVO,List<RateResult>>>, ShipmentOrderVO, List<String>) line: 1149	
			if (applyPropertyResult(aShipmentOrder, component, rateResult, aLog)) {
/ NEE
				shoUpdated = true;
/ NIET

/ volgende
		for (Entry<CostComponentSpecificationVO, List<RateResult>> entry : aEntries) {
entry=CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS=[COLLO_HOLD ]

			CostComponentSpecificationVO component = entry.getKey();
CostComponentSpecification:26774022/RC-HOLD/ZET HOLD STATUS
			List<RateResult> rateResultList = entry.getValue();
			// We are not dealing with costs here so we can assume there is only one entry in the list
			RateResult rateResult = rateResultList.get(0);
COLLO_HOLD 

			if (applyPropertyResult(aShipmentOrder, component, rateResult, aLog)) {
/s
ShipmentOrderCalculationServiceImpl.applyPropertyResult(ShipmentOrderVO, CostComponentSpecificationVO, RateResult, List<String>) line: 84	
		CorrectionType correctionType = aComponent.getCorrectionType();
HOLD_STATUS
		switch (correctionType) {
			case HOLD_STATUS:
				shipmentOrderChanged = setHoldStatus(correctionType, rateResult, shipmentOrder);
/s
ShipmentOrderCalculationServiceImpl.setHoldStatus(CorrectionType, RateResult, ShipmentOrderVO) line: 1049	
/=
	private boolean setHoldStatus(CorrectionType aCorrectionType, RateResult aRateResult, ShipmentOrderVO aShipmentOrder) {

this	ShipmentOrderCalculationServiceImpl  (id=21008)	
aCorrectionType	CorrectionType  (id=24738)	
HOLD_STATUS
aRateResult	RateResult  (id=24760)	
COLLO_HOLD
aShipmentOrder	ShipmentOrderVO  (id=19571)	
ShipmentOrder: SH000002986copy(SystemId:26845844; Org:PNL-CARGO)

		boolean myChanged = false;
myChanged	false	
		String myResult = aRateResult.getValue();
myResult	"COLLO_HOLD" (id=24779)	

		if (StringUtils.isNotEmpty(myResult)) {
/ JA 
			if (HOLD_STATUS_CLEAR.equals(myResult) && aShipmentOrder.getHoldStatus() != null) {
/ NEE
				LOG.debug("Clearing hold status for order [" + aShipmentOrder + "]");
				aShipmentOrder.setHoldStatus(null);
				return true;
/ NIET
			} else {
/ JA
				String myHoldStatusCode = "";
				if (aShipmentOrder.getHoldStatus() != null) {
/ NEE
					myHoldStatusCode = aShipmentOrder.getHoldStatus().getCode();
/ NIET
				}
				if (!StringUtils.equals(myHoldStatusCode, myResult)) {
/ JA
myResult="COLLO_HOLD"
					myHoldStatus = MpoBeanFactory.getBean(HoldStatusDAO.class).getByCode(myResult);
myHoldStatus	HoldStatus  (id=24848)	
	code	"COLLO_HOLD" (id=24869)	
	deleted	false	
	systemId	26734131	
					if (myHoldStatus == null) {
/ NEE
					} else {
/ JA
						aShipmentOrder.setHoldStatus(myHoldStatus);
						myChanged = true;

/ Intermezzo

$ vi ShipmentOrder.standard.hbm.xml

		<many-to-one name="holdStatus" class="com.mpobjects.oms.model.entity.holdstatus.HoldStatus" fetch="select">
			<column name="HOLD_STATUS_SYSTEMID" />
		</many-to-one>


/ Einde Intermezzo

		return myChanged;
true
/t
ShipmentOrderCalculationServiceImpl.applyPropertyResult(ShipmentOrderVO, CostComponentSpecificationVO, RateResult, List<String>) line: 156	
			case HOLD_STATUS:
				shipmentOrderChanged = setHoldStatus(correctionType, rateResult, shipmentOrder);
/d
				break;
		return shipmentOrderChanged;
true
/t
ShipmentOrderCalculationServiceImpl.setPropertyResults(Collection<Entry<CostComponentSpecificationVO,List<RateResult>>>, ShipmentOrderVO, List<String>) line: 1176	

			if (applyPropertyResult(aShipmentOrder, component, rateResult, aLog)) {
/ JA
				shoUpdated = true;

/ volgende,	
		for (Entry<CostComponentSpecificationVO, List<RateResult>> entry : aEntries) {
...
/ als er geen for loops meer zijn	,
		return shoUpdated;
true
/t
ShipmentOrderCalculationServiceImpl.updateShipmentOrder(ShipmentOrderVO, AlternativeResultSet, List<String>) line: 347	
		// Update the shipment order for the non-monetary stuff.
		boolean shipmentOrderChanged = setPropertyResults(anAlternative.getPropertyResults(), shipmentOrder, aLog);
/d
true

		// Update the price parts
		try {
			if (updateShipmentOrderPricePartList(anAlternative, shipmentOrder, aLog)) {
/ NEE
/ TODO
		try {
			if (updateShipmentOrderCostPartList(anAlternative, shipmentOrder, aLog)) {
/ NEE
/ TODO

		if (shipmentOrderChanged) {
/ JA
			try {
				if (anAlternative != null) {
					// TODO: check if this is still ok?
					shipmentOrder.setPriceCurrencyVO(anAlternative.getRateCalculation().getRateAgreementVO().iterator().next().getUnit().getAsCurrency());
/ TODO
				}
				shipmentOrder.setRatecalcMd5Hash(RateCalcHashCalculator.calculate(anAlternative.getRateCalculation().getRateAgreementVO(), shipmentOrder));
				shipmentOrder = shipmentOrderService.updateShipmentOrder(shipmentOrder, false);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).updateShipmentOrder(ShipmentOrderVO, boolean) line: 1962	
		return updateShipmentOrder(aShipmentOrder, new TMSEventContext(), propagateChange);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 2009	
			} else {
				if (aShipmentOrder.isVolatile()) {
/ NEE
				setHoldStatus(myOldVO, aShipmentOrder);
/s
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).setHoldStatus(ShipmentOrderVO, ShipmentOrderVO) line: 2528	
		} else if (anOldShipmentOrder.getHoldStatus() == null && aNewShipmentOrder.getHoldStatus() != null) {
			aNewShipmentOrder.getDateSetVO().setHoldRelease(null);
/ TODO
/t
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 2026	
				setHoldStatus(myOldVO, aShipmentOrder);
/d
...
				myNew = shipmentOrderDao.merge(aShipmentOrder);
...
					triggerEventHandler(myOldVO, myNew, anEventContext);
/ TODO (Weer rc ?)
			return myNew;
/t
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).recalculateShipmentOrder(ShipmentOrderVO, boolean) line: 1294	
			updateShipmentOrder(aShipmentOrder, true);
/d

/ Intermezzo

/ we zijn op de een of andere manier in de shipment items terecht gekomen	,

	PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).recalculateShipmentOrder(ShipmentOrderVO, boolean) line: 1301	

	ShipmentItemServiceImpl(ShipmentOrderChildService).recalculateShipmentOrder(ShipmentOrderVO, boolean) line: 24	
	ShipmentItemServiceImpl.save(ShipmentItemVO, boolean, boolean, boolean, boolean) line: 587	
	ShipmentItemServiceImpl.save(ShipmentItemVO, boolean, boolean, boolean) line: 560	
	ShipmentItemServiceImpl.save(ShipmentItemVO, boolean, boolean) line: 555	
	ShipmentItemServiceImpl.save(ShipmentItemVO) line: 545	
	ShipmentItemServiceImpl.save(EntityInterface) line: 1	
	CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO, CustomDuplicateAction) line: 79	
			myNewShipmentOrderVO = shipmentOrderService.createShipmentOrder(myNewShipmentOrderVO);
/d
		if (aCustomAction.isShouldCopyShipmentItem()) {
			// copy shipment items
			Collection<ShipmentItemVO> myOriginalShipmentItems = anOriginalShipmentOrderVO.getShipmentItemList();
			for (ShipmentItemVO myOriginalShipmentItem : myOriginalShipmentItems) {

				ShipmentItemVO myNewShipmentItem = myOriginalShipmentItem.copy();
				myNewShipmentItem.setLabelInfo(null);
				myNewShipmentOrderVO.addShipmentItem(myNewShipmentItem);
->				myNewShipmentItem = shipmentItemService.save(myNewShipmentItem);

	CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO) line: 33	
	PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createReturnShipmentOrder(ShipmentOrderVO) line: 727	
	PnlLogisticsShipmentOrderServiceImpl.createReturnShipmentOrder(ShipmentOrderVO) line: 20	

/ TODO

/ Einde Intermezzo


/ FIX PCT-516

public class PnlLogisticsShipmentOrderServiceImpl extends ShipmentOrderServiceImpl {
	public ShipmentOrderVO createReturnShipmentOrder(ShipmentOrderVO aShipmentOrder) {
		ShipmentOrderVO myShipmentOrder = super.createReturnShipmentOrder(aShipmentOrder);
...
		myShipmentOrder.setHoldStatus(null);
		myShipmentOrder.forcedRecalculate();

/ we zijn vaak in  ShipmentOrderServiceImpl.class	,
PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createReturnShipmentOrder(ShipmentOrderVO) line: 727	



/ Einde FIX PCT-516


































































			for (ShipmentItemVO myOriginalShipmentItem : myOriginalShipmentItems) {
				myNewShipmentItem = shipmentItemService.save(myNewShipmentItem);
/ -> rc
				}
				shipmentItemService.save(myNewShipmentItem);
/ -> rc

/ 7	. 

PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createReturnShipmentOrder(ShipmentOrderVO) line: 779	

		ShipmentOrderVO myShipmentOrderVO = shipmentOrderDuplicator.duplicate(aShipmentOrder);
/d
		...
		// save it to the database
		try {
			ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(myShipmentOrderVO, true);
			myShipmentOrderVO = ShipmentOrderUtil.getShipmentOrderFacadeLocal().getShipmentOrder(myShipmentOrderVO.getSystemId());
			aShipmentOrder.setReturnCreated(true);
			ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(aShipmentOrder, true);
...
/s
EventHandlerServiceImpl.handleEvent(Event) line: 109	
			listenerList.fireEvent(anEvent);






















Paul

PnlLogisticsShipmentOrderServiceImpl(ShipmentOrderServiceImpl).createReturnShipmentOrder(ShipmentOrderVO) line: 779

        ShipmentOrderVO myShipmentOrderVO = shipmentOrderDuplicator.duplicate(aShipmentOrder);
(*)
        ...
        // save it to the database
        try {
			...
            ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(aShipmentOrder, true);
-> rc

(*)=
CompleteShipmentOrderDuplicator.duplicate(ShipmentOrderVO, CustomDuplicateAction) line: 94
            for (ShipmentItemVO myOriginalShipmentItem : myOriginalShipmentItems) {
                myNewShipmentItem = shipmentItemService.save(myNewShipmentItem);
/ -> rc
                }
                shipmentItemService.save(myNewShipmentItem);
/ -> rc



/ 7	. 

/ we willen een sho weer opnieuw in het rijtje	,

		clieop_order
sho id				batch systemid 		X1
						X2

/ we moeten ogv sho.shipment_order_id='SH000002992' 
/ eerst de row in de join table, X1	,	 want batch_systemid  is een fk naar clieop_batch	, en we kunnen dus niet eerst de clieop_batch entry rm	,
/ eerst de clieop_batch rm, X2	, 

/ check	,
pnllogistics3=# select cb.* from clieop_batch cb join clieop_order co on cb.system_id=co.batch_systemid join shipment_order sho on co.shipment_order_systemid=sho.system_id where shipment_order_id='SH000002992';
 system_id |      code       |      creation_date      | process_date | sha1_check_sum | organization_systemid | hash_total | total_amo
unt 
-----------+-----------------+-------------------------+--------------+----------------+-----------------------+------------+----------
----
  26849220 | 20150925-122111 | 2015-09-25 12:21:11.666 | NULL         | NULL           |                   500 |          0 |         N
ULL
(1 row)



pnllogistics3=# select co.* from clieop_order co join shipment_order sho on co.shipment_order_systemid=sho.system_id where shipment_order_id='SH000002992';
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
                26845914 |       26849220
(1 row)
/ X1
pnllogistics3=# delete from clieop_order co where co.shipment_order_systemid=(select sho.system_id from shipment_order sho where sho.shipment_order_id='SH000002992');
/ X2
gistics3=# delete from clieop_batch cb where cb.system_id=26849220;
DELETE 1
/ TODO (OK, maar moet anders)

/ ERR
/ Deze wilde we eerst doen, maar ERR	, omdat er een fk (in clieop_order ) is die naar deze row in clieop_batch points	. 
pnllogistics3=# delete from clieop_batch cb where cb.system_id=(select co.batch_systemid from clieop_order co join shipment_order sho on co.shipment_order_systemid=sho.system_id where shipment_order_id='SH000002992');


/ Nu zien we de sho weer in clieop scherm	,


 











/ Einde DEBUG PCT-516

/ PCT-713

/ wicket page, 	BatchCreatePage

/ Ga naar een sho	,
Cash on delivery: 13.00 EUR
Received COD Amount: 13.00 EUR
COD Checked	: check
COD Approved: check
Save sho	,


pnllogistics3=# select column_name from information_schema.columns where table_name='shipment_order' and column_name like '%cash%';
-[ RECORD 1 ]------------------------------
column_name | cash_on_del
-[ RECORD 2 ]------------------------------
column_name | cash_on_del_currency_systemid
-[ RECORD 3 ]------------------------------
column_name | cash_on_del_done

pnllogistics3=# select cash_on_del_done from shipment_order where shipment_order_id='SH000002991';
-[ RECORD 1 ]----+--
cash_on_del_done | 0

/ Nu
Finance, clieop, create batch	,
/ we zien de sho in de rij	, 

/ click Add	, we komen op een form	,
/ Doe nog een keer 
Finance, clieop, create batch	,
/ we zien deze rij niet meer	, 
/ TODO

/ 7	. 

/ Maar we kunnen ook zonder naar welke sho het is 	, kijken naar de cliep_order table,	 en delete	,

pnllogistics3=# select*from clieop_order order by shipment_order_systemid desc ;
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
                26845914 |       26849227
                26790197 |       26790228
...

/ of	,

pnllogistics3=# select*from clieop_order where shipment_order_systemid in (26845914,26790197);

 shipment_order_systemid | batch_systemid 
-------------------------+----------------
                26845914 |       26849227
                26790197 |       26849231
(2 rows)

/ en dan de huidige batch_id's use om de entries in clieop_order en clieop_batch te rm	,


/ Onthoud de sho id's	, want de batch id's veranderen steeds	,

/ print pdf is disabled	,
                26845914 |       26849227
pnllogistics3=# delete from clieop_order where batch_systemid=26849227;
DELETE 1
pnllogistics3=# delete from clieop_batch where system_id=26849227;
DELETE 1

/ print pdf is enabled	,
                26790197 |       26790228
pnllogistics3=# delete from clieop_order where batch_systemid=26790228;
DELETE 1
pnllogistics3=# delete from clieop_batch where system_id=26790228;
DELETE 1







/ Einde PCT-713

/ DEBUG PCT-713

/s
MpoWebRequestCycle(RequestCycle).steps() line: 1465	
				try
				{
->					step();
		finally
		{
			// clean up the request
			detach();
/s
MpoWebRequestCycle(RequestCycle).step() line: 1358	
				case PROCESS_EVENTS : {
					processEventsAndRespond();
/s
MpoWebRequestCycle(RequestCycle).processEventsAndRespond() line: 1287	
		// generate a response
		processor.respond(this);
/s
WebRequestCycleProcessor(AbstractRequestCycleProcessor).respond(RequestCycle) line: 105	
			requestTarget.respond(requestCycle);
/s
PageRequestTarget.respond(RequestCycle) line: 58	
		// Should page be redirected to?
		if (requestCycle.isRedirect())
		{
			// Redirect to the page
			requestCycle.redirectTo(page);
/s
MpoWebRequestCycle(WebRequestCycle).redirectTo(Page) line: 201	
				// render the page into the buffer
				page.renderPage();
/s
BatchCreatePage(Page).renderPage() line: 912	
			prepareForRender();
/s
BatchCreatePage(Page).prepareForRender(boolean) line: 1543	
			// initialize the page if not yet initialized
			initialize();
/s
BatchCreatePage(Component).fireInitialize() line: 4105	
			onInitialize();
/s
BatchCreatePage(AbstractPage).onInitialize() line: 91			/ onze eigen code	,
		initializePage();
/s
BatchCreatePage(AbstractMainPage).initializePage() line: 57	
		super.initializePage();
/s
BatchCreatePage(AbstractPage).initializePage() line: 76	
		createPageComponents();
/s
BatchCreatePage.createPageComponents() line: 98	
		add(new QueryViewPanel("query", Model.of(myQuery), myRowAction, myGroupAction));
/s
QueryViewPanel.<init>(String, IModel<QueryDefinition>, List<RowAction>, List<GroupAction>, Set<Serializable>) line: 104	

/ Intermezzo

$ vi QueryViewPanel.java
<wicket:panel>
	<div class="query-list">
		<div class="title-bar">
			<div class="title" wicket:id="title"></div>
		</div>
		<div class="search-bar">
			<div wicket:id="search-bar">
				<div wicket:id="filter-bar"></div>
			</div>
		</div>
		<div class="navigation-bar">
			<div class="rowcount" wicket:id="rowcounttop"></div>
			<div class="action-panel" wicket:id="action-panel"></div>				/ Met de Add button	,
		</div>
		<div class="data-panel">
			<table class="grid">
				<tr class="headers">									 
					<th wicket:id="header">							/ ListView	, 					horizontal	,
						<span wicket:id="column-header"/></th>		/ ColumnHeader, Label	, ...
				</tr>
				<tr wicket:id="rows">								/ ListView						vertical	,
					<td wicket:id="cell">							/ ListView						horizontal	,
						<span wicket:id="cellvalue"></span></td>	/ RepeatingView
				</tr>
			</table>
		</div>
		<div class="navigation-bar">
			<div class="rowcount" wicket:id="rowcountbottom"></div>
			<div class="navigation" wicket:id="navigation"></div>
		</div>
	</div>
</wicket:panel>

pnllogistics=> select sho.system_id,sho.shipment_order_id from clieop_order co join shipment_order sho on co.shipment_order_systemid=sho.system_id order by sho.system_id desc ;
 system_id | shipment_order_id 
-----------+-------------------
  26855170 | SH000010195
	...

pnllogistics=> select*from clieop_order limit 1;
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
					^	
					|	
                26785197 |       26787114
									|
								    v	
pnllogistics=> select*from clieop_batch limit 1;
 system_id |      code       |      creation_date      | process_date |              sha1_check_sum              | organization_systemid | hash_
total | total_amount 
-----------+-----------------+-------------------------+--------------+------------------------------------------+-----------------------+------ ------+--------------
  26787114 | 20150612-114714 | 2015-06-12 11:47:14.811 |              | ED8E50BA86DCD16415296E1119D30FE99DB119B9 |                   500 | 11115 61113 |        22.00
(1 row)



/ Einde Intermezzo

		createComponents();
/s
QueryViewPanel.createComponents() line: 359	
		createDataProvider();
/s
QueryViewPanel.createDataProvider() line: 705	
		dataProvider = new SortableDataProvider<List<Object>>() {
			private List<List<Object>> loadEntriesFromDatabase(int first, int count) {
/t
QueryViewPanel.createComponents() line: 361	
		addHeaderRow();
/s
public class QueryViewPanel extends Panel {
	protected void addHeaderRow() {
		ListView<QueryColumn<?>> myHeader = new ListView<QueryColumn<?>>("header", new PropertyModel<List<QueryColumn<?>>>(queryStateModel, "queryColumns")) {
				if (myColumn.isId()) {
					if (groupActionList.size() > 0) {
						aItem.add(new SelectionColumnHeader("column-header", myColumn) {
/ TODO
					} else {
						aItem.add(new Label("column-header", ""));
					}
				} else if (myColumn.isSort()) {
					aItem.add(new SortableColumnHeader("column-header", myColumn, QueryViewPanel.this));
				} else {
					aItem.add(new ColumnHeader("column-header", myColumn, dataProvider));
		add(myHeader);

/////////////////////////////////
/ De list is horizontal: de column headers (staan naast elkaar)	,

/t
QueryViewPanel.createComponents() line: 361	
		addDataRows();
/s
QueryViewPanel.addDataRows() line: 573	
		dataView = new ListView<List<Object>>("rows", new PropertyModel<List<List<Object>>>(QueryViewPanel.this, "rowsOnPage")) {
			@Override
			protected void populateItem(final ListItem<List<Object>> aRow) {
				ListView<Object> myRow = new ListView<Object>("cell", aRow.getModel()) {
					@Override
					protected void populateItem(final ListItem<Object> aCell) {
						if (myColDef.isId()) {
							RepeatingView myActions = new RepeatingView("cellvalue");
							CheckPanel myCheckPanel = new CheckPanel(myActions.newChildId(), myBooleanModel) {
							myActions.add(myCheckPanel);
							for (final RowAction myAction : rowActionList) {
								myActions.add(new RowActionPanel(myActions.newChildId(), myAction, aCell.getModelObject(), myAction.getCssClass(), myAction .getTitle()) {
							aCell.add(myActions);
							aCell.add(myActions);
						} else {
							if (aCell.getModel().getObject() != null) {
								createRow(aRow.getModelObject(), myColDef, aCell);
							} else {
								aCell.add(new Label("cellvalue", ""));
							}
						}

				aRow.add(myRow);
		add(dataView);
/t
QueryViewPanel.createComponents() line: 364	
		addActionBar();
/ Deze heeft de Add button	,
/s
QueryViewPanel.addActionBar() line: 566	
		ActionPanel myActionPanel = new ActionPanel("action-panel", groupActionList, Model.ofSet(selectedRows));
		add(myActionPanel);
/s
ActionPanel.<init>(String, List<GroupAction>, IModel<Set<Serializable>>) line: 25	
		RepeatingView myActionList = new RepeatingView("action");
		for (GroupAction myAction : anActionList) {
/ 1,  (*)
			myActionList.add(new GroupActionPanel(myActionList.newChildId(), myAction, aSelection));

/ Intermezzo

/ (*)	, 
$ vi BatchCreatePage.java
		myGroupAction.add(new GroupAction("add", "add") {
			@Override
			public void execute(Set<? extends Serializable> aSelectedRowSet) {
				createBatch(aSelectedRowSet);
			}

		});

/ Einde Intermezzo

/ Intermezzo

$ vi ActionPanel.html

<wicket:panel>
	<div class="group-action" wicket:id="action"/>
	<span class="selection-message" wicket:id="selection-message"></span>
</wicket:panel>


$ vi GroupActionPanel.java

public class GroupActionPanel extends Panel {

	public GroupActionPanel(String aId, final GroupAction anAction, final IModel<Set<? extends Serializable>> aSelection) {
		super(aId);

		AjaxLink myLink = new AjaxLink("button") {

			@Override
			public boolean isEnabled() {
				return aSelection.getObject().size() > 0;
/ (**)
			}

			@Override
			public void onClick(AjaxRequestTarget aArg0) {
				anAction.execute(aSelection.getObject());
			}
		};

$ vi GroupActionPanel.html

<wicket:panel>
	<button class="icon" wicket:id="button" type="button"><span wicket:id="label"></span></button>
</wicket:panel>

/ Einde Intermezzo

/ (**)
/ Hier staat of de Add button visible is of niet: Als er selected rows zijn	,




/ c
/s
QueryViewPanel.getRowsOnPage() line: 204	
			switch (displayMode) {
/ displayMode=ALL
				default:
					showAll();
/s
QueryViewPanel.showAll() line: 761	
		Iterator<? extends List<Object>> myIterator = dataProvider.iterator((currentPage - 1) * rowsPerPage, rowsPerPage);
/s
QueryViewPanel$4.iterator(int, int) line: 709	
/=
	private void createDataProvider() {

		dataProvider = new SortableDataProvider<List<Object>>() {

			@Override
			public Iterator<List<Object>> iterator(int first, int count) {
->				return loadEntriesFromDatabase(first, count).iterator();
/s
QueryViewPanel$4.loadEntriesFromDatabase(int, int) line: 726	

			private List<List<Object>> loadEntriesFromDatabase(int first, int count) {
				List<List<Object>> items = new ArrayList<List<Object>>();
				Query myCount = createSelectQuery();
/s
QueryViewPanel.createSelectQuery() line: 384	
		return QueryBuilder.buildSelectQuery(getDAO().getCurrentSession(), queryDefinition, queryStateModel.getObject(), true);
/ getDAO()=ShipmentOrderDaoImpl
/s
public abstract class BaseHibernateDAO<T> extends HibernateDaoSupport {
	public Session getCurrentSession() {
		return getHibernateTemplate().getSessionFactory().getCurrentSession();
/ TODO (Wat is de H tmpl?, is uniek? , is van shipment order dao impl? )
/t
/s
QueryBuilder.buildSelectQuery(Session, QueryDefinition, QueryState, boolean) line: 53	
		Query myQuery = aSession.createQuery(buildSelect(aDefinition, aState, queryParameters, withHidden));

/ buildSelect(aDefinition, aState, queryParameters, withHidden) =
select s.systemId, s.shipmentOrderId, s.dateSetVO.requestedStartBefore, s.dateSetVO.requestedEndBefore, p.name , p.city , acc.code, acc.ibanCode, acc.swiftCode, ed_amount 
from ShipmentOrderVO s 
left join s.entityDetails ed_amount, EntityDetailType edt_amount 
left join s.entityDetails ed_check, EntityDetailType edt_check 
left join s.entityDetails ed_approved, EntityDetailType edt_approved, 
FinancialPartyPartyBinding fpb join fpb.party p  
 join fpb.financialParty fp 
 , FinancialPartyBankAccountVO acc  
where s.template = 0 
and s.cashOnDelivery >0 
and (index(ed_amount)=edt_amount.systemId) and edt_amount.code = 'OntvangenBedragCash' 
and (index(ed_check)=edt_check.systemId) and edt_check.code = 'Checked' 
and (index(ed_approved)=edt_approved.systemId) and edt_approved.code = 'Goedgekeurd' 
and ed_check = '1' 
and ed_approved = '1' 
and p.partyId = s.billToPartyVO.code
and acc.financialPartyVO = fp
and s.systemId not in (select s2 from ClieopBatch c join c.shipmentOrderList s2)  

/ Intermezzo

$ vi ClieopBatch.standard.hbm.xml

	<class name="ClieopBatch" table="CLIEOP_BATCH">
		<set name="shipmentOrderList" table="CLIEOP_ORDER">
			<cache usage="read-write" />
			<key>
				<column name="BATCH_SYSTEMID" />
			</key>
			<many-to-many column="SHIPMENT_ORDER_SYSTEMID" class="com.mpobjects.oms.model.shipmentorder.vo.ShipmentOrderVO" />
		</set>


/ Einde Intermezzo

/ Intermezzo

/ Als we een (of meerdere) sho hebben select	, en we click op Add	, dan verschijnen er WH entries in clieop_batch en clieop_order	,

/ clieop_order is join table clieop_batch en shipment_order	, see H. mapping hierboven	,

/  op SH000002991 hadden we al Add clicked	, 

pnllogistics3=# select cb.* from clieop_batch cb join clieop_order co on cb.system_id=co.batch_systemid join shipment_order sho on co.shipment_order_systemid=sho.system_id  where shipment_order_id='SH000002991';
 system_id |      code       |      creation_date      | process_date | sha1_check_sum | organization_systemid | hash_total | total_amo
unt 
-----------+-----------------+-------------------------+--------------+----------------+-----------------------+------------+----------
----
  26849219 | 20150924-153544 | 2015-09-24 15:35:44.519 | NULL         | NULL           |                   500 |          0 |         N
ULL
(1 row)

/  op SH000002992 hadden we NIET Add clicked	, 

pnllogistics3=# select cb.* from clieop_batch cb join clieop_order co on cb.system_id=co.batch_systemid join shipment_order sho on co.shipment_order_systemid=sho.system_id  where shipment_order_id='SH000002992';
 system_id | code | creation_date | process_date | sha1_check_sum | organization_systemid | hash_total | total_amount 
-----------+------+---------------+--------------+----------------+-----------------------+------------+--------------
(0 rows)

/ Einde Intermezzo


/t
QueryViewPanel$4.loadEntriesFromDatabase(int, int) line: 727	
				Query myCount = createSelectQuery();
/d
				myCount.setMaxResults(count);
				myCount.setFirstResult(first);
				List myResult = myCount.list();
				for (Object myObject : myResult) {
					Object[] myLine = (Object[]) myObject;
					items.add(Arrays.asList(myLine));
				}
				return items;
[[26845914, SH000002992, 2015-09-24 18:00:00.0, 2015-09-25 18:00:00.0, Gildewerk B.V., HAARLEM, 2015112201234, 2015112201234, RBOSNL2A, 13 EUR]]

...
/t
QueryViewPanel.getRowsOnPage() line: 204	
/d

/c
QueryViewPanel$3.populateItem(ListItem<List<Object>>) line: 577	
/=
	private void addDataRows() {

		dataView = new ListView<List<Object>>("rows", new PropertyModel<List<List<Object>>>(QueryViewPanel.this, "rowsOnPage")) {

			@Override
			protected void populateItem(final ListItem<List<Object>> aRow) {
				ListView<Object> myRow = new ListView<Object>("cell", aRow.getModel()) {

/ 7	. 

/ we click op de Add button	,

$ vi GroupActionPanel.java
	public GroupActionPanel(String aId, final GroupAction anAction, final IModel<Set<? extends Serializable>> aSelection) {
		super(aId);

		AjaxLink myLink = new AjaxLink("button") {
			@Override
			public void onClick(AjaxRequestTarget aArg0) {
				anAction.execute(aSelection.getObject());
/s
WildcardSetModel(GenericBaseModel).getObject() line: 46	
		return object;
[26845914]
/ object is HashMap	, en key:value=26845914:new Object()
/ = system_id van de sho 'SH000002992'	,

/t
/s
BatchCreatePage$1.execute(Set<Serializable>) line: 93	
		myGroupAction.add(new GroupAction("add", "add") {
			@Override
			public void execute(Set<? extends Serializable> aSelectedRowSet) {
->				createBatch(aSelectedRowSet);
aSelectedRowSet=[26845914]
/s
BatchCreatePage.createBatch(Set<Serializable>) line: 138	
		ClieopBatch myBatch = new ClieopBatch();
		myBatch.setCode(myFormat.format(myBatch.getCreationDate()));
		ShipmentOrderDao myDao = MpoBeanFactory.getBean(ShipmentOrderDao.class);
		for (Serializable myId : aSelectedRowSet) {
			Integer myInt = Integer.parseInt(myId.toString());
			ShipmentOrderVO myOrder = myDao.getBySystemId(myInt);
			myBatch.getShipmentOrderList().add(myOrder);
		}
myBatch	ClieopBatch  (id=23728)	
	code	"20150925-132513" (id=23956)	
	creationDate	Date  (id=23957)	
	hashTotal	0	
	organization	Organization  (id=23958)	
	performanceMonitorService	null	
	processDate	null	
	sha1CheckSum	null	
	shipmentOrderList	PersistentSet  (id=24022)	
[ShipmentOrder: SH000002992(SystemId:26845914; Org:PNL-CARGO)]
	systemId	26849222	
	totalAmount	null	

		myBatch = MpoBeanFactory.getBean(ClieopBatchDAO.class).save(myBatch);

/ Intermezzo

$ vi ClieopBatch.standard.hbm.xml


	<class name="ClieopBatch" table="CLIEOP_BATCH">
		<set name="shipmentOrderList" table="CLIEOP_ORDER">
			<cache usage="read-write" />
			<key>
				<column name="BATCH_SYSTEMID" />
			</key>
			<many-to-many column="SHIPMENT_ORDER_SYSTEMID" class="com.mpobjects.oms.model.shipmentorder.vo.ShipmentOrderVO" />
		</set>

/ Is het zo dat nu we myBatch save, er naast de entry in clieop_batch , er een entry verschijnt in de join table clieop_order	, vanwege de <many-to-many >	? 
/ TODO

/ Einde Intermezzo

		BatchProcessPage myPage = new BatchProcessPage(BatchCreatePage.this);
/s

/	Intermezzo

$ vi BatchProcessPage.html

<wicket:extend>
	<form wicket:id="form">
		<h2>
			<wicket:message key="process.batch">Process batch</wicket:message>
		</h2>

		<div>
			<dl>
				<dt>
					<wicket:message key="batch.id">Batch id</wicket:message>
				</dt>
				<dd wicket:id="code"></dd>

				<dt>
					<wicket:message key="creation.date">Creation date</wicket:message>
				</dt>
				<dd wicket:id="creationDate"></dd>

				<dt>
					<wicket:message key="process.date">Process date</wicket:message>
				</dt>
				<dd wicket:id="processDate"></dd>

				<dt>
					<wicket:message key="number.of.records"># Records</wicket:message>
				</dt>
				<dd wicket:id="noOfRecords"></dd>

				<dt>
					<wicket:message key="total.amount">Total Amount</wicket:message>
				</dt>
				<dd wicket:id="totalAmount"></dd>

				<dt>
					<wicket:message key="hash.total">Hash Total</wicket:message>
				</dt>
				<dd wicket:id="hashTotal"></dd>

				<dt>
					<wicket:message key="checksum">Checksum</wicket:message>
				</dt>
				<dd wicket:id="sha1CheckSum"></dd>

			</dl>
		</div>
		<wicket:child />
		<p>
		<div class="confirmShipmentBlock">
			<wicket:container wicket:id="actions">
				<button wicket:id="delete" type="delete" class="icon icon_delete">
					<wicket:message key="delete">Delete</wicket:message>
				</button>
				<button wicket:id="print.excel" type="submit" class="icon icon_print">
					<wicket:message key="print.excel">Print Excel</wicket:message>
				</button>
				<button wicket:id="print.pdf" type="submit" class="icon icon_print">
					<wicket:message key="print.pdf">Print PDF</wicket:message>
				</button>
				<button wicket:id="confirm" type="submit" class="icon icon_ok">
					<wicket:message key="confirm.batch">Confirm</wicket:message>
				</button>
			</wicket:container>
		</div>
	</form>

/	Einde Intermezzo

/s
BatchProcessPage.<init>(Page) line: 87	
	protected boolean pdfExists = false;

	protected boolean excelExists = false;

	protected boolean pdfPrinted = false;

		daoWrapper = new BeanWrapper<ClieopBatchDAO>(ClieopBatchDAO.class);
		clieopModel = new EntityDetachableModel<ClieopBatch>(null, daoWrapper);
//////////////////////////
/ Dus (straks form's ) model is eig. clieop_batch table	,

		excelExists = (getReportByName(CLIEOP_EXCEL) != null);
/s
	private ReportVO getReportByName(String aName) {
aName	"CLIEOP_EXCEL" (id=25165)	

		Collection<ReportVO> myReport = MpoBeanFactory.getBean(ReportDAO.class).getByName(aName);
		if (myReport.isEmpty()) {
/ NEE
		} else {
			return myReport.iterator().next();

/ Intermezzo

$ vi Report.standard.hbm.xml

	<class name="ReportVO" table="REPORT" >

pnllogistics3=# select name from report;
             name             
------------------------------
 SupplierSelfBill
 NO-USE_PerformanceKlant
 Depot_Extract Boek_Datum
 Depot_Extract_Plan_Datum
 Tijdigheid_report
 StandardCustomerInvoice
 CollectNote
 Pdf_PerformancePartyGroup
 DeliveryNote
 Eurodis Relabel
 PerfPartyGroup-All
 Opdrachtgever_report
 Afhaalopdrachten
 Vervoerdersafrekening
 CLIEOP_PDF
 CLIEOP_EXCEL
 CashOnDeliveryCheck
 Status_report
 PerfPartyGroup - Onr
 NO USE PerfDistributionDepot
 europlate
 DeliveryNote_old
 Scan report
 Scan_Select_Input
 Pod Handtekening
(25 rows)

/ Einde Intermezzo

/t
BatchProcessPage.<init>(Page) line: 91	
		excelExists = (getReportByName(CLIEOP_EXCEL) != null);
/d
true
		pdfExists = (getReportByName(CLIEOP_PDF) != null);
/s
	private ReportVO getReportByName(String aName) {
		Collection<ReportVO> myReport = MpoBeanFactory.getBean(ReportDAO.class).getByName(aName);
		if (myReport.isEmpty()) {
/ NEE
		} else {
			return myReport.iterator().next();
/t
BatchProcessPage.<init>(Page) line: 91	
		pdfExists = (getReportByName(CLIEOP_PDF) != null);
/d
true
		createPage();
/s
BatchProcessPage.createPage() line: 100	
		Form<ClieopBatch> myForm = new Form<ClieopBatch>("form");
		myForm.setModel(new CompoundPropertyModel<ClieopBatch>(clieopModel));

/ Intermezzo

/ delete
			public boolean isEnabled() {
					return clieopModel.getObject().getProcessDate() == null;
/ excel
			public boolean isEnabled() {
				return excelExists;

/ pdf
			public boolean isEnabled() {
				return pdfExists && xml != null;

/ confirm
			public boolean isEnabled() {
				return xml != null && pdfPrinted && clieopModel.getObject().getProcessDate() == null;

/ 13	. 

/ Onthoud de sho id's	, de batch id's veranderen steeds	,

pnllogistics3=# select*from clieop_order where shipment_order_systemid in (26845914,26790197);
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
                26845914 |       26849227
                26790197 |       26849231
(2 rows)

/ en dan de huidige batch_id's use om de entries in clieop_order en clieop_batch te rm	,

/ print pdf is disabled	,
                26845914 |       26849227
pnllogistics3=# delete from clieop_order where batch_systemid=26849227;
DELETE 1
pnllogistics3=# delete from clieop_batch where system_id=26849227;
DELETE 1

/ print pdf is enabled	,
                26790197 |       26790228
pnllogistics3=# delete from clieop_order where batch_systemid=26790228;
DELETE 1
pnllogistics3=# delete from clieop_batch where system_id=26790228;
DELETE 1

/ Einde Intermezzo

/ 13	. 

/ voor sho	, gaat de xml create OK	,
26790197

/ voor sho ERR	,
26845914
/ dat zien we in 13 hieronder	,


/t
public class BatchCreatePage extends AbstractMainPage {
	private void createBatch(Set<? extends Serializable> aSelectedRowSet) {
		BatchProcessPage myPage = new BatchProcessPage(BatchCreatePage.this);
		myPage.setEditRecord(myBatch);
com.mpobjects.clieop.model.ClieopBatch/id:26849236

/ Dit is inderdaad de batch	 bij onze sho	

/ Intermezzo

pnllogistics3=# select*from clieop_order where shipment_order_systemid in (26845914,26790197);
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
				...
                26790197 |       26849236

/ Einde Intermezzo

/s
public class BatchProcessPage extends BaseContextPage {
	public void setEditRecord(ClieopBatch aRecord) {
aRecord	ClieopBatch  (id=19854)	
com.mpobjects.clieop.model.ClieopBatch/id:26849236

		clieopModel.setObject(aRecord);
/s
EntityDetachableModel.innerSetObject(T) line: 146	
		attached = true;
		attachedVolatile = true;
		entity = aObject;
		if (aObject != null) {
			systemId = aObject.getSystemId();
/t

		prepareXml();
		pdfPrinted = false;
/s
	private void prepareXml() {
			Document myDocument = MpoBeanFactory.getBean(ClieopService.class).createCliepBatchDocument(clieopModel.getObject());
			xml = DomUtil.serialize(myDocument);
<?xml version="1.0" encoding="UTF-8"?>
<Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03 pain.001.001.03.xsd"><CstmrCdtTrfInitn><GrpHdr><MsgId>20150925-155428</MsgId><CreDtTm>2015-09-25T15:54:28.092+02:00</CreDtTm><NbOfTxs>1</NbOfTxs><CtrlSum>0</CtrlSum><InitgPty><Nm>PostNl</Nm></InitgPty></GrpHdr><PmtInf><PmtInfId>20150925-155428</PmtInfId><PmtMtd>TRF</PmtMtd><BtchBookg>true</BtchBookg><NbOfTxs>1</NbOfTxs><CtrlSum>0</CtrlSum><ReqdExctnDt>2015-06-23</ReqdExctnDt><Dbtr><Nm>PostNL Cargo BV</Nm><PstlAdr><AdrLine>Hoofddorp</AdrLine></PstlAdr></Dbtr><DbtrAcct><Id><IBAN>NL27INGB0000450002</IBAN></Id></DbtrAcct><DbtrAgt><FinInstnId><BIC>INGBNL2A</BIC></FinInstnId></DbtrAgt><CdtTrfTxInf><PmtId><EndToEndId>0026790197</EndToEndId></PmtId><Amt><InstdAmt Ccy="EUR">28.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BIC>RBOSNL2A</BIC></FinInstnId></CdtrAgt><Cdtr><Nm>Hallmark " Krimpen"</Nm><PstlAdr><AdrLine>KRIMPEN AAN DEN IJSSEL</AdrLine></PstlAdr></Cdtr><CdtrAcct><Id><IBAN>NL54RBOS0480238200</IBAN></Id></CdtrAcct></CdtTrfTxInf></PmtInf></CstmrCdtTrfInitn></Document>

/c
		final Button confirm = new Button("confirm") {
			@Override
			public boolean isEnabled() {
				return xml != null && pdfPrinted && clieopModel.getObject().getProcessDate() == null;
false
/ want	,
xml != null: true
pdfPrinted:false
clieopModel.getObject().getProcessDate():null

		AjaxButton pdf = new IndicatingAjaxButton("print.pdf", myForm) {
			@Override
			public boolean isEnabled() {
				return pdfExists && xml != null;
true

		final Link<String> delete = new Link<String>("delete") {
			@Override
			public boolean isEnabled() {
				if (clieopModel.getObject() != null) {
					return clieopModel.getObject().getProcessDate() == null;
true

/ 13	. 

/ Maar voor	,
pnllogistics3=# select*from clieop_order where shipment_order_systemid in (26845914,26790197);
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
                26845914 |       26849227
(2 rows)

pnllogistics3=# delete from clieop_order where batch_systemid=26849227;
DELETE 1
pnllogistics3=# delete from clieop_batch where system_id=26849227;
DELETE 1

/ zien we dat we geen XML kunnen create	,

	private void prepareXml() {
		try {
			Document myDocument = MpoBeanFactory.getBean(ClieopService.class).createCliepBatchDocument(clieopModel.getObject());
		} catch (Exception anException) {
->			error("Could not create XML: " + anException.getMessage());


/ 7	.

/ FIX PCT-713

/ Onthoud de sho id's	, de batch id's veranderen steeds	,
pnllogistics3=# select*from clieop_order where shipment_order_systemid in (26845914,26790197);
 shipment_order_systemid | batch_systemid 
-------------------------+----------------
                26845914 |       26849227
                26790197 |       26849231
(2 rows)

/ en dan de huidige batch_id's use om de entries in clieop_order en clieop_batch te rm	,

/ print pdf is disabled	,
                26845914 |       26849227
pnllogistics3=# delete from clieop_order where batch_systemid=26849227;
DELETE 1
pnllogistics3=# delete from clieop_batch where system_id=26849227;
DELETE 1

/ Stel ik betaal iets met rembours , van iets wat ik bij wehkamp heb besteld. 
/ de bill to party is wehkamp, want die gaf de opdracht voor het transport. Wehkamp moet het transport betalen. Het rembours bedrag wordt door de uitvoerende party (cargo) terugbetaald aan wehkamp. 

/ ERR	,
SH000002992

bill_to: copy id , 9148459

conf, finance, financial party
/ zoek op deze id
9148459
/ we zien geen VAT number, en een bank account	,
/ click
Create new financial party bank account

/ OK	,
SH000001993
Bill to party id: 9810366
conf, finance, financial party
/ zoek op deze id (inderdaad, onder Id )	, 9810366
/ Inderdaad	, deze financial party heeft een back account	,
/ we zien rechtsboven VAT number: NL000000000B01 van de financial party	,
/ we edit de bank account beneden	,

Account number: NL54RBOS0480238200
country: NL
Currency: EUR
Iban Code: NL54RBOS0480238200
Swift code: RBOSNL2A

/ we edit	, 
9148459
/ we copy die van 9810366	,
VAT number: NL000000000B01
Save
/ click 
Create new financial party bank account
Account number: NL54RBOS0480238200
country: NL
Currency: EUR
Iban Code: NL54RBOS0480238200
Swift code: RBOSNL2A

/ Nu werkt OK	,


/ MORGENOCHTEND	,

 


/ See
BatchCreatePage.java
	private void createBatch(Set<? extends Serializable> aSelectedRowSet) {
		BatchProcessPage myPage = new BatchProcessPage(BatchCreatePage.this);
		myPage.setEditRecord(myBatch);
/s
	public void setEditRecord(ClieopBatch aRecord) {
		clieopModel.setObject(aRecord);
		prepareXml();
/s
	private void prepareXml() {
		try {
			Document myDocument = MpoBeanFactory.getBean(ClieopService.class).createCliepBatchDocument(clieopModel.getObject());
/s
ClieopServiceImpl.createCliepBatchDocument	,





/ EInde FIX PCT-713

/ BUJLD GEOSCO 

/ 7	. 

/ we build psa	, 
$ vi application.properties
base.product=geosco

/ 7	.

[eric@localhost bin]$ cat psa-ssh-t.sh 
#!/bin/bash
echo 'h^Zgcyr&Q'
ssh vanderveldene@geosco-app-t.intermax.mp-objects.com

[vanderveldene@geosco-app-t ~]$ less /local/apps/jboss-4.0.5.GA/server/geosco/deploy/postgres-ds.xml 

<datasources>
        <xa-datasource>
                <jndi-name>tmsdevDS</jndi-name>
                <track-connection-by-tx>true</track-connection-by-tx>
                <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>
                <xa-datasource-property name="ServerName">localhost</xa-datasource-property>
                <xa-datasource-property name="PortNumber">5432</xa-datasource-property>
                <xa-datasource-property name="DatabaseName">geosco</xa-datasource-property>
                <xa-datasource-property name="User">geosco</xa-datasource-property>
                <xa-datasource-property name="Password">de2d45045b493b021bbfa90e4f3848a9</xa-datasource-property>

[eric@localhost bin]$ cat psa-pg_dump-t.sh 
PGPASSWORD=h^Zgcyr\&Q pg_dump -Fc -U vanderveldene -h geosco-app-t.intermax.mp-objects.com geosco> /home/eric/DB_TAP/Postgres/Backup/geosco-t-$(date +%F).dump

pnllogistics3=# create database geosco;
CREATE DATABASE

[eric@localhost bin]$ cat psa-pg_restore-l.sh 
PGPASSWORD=mpopostgres@mpo pg_restore -U mpopostgres -d "$1" "$2" 

[eric@localhost bin]$ psa-pg_restore-l.sh geosco ~/DB_TAP/Postgres/Backup/geosco-t-2015-09-28.dump 
...
WARNING: errors ignored on restore: 735

/ 7	. 

[eric@localhost server]$ cp -a bard geosco
[eric@localhost server]$ cd geosco/
[eric@localhost deploy]$ mv bard-schedule-service.xml geosco-schedule-service.xml 
[eric@localhost deploy]$ vi geosco-schedule-service.xml 
<server>
    <mbean code="org.jboss.varia.scheduler.Scheduler" name=":service=GeoScoInterfaces">
        <attribute name="SchedulableArguments">ejb/GeoScoInterfaceRunnerFacade,all-admin,admin123@MPO</attribute>

$ vi postgres-ds.xml

<datasources>
    <xa-datasource>
        <xa-datasource-property name="DatabaseName">geosco</xa-datasource-property>
		...
    <local-tx-datasource>
                <connection-url>jdbc:postgresql://127.0.0.1:5432/geosco</connection-url>
				...

/ 7	. 

/ maken server config	,
/ we copy pnllogistics server config	, heet Boss v4.0 2 at localhost (6)
Server name: geosco
/ click Open launch configuration	,
Name: geosco
Arguments: -c geosco
JRebel: Enable JRebel agent
Server configuation: geosco
ctrl+s











/ Einde BUILD GEOSCO 

/ DEPLOY DSVCTS 

/ test = mposerv11

/ acceptance is application-a	. 

[vanderveldene@application-a dsvcts]$ pwd
/local/apps/jboss-4.0.5.GA/server/dsvcts
[vanderveldene@application-a dsvcts]$ ls -ltr backup/
drwxrwxr-x+ 5 jboss jboss 4096 Sep 28 12:33 150928-123333
drwxrwxr-x+ 5 jboss jboss 4096 Sep 28 13:36 150928-133641
drwxrwxr-x+ 5 jboss jboss 4096 Sep 28 14:12 150928-141242

/ omdat de 1ste 2 deploy-dsvcts ERR omdat we de JARs niet hadden	,  hebben we er 3	, 
/ we willen zien of de versie is veranderd	,  de nemen dus de oudste, de 1ste	, 
[vanderveldene@application-a dsvcts]$ less backup/150928-123333/conf/application.properties 
build.jar.lib.dir=/home/builder/workspace/SCS-OnDemand/build/tms-dsvcts-19997-2015.01/lib

/ omdat we 2015.03 hebben build, zien we inderdaad dat we een release-deploy hebben gedaan	, geen update	,

/ Ook moeten we als het moet	, de 'Deploy tasks' uitvoeren	, deze vinden we in Jira	, 'Support team dashboard'	, rechtsonder		,
/ Zoek naar 2015.02	, 
/ Maar in dit geval hoeft het niet	,




/ EInde DEPLOY DSVCTS 

/ PCT-743

//////////////////////////
/ Als we een shipment order inplan	, worden er ook seo's created	, 

/ 13	. 

/ we maken sho  met 'cons_test_gse' template	,
SH000002994	, 
3610
Req. Start (After) 			30 Sep 2015 8:00	
Requested Start Before 		30 Sep 2015 18:00	
Req. End (After)			 1 Oct 2015 8:00	
Req. End (Before)			 1 Oct 2015 18:00	
Ship from 					xxx 7
Ship to: 					yyy 13 

/ we create 2 shi's, rm COLLO_HOLD	, Save
/ we zien 4 seo's created	, voor elke sa 1	, 

pnllogistics3=# select*from shipment_order order by system_id desc limit 1;
created_by_systemid            | 26682479
system_entry_date              | 2015-09-29 14:25:27.694

/ we kunnen ook sort desc op created_by_systemid	,

pnllogistics3=# select service_order_id from service_order order by system_id desc limit 5;
 service_order_id  
-------------------
 N0004918
 N0004917
 N0004916
 N0004915
 ...
/ dit zijn de 4 nieuwe seo's	, 

pnllogistics3=# select system_entry_date from service_order order by system_id desc limit 5;
    system_entry_date    
-------------------------
 2015-09-29 14:39:23.747
 2015-09-29 14:39:18.833
 2015-09-29 14:39:15.91
 2015-09-29 14:39:11.575

/ we zien dat elke seo maar 1 sa heeft	, 

/ 13	. 

/ we maken een 2de sho	, met dezelfde dates & addresses	,

/ we zien dat collect, linehaul, delivery_note op in dezelfde seo's terecht komen	, dus deze 3 seo heeft 2 sa's	, 
/ de  delivery komen in aparte seo's 	, 
/ TODO

nllogistics3=# select service_order_id from service_order order by system_id desc limit 5;
 service_order_id 
------------------
 N0004919				/ delivery 2de sho	,
 N0004918				/ delivery 1ste sho	,
 N0004917				/ 2 del notes	, 
 N0004916				/ 2 linehauls	,
 N0004915				/ 2 collects	,
(5 rows)

/ 13	. 

/ we nemen de seo met 2 linehauls	,
/ we click Events tab	, 
/ close 1 J27 event	: set closed on date, click Save (seo)	, 

16184 2015-09-29 15:49:06,867 ERROR [com.mpobjects.oms.service.trigger.TriggerRequestHandlerImpl] (org.springframework.jms.listener.      DefaultMessageListenerContainer#6-1:) In onmessage(ActiveMQObjectMessage {commandId = 3206, responseRequired = false, messageI      d = ID:localhost.localdomain-48072-1443528654022-4:16:1:3:2, originalDestination = null, originalTransactionId = null, produce      rId = ID:localhost.localdomain-48072-1443528654022-4:16:1:3, destination = queue://com.mpobjects.triggerrequest, transactionId       = TX:ID:localhost.localdomain-48072-1443528654022-4:16:85, expiration = 0, timestamp = 1443534546718, arrival = 0, brokerInTi      me = 1443534546718, brokerOutTime = 1443534546803, correlationId = null, replyTo = null, persistent = true, type = null, prior      ity = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.a      ctivemq.util.ByteSequence@1992d314, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 51170, pr      operties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false}): error       when fetching object from queue:No DAO registered for class [com.mpobjects.oms.model.trigger.EventTrigger]
16185 java.lang.RuntimeException: No DAO registered for class [com.mpobjects.oms.model.trigger.EventTrigger]
16186     at com.mpobjects.oms.service.trigger.TriggerDaoManagerImpl.getDao(TriggerDaoManagerImpl.java:42)
16187     at com.mpobjects.oms.service.trigger.TriggerActionExecutionServiceImpl.executeRequest(TriggerActionExecutionServiceImpl.ja      va:33)
16201     at com.mpobjects.oms.service.trigger.TriggerRequestHandlerImpl.onMessage(TriggerRequestHandlerImpl.java:44)

16224 java.lang.RuntimeException: In onmessage(ActiveMQObjectMessage {commandId = 3206, responseRequired = false, messageId = ID:loc      alhost.localdomain-48072-1443528654022-4:16:1:3:2, originalDestination = null, originalTransactionId = null, producerId = ID:l      ocalhost.localdomain-48072-1443528654022-4:16:1:3, destination = queue://com.mpobjects.triggerrequest, transactionId = TX:ID:l      ocalhost.localdomain-48072-1443528654022-4:16:85, expiration = 0, timestamp = 1443534546718, arrival = 0, brokerInTime = 14435      34546718, brokerOutTime = 1443534546803, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, g      roupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.ut      il.ByteSequence@1992d314, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 51170, properties =       null, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false}): error when fetc      hing object from queue:No DAO registered for class [com.mpobjects.oms.model.trigger.EventTrigger]
16225     at com.mpobjects.oms.service.trigger.TriggerRequestHandlerImpl.onMessage(TriggerRequestHandlerImpl.java:49)

16247 Caused by: java.lang.RuntimeException: No DAO registered for class [com.mpobjects.oms.model.trigger.EventTrigger]
16248     at com.mpobjects.oms.service.trigger.TriggerDaoManagerImpl.getDao(TriggerDaoManagerImpl.java:42)
16249     at com.mpobjects.oms.service.trigger.TriggerActionExecutionServiceImpl.executeRequest(TriggerActionExecutionServiceImpl.ja      va:33)
16263     at com.mpobjects.oms.service.trigger.TriggerRequestHandlerImpl.onMessage(TriggerRequestHandlerImpl.java:44)
...
16265 2015-09-29 15:49:07,128 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d holdStatus
16266 2015-09-29 15:49:07,129 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d serviceType
16267 2015-09-29 15:49:07,138 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d planningReasonCode
16268 2015-09-29 15:49:07,140 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d costCurrency
16269 2015-09-29 15:49:07,159 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d executedBy2Party
16270 2015-09-29 15:49:07,161 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d schedule
16271 2015-09-29 15:49:07,191 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d depPortCountry
16272 2015-09-29 15:49:07,193 INFO  [com.mpobjects.core.vo.VOReflectionInvoker] (http-0.0.0.0-8080-7:) No ValueObject found for fiel      d arrPortCountry

 
/ Intermezzo

/ SVN

/ we zien in eclipse bij 'SVN Repository Exploring' de url van de svn server	, 
https://system.mp-objects.com/svn/tms

[eric@localhost apache-activemq-5.10.1]$ svn log -v  https://system.mp-objects.com/svn/tms | less
------------------------------------------------------------------------
r21046 | anil | 2015-09-29 13:11:28 +0200 (Tue, 29 Sep 2015) | 2 lines
Changed paths:
   M /trunk/module/event/src/java/com/mpobjects/event/event/model/dao/EventDAOImpl.java

Removing events form the corresponding service order before deleting.
Issue: PCT-740


/ Einde Intermezzo

/ 7	. 

/ we start de server	,

/ Intermezzo

$ vi oms-service.sb.xml

	<bean id="com.mpobjects.oms.service.trigger.TriggerDaoManager" class="com.mpobjects.oms.service.trigger.TriggerDaoManagerImpl" />

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="com.mpobjects.oms.service.trigger.TriggerDaoManager" />
		<property name="targetMethod" value="addDAO" />
		<property name="arguments">
			<list>
				<ref bean="com.mpobjects.oms.dao.trigger.ServiceOrderTypeTriggerDAO" />
				<ref bean="com.mpobjects.oms.dao.trigger.ShipmentOrderTriggerDAO" />
				<ref bean="com.mpobjects.oms.dao.trigger.EventTriggerDAO" />
				<ref bean="com.mpobjects.oms.dao.trigger.CustomerOrderTriggerDAO" />
				<ref bean="com.mpobjects.oms.dao.trigger.InterfaceMessageTriggerDAO" />
			</list>
		</property>
	</bean>

/ Einde Intermezzo

/s
TriggerDaoManagerImpl.addDAO(BaseDAOInterface<AbstractTrigger>...) line: 28	
this	TriggerDaoManagerImpl  (id=768)	
aDaoList	BaseDAOInterface[5]  (id=858)	
	[0]	$Proxy210  (id=869)	
com.mpobjects.oms.dao.trigger.ServiceOrderTypeTriggerDAOImpl@72188305
	[1]	$Proxy211  (id=870)	
com.mpobjects.oms.dao.trigger.ShipmentOrderTriggerDAOImpl@39d216bb
	[2]	$Proxy212  (id=871)	
com.mpobjects.oms.dao.trigger.EventTriggerDAOImpl@35b87200
	[3]	$Proxy222  (id=872)	
com.mpobjects.oms.dao.trigger.CustomerOrderTriggerDAOImpl@1c880dbe
	[4]	$Proxy213  (id=873)	
com.mpobjects.oms.dao.trigger.InterfaceMessageTriggerDAOImpl@40f04967

		for (BaseDAOInterface<AbstractTrigger> aDao : aDaoList) {

aDao	$Proxy210  (id=772)	
com.mpobjects.oms.dao.trigger.ServiceOrderTypeTriggerDAOImpl@410b8376

			String myTypeName = aDao.getType().getName();
/ aDao.getType()=class com.mpobjects.oms.model.trigger.ServiceOrderTypeTrigger
com.mpobjects.oms.model.trigger.ServiceOrderTypeTrigger

/ Intermezzo

public class ServiceOrderTypeTriggerDAOImpl extends GenericHibernateDAO<ServiceOrderTypeTrigger> implements ServiceOrderTypeTriggerDAO {

public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type>implements HibernateDAOInterface<Type> {

public abstract class BaseHibernateDAO<T> extends HibernateDaoSupport {
	public Class<? extends T> getType() {
		return type;
	}




/ Einde Intermezzo




/ 7	. 


/ we nemen de seo met 2 collects	, 
N0004915				/ 2 collects	,

/ 13	. 

/ Wat  doet de Save button?
/ we zoeken op N0004915	, we vragen dus service-order_edit.jsp , we vallen  in	,
/s
ButtonTag.doStartTag() line: 91	

this	ButtonTag  (id=20095)	
	parent	FormTag  (id=20501)	
	theType	"save" (id=20618)	

		boolean readOnly = getForm().isFormReadOnly();
false
		RequestManager myRequestManager = (RequestManager) getRequest().getAttribute("requestManager");
/ TODO
		String returnUrl = (String) getSession().getAttribute("returnUrl");
null
			} else if (!getType().equals(TYPE_BACK)) {
				myPrint.append("<input type=\"button\"");
				myPrint.append(" name=\"" + getType() + "Btn\"");
				myPrint.append(" id=\"" + getType() + "Btn\"");
				myPrint.append(" value=\"" + getLabel(getType()) + "\"");
				myPrint.append(" onclick=\" " + getForm().getJsFormManager() + ".submit('" + getUrlForType(getType()) + "', " + getDoRedirect() + ", "
						+ getRedirectLevelOffset() + ");\"");

				myPrint.append("/>");

/ we zien in HTML	,
<input type="button" name="saveBtn" id="saveBtn" value="Save" onclick=" theMpoFormFormManager.submit('../oms/service-order_save', false, 0);">

$ vi oms-sitemap.xmap
			<map:action logger="serviceorder" name="serviceOrderSave" src="com.mpobjects.oms.control.serviceorder.action.ServiceOrderSaveAction"/>
			<map:match pattern="service-order_save">
				<map:act type="serviceOrderSave"/>
				<map:act type="debugAction"/>
			</map:match>

/s
ServiceOrderSaveAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 171	

this=com.mpobjects.oms.ratecalc.control.serviceorder.action.ServiceOrderSaveAction@77981708
/ TODO
				Map myMap = act();
/s
ServiceOrderSaveAction(AbstractSaveAction).act() line: 69	
			beforeSave();
->			handleSave();
			afterSave();

/ OVERSLAAN

/ Het gebeurt in afterSave	, dus in handleSave NIETS voor ons nu	,

/s
ServiceOrderSaveAction.handleSave() line: 21	
		super.handleSave();
/s
ServiceOrderSaveAction(ServiceOrderSaveAction).handleSave() line: 88	
			theVO = (ServiceOrderVO) getValueObject();
			int mySystemId = getSystemIdFromRequest();
26848698
			Collection myFetchedData = getFetchedData();

/ this.theFetchedData is er al	, 
/ TODO
/s
ServiceOrderSaveAction(BoundSaveAction).getFetchedData() line: 124	

this	ServiceOrderSaveAction  (id=21114)	
	theFetchedData	ArrayList  (id=21821)	
		elementData	Object[49]  (id=26414)	
			[0]	ServiceOrderVO_$$_javassist_130  (id=21829)	
N0004915/26848698
			[1]	DateSetVO  (id=26416)	
RSAFTER: 2015-09-30 08:00:00.0, RSBEFORE: 2015-09-30 18:00:00.0, REAFTER: 2015-10-01 08:00:00.0, REBEFORE: 2015-10-01 18:00:00.0, PSAFTER: Wed Sep 30 08:00:00 CEST 2015, PSBEFORE: Wed Sep 30 18:00:00 CEST 2015, PEAFTER: Wed Sep 30 10:00:00 CEST 2015, PEBEFORE: Wed Sep 30 11:00:00 CEST 2015, AS: null, AE: Wed Sep 30 15:48:00 CEST 2015, RELEASE:null, PRELEASE:Tue Sep 29 08:00:00 CEST 2015, CLOSE:null
			[2]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[3]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[4]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[5]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[6]	VirtualParty  (id=26507)	
address	"xxx" (id=27515)	
address2	"7" (id=27516)	
name	"constst frm" (id=27553)	
			[7]	VirtualParty  (id=26507)	
			[8]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[9]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[10]	VirtualParty  (id=26509)	
address	"Pieter Zeemanweg" (id=27546)	
address2	"146" (id=27547)	
city	"Dordrecht" (id=27548)	
name	"Depot Dordrecht" (id=27550)	
			[11]	VirtualParty  (id=26509)	
			[12]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[13]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[14]	ServiceOrderVO_$$_javassist_130  (id=21829)	
			[15]	EntityDetailWrapper  (id=26510)	
map	PersistentMap  (id=22592)=	
{SystemId:26682275	IsDeleted:false	Detail Type:WerkelijkeLadingdrager[1]	ValueType:LIST	=Collo, SystemId:26682276	IsDeleted:false	Detail Type:WerkelijkeLadingdrager[2]	ValueType:LIST	=Collo, SystemId:26682273	IsDeleted:false	Detail Type:WerkelijkAantal[1]	ValueType:NUMBER	=, SystemId:26682269	IsDeleted:false	Detail Type:GeplandAantal[1]	ValueType:NUMBER	=, SystemId:26691867	IsDeleted:false	Detail Type:DelCode	ValueType:STRING	=SE1000, SystemId:26682270	IsDeleted:false	Detail Type:GeplandeLadingdrager[1]	ValueType:LIST	=Collo, SystemId:26689672	IsDeleted:false	Detail Type:ColCode	ValueType:STRING	=SE1000, SystemId:26682272	IsDeleted:false	Detail Type:GeplandeLadingdrager[2]	ValueType:LIST	=Collo, SystemId:26682271	IsDeleted:false	Detail Type:GeplandAantal[2]	ValueType:NUMBER	=, SystemId:26682274	IsDeleted:false	Detail Type:WerkelijkAantal[2]	ValueType:NUMBER	=}
			[16]	EntityDetailWrapper  (id=26511)	
/ andere id	, toch contains dezelfde map	,
			[17]	EntityDetailWrapper  (id=26533)	
			[18]	EntityDetailWrapper  (id=26534)	
			[19]	EntityDetailWrapper  (id=26535)	
			[20]	EntityDetailWrapper  (id=26536)	
			[21]	EntityDetailWrapper  (id=26537)	
			[22]	EntityDetailWrapper  (id=26538)	
			[23]	EntityDetailWrapper  (id=26539)	
			[24]	EntityDetailWrapper  (id=26540)	
			[25]	DateSetVO  (id=26541)	
			[26]	DateSetVO  (id=26542)	
			[27]	ServiceOrderVO_$$_javassist_130  (id=21829)	

			[28]	EventVO  (id=26543)	
Event id: [26852172], event type: [C01], status: [OPEN_DEFAULT]

			[29]	EventVO  (id=26686)	
Event id: [26852170], event type: [J27], status: [CLOSED_LATE]
closedOn	Date  (id=28728)	
Wed Sep 30 15:48:00 CEST 2015

			[30]	EventVO  (id=26687)	
Event id: [26852171], event type: [J27], status: [OPEN_DEFAULT]
closedOn	Date  (id=28761)	
Wed Sep 30 10:00:00 CEST 2015														<--------

			[31]	EventVO  (id=26688)	
Event id: [26852183], event type: [J27], status: [CLOSED_NORMAL]
closedOn	Date  (id=28775)	
Wed Sep 30 09:30:00 CEST 2015

			[32]	EventVO  (id=26689)	
Event id: [26852184], event type: [J27], status: [CLOSED_LATE
closedOn	Date  (id=28790)	
Wed Sep 30 16:35:00 CEST 2015

			[33]	EventVO  (id=26690)	
Event id: [26852173], event type: [ePOD], status: [OPEN_DEFAULT]

			[34]	EventVO  (id=26691)	
Event id: [26848698], event type: [], status: [OPEN_DEFAULT]
			[35]	ServiceOrderVO_$$_javassist_130  (id=21829)	


/ De J27 event id=26687, met close date Sep 30 10:00:00 is de event die we hebben (willen ) close 	, we clicked daarna Save	,

			getRequest().setAttribute(TAGLIB_FETCHED_DATA, theFetchedData);
			return theFetchedData;
/t
			Collection myFetchedData = getFetchedData();
/d
			for (Object myElement : myFetchedData) {
				if (myElement instanceof Instruction) {
/ NEE
				if (myElement instanceof FileObject) {
/ NEE

			updateVO(theVO);
/ NIETS
			if (mySystemId == ValueObject.VOLATILE_SYSTEM_ID) {
/ NEE
			} else {
				myEventContext.addFlag(TMSEventContext.FLAG_UPDATE_SERVICE_ENTITY_DETAILS);
				ServiceOrderService serviceOrderService = ServiceOrderUtil.getServiceOrderFacadeLocal();
				ServiceOrderVO myOldVO = serviceOrderService.getServiceOrder(theVO.getSystemId());
/s
					ServiceOrderVO myRet = serviceOrderDAO.getBySystemId(aSystemId);
					return myRet;
/t
				theVO.setSchedule(null);
				theVO.setScheduleXml(myOldVO.getScheduleXml());
				theVO.setScheduleDescription(myOldVO.getScheduleDescription());
				theVO = MpoBeanFactory.getBean(ServiceOrderService.class).updateServiceOrder(theVO, myEventContext, true, true);
/s
ServiceOrderServiceImpl.updateServiceOrder(ServiceOrderVO, TMSEventContext, boolean, boolean) line: 1465	
			boolean isTemplate = aServiceOrder.isTemplate();
false
			if (!isTemplate) {
/ JA
				...
				getTriggerHandler().handleUpdate(getOld(aServiceOrder), aServiceOrder);
/s
					triggerHandler = MpoBeanFactory.getBean(ServiceOrderTriggerHandler.class);
/t
/s
ServiceOrderTriggerHandlerImpl.handleUpdate(ServiceOrderVO, ServiceOrderVO) line: 69	

		List<ServiceOrderTypeTrigger> myList = serviceOrderTypeTriggerDAO.getByServiceOrderType(myNew.getServiceOrderType());
/ myNew.getServiceOrderType()=SystemId:26681858	IsDeleted:false	Type:COLLECT	Description:Afhalen
/s
public class ServiceOrderTypeTriggerDAOImpl extends GenericHibernateDAO<ServiceOrderTypeTrigger> implements ServiceOrderTypeTriggerDAO {
	public List<ServiceOrderTypeTrigger> getByServiceOrderType(ServiceOrderType aServiceOrderType) {
		DetachedCriteria myDetachedCriteria = DetachedCriteria.forClass(ServiceOrderTypeTrigger.class);
		myDetachedCriteria.add(Restrictions.eq("serviceOrderType", aServiceOrderType));
		myDetachedCriteria.add(Restrictions.eq("customCall", false));
		return getHibernateTemplate().findByCriteria(myDetachedCriteria);

/ Intermezzo

$ vi ServiceOrderTypeTrigger.standard.hbm.xml
	<class name="com.mpobjects.oms.model.trigger.ServiceOrderTypeTrigger" table="SO_TYPE_TRIGGER">

pnllogistics3=# select name from so_type_trigger;
         name          
-----------------------
 RELEASE-DELNOTE
 TEST RELEASE DELIVERY
 RELEASE-COLLECT
 COLLECT_RECALC
(4 rows)

/ Einde Intermezzo
/t
ServiceOrderTriggerHandlerImpl.handleUpdate(ServiceOrderVO, ServiceOrderVO) line: 86	

		List<ServiceOrderTypeTrigger> myList = serviceOrderTypeTriggerDAO.getByServiceOrderType(myNew.getServiceOrderType());
myList	ArrayList  (id=24352)	
	elementData	Object[10]  (id=24353)	
		[0]	ServiceOrderTypeTrigger  (id=24354)	
			name	"RELEASE-COLLECT" (id=24690)	
		[1]	ServiceOrderTypeTrigger  (id=24355)	
			name	"COLLECT_RECALC" (id=24701)	

		for (ServiceOrderTypeTrigger mySotTrigger : myList) {
/ mySotTrigger=name	"RELEASE-COLLECT" (id=24690)	
			...
			if (mustExecute) {
/ NEE
		for (ServiceOrderTypeTrigger mySotTrigger : myList) {
/ mySotTrigger=name	"COLLECT_RECALC" (id=24701)	
			...
			if (mustExecute) {
/ NEE
/t
ServiceOrderServiceImpl.updateServiceOrder(ServiceOrderVO, TMSEventContext, boolean, boolean) line: 1543	

				getTriggerHandler().handleUpdate(getOld(aServiceOrder), aServiceOrder);
/d
/ NIETS
				if (propagate) {
					...
					// Fire event
					triggerEventHandler(myOldServiceOrderVO, aServiceOrder, false, aContext);
/s
ServiceOrderServiceImpl.triggerEventHandler(ServiceOrderVO, ServiceOrderVO, boolean, TMSEventContext) line: 1847	
			} else {
				myEvent = new ServiceOrderEvent(anOldVO, aNewVO, ServiceOrderEvent.UPDATED, aContext);
			}
			myEvent.setInitiatedByConsignmentChange(anIsInitiatedByConsignmentChange);
			eventHandlerService.handleEvent(myEvent);
/s
EventHandlerServiceImpl.handleEvent(Event) line: 72	
		String myEventType = anEvent.getEventType();
serviceorder.updated
			listenerList.fireEvent(anEvent);
/s
this	EventHandlerServiceImpl  (id=29554)	
	listenerList	ListenerList  (id=29681)	
		theListenerList	ArrayList  (id=29730)	
			elementData	Object[15]  (id=29732)	
				[0]	DocumentEventListener  (id=29734)	
				[1]	CustomerOrderEventListener  (id=29735)	
				[2]	ShoCostAllocationEventListener  (id=29777)	
				[3]	TMSCarConServiceOrderEventListener  (id=29782)	
				[4]	SupplierInvoiceUpdateEventListener  (id=29783)	
				[5]	StockTransactionEventListener  (id=29812)	
				[6]	$Proxy405  (id=29819)	
com.mpobjects.event.service.DeferredEventServiceImpl@43c960cb
				[7]	EventEventListener  (id=29923)	
				[8]	AllocationEventListener  (id=29952)	
				[9]	CustomerInvoiceUpdateEventListener  (id=29953)	
				[10]	CapableToPromiseEventListener  (id=29965)	
				[11]	PnlLogisticsEventListener  (id=29993)	
				[12]	EmailReportEventListener  (id=30023)	
				[13]	InvoiceServiceOrderEventHandler  (id=30024)	
				[14]	RateCalcEventListener  (id=30033)	
			size	15	
/s
ListenerList.fireEvent(Event<?>) line: 82	

		for (EventListener myListener : theListenerList) {
			myListener.handleEvent(anEvent);
com.mpobjects.event.service.DeferredEventServiceImpl@62f00692
/s
DeferredEventServiceImpl.handleEvent(Event) line: 242	
		if (anEvent.getEventType().equals(ServiceOrderEvent.UPDATED)) {
			handleServiceOrderUpdate((ServiceOrderEvent) anEvent);
/s
DeferredEventServiceImpl.handleServiceOrderUpdate(ServiceOrderEvent) line: 1053	
		ServiceOrderVO myNew = anEvent.getNewVO();
		if (getEventMappingService().shouldPerformMapping(anEvent.getEventType(), anEvent.getOldVO(), myNew)) {
false
/ TODO
		handleContainerUpdate(anEvent);
/s
DeferredEventServiceImpl.handleContainerUpdate(ServiceOrderEvent) line: 977	
			ServiceOrderVO myNew = anEvent.getNewServiceOrderVO();

			Collection<ServiceOrderContainer> myNewList = myNew.getServiceOrderContainerList();
[]
/t
ListenerList.fireEvent(Event<?>) line: 80	
		for (EventListener myListener : theListenerList) {
			myListener.handleEvent(anEvent);
/d
/t
EventHandlerServiceImpl.handleEvent(Event) line: 111	
			listenerList.fireEvent(anEvent);
/d
			broadcastToTopic(anEvent);
/s
EventHandlerServiceImpl.broadcastToTopic(Event<?>) line: 149	
	/**
	 * Broadcast the event to a JMS Topic. A message is created in case of:
	 * <ol>
	 * <li>Event contains an {@link EntityInterface} instance with a non-zero system id
	 * <li>The event type is of format: <em>EventEntity.EventOperation</em>
	 * </ol>
	 *
	 * @param aEvent
	 */
	protected void broadcastToTopic(final Event<?> aEvent) {

this	EventHandlerServiceImpl  (id=26124)	
	jmsTemplate	JmsTemplate  (id=27699)	
	jmsTopicName	"com.mpobjects.eventhandler" (id=28106)	
	listenerList	ListenerList  (id=26125)	
/ de 15 listeners	, see hierboven	,

		final EntityInterface entity;
		if (aEvent.getNewVO() instanceof EntityInterface) {
			entity = (EntityInterface) aEvent.getNewVO();

		jmsTemplate.send(getTopicName(aEvent), new MessageCreator() {
			@Override
			public Message createMessage(Session aSession) throws JMSException {
aSession=Cached JMS Session: ActiveMQSession {id=ID:localhost.localdomain-53357-1443604687351-4:16:1,started=false}
				Message message = aSession.createMessage();
				message.setStringProperty("EventType", aEvent.getEventType());
				message.setStringProperty("EventEntity", eventType[0]);
				message.setStringProperty("EventOperation", eventType[1]);
				message.setIntProperty("SystemId", entity.getSystemId());
				return message;
{SystemId=26848698, EventOperation=updated, EventEntity=serviceorder, EventType=serviceorder.updated}

/ Einde OVERSLAAN

...
/t
ServiceOrderSaveAction(AbstractSaveAction).act() line: 70	
			handleSave();
/d
			afterSave();
/s
ServiceOrderSaveAction(BoundSaveAction).afterSave() line: 66	

		for (SubmitListener myListener : getSubmitListenerList()) {
/ getSubmitListenerList()=[com.mpobjects.event.event.control.ServiceOrderSaveListener@6879b845]
			myListener.postSubmit();
/s
ServiceOrderSaveListener.postSubmit() line: 223	
				// Now save all the events in one go.
				MpoBeanFactory.getBean(EventService.class).save(myUpdateList);

myUpdateList	ArrayList  (id=21578)	
	elementData	Object[10]  (id=22038)	
		[0]	EventVO  (id=21332)	
			serviceAction	ServiceActionVO  (id=22556)	
SH000002994/COLLECT/26846720
			serviceOrder	ServiceOrderVO_$$_javassist_130  (id=21311)	
N0004915/26848698
			serviceOrderContainer	null	
			shipmentItemEvent	true	
			shipmentItemVO	ShipmentItemVO_$$_javassist_137  (id=22633)	
shipmentItem: 0020(systemId:26847031, labelInfo:6247043791106362)			/ WH de scanned shi	, TODO
			systemId	26852171	
			values	PersistentSet  (id=22794)	
[]
	size	1	

/s
EventServiceImpl.save(Collection<EventVO>) line: 808	
		myTracker.processAll();
/s
EventServiceImpl$EventUpdateResultTracker.processAll() line: 168	
			processUpdates();
			fireEventEvents();
/s
EventServiceImpl$EventUpdateResultTracker.fireEventEvents() line: 216	
			for (EventVO myNewEvent : getProcessedEvents()) {
						switch (myAction) {
							case CLOSE:
								myEventEvent = new EventEvent(myOldEvent, myNewEvent, EventEvent.CLOSE_ACTION, new TMSEventContext());
								break;
						}
						eventHandlerService.handleEvent(myEventEvent);
/s
EventHandlerServiceImpl.handleEvent(Event) line: 111	
			listenerList.fireEvent(anEvent);
			broadcastToTopic(anEvent);
/s
EventHandlerServiceImpl.broadcastToTopic(Event<?>) line: 166	
		jmsTemplate.send(getTopicName(aEvent), new MessageCreator() {
aEvent	EventEvent  (id=21330)	
	theEventType	"event.closeaction" (id=21511)	
	theNewVO	EventVO  (id=21332)	
		closedOn	Date  (id=22323)	
Wed Sep 30 12:42:00 CEST 2015
		serviceAction	ServiceActionVO  (id=22556)	
SH000002994/COLLECT/26846720
		serviceOrder	ServiceOrderVO_$$_javassist_130  (id=21311)	
N0004915/26848698
		shipmentItemEvent	true	
		shipmentItemVO	ShipmentItemVO_$$_javassist_137  (id=22633)	
shipmentItem: 0020(systemId:26847031, labelInfo:6247043791106362)			/ WH de scanned shi	, TODO
		systemId	26852171	
		values	PersistentSet  (id=22794)	
[]
	theOldVO	EventVO  (id=21531)	

/s
EventHandlerServiceImpl$1.createMessage(Session) line: 169	
		jmsTemplate.send(getTopicName(aEvent), new MessageCreator() {
			@Override
			public Message createMessage(Session aSession) throws JMSException {
				Message message = aSession.createMessage();
/ aSession=Cached JMS Session: ActiveMQSession {id=ID:localhost.localdomain-44486-1443608836129-4:16:1,started=false}

/t
EventServiceImpl$EventUpdateResultTracker.processAll() line: 169	
			fireEventEvents();
/d
			handleTriggers();
/s
EventServiceImpl$EventUpdateResultTracker.handleTriggers() line: 252	
			for (Entry<EventVO, EventUpdateResult> entry : processedEvents.entrySet()) {
				EventVO myNewEvent = entry.getKey();
				EventUpdateResult myResult = entry.getValue();
				EventProcessAction myAction = myResult.getEventProcessAction();
				if (EventReportingLevel.SERVICE_ACTION == myNewEvent.getReportingLevel()) {
					eventTriggerHandler.handleClose(myNewEvent, myNewEvent.isExpectedEvent(), ObjectUtils.equals(myAction, EventProcessAction.CLOSE));
/s
EventTriggerHandlerImpl.handleClose(EventVO, boolean, boolean) line: 31	
/=
	public void handleClose(EventVO anEvent, boolean expected, boolean onClose) {
anEvent	EventVO  (id=21332)	
Event id: [26852171], event type: [J27], status: [CLOSED_LATE]
expected	true	
onClose	true	
			Collection<EventTrigger> myList = MpoBeanFactory.getBean(EventTriggerDAO.class).getAllForEventType(anEvent.getEventType());
/ anEvent.getEventType()="J27"
/s
				return getHibernateTemplate().findByCriteria(DetachedCriteria.forClass(EventTrigger.class).add(Property.forName("eventType").eq(aType)));


/ de list van TriggerAction's heet dus triggerList	,

myList	ArrayList  (id=31491)	
	elementData	Object[10]  (id=31493)	
		[0]	EventTrigger  (id=31495)	
			eventType	EventType  (id=22456)	
J27
			name	"J27" (id=31719)	
			onClose	Boolean  (id=31029)	
true
			triggerList	PersistentSet  (id=31725)	
				set	HashSet  (id=31738)	
[com.mpobjects.oms.model.trigger.TriggerAction/id:26846036]

			for (EventTrigger myTrigger : myList) {
				if (myTrigger.getOnClose() && expected) {
					checkAndHandleTrigger(anEvent, myTrigger);

/ Intermezzo

/ we zien in de GUI	,
Configuration, Execution	, Triggers	, Event Trigger
/ Filter op J27
On Close: checked 
Actions: generic-status-item-export-action

Configuration, Execution	, Triggers	, Actions
/ open generic-status-item-export-action
Trigger task: EXPORT_CUSTOM_MESSAGE

$ vi EventTrigger.standard.hbm.xml
	<class name="com.mpobjects.oms.model.trigger.EventTrigger" table="EVENT_TRIGGER">
		<set name="triggerList" table="EVENT_TRIGGER_TRIGGER" lazy="true" cascade="save-update">
			<key column="EVENT_TRIGGER_SYSTEMID" not-null="true" />
			<many-to-many class="com.mpobjects.oms.model.trigger.TriggerAction" column="TRIGGER_ACTION_SYSTEMID" />
		</set>

/ de list van TriggerAction's heet dus triggerList	,

pnllogistics3=#  \d  event_trigger_trigger;
     Table "public.event_trigger_trigger"
         Column          |  Type   | Modifiers 
-------------------------+---------+-----------
 event_trigger_systemid  | integer | not null
 trigger_action_systemid | integer | not null
Foreign-key constraints:
    "eventtt_event_trigger" FOREIGN KEY (event_trigger_systemid) REFERENCES event_trigger(system_id)
    "eventtt_trigger_action" FOREIGN KEY (trigger_action_systemid) REFERENCES trigger_action(system_id)

/ Dus  nu begrijpen we dat we in de GUI op een Event Trigger actions zien :
/ In de db	, 

								event_trigger_trigger
				event_trigger_systemid		trigger_action_systemid
			/											\
event_trigger											trigger_action	
name: J27														code: generic-status-item-export-action	

pnllogistics3=# select ta.* from trigger_action ta join event_trigger_trigger ett on ta.system_id=ett.trigger_action_systemid join event_trigger et on et.system_id=ett.event_trigger_systemid where et.name='J27';
-[ RECORD 1 ]---------+--------------------------------------------------------------------------------------------------------------------------------------------------------
system_id             | 26846036
code                  | generic-status-item-export-action
description           | Generic status item export
configuration         | customMessage=generic-status-item;peerType=;purposeCode=GENERIC-STATUS;onceOnEnd=false;onceOnStart=false;onceOnRelease=false;onceForServiceOrder=false;
trigger_task          | EXPORT_CUSTOM_MESSAGE
execution_order       | 1
organization_systemid | 500


pnllogistics3=# select * from event_trigger where name='J27';
-[ RECORD 1 ]-----------+---------
system_id               | 26779556
name                    | J27
on_close                | 1
filter_expression       | 
event_type_systemid     | 26767126
on_unexpected           | 0
organization_systemid   | 500
on_compl_for_serv_order | 0

$ vi Trigger.standard.hbm.xml
	<class name="com.mpobjects.oms.model.trigger.TriggerAction" table="TRIGGER_ACTION">


pnllogistics3=# select*from trigger_action;
-[ RECORD 7 ]---------+--------------------------------------------------------------------------------------------------------------
------------------------------------------
system_id             | 26846036
code                  | generic-status-item-export-action
description           | Generic status item export
configuration         | customMessage=generic-status-item;peerType=;purposeCode=GENERIC-STATUS;onceOnEnd=false;onceOnStart=false;once
OnRelease=false;onceForServiceOrder=false;
trigger_task          | EXPORT_CUSTOM_MESSAGE
execution_order       | 1
organization_systemid | 500


/ Einde Intermezzo


/ we zijn nog in	,
EventTriggerHandlerImpl.checkAndHandleTrigger(EventVO, EventTrigger) line: 61	
			for (EventTrigger myTrigger : myList) {
				if (myTrigger.getOnClose() && expected) {
					checkAndHandleTrigger(anEvent, myTrigger);
/s
EventTriggerHandlerImpl.checkAndHandleTrigger(EventVO, EventTrigger) line: 61	
anEvent	EventVO  (id=21332)	
J27
myTrigger	EventTrigger  (id=31495)	
	triggerList / van actions	,

		if (checkTrigger(myTrigger, anEvent)) {
/ JA
/ want	,
/s
EventTriggerHandlerImpl.checkTrigger(EventTrigger, EventVO) line: 78	
		Rule myRule = aTrigger.getFilterExpressionRule();
		if (myRule == null) {
			return true;
/t
			TriggerExecutionRequest<EventTrigger> myRequest = new TriggerExecutionRequest<EventTrigger>(myTrigger);
			myRequest.addObject(TriggerConstants.EVENT_SYSTEM_ID, anEvent.getSystemId());
/s
				objectMap.put(aName, anObject);
/t
			if (anEvent.getServiceOrderVO() != null) {
				myRequest.addObject(TriggerConstants.SERVICE_ORDER_SYSTEM_ID, anEvent.getServiceOrderVO().getSystemId());

			if (anEvent.getServiceAction() != null && anEvent.getServiceAction().getShipmentOrderVO() != null) {
				myRequest.addObject(TriggerConstants.SHIPMENT_ORDER_SYSTEM_ID, anEvent.getServiceAction().getShipmentOrderVO().getSystemId());
				myRequest.addObject(TriggerConstants.SHIPMENT_ORDER_ID, anEvent.getServiceAction().getShipmentOrderVO().getShipmentOrderId());
			}
myRequest	TriggerExecutionRequest  (id=31906)	
	objectMap	HashMap  (id=31920)	
{eventSystemId=26852171, shipmentOrderId=SH000002994, serviceOrderSystemId=26848698, shipmentOrderSystemId=26845934}h
	resource	null	
	triggerSystemId	26779556	
	type	"com.mpobjects.oms.model.trigger.EventTrigger" (id=31921)	

			getTriggerRequestProducer().produce(myRequest);
/ getTriggerRequestProducer()=Spring proxy naar com.mpobjects.oms.service.trigger.TriggerRequestProducerImpl@53eb65c6
/s
TriggerRequestProducerImpl.produce(TriggerExecutionRequest<?>) line: 32	
		transactionHelper.executeAfterCommit(new Runnable() {

			@Override
			public void run() {
				queueRequest(aRequest);































/ Einde PCT-743

/ DEBUG PCT-743

/ 7	. 

/ we hebben b's set in 	,
TriggerRequestHandlerImpl.onMessage(Message) line: 44	
			TriggerExecutionRequest<?> myRequest = (TriggerExecutionRequest<?>) ((ObjectMessage) aMessage).getObject();
Request	TriggerExecutionRequest  (id=24407)	
	type	"com.mpobjects.oms.model.trigger.EventTrigger" (id=24498)	

			triggerActionExecutionService.executeRequest(myRequest);
/s
TriggerActionExecutionServiceImpl.executeRequest(TriggerExecutionRequest<?>) line: 33	
		AbstractTrigger myTrigger = triggerDaoManager.getDao(aRequest.getType()).getBySystemId(aRequest.getTriggerSystemId());
Request	TriggerExecutionRequest  (id=24407)	
	type	"com.mpobjects.oms.model.trigger.EventTrigger" (id=24498)	
/ WH moet deze string EventTriggerDAO of zoiets zijn	,



/ 7	. 

$ vi  shipment-order_edit.js
							<td><a href="#" onclick="javascript:gotoServiceOrder('<%=myConsignmentVO.getServiceOrderVO().getSystemId()%>');return false"><%=myConsignmentVO.getConsignmentNr()%></a></td>

$ vi class.shipment-order_edit.js
function gotoServiceOrder(aSystemId){
	var myUrl = "../oms/service-order_edit?base_sessionLevelOffset=1&systemId=" + aSystemId;

$ vi oms-sitemap.xmap
			<map:action logger="serviceorder" name="serviceOrderEdit" src="com.mpobjects.oms.control.serviceorder.action.ServiceOrderEditAction"/>
			<map:match pattern="service-order_edit">
				<map:act type="serviceOrderEdit">
				<map:select type="session-attribute">
					<map:parameter name="attribute-name" value="builder"/>
					<map:when test="jsp">
						<map:read mime-type="text/html" type="jsp" src="jsp/service-order_edit.jsp"/>
					</map:when>
					<map:otherwise>
						<map:redirect-to uri="../wicket?module=oms&amp;wicketpage=serviceorder.edit.ServiceOrderEditSelectionPage"/>
					</map:otherwise>			
				</map:select>
				</map:act>
			</map:match>



/ Einde DEBUG PCT-743

/ we save de b's	,

QueryViewPanel	
AutomaticPathAssignmentService [line: 45] - assignPath(ShipmentOrderVO)	
BatchCreatePage [line: 48] - createPageComponents()	
BatchCreatePage [line: 93] - execute(Set<? extends Serializable>)	
BatchCreatePage [line: 129] - createBatch(Set<? extends Serializable>)	
BatchCreatePage [line: 142] - createBatch(Set<? extends Serializable>)	
BatchProcessPage [line: 87] - BatchProcessPage(Page)	
BatchProcessPage [line: 133] - isEnabled()	
BatchProcessPage [line: 141] - onClick()	
BatchProcessPage [line: 167] - isEnabled()	
BatchProcessPage [line: 172] - onClick(AjaxRequestTarget)	
BatchProcessPage [line: 195] - isEnabled()	
BatchProcessPage [line: 211] - isEnabled()	
BatchProcessPage [line: 223] - onSubmit(AjaxRequestTarget, Form<?>)	
BatchProcessPage [line: 301] - prepareXml()	
CalculationServiceImpl [line: 499] - recalculate(LogisticsOrderVO, AgreementType, TMSEventContext)	
CalculationServiceImpl [line: 563] - recalculate(LogisticsOrderVO, AgreementType, TMSEventContext)	
ClieopServiceImpl [line: 44] - createCliepBatchDocument(ClieopBatch)	
CompleteShipmentOrderDuplicator [line: 44] - duplicate(ShipmentOrderVO, CustomDuplicateAction)	
EntityDetailServiceImpl [line: 131] - initialize(EntityDetailSupport)	
EventHandlerServiceImpl [line: 72] - handleEvent(Event)	
EventServiceImpl [line: 336] - compare(EventVO, EventVO)	
EventServiceImpl [line: 959] - checkAndPerformCloseAction(EventUpdateResultTracker)	
EventServiceImpl [line: 1003] - checkExecutionExpression(Rule, EventVO, ServiceOrderVO)	
FieldTag [line: 227] - checkForPropertyOverwrites(String, String)	
FieldTag [line: 1215] - handleOverridable()	
FilterServiceImpl [line: 23] - getDefaultFilter(String, Resource)	
GroupActionPanel [line: 31] - isEnabled()	
GroupActionPanel [line: 36] - onClick(AjaxRequestTarget)	
IfFunction [line: 31] - calculate(Collection<InputParameterVO>, RateCalculationVO)	
InputParameterVO [line: 71] - calculate(RateCalculationVO)	
InputParameterVO [line: 110] - calculate(RateCalculationVO)	
PartyTypePage [line: 29] - createPage()	
PathAssignmentGuardedService [line: 47] - run()	
PathAssignmentPickManualService [line: 19] - assignPath(ShipmentOrderVO)	
PathServiceImpl [line: 121] - getPathsFor(ShipmentOrderVO)	
PathTemplateDAOImpl [line: 97] - getPathTemplateListOrdered()	
PnlLogisticsShipmentOrderServiceImpl [line: 20] - PnlLogisticsShipmentOrderServiceImpl	
QueryBuilder [line: 53] - buildSelectQuery(Session, QueryDefinition, QueryState, boolean)	
QueryStateParser [line: 50] - toQueryState(Filter, QueryDefinition)	
QueryViewPanel [line: 104] - QueryViewPanel(String, IModel<QueryDefinition>, List<RowAction>, List<GroupAction>, Set<Serializable>)	
QueryViewPanel [line: 265] - populateItem(ListItem<QueryColumn<?>>)	
QueryViewPanel [line: 272] - check(AjaxRequestTarget)	
QueryViewPanel [line: 282] - checkAll(AjaxRequestTarget)	
QueryViewPanel [line: 288] - checkNone(AjaxRequestTarget)	
QueryViewPanel [line: 324] - uncheck(AjaxRequestTarget)	
QueryViewPanel [line: 361] - createComponents()	
QueryViewPanel [line: 577] - populateItem(ListItem<List<Object>>)	
QueryViewPanel [line: 581] - populateItem(ListItem<Object>)	
QueryViewPanel [line: 597] - setObject(Boolean)	
QueryViewPanel [line: 604] - populateItem(ListItem<Object>)	
QueryViewPanel [line: 610] - isEnabled()	
QueryViewPanel [line: 615] - isVisible()	
QueryViewPanel [line: 620] - onPanelUpdate(AjaxRequestTarget)	
QueryViewPanel [line: 656] - populateItem(ListItem<List<Object>>)	
QueryViewPanel [line: 726] - loadEntriesFromDatabase(int, int)	
RateCalcEventListener [line: 66] - handleEvent(Event)	
RateCalcEventListener [line: 86] - recalcShipOrderPrice(Event)	
RateCalculationVO [line: 765] - runFor(List<RateAgreementVO>)	
RateCalculationVO [line: 850] - runFor(List<RateAgreementVO>)	
RateCalculationVO [line: 1107] - runFor(RateAgreementVO, RateCalculationAlternative)	
ShipmentOrderCalculationServiceImpl [line: 338] - updateShipmentOrder(ShipmentOrderVO, AlternativeResultSet, List<String>)	
ShipmentOrderCalculationServiceImpl [line: 1150] - setPropertyResults(Collection<Entry<CostComponentSpecificationVO, List<RateResult>>>, ShipmentOrderVO, List<String>)	
ShipmentOrderCalculationServiceImpl [line: 1181] - setPropertyResults(Collection<Entry<CostComponentSpecificationVO, List<RateResult>>>, ShipmentOrderVO, List<String>)	
ShipmentOrderCreateReturnAction [line: 47] - act()	
ShipmentOrderSaveAction [line: 61] - handleSave()	
ShipmentOrderSaveAction [line: 63] - handleSave()	
ShipmentOrderSaveAction [line: 77] - handleSave()	
ShipmentOrderSaveAction [line: 106] - handleSave()	
ShipmentOrderServiceImpl [line: 724] - createReturnShipmentOrder(ShipmentOrderVO)	
ShipmentOrderServiceImpl [line: 727] - createReturnShipmentOrder(ShipmentOrderVO)	
ShipmentOrderServiceImpl [line: 825] - createShipmentOrder(ParsedShipmentOrder)	
ShipmentOrderServiceImpl [line: 833] - createShipmentOrder(ParsedShipmentOrder)	
ShipmentOrderServiceImpl [line: 874] - createShipmentOrder(ShipmentOrderVO, TMSEventContext)	
ShipmentOrderServiceImpl [line: 1298] - recalculateShipmentOrder(ShipmentOrderVO)	
ShipmentOrderServiceImpl [line: 1966] - updateShipmentOrder(ParsedShipmentOrder, TMSEventContext, boolean)	



/ Einde DEBUG PCT-713

/ DSVROAD-665 

/ AWK

/ we hebben uit de log van application-a: dsvcts 	, bij deployment , missing , replace jars	,
$ vi deploy-jars-dsvcts.txt
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)    MUST_BE_REMOVED : activeio-core-3.1.2.jar
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)            MISSING : activeio-core-3.1.4.jar
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)            MISSING : activemq-broker-5.10.2.jar
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)            MISSING : activemq-client-5.10.2.jar
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)    MUST_BE_REMOVED : activemq-core-5.3.0.jar
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)            MISSING : activemq-kahadb-store-5.10.2.jar
2015-09-28 12:34:18,955 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)            MISSING : activemq-openwire-legacy-5.10.2.jar
2015-09-28 12:34:18,956 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)    MUST_BE_REMOVED : activemq-pool-5.3.0.jar
2015-09-28 12:34:18,956 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)            MISSING : activemq-protobuf-1.1.jar
2015-09-28 12:34:18,956 ERROR [com.mpobjects.libcheck.LibCheckService] (main:)    MUST_BE_REMOVED : activemq-ra-5.3.0.jar

/ Lees	,
http://stackoverflow.com/questions/5114586/using-awk-to-count-no-of-records

/ we gaan 2 commands maken	, een rm cmd en een scp command	,

$ echo $(awk '/MISSING/{print $8}' deploy-jars-dsvcts.txt )
activeio-core-3.1.4.jar activemq-broker-5.10.2.jar activemq-client-5.10.2.jar activemq-kahadb-store-5.10.2.jar activemq-openwire-legacy-5.10.2.jar activemq-protobuf-1.1.jar activemq-spring-5.10.2.jar aspectjweaver-1.7.4.jar bcprov-jdk15on-1.52.jar commons-csv-1.1.jar commons-pool-1.5.7.jar ehcache-2.10.0.jar hawtbuf-1.10.jar jackson-annotations-2.6.0.jar jackson-core-2.6.0.jar jackson-databind-2.6.0.jar postgresql-9.4-1200.jdbc4.jar quartz-1.8.6.jar spring-aop-3.2.14.RELEASE.jar spring-aspects-3.2.14.RELEASE.jar spring-beans-3.2.14.RELEASE.jar spring-context-3.2.14.RELEASE.jar spring-context-support-3.2.14.RELEASE.jar spring-core-3.2.14.RELEASE.jar spring-expression-3.2.14.RELEASE.jar spring-jdbc-3.2.14.RELEASE.jar spring-jms-3.2.14.RELEASE.jar spring-orm-3.2.14.RELEASE.jar spring-security-config-3.2.8.RELEASE.jar spring-security-core-3.2.8.RELEASE.jar spring-security-saml2-core-1.0.1.RELEASE.jar spring-security-web-3.2.8.RELEASE.jar spring-test-3.2.14.RELEASE.jar spring-tx-3.2.14.RELEASE.jar spring-web-3.2.14.RELEASE.jar wiquery-1.2.3.2-20150604.122120-1.jar

[eric@localhost LOGS]$ echo $(awk '/MUST_BE_REMOVED/{print $8}' deploy-jars-dsvcts.txt )
activeio-core-3.1.2.jar activemq-core-5.3.0.jar activemq-pool-5.3.0.jar activemq-ra-5.3.0.jar aspectjweaver-1.7.2.jar bcprov-jdk16-1.46.jar commons-pool.jar ehcache-1.5.0.jar postgresql-9.2-1003.jdbc4.jar quartz-1.6.0.jar spring-agent.jar spring-aop-3.2.7.jar spring-aspects-3.2.7.jar spring-beans-3.2.7.jar spring-context-3.2.7.jar spring-context-support-3.2.7.jar spring-core-3.2.7.jar spring-expression-3.2.7.jar spring-framework-bom-3.2.7.jar spring-instrument-3.2.7.jar spring-instrument-tomcat-3.2.7.jar spring-jdbc-3.2.7.jar spring-jms-3.2.7.jar spring-orm-3.2.7.jar spring-oxm-3.2.7.jar spring-security-config-3.2.5.RELEASE.jar spring-security-core-3.2.5.RELEASE.jar spring-security-saml2-core-1.0.0.RELEASE.jar spring-security-web-3.2.5.RELEASE.jar spring-test-3.2.7.jar spring-tx-3.2.7.jar spring-web-3.2.7.jar spring-webmvc-3.2.7.jar spring-webmvc-portlet-3.2.7.jar wiquery-1.2.3.jar

/ Als we willen rm files of scp vanaf de laptop, dan hoeven we niet als jboss of zoiets	, we kunnen gewoon als vanderveldene, h^Zgcyr&Q	, 

/ op application-a.intermax.mp-objects.com, in /local/apps/jboss-4.0.5.GA/server/dsvcts/lib	,

[vanderveldene@application-a lib]$  rm activeio-core-3.1.2.jar activemq-core-5.3.0.jar activemq-pool-5.3.0.jar activemq-ra-5.3.0.jar aspectjweaver-1.7.2.jar bcprov-jdk16-1.46.jar commons-pool.jar ehcache-1.5.0.jar postgresql-9.2-1003.jdbc4.jar quartz-1.6.0.jar spring-agent.jar spring-aop-3.2.7.jar spring-aspects-3.2.7.jar spring-beans-3.2.7.jar spring-context-3.2.7.jar spring-context-support-3.2.7.jar spring-core-3.2.7.jar spring-expression-3.2.7.jar spring-framework-bom-3.2.7.jar spring-instrument-3.2.7.jar spring-instrument-tomcat-3.2.7.jar spring-jdbc-3.2.7.jar spring-jms-3.2.7.jar spring-orm-3.2.7.jar spring-oxm-3.2.7.jar spring-security-config-3.2.5.RELEASE.jar spring-security-core-3.2.5.RELEASE.jar spring-security-saml2-core-1.0.0.RELEASE.jar spring-security-web-3.2.5.RELEASE.jar spring-test-3.2.7.jar spring-tx-3.2.7.jar spring-web-3.2.7.jar spring-webmvc-3.2.7.jar spring-webmvc-portlet-3.2.7.jar wiquery-1.2.3.jar

/ op laptop	, in /home/eric/Devel/Java/JBoss/jboss-4.0.5.GA/server/pnllogistics/lib	, 

$ scp activeio-core-3.1.4.jar activemq-broker-5.10.2.jar activemq-client-5.10.2.jar activemq-kahadb-store-5.10.2.jar activemq-openwire-legacy-5.10.2.jar activemq-protobuf-1.1.jar activemq-spring-5.10.2.jar aspectjweaver-1.7.4.jar bcprov-jdk15on-1.52.jar commons-csv-1.1.jar commons-pool-1.5.7.jar ehcache-2.10.0.jar hawtbuf-1.10.jar jackson-annotations-2.6.0.jar jackson-core-2.6.0.jar jackson-databind-2.6.0.jar postgresql-9.4-1200.jdbc4.jar quartz-1.8.6.jar spring-aop-3.2.14.RELEASE.jar spring-aspects-3.2.14.RELEASE.jar spring-beans-3.2.14.RELEASE.jar spring-context-3.2.14.RELEASE.jar spring-context-support-3.2.14.RELEASE.jar spring-core-3.2.14.RELEASE.jar spring-expression-3.2.14.RELEASE.jar spring-jdbc-3.2.14.RELEASE.jar spring-jms-3.2.14.RELEASE.jar spring-orm-3.2.14.RELEASE.jar spring-security-config-3.2.8.RELEASE.jar spring-security-core-3.2.8.RELEASE.jar spring-security-saml2-core-1.0.1.RELEASE.jar spring-security-web-3.2.8.RELEASE.jar spring-test-3.2.14.RELEASE.jar spring-tx-3.2.14.RELEASE.jar spring-web-3.2.14.RELEASE.jar wiquery-1.2.3.2-20150604.122120-1.jar vanderveldene@application-a.intermax.mp-objects.com:/local/apps/jboss-4.0.5.GA/server/dsvcts/lib 


/ Maar om te deploy moeten we als jboss	,
Table MHC_DATA_EXPORT_REPORT_VIEW already exists

/ op application-a.intermax.mp-objects.com	, 
$ vi deploy/firebird-ds.xml
     <connection-url>jdbc:firebirdsql://database//local/apps/firebird/dsvcts.fdb?defaultResultSetHoldable=true</connection-url>
     <user-name>SYSDBA</user-name>
     <password>+qjweLrf</password>

/ op acceptance is de db op een aparte machine	, op production niet	,

$ cat dsvcts-db-a.sh
[eric@localhost bin]$ isql-fb -u sysdba -p +qjweLrf database-a.intermax.mp-objects.com:/local/apps/firebird/dsvcts.fdb


SQL> show views;
       MHC_DATA_EXPORT_REPORT_VIEW            PRICE_TYPE                     

SQL> drop view MHC_DATA_EXPORT_REPORT_VIEW;

SQL> select status from mpo_scs_patch where name like 'patch-0004-mhc-data-export-report-view.sql';

STATUS                           
================================ 
FAILED    

SQL> update mpo_scs_patch set status='NOT_APPLIED' where name like 'patch-0004-mhc-data-export-report-view.sql';


/ Einde DSVROAD-665 

/ PCT-718

/ create sho, save, add shipment items , save shi's	, save sho	, 
/ Illegal Argument Exception
java.lang.IllegalArgumentException: No enum const class 
com.mpobjects.oms.model.serviceactiontemplate.ConsolidationSearchMode.

/ save sho	,
java.lang.IllegalStateException: no data found for continuation id1443084345350 at 
com.mpobjects.control.action.BoundSaveAction.getForm(BoundSaveAction.java:174) at 
com.mpobjects.control.action.BoundSaveAction.validate(BoundSaveAction.java:218) at 
com.mpobjects.oms.control.shipmentorder.action.AbstractShipmentSaveAction.validate(AbstractShipmentSaveAction.java:46) at 
com.mpobjects.control.action.AbstractSaveAction.act(AbstractSaveAction.java:64) at 
com.mpobjects.control.action.AbstractAction.act(AbstractAction.java:171) at 
org.apache.cocoon.components.treeprocessor.sitemap.ActTypeNode.invoke(ActTypeNode.java:125) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47) at 
org.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177) at 
org.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253) at 
org.apache.cocoon.components.treeprocessor.sitemap.MountNode.invoke(MountNode.java:118) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47) at 
org.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177) at 
org.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253) at 
org.apache.cocoon.components.treeprocessor.sitemap.MountNode.invoke(MountNode.java:118) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177) at 
org.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253) at 
org.apache.cocoon.Cocoon.process(Cocoon.java:699) at 
org.apache.cocoon.servlet.CocoonServlet.service(CocoonServlet.java:1154) at 
javax.servlet.http.HttpServlet.service(HttpServlet.java:810) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
com.mpobjects.control.filter.FirstLoginFilter.doFilter(FirstLoginFilter.java:76) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) at 
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118) at 
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:154) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:199) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:110) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
com.mpobjects.auth.springsec.RunAsLogoutFilter.doFilter(RunAsLogoutFilter.java:41) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192) at 
org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160) at 
org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:343) at 
org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:260) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:111) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230) at 
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213) at 
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178) at 
org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175) at 
org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74) at 
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126) at 
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105) at 
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107) at 
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148) at 
org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199) at 
org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282) at 
org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767) at 
org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697) at 
org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889) at 
org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684) at 
java.lang.Thread.run(Thread.java:701)

/ FIX PCT-718

Found error string in the service_action_template table (in consolidation_search_mode column).

/ Einde FIX PCT-718

/ 7	. 

Configuration, planning, service action templates
/ open een sat	, 
/ we zien: Consolidation Search Mode: BACKWARD
/ maar in de db zien we NULL	,

pnllogistics3=#  select service_action_template_id,consolidation_search_mode from service_action_template order by system_id desc;
-[ RECORD 23 ]-------------+--------------------------------
service_action_template_id | SAT_LINEHAUL
consolidation_search_mode  | NULL




/ Einde PCT-718

/ PCT-ZELF

/ locaal	, 
/ op test is het OK	,

/ als we een shipment order id geven , (local) is het OK	, maar

/ we maken een sho	, maar geven zelf geen nieuwe shipment_order_id	, dan	,

org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "shipment_order_org_uk" Detail: Key (shipment_order_id, organization_systemid)=(SH000002975, 500) already exists. at 
org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2270) at 
org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1998) at 
org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:421) at 
org.postgresql.jdbc2.AbstractJdbc2Statement.executeBatch(AbstractJdbc2Statement.java:2929) at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at 
java.lang.reflect.Method.invoke(Method.java:606) at 
org.postgresql.ds.jdbc23.AbstractJdbc23PooledConnection$StatementHandler.invoke(AbstractJdbc23PooledConnection.java:453) at 
com.sun.proxy.$Proxy511.executeBatch(Unknown Source) at 
org.jboss.resource.adapter.jdbc.WrappedStatement.executeBatch(WrappedStatement.java:519) at 
org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70) at 
org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268) at 
org.hibernate.jdbc.AbstractBatcher.prepareStatement(AbstractBatcher.java:114) at 
org.hibernate.jdbc.AbstractBatcher.prepareStatement(AbstractBatcher.java:109) at 
org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:244) at 
org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2412) at 
org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2875) at 
org.hibernate.action.EntityInsertAction.execute(EntityInsertAction.java:79) at 
org.hibernate.engine.ActionQueue.execute(ActionQueue.java:273) at 
org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:265) at 
org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184) at 
org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321) at 
org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51) at 
org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216) at 
org.springframework.orm.hibernate3.SpringSessionSynchronization.beforeCommit(SpringSessionSynchronization.java:145) at 
org.springframework.transaction.support.TransactionSynchronizationUtils.triggerBeforeCommit(TransactionSynchronizationUtils.java:95) at 
org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerBeforeCommit(AbstractPlatformTransactionManager.java:925) at 
org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:738) at 
org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:724) at 
org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:475) at 
org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:270) at 
org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94) at 
org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) at 
org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204) at 
com.sun.proxy.$Proxy241.createShipmentOrder(Unknown Source) at 
com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderSaveAction.handleSave(ShipmentOrderSaveAction.java:91) at 
com.mpobjects.oms.ratecalc.control.shipmentorder.action.ShipmentOrderSaveAction.handleSave(ShipmentOrderSaveAction.java:19) at 
com.mpobjects.control.action.AbstractSaveAction.act(AbstractSaveAction.java:69) at 
com.mpobjects.control.action.AbstractAction.act(AbstractAction.java:171) at 
org.apache.cocoon.components.treeprocessor.sitemap.ActTypeNode.invoke(ActTypeNode.java:125) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47) at 
org.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177) at 
org.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253) at 
org.apache.cocoon.components.treeprocessor.sitemap.MountNode.invoke(MountNode.java:118) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47) at 
org.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177) at 
org.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253) at 
org.apache.cocoon.components.treeprocessor.sitemap.MountNode.invoke(MountNode.java:118) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143) at 
org.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69) at 
org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235) at 
org.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177) at 
org.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253) at 
org.apache.cocoon.Cocoon.process(Cocoon.java:699) at 
org.apache.cocoon.servlet.CocoonServlet.service(CocoonServlet.java:1154) at 
javax.servlet.http.HttpServlet.service(HttpServlet.java:810) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
com.mpobjects.control.filter.FirstLoginFilter.doFilter(FirstLoginFilter.java:76) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) at 
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118) at 
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:154) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:199) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:110) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
com.mpobjects.auth.springsec.RunAsLogoutFilter.doFilter(RunAsLogoutFilter.java:41) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87) at 
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at 
org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192) at 
org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160) at 
org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:343) at 
org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:260) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:111) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230) at 
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96) at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202) at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173) at 
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213) at 
org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:178) at 
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java) at 
org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175) at 
org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74) at 
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126) at 
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105) at 
org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156) at 
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107) at 
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148) at 
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869) at 
org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664) at 
org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527) at 
org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112) at 
java.lang.Thread.run(Thread.java:745)

/ Einde PCT-ZELF

/ MHC-150

/ Bij deployment zien we,	
2015-09-24 10:56:51,064 ERROR [com.mpobjects.dbpatch.DataBasePatcher] (main:) Problem while executing SQL statement in patch [dsvcts/patch-0004-mhc-data-export-report-view.sql]:
2015-09-24 10:56:51,065 ERROR [com.mpobjects.dbpatch.DataBasePatcher] (main:) -- Create trigger for SHIPMENT_ORDER_COST_PART
create view MHC_DATA_EXPORT_REPORT_VIEW AS
with cost_parts as (
...
FREIGHT_cost_ACTUAL.code = 'CAF' and cocp_LINEHAUL_FREIGHT_cost_ACTUAL.status = 'ACTUAL'
2015-09-24 10:56:51,065 ERROR [com.mpobjects.dbpatch.DataBasePatcher] (main:) org.firebirdsql.jdbc.FBSQLException: GDS Exception. 335544
351. unsuccessful metadata update
Table MHC_DATA_EXPORT_REPORT_VIEW already exists

/ op mposerv11	,
$ vi deploy/firebird-ds.xml
       <connection-url>jdbc:firebirdsql://192.168.1.8//local/apps/firebird/dsvcts.fdb?no_result_set_tracking&amp;defaultResultSetHoldable=true</connection-url>
     <driver-class>org.firebirdsql.jdbc.FBDriver</driver-class>
     <user-name>SYSDBA</user-name>
     <password>masterkey</password>

$ dsvcts-db-t.sh
/ =
isql-fb -u sysdba -p masterkey "mposerv8:/local/apps/firebird/dsvcts.fdb" "$@"

SQL> show views;
       MHC_DATA_EXPORT_REPORT_VIEW            PRICE_TYPE                     

SQL> drop view MHC_DATA_EXPORT_REPORT_VIEW;

SQL> select status from mpo_scs_patch where name like 'patch-0004-mhc-data-export-report-view.sql';

STATUS                           
================================ 
FAILED    

SQL> update mpo_scs_patch set status='NOT_APPLIED' where name like 'patch-0004-mhc-data-export-report-view.sql';




/ Einde MHC-150

/ RM BREAKPOINTS

/ we hadden b's , ook voor events	, 

/ BREAKPOINTS EVENTS CLOSING EVENTS

AbstractAction [line: 137] - act(Redirector, SourceResolver, Map, String, Parameters)	
AbstractAction [line: 264] - act(Request)	
AbstractSaveAction [line: 69] - act()	
AbstractSaveAction [line: 70] - act()	
AbstractShipmentOrderViewPanel [line: 40] - getObject()	
AdvancedPathDeterminationServiceImpl [line: 271] - determinePathShipmentOrder(ShipmentOrderVO, List<PathTemplateVO>, DateTime, DateTime)	
AdvancedPathDeterminationServiceImpl [line: 789] - evaluateServiceActionTemplate(int, DateTime, DateTime)	
AutomaticPathAssignmentService [line: 45] - assignPath(ShipmentOrderVO)	
ButtonTag [line: 91] - doStartTag()	
EventHandlerServiceImpl [line: 169] - createMessage(Session)	
EventServiceImpl [line: 753] - save(Collection<EventVO>)	
EventServiceImpl$EventUpdateResultTracker [line: 168] - processAll()	
EventServiceImpl$EventUpdateResultTracker [line: 169] - processAll()	
EventTriggerHandlerImpl [line: 31] - handleClose(EventVO, boolean, boolean)	
EventTriggerHandlerImpl [line: 48] - handleCloseComplete(EventVO, boolean, boolean)	
EventTriggerHandlerImpl [line: 61] - checkAndHandleTrigger(EventVO, EventTrigger)	
LanguageManagerStringResourceLoader [line: 31] - loadStringResource(Class<?>, String, Locale, String)	
LanguageManagerStringResourceLoader [line: 46] - loadStringResource(Component, String)	
ListAction [line: 58] - act()	
PathServiceImpl [line: 121] - getPathsFor(ShipmentOrderVO)	
PathServiceImpl [line: 312] - getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int)	
PathServiceImpl [line: 338] - getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int)	
ServiceActionBuilder [line: 34] - ServiceActionBuilder(ShipmentOrderVO)	
ServiceActionTemplateServiceImpl [line: 52] - resolveShipmentOrderParty(String, ShipmentOrderVO)	
ServiceOrderEditAction [line: 48] - act()	
ServiceOrderSaveListener [line: 45] - postSubmit()	
ShipmentOrderListAction [line: 16] - act()	
ShipmentOrderSaveAction [line: 61] - handleSave()	
ShipmentOrderSaveAction [line: 106] - handleSave()	
ShipmentOrderVO [line: 1230] - getPartyMasterDataByGroup()	
ShipmentOrderVO [line: 1238] - getPartyMasterDataByGroup()	
ShoDetailViewPanel [line: 60] - init()	
ShoDetailViewPanel [line: 105] - addRequestedDate(String)	
ShoDetailViewPanel [line: 110] - getObject()	
TriggerActionExecutionServiceImpl [line: 33] - executeRequest(TriggerExecutionRequest<?>)	
TriggerDaoManagerImpl [line: 28] - addDAO(BaseDAOInterface<AbstractTrigger>...)	
TriggerDaoManagerImpl [line: 37] - getDao(String)	
TriggerRequestHandlerImpl [line: 38] - onMessage(Message)	
TriggerRequestProducerImpl [line: 32] - produce(TriggerExecutionRequest<?>)	
TriggerRequestProducerImpl [line: 36] - run()	
TriggerRequestProducerImpl [line: 51] - queueRequest(TriggerExecutionRequest<?>)	
UnitListViewPanel [line: 46] - init()	



/ Einde RM BREAKPOINTS


/ DEBUG INPLAN SHIPMENTORDER

SH000002993

/b's
ShipmentOrderSaveAction [line: 77] - handleSave()	
AutomaticPathAssignmentService [line: 61] - assignPath(ShipmentOrderVO)	
			List<PathTemplateVO> myPathTemplateList = getPathTemplateList(aShipmentOrderVO);
PathServiceImpl [line: 338] - getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int)	
			return myReturnList;
AdvancedPathDeterminationServiceImpl [line: 271] - determinePathShipmentOrder(ShipmentOrderVO, List<PathTemplateVO>, DateTime, DateTime)
AdvancedPathDeterminationServiceImpl [line: 495] - evaluatePathTemplate(PathTemplateVO)	
ServiceActionCache$ServiceActionCacheObject [line: 191] - next(DateTime, DateTime)	
ServiceActionCache$ServiceActionCacheObject [line: 505] - buildServiceAction()	
ServiceOrderVO [line: 403] - copy()	



/ Intermezzo

/ CARGO heeft 4 depots	,
Van 			in					afkorting
Peeters 		Amsterdam			ASA
Oegema			Dedemsvaart			HOA
Bar...			Dordrecht			DOR
Ritmo			Eindhoven			EHV

/ een depot kan een collection depot zijn of een delivery depot	,
/ daartussen in zit een linehaul	,

/ Einde Intermezzo

/ we maken sho, vlg template 'cons_test_gse'	, 
Save 
/ en add 2 shi's van type C	,
Save shipment item

SH000002993

/ rm Hold status: COLLO_HOLD
/ we click 
Save (sho)	,

$ vi shipment-order_edit.jsp
				<input type="button" value="<mpo:label name="save"/>" onclick="document.getElementById('selectPath').value='yes'; theShipmentorderFormManager.submit('../oms/shipment-order_save', false, 0);" />

$ vi oms-sitemap.xmap

			<map:action logger="shipmentorder" name="shipmentOrderSave" src="com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderSaveAction"/>

           <map:match pattern="shipment-order_save">
                <!-- The shipment order is saved and via redirection send to the correct page -->
				<map:act type="shipmentOrderSave">
                    <map:parameter name="isSave" value="true"/>
                </map:act>
                <!-- This part is only reached when the path selection is manual (see ShipmentOrderSave.shouldTakeControl()-->
                <map:act type="pathMatchAction"/>
                <map:act type="redirectAfterSave">
					<map:parameter name="redirectTo" value="path-template_list-for-shipment-order?refresh=true&amp;manuallyAssign={request-param:manuallyAssign}&amp;base_sessionLevelOffset=1"/>
				</map:act>
            </map:match>

/ 7	. 

$ vi ShipmentOrderSaveAction.java

			int mySystemid = shipmentOrderVO.getSystemId();
mySystemid	26845924	

			if (mySystemid == ValueObject.VOLATILE_SYSTEM_ID) {
/ NEE
/ als in 1ste save	, dan hier	,
				shipmentOrderVO = ShipmentOrderUtil.getShipmentOrderFacadeLocal().createShipmentOrder(shipmentOrderVO);

			} else {
/ JA
				shipmentOrderVO = shipmentOrderService.updateShipmentOrder(shipmentOrderVO, true, true);
/ -> rate calc	,
/ step overheen	,

			String mySelectPath = getRequest().getParameter("selectPath");
yes
			if (mySelectPath != null && BooleanUtils.isTrue(mySelectPath)) {
				// we're 'really' saving here
				((PathAssignmentService) MpoBeanFactory.getBean("foreground_path_assignment")).assignPath(shipmentOrderVO);

MpoBeanFactory.getBean("foreground_path_assignment")=com.mpobjects.optimize.model.service.PathAssignmentPickOptimalService@59e3c1cc
/ TODO

/ Intermezzo

public final class PathAssignmentPickOptimalService extends AutomaticPathAssignmentService {
/e
abstract public class AutomaticPathAssignmentService implements PathAssignmentService {
	@Override
	@Transactional(propagation = Propagation.REQUIRED)
	public boolean assignPath(ShipmentOrderVO aShipmentOrderVO) {

/ Einde Intermezzo

/s
PathAssignmentPickOptimalService(AutomaticPathAssignmentService).assignPath(ShipmentOrderVO) line: 45	

		if (aShipmentOrderVO.getSystemId() != ValueObject.VOLATILE_SYSTEM_ID) {
			aShipmentOrderVO = getShipmentOrderService().getShipmentOrder(aShipmentOrderVO.getSystemId());
		}

			List<PathTemplateVO> myPathTemplateList = getPathTemplateList(aShipmentOrderVO);
/s
PathAssignmentPickOptimalService(AutomaticPathAssignmentService).getPathTemplateList(ShipmentOrderVO) line: 146	
		// get path templates applicable to shipment order
		PathService myPathFacade = PathUtil.getPathService();
com.mpobjects.oms.service.path.PathServiceImpl@284ca7be
		try {
			return myPathFacade.getPathsFor(aShipmentOrderVO);
/s
PathServiceImpl.getPathsFor(ShipmentOrderVO) line: 121	
		Resource myResource = ResourceUtil.getResource();
eric
		return getPathsFor(myResource, aVO);
/s
	private List<PathTemplateVO> getPathsFor(Resource aResourceVO, ShipmentOrderVO aVO) throws AbstractException {
		return getPathsFor(aResourceVO, aVO, PathSelectionMode.AUTO_PLAN, -1);
/s
PathServiceImpl.getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int) line: 266	

		if (aVO.getServiceActionList() != null && aVO.getServiceActionList().size() > 0) {
/ NEE
[]
		List<PathTemplateVO> myInitialPathsList = getPathTemplatesOrdered(aResourceVO);
/////////////////////
/ Alle path templates	,
/s
	private List<PathTemplateVO> getPathTemplatesOrdered(Resource resourceVO) throws PathTemplateException {
		try {
			return (List) pathTemplateDAO.getPathTemplateListOrdered();
/ pathTemplateDAO=com.mpobjects.oms.model.leggen.dao.PathTemplateDAOImpl@7e7abfee
/s
PathTemplateDAOImpl.getPathTemplateListOrdered() line: 97	
			return (List) pathTemplateDAO.getPathTemplateListOrdered();

/ Intermezzo

	<class name="PathTemplateVO" table="PATH_TEMPLATE" >

/ Einde Intermezzo
/s
PathTemplateDAOImpl.getPathTemplateListOrdered() line: 99	
		List<PathTemplateVO> myList = getHibernateTemplate().findByCriteria(
				DetachedCriteria.forClass(PathTemplateVO.class).add(Property.forName("deleted").eq(false)).addOrder(Order.asc("priority")));

/ we zien 	, WH	, 
select this_.SYSTEM_ID as SYSTEM1_140_2_, this_.PATH_TEMPLATE as PATH2_140_2_, this_.DESCRIPTION as DESCRIPT3_140_2_, this_.ADD_TO_EXISTING as ADD4_140_2_, this_.IS_DELETED as IS5_140_2_, this_.PRIORITY as PRIORITY140_2_, this_.LEAD_TIME_CONSTRAINT as LEAD7_140_2_, this_.CURRENT_TIME_CONSTRAINT as CURRENT8_140_2_, this_.IS_ACTIVE as IS9_140_2_, this_.IS_SHOW_ON_QUOTATION as IS10_140_2_, this_.IS_SHOW_ON_ASSIST_PLAN as IS11_140_2_, this_.IS_CONSOLIDATED_PLANNING as IS12_140_2_, this_.PLANNING_MODE as PLANNING13_140_2_, this_.REQUESTED_DATE_MODE as REQUESTED14_140_2_, this_.ORGANIZATION_SYSTEMID as ORGANIZ15_140_2_, organizati2_.SYSTEM_ID as SYSTEM1_144_0_, organizati2_.IS_DELETED as IS2_144_0_, organizati2_.SEQUENCE as SEQUENCE144_0_, organizati2_.ORGANIZATION_ID as ORGANIZA4_144_0_, organizati2_.DESCRIPTION as DESCRIPT5_144_0_, organizati2_.ORGANIZATION_GROUP as ORGANIZA6_144_0_, organizati2_.AUTOM_RATE_CALC as AUTOM7_144_0_, organizati2_.EDI_IDENTIFIER as EDI8_144_0_, organizati3_.SYSTEM_ID as SYSTEM1_144_1_, organizati3_.IS_DELETED as IS2_144_1_, organizati3_.SEQUENCE as SEQUENCE144_1_, organizati3_.ORGANIZATION_ID as ORGANIZA4_144_1_, organizati3_.DESCRIPTION as DESCRIPT5_144_1_, organizati3_.ORGANIZATION_GROUP as ORGANIZA6_144_1_, organizati3_.AUTOM_RATE_CALC as AUTOM7_144_1_, organizati3_.EDI_IDENTIFIER as EDI8_144_1_ 
from PATH_TEMPLATE this_ 
inner join ORGANIZATION organizati2_ on this_.ORGANIZATION_SYSTEMID=organizati2_.SYSTEM_ID 
left outer join ORGANIZATION organizati3_ on organizati2_.ORGANIZATION_GROUP=organizati3_.SYSTEM_ID 
where this_.organization_systemid in (
	select uo.organization_systemid 
	from user_organization uo 
	where uo.user_systemid = $1) 
and this_.IS_DELETED=$2 
order by this_.PRIORITY asc
DETAIL:  parameters: $1 = '26682479', $2 = 'f'

/we zien in eclipse	58 path templates	,
[
pathTemplateVO:DELIVERY EUROFREIGHT INCL LH(systemId:26764915), 
pathTemplateVO:DELIVERY EUROFREIGHT(systemId:26821005), 
pathTemplateVO:DELIVERY PHARMA NL uit NL(systemId:26767130), 
pathTemplateVO:DELIVERY PNL CARGO BE INCL. LH(systemId:26733950), 
pathTemplateVO:DELIVERY PNL CARGO BE INCL. LH NO COLLECT from INT(systemId:26826334), 
pathTemplateVO:PRINT_COLLECT_LABEL_CIF(systemId:26786452), 
pathTemplateVO:DELIVERY BARIS NO COLLECT(systemId:26682133), 
pathTemplateVO:PRINT_LABEL_EURO(systemId:26787130), 
pathTemplateVO:DELIVERY DIRECTFREIGHT(systemId:26766911), 
pathTemplateVO:DELIVERY PNL CARGO BE INCL. LH NO COLLECT(systemId:26826291), 
pathTemplateVO:DELIVERY OEGEMA(systemId:26682684), 
pathTemplateVO:ACTIVATION DELIVERY PNLCARGOBE INc. LH NO COLLECT(systemId:26829183), 
pathTemplateVO:ACTIVATION DELIV. PNLCARGOBE INC. LH NO COLL. INT(systemId:26829194), 
pathTemplateVO:DELIVERY SPECIALSERVICES(systemId:26770099), 
pathTemplateVO:ACTIVATION DELIVERY PNLCARGOBE INCL. LH(systemId:26829171), 
pathTemplateVO:DELIVERY PHARMA BE|LU uit NL(systemId:26768140), 
pathTemplateVO:DELIVERY PHARMA BE|LU uit BE|LU(systemId:26774271), 
pathTemplateVO:ACTIVATION DELIVERY PHARMA BE|LU uit BE|LU(systemId:26829210), 
pathTemplateVO:ACTIVATION DELIVERY PHARMA NL uit NL(systemId:26829230), 
pathTemplateVO:ACTIVATION(systemId:26781424), 
pathTemplateVO:PRINT_LABEL_CIF(systemId:26786446), 
pathTemplateVO:DELIVERY PHARMA NL uit  BE|LU(systemId:26774235), 
pathTemplateVO:DELIVERY BARIS INCL LH(systemId:26681982), 
pathTemplateVO:ACTIVATION DELIVERY BARIS INCL LH(systemId:26787378), 
pathTemplateVO:PRINT_LABEL_CIF_EURODIS(systemId:26845588), 
pathTemplateVO:ACTIVATION DELIVERY BARIS NO COLLECT(systemId:26787421), 
pathTemplateVO:DELIVERY BARIS.(systemId:26682098), 
pathTemplateVO:DELIVERY BARIS NO COLLECT INCL LH(systemId:26682114), 
pathTemplateVO:ACTIVATION DELIVERY BARIS NO COLLECT INCL LH(systemId:26787449), 
pathTemplateVO:ACTIVATION DELIVERY BARIS(systemId:26787439), 
pathTemplateVO:DELIVERY OEGEMA NO COLLECT(systemId:26682772), 
pathTemplateVO:ACTIVATION DELIVERY OEGEMA(systemId:26787463), 
pathTemplateVO:DELIVERY OEGEMA INCL LH(systemId:26682706), 
pathTemplateVO:DELIVERY EUROFREIGHT NO COLLECT INCL LH(systemId:26821017), 
pathTemplateVO:ACTIVATION DELIVERY PHARMA BE|LU uit NL(systemId:26829219), 
pathTemplateVO:ACTIVATION DELIVERY OEGEMA INCL LH(systemId:26787474), 
pathTemplateVO:ACTIVATION DELIVERY PHARMA NL uit BE|LU(systemId:26829240), 
pathTemplateVO:ACTIVATION DELIVERY OEGEMA NO COLLECT(systemId:26787483), 
pathTemplateVO:DELIVERY OEGEMA NO COLLECT INCL LH(systemId:26682744), 
pathTemplateVO:ACTIVATION DELIVERY OEGEMA NO COLLECT INCL LH(systemId:26787495), 
pathTemplateVO:DELIVERY EUROFREIGHT NO COLLECT(systemId:26820767), 
pathTemplateVO:DELIVERY RITMO(systemId:26682609), 
pathTemplateVO:ACTIVATION. DELIVERY RITMO(systemId:26787513), 
pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598), 
pathTemplateVO:ACTIVATION DELIVERY RITMO INCL LH(systemId:26787527), 
pathTemplateVO:DELIVERY RITMO NO COLLECT(systemId:26682656), 
pathTemplateVO:ACTIVATION DELIVERY RITMO NO COLLECT(systemId:26787537), 
pathTemplateVO:DELIVERY RITMO NO COLLECT INCL LH(systemId:26682672), 
pathTemplateVO:ACTIVATION. DELIVERY RITMO NO COLLECT INCL LH(systemId:26787547), 
pathTemplateVO:DELIVERY PEETERS(systemId:26682542), 
pathTemplateVO:ACTIVATION DELIVERY PEETERS(systemId:26787673), 
pathTemplateVO:DELIVERY PEETERS NO COLLECT(systemId:26682548), 
pathTemplateVO:ACTIVATION DELIVERY PEETERS NO COLLECT(systemId:26787684), 
pathTemplateVO:DELIVERY PEETERS INCL. LH(systemId:26682501), 
pathTemplateVO:ACTIVATION DELIVERY PEETERS INCL. LH(systemId:26787694), 
pathTemplateVO:ACTIVATION DELIVERY PEETERS NO COLLECT INCL LH(systemId:26787736), 
pathTemplateVO:DELIVERY PEETERS NO COLLECT INCL LH(systemId:26682569), 
pathTemplateVO:PRINT_EUROPLATE_PHARMA(systemId:26814576)]


/t
PathServiceImpl.getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int) line: 277	

		List<PathTemplateVO> myInitialPathsList = getPathTemplatesOrdered(aResourceVO);
////////////////
/ alle path templates	,
/d
/ eerste for loop	,
		for (int i = 0; i < myInitialPathsList.size(); i++) {
			PathTemplateVO myPathVO = myInitialPathsList.get(i);

			if (myPathVO.matchesWith(aVO)) {
/s
PathTemplateVO.matchesWith(ShipmentOrderVO) line: 265	

/ een path template bevat de criteria (op sho's) en de service action templates	,
/ deze heeft 7 criteria en 4 sa templates	, 
/ als een sho voldoet aan de criteria	, krijgt de sho meteen de 4 sa template's	. Klaar	,

this	PathTemplateVO  (id=25935)	
	code	"DELIVERY EUROFREIGHT INCL LH" (id=26282)	
	description	"Delivery for Europe outside BeNeLux. With Collection." (id=26415)	
	organization	Organization  (id=26116)	
	pathPlanningMode	PathPlanningMode  (id=26146)	
	performanceMonitorService	null	
	requestedDateMode	PathRequestedDateMode  (id=26159)	
	systemId	26764915	
	thePathCriteriumList	PersistentBag  (id=26410)	
[
theSystemId: 26765413
CriteriumTypeSystemId :37
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :!.+
ValueTo :null
ValueType :REGEX

, theSystemId: 26764938
CriteriumTypeSystemId :14
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :EUROFREIGHT
ValueTo :null
ValueType :REGEX

, theSystemId: 26764939
CriteriumTypeSystemId :7
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :!NL|BE|LU
ValueTo :null
ValueType :REGEX

, theSystemId: 26821014
CriteriumTypeSystemId :26682055
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :!INT
ValueTo :null
ValueType :REGEX

, theSystemId: 26821015
CriteriumTypeSystemId :26682056
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :INT
ValueTo :null
ValueType :REGEX

, theSystemId: 26829115
CriteriumTypeSystemId :26682067
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :!(.*,)?ACTIVATION(,.*)?
ValueTo :null
ValueType :REGEX

, theSystemId: 26820780
CriteriumTypeSystemId :26682067
CriteriumType :null
Implementation class :null
PathTemplateSystemId :26764915
ValueFrom :!(.*,)?DROP-OFF(,.*)?
ValueTo :null
ValueType :REGEX
]
	thePriority	0	
	theServiceActionTemplateList	PersistentSortedSet  (id=26416)	
[
serviceActionTemplate SAT_COLLECT (systemId:26681857), 
serviceActionTemplate SAT_LINEHAUL (systemId:26681986), 
serviceActionTemplate SAT_DELIVERY-EUROFREIGHT (systemId:26764940), 
serviceActionTemplate SAT_DELIVERY_NOTE (systemId:26682008)]

/ Deze path template heeft  

/ Intermezzo

/ criteria	,

/ path_criterium is meer als een join table: heeft ook de value van het criterium: !.+ bijvoorbeeld	,

/ Hoe vinden we de sel criteria op een path template?
/ joins:
/ criterium_type - path_criterium - path_template=...

pnllogistics3=# select ct.*,pc.* from criterium_type ct join path_criterium pc on pc.criterium_type_system_id=ct.system_id join path_template pt on pc.path_template_system_id=pt.system_id where pt.path_template='DELIVERY EUROFREIGHT INCL LH';
 system_id | is_deleted |    criterium_type    |                description                |                   implementation_class  
                  | is_used_quotation | system_id | criterium_type_system_id | path_template_system_id |       value_from        | va
lue_to | value_type 
-----------+------------+----------------------+-------------------------------------------+-----------------------------------------
------------------+-------------------+-----------+--------------------------+-------------------------+-------------------------+---
-------+------------
        37 |          0 | HOLD_STATUS          | Hold status                               | holdStatusVO/code                       
                  |                 0 |  26765413 |                       37 |                26764915 | !.+                     |   
       | REGEX
        14 |          0 | SHIPMENT_TYPE        | Type of shipment                          | shipmentTypeVO/code                     
                  |                 1 |  26764938 |                       14 |                26764915 | EUROFREIGHT             |   
       | REGEX
         7 |          0 | TO_COUNTRY           | Destination country of the Shipment Order | toPartyVO/countryVO/code                
                  |                 1 |  26764939 |                        7 |                26764915 | !NL|BE|LU               |   
       | REGEX
  26682055 |          0 | COLDEPOT             | Collection depot                          | partyMasterDataByGroup[@name='Collection
Depot']/partyId   |                 0 |  26821014 |                 26682055 |                26764915 | !INT                    |   
       | REGEX
  26682056 |          0 | DISTRDEPOT           | Distribution Depot                        | partyMasterDataByGroup[@name='Distributi
onDepot']/partyId |                 0 |  26821015 |                 26682056 |                26764915 | INT                     |   
       | REGEX
  26682067 |          0 | BILL_TO_PARTY_GROUPS | Bill to party group                       | billToPartyVO/partyGroupAsString        
                  |                 0 |  26829115 |                 26682067 |                26764915 | !(.*,)?ACTIVATION(,.*)? |   
       | REGEX
  26682067 |          0 | BILL_TO_PARTY_GROUPS | Bill to party group                       | billToPartyVO/partyGroupAsString        
                  |                 0 |  26820780 |                 26682067 |                26764915 | !(.*,)?DROP-OFF(,.*)?   |   
       | REGEX
(7 rows)



/ service action templates,

/ hoe vinden we de sa templates op een path template?

/ path_service_action_template is de join table	,

/ joins:
/ service_action_template - path_service_action_template - path_template=...

/ er is de join table	,

pnllogistics3=# \d path_service_action_template
Table "public.path_service_action_template"
    Column     |  Type   | Modifiers 
---------------+---------+-----------
 path_systemid | integer | 
 sat_systemid  | integer | 
Foreign-key constraints:
    "psa_path_fk" FOREIGN KEY (path_systemid) REFERENCES path_template(system_id)
    "psa_sat_fk" FOREIGN KEY (sat_systemid) REFERENCES service_action_template(system_id)

pnllogistics3=# select sat.service_action_template_id from service_action_template sat join path_service_action_template psat on psat.sat_systemid=sat.system_id join path_template pt on psat.path_systemid=pt.system_id where pt.path_template='DELIVERY EUROFREIGHT INCL LH';
 service_action_template_id 
----------------------------
 SAT_COLLECT
 SAT_LINEHAUL
 SAT_DELIVERY_NOTE
 SAT_DELIVERY-EUROFREIGHT
(4 rows)

pnllogistics3=# select sat.*from service_action_template sat join path_service_action_template psat on psat.sat_systemid=sat.system_id join path_template pt on psat.path_systemid=pt.system_id where pt.path_template='DELIVERY EUROFREIGHT INCL LH';
-[ RECORD 1 ]-----------------+--------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
--
system_id                     | 26681857
sequence_number               | 5
organization_systemid         | 500
service_action_type_systemid  | 26681851
service_action_template_id    | SAT_COLLECT
to_location_copy_flag         | PTG:COLLECTIONDEPOT
to_location_id                | 
to_name                       | 
to_name2                      | 
to_address                    | 
to_address2                   | 
to_city                       | 
to_postal_code                | 
to_region_state               | 
to_country_systemid           | 4205189
to_phone_number               | 
to_fax_number                 | 
to_email_address              | 
to_contact_name               | 
copy_location_from            | PTG:FROM
from_location_id              | 
from_name                     | 
from_name2                    | 
from_address                  | 
from_address2                 | 
from_city                     | 
from_postal_code              | 
from_region_state             | 
from_country_systemid         | 4205189
from_phone_number             | 
from_fax_number               | 
from_email_address            | 
from_contact_name             | 
reference1                    | 
reference2                    | 
reference3                    | 
reference4                    | 
reference5                    | 
remarks                       | 
handling_instructions         | 
planning_mode                 | CONSOLIDATE
consolidation_criteria        | (cf:equalsIgnoreCase(serviceAction.fromPartyVO.address,serviceOrder.fromPartyVO.address) && cf:equalsIg
noreCase(serviceAction.fromPartyVO.address2,serviceOrder.fromPartyVO.address2) && cf:equalsIgnoreCase(serviceAction.fromPartyVO.city,se
rviceOrder.fromPartyVO.city) && cf:equalsIgnoreCase(serviceAction.fromPartyVO.postalCode,serviceOrder.fromPartyVO.postalCode) && servic
eAction.shipmentOrderVO.dateSetVO.requestedStartAfter == serviceOrder.serviceActionList[0].shipmentOrderVO.dateSetVO.requestedStartAfte
r)
planning_mode_offline         | 0
execution_mode                | MANUAL
optimization_poss             | 0
replan_criteria               | 
service_order_replan_criteria | 
consolidation_window_hrs      | 72
avg_leadtime_hrs              | 0
copy_schedule_mode            | NONE
container_mode                | OFF
consolidation_search_mode     | NULL
hold_status_systemid          | NULL
-[ RECORD 2 ]-----------------+------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
----------
system_id                     | 26681986
...



/ Einde Intermezzo

/ we waren in	,
PathTemplateVO.matchesWith(ShipmentOrderVO) line: 273	

/ eerste for loop 	,
		for (int i = 0; i < thePathCriteriumList.size(); i++) {
			if (!thePathCriteriumList.get(i).match(aVO)) {
/s
PathCriteriumVO.match(ShipmentOrderVO) line: 235	
		JXPathContext myContext = JXPathContext.newContext(aVO);
/ sho	,
		theImplementationClass = getCriteriumTypeVO().getImplementationClass();
theImplementationClass	"holdStatusVO/code" (id=27336)	
		Object myValue = myContext.getValue(theImplementationClass);
myValue	null	
		boolean myResult = matchValue(myValue);
/s
PathCriteriumVO.matchValue(Object) line: 252	
		Matcher myMatcher = getMatchTypeName().getMatcher(this);
getMatchTypeName()=REGEX
myMatcher	RegexMatcher  (id=27557)	
	theInvertFlag	true	
	theRegex	".+" (id=27584)	

			if (aValue == null) {
				// Old impl. TODO? Update the Matchers rather than doing that
				aValue = "";
			}
			myMatch = myMatcher.match(aValue);
true
/t
PathCriteriumVO.match(ShipmentOrderVO) line: 242	
		boolean myResult = matchValue(myValue);
/d
		return myResult;
/t
PathTemplateVO.matchesWith(ShipmentOrderVO) line: 273	

		for (int i = 0; i < thePathCriteriumList.size(); i++) {
			if (!thePathCriteriumList.get(i).match(aVO)) {
/ NEE
				myResult = false;
				break;
/ NIET
/ Dus we gaan het volgende criterium af	,
/ volgende for loop	,
		for (int i = 0; i < thePathCriteriumList.size(); i++) {
			if (!thePathCriteriumList.get(i).match(aVO)) {
/s
PathCriteriumVO.match(ShipmentOrderVO) line: 223	

		JXPathContext myContext = JXPathContext.newContext(aVO);
		theImplementationClass = getCriteriumTypeVO().getImplementationClass();
Implementation class :shipmentTypeVO/code

		Object myValue = myContext.getValue(theImplementationClass);
BENELUXFREIGHT
		boolean myResult = matchValue(myValue);
/s
PathCriteriumVO.matchValue(Object) line: 252	
		Matcher myMatcher = getMatchTypeName().getMatcher(this);
myMatcher	RegexMatcher  (id=25394)	
	theInvertFlag	false	
	theRegex	"EUROFREIGHT" (id=25396)	
			myMatch = myMatcher.match(aValue);
false

/t
PathTemplateVO.matchesWith(ShipmentOrderVO) line: 274	
		for (int i = 0; i < thePathCriteriumList.size(); i++) {
			if (!thePathCriteriumList.get(i).match(aVO)) {
/d
/ JA
				myResult = false;
				break;
/t
PathServiceImpl.getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int) line: 311	

/ loop over path templates	,
		for (int i = 0; i < myInitialPathsList.size(); i++) {
			PathTemplateVO myPathVO = myInitialPathsList.get(i);
			if (myPathVO.matchesWith(aVO)) {
/d
/ NEE

/ volgende path template	, 
		for (int i = 0; i < myInitialPathsList.size(); i++) {
			PathTemplateVO myPathVO = myInitialPathsList.get(i);
			if (myPathVO.matchesWith(aVO)) {
/s
PathTemplateVO.matchesWith(ShipmentOrderVO) line: 273	

		for (int i = 0; i < thePathCriteriumList.size(); i++) {
/ volgende sel. criterium	, 
			if (!thePathCriteriumList.get(i).match(aVO)) {
/s
PathCriteriumVO.match(ShipmentOrderVO) line: 235	
/ this = sel criterum	, 
		theImplementationClass = getCriteriumTypeVO().getImplementationClass();
/ this.theImplementationClass	"partyMasterDataByGroup[@name='DistributionDepot']/partyId" (id=27819)	

		Object myValue = myContext.getValue(theImplementationClass);
		boolean myResult = matchValue(myValue);
...
/s
ShipmentOrderVO.getPartyMasterDataByGroup() line: 1229	
		Map<String, Party> myPartyMap = new HashMap<String, Party>();
		myPartyMap.put("COLLECTION", getPartyByPartyId(getFromParty()));
		myPartyMap.put("DELIVERY", getPartyByPartyId(getToParty()));
		myPartyMap.put("BILL_TO", getPartyByPartyId(getBillToPartyVO() != null ? getBillToPartyVO().getCode() : null));
		for (ShipmentOrderParty myShoParty : getShipmentOrderParties()) {
			Party myParty = MpoBeanFactory.getBean(PartyDAO.class).getPartyByPartyIdAndOrganization(myShoParty.getCode(), getOrganization().getSystemId());
			myPartyMap.put(myShoParty.getPartyTypeGroup().getCode(), myParty);

		}
		return myPartyMap;

myPartyMap	HashMap  (id=28372)	
	table	HashMap$Entry[16]  (id=28373)	
		[5]	HashMap$Entry  (id=28374)	
			key	"CollectionDepot" (id=23937)	
			next	HashMap$Entry  (id=28378)	
				key	"COLLECTION" (id=28498)	
				next	null	
				value	null	
			value	PartyVO  (id=23939)	
				partyId	"DOR" (id=23977)	
		[7]	HashMap$Entry  (id=28375)	
			key	"BILL_TO" (id=28500)	
			next	null	
			value	PartyVO  (id=28501)	
				partyId	"9148459" (id=22973)	
		[11]	HashMap$Entry  (id=28376)	
			key	"DistributionDepot" (id=28503)	
			next	null	
			value	PartyVO  (id=28505)	
				partyId	"EHV" (id=28369)	
		[15]	HashMap$Entry  (id=28377)	
			key	"DELIVERY" (id=23969)	
			next	null	
			value	null	
/t
thCriteriumVO.match(ShipmentOrderVO) line: 236	
		Object myValue = myContext.getValue(theImplementationClass);
/d
theImplementationClass	"partyMasterDataByGroup[@name='CollectionDepot']/partyId" (id=23319)	
myValue	"EHV" (id=28369)	

/t
PathTemplateVO.matchesWith(ShipmentOrderVO) line: 274	
		for (int i = 0; i < thePathCriteriumList.size(); i++) {
			if (!thePathCriteriumList.get(i).match(aVO)) {
/d
/ NEE
				break;

/ volgende sel criterium	, 
...
		return myResult;
/ Als er geen sel crit	, 
/t
PathServiceImpl.getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int) line: 311	
		List<PathTemplateVO> myReturnList = new ArrayList<PathTemplateVO>();
		for (int i = 0; i < myInitialPathsList.size(); i++) {
			if (myPathVO.matchesWith(aVO)) {
/d




/ Intermezzo

myPathVO	PathTemplateVO  (id=26031)	
	code	"DELIVERY RITMO INCL LH" (id=26122)	
	thePathCriteriumList	PersistentBag  (id=26144)	
		bag	ArrayList  (id=26148)	
			elementData	Object[10]  (id=26175)	
				[0]	PathCriteriumVO  (id=26177)	
					theImplementationClass	"shipmentTypeVO/code" (id=25377)	
					theValueFrom	"BENELUXFREIGHT|EUROFREIGHT" (id=26310)	
				[1]	PathCriteriumVO  (id=26178)	
					theImplementationClass	"toPartyVO/countryVO/code" (id=26296)	
					theValueFrom	"NL|BE|LU" (id=26299)	
				[2]	PathCriteriumVO  (id=26179)	
					theImplementationClass	"partyMasterDataByGroup[@name='CollectionDepot']/partyId" (id=26287)	
					theValueFrom	"!EHV" (id=26290)	
				[3]	PathCriteriumVO  (id=26180)	
					theImplementationClass	"partyMasterDataByGroup[@name='DistributionDepot']/partyId" (id=26265)	
					theValueFrom	"EHV" (id=26269)	
				[4]	PathCriteriumVO  (id=26181)	
					theImplementationClass	"holdStatusVO/code" (id=25137)	
					theValueFrom	"!.+" (id=26259)	
				[5]	PathCriteriumVO  (id=26183)	
					theImplementationClass	"billToPartyVO/partyGroupAsString" (id=26211)	
					theValueFrom	"!(.*,)?ACTIVATION(,.*)?" (id=26249)	
				[6]	PathCriteriumVO  (id=26185)	
					theImplementationClass	"billToPartyVO/partyGroupAsString" (id=26211)	
					theValueFrom	"!(.*,)?DROP-OFF(,.*)?" (id=26216)	
			size	7	


$ vi ShipmentOrderVO.java

	public ShipmentType getShipmentTypeVO() {
		return getShipmentType();
	}
	public Map<String, Party> getPartyMasterDataByGroup() {
		Map<String, Party> myPartyMap = new HashMap<String, Party>();
		...
		for (ShipmentOrderParty myShoParty : getShipmentOrderParties()) {
			Party myParty = MpoBeanFactory.getBean(PartyDAO.class).getPartyByPartyIdAndOrganization(myShoParty.getCode(), getOrganization().getSystemId());
			myPartyMap.put(myShoParty.getPartyTypeGroup().getCode(), myParty);

		}
		return myPartyMap;
	}


/ getPartyMasterDataByGroup in de sho betekent: per party type group, dus COLLECTION, DELIVERY, BILL_TO, CollectionDepot, DistibutionDepot,	 dus get de master data van de afzonderlijke party's in de sho, dus queries de party tabel (master data)	, als er een code (party_id) staat 	, anders null	,   

/ See GUI	, 
/ in 'Ship from' tag staat  field 'From party'
/ in 'Ship to' tag staat  field 'To party'
/ in 'Bill to' tag staat  field 'Bill To party'

/ Hij doet een query op de party table	, als de string "" is	, vindt hij list []	, en returns null	,

ShipmentOrderVO.class
	public Map<String, Party> getPartyMasterDataByGroup() {
		Map<String, Party> myPartyMap = new HashMap<String, Party>();
		myPartyMap.put("COLLECTION", getPartyByPartyId(getFromParty()));
		myPartyMap.put("DELIVERY", getPartyByPartyId(getToParty()));
		myPartyMap.put("BILL_TO", getPartyByPartyId(getBillToPartyVO() != null ? getBillToPartyVO().getCode() : null));

LogisticsOrderVO.class
	public String getFromParty() {
		return getFromPartyVO().getCode();
	}

	public Party getFromPartyVO() {
		if (theFromPartyVO == null) {
			theFromPartyVO = new VirtualParty();
		}
		return theFromPartyVO;
	}

	public String getToParty() {
		return getToPartyVO().getCode();
	}

	public Party getToPartyVO() {
		if (theToPartyVO == null) {
			theToPartyVO = new VirtualParty();
		}
		return theToPartyVO;
	}

ShipmentOrderVO.class
	public Party getBillToPartyVO() {
		return theBillToParty;
	}

	public Party getPartyByPartyId(String aPartyId) {
		return MpoBeanFactory.getBean(PartyDAO.class).getPartyByPartyId(aPartyId);

PartyDAOImpl.class
		DetachedCriteria myCriteria = DetachedCriteria.forClass(PartyVO.class);
		myCriteria.add(Property.forName("partyId").eq(aPartyId));
		myCriteria.add(Property.forName("deleted").eq(false));
		List<PartyVO> myList = findByCriteria(myCriteria);
		if (myList == null || myList.isEmpty()) {
/ JA	, als query op ""	, we vinden []
			return null;
		}
		return myList.iterator().next();

/ Met debuggen laten we hem vallen in de bill to party regel	,
	public Map<String, Party> getPartyMasterDataByGroup() {
		myPartyMap.put("BILL_TO", getPartyByPartyId(getBillToPartyVO() != null ? getBillToPartyVO().getCode() : null));
/s
	public Party getPartyByPartyId(String aPartyId) {
		return MpoBeanFactory.getBean(PartyDAO.class).getPartyByPartyId(aPartyId);
aPartyId='9148459'

pnllogistics3=# select*from party where party_id='9148459';
 system_id | is_deleted | party_id | party_type_systemid | organization_systemid |      name      | name2 |       address        | ad
dress2 |  city   | zipcode | country_systemid |    contact_name    | emailaddress |  faxnumber  | phonenumber | region_state | tnt_zo
ne | reference1 | reference2 | reference3 | reference4 | reference5 | service_order_url_expression | manifest_report | time_zone | lo
ngitude | latitude | schedule_systemid | prenotify_carcon | service_remarks 
-----------+------------+----------+---------------------+-----------------------+----------------+-------+----------------------+---
-------+---------+---------+------------------+--------------------+--------------+-------------+-------------+--------------+-------
---+------------+------------+------------+------------+------------+------------------------------+-----------------+-----------+---
--------+----------+-------------------+------------------+-----------------
  26683134 |          0 | 9148459  |            26681476 |                   500 | Gildewerk B.V. |       | Jan van Geunsweg 10A |   
       | HAARLEM | 2031BD  |             4153 | Maarten Theunissen |              | 023-5340965 | 023-5322255 |              |       
   | XZELFBRENG |            |            |            |            |                              |                 |           |   
        |          |                   |                0 | 
(1 row)
/ Dit is master data	,

/ In de shipment order	,
pnllogistics3=# select * from shipment_order where shipment_order_id='SH000002993';
invoice_party_id               | 9148459
invoice_name                   | Gildewerk B.V.
invoice_name2                  | 
invoice_address                | Jan van Geunsweg 10A
invoice_address2               | 
invoice_city                   | HAARLEM
invoice_postal_code            | 2031BD
invoice_region_state           | 
invoice_country_systemid       | 4153
invoice_phone_number           | 023-5322255
invoice_fax_number             | 023-5340965
invoice_email_address          | 
invoice_contact_name           | Maarten Theunissen

/ TODO (En in master data table party	, en in de shipment order	, 
/ WH als sho wordt created	, copies over naar sho	,

/ ship from/tp	, bill to zijn VirtualParty's	,  
/ Maar hier wordt daar geen rekening mee gehouden	, altijd queried op de master table, en als daar niets wordt gevonden , komt in deze hashtable null	,  als wel , dan komt er een PartyVO in de hashtable	, 

/ we gaan verder debug	,
		for (ShipmentOrderParty myShoParty : getShipmentOrderParties()) {
			Party myParty = MpoBeanFactory.getBean(PartyDAO.class).getPartyByPartyIdAndOrganization(myShoParty.getCode(), getOrganization().getSystemId());
			myPartyMap.put(myShoParty.getPartyTypeGroup().getCode(), myParty);

/ ShipmentOrderPary is een LogisticOrderParty,	 en deze heeft de getPartyTypeGroup()=this.partyTypeGroup	,

/ Ook een query op de party table	, master data 	,

/ getShipmentOrderParties()=theShipmentOrderPartyList=
	Depot Dordrecht
	Depot Eindhoven	, 
/ Dit zijn ShipmentOrderParty's	, geen VirtualParty's	,

/ myShoParty.getCode()='DOR'	,
/ getOrganization().getSystemId()=500

pnllogistics3=# select*from party where party_id='DOR';
-[ RECORD 1 ]----------------+-----------------
system_id                    | 26681533
is_deleted                   | 0
party_id                     | DOR
party_type_systemid          | 26681478
organization_systemid        | 500
name                         | Depot Dordrecht
name2                        | 
address                      | Pieter Zeemanweg
address2                     | 146
city                         | Dordrecht
zipcode                      | 3316 GZ 
country_systemid             | 4153
...


/ we zien uiteindelijk de hashmap	,

this	ShipmentOrderVO  (id=23308)	
myPartyMap	HashMap  (id=27178)	
	size	5	
	table	HashMap$Entry[16]  (id=29521)	
		[5]	HashMap$Entry  (id=30851)	
			hash	40218533	
			key	"CollectionDepot" (id=31037)	
			next	HashMap$Entry  (id=29525)	
				hash	-1087396427	
				key	"COLLECTION" (id=30357)	
				next	null	
				value	null	
			value	PartyVO  (id=30731)	
		[7]	HashMap$Entry  (id=29526)	
			hash	642705159	
			key	"BILL_TO" (id=29534)	
			next	null	
			value	PartyVO  (id=29535)	
		[11]	HashMap$Entry  (id=30852)	
			hash	657505035	
			key	"DistributionDepot" (id=30853)	
			next	null	
			value	PartyVO  (id=30834)	
		[15]	HashMap$Entry  (id=29529)	
			hash	657505035	
			key	"DELIVERY" (id=30853)	
			next	null	
			value 	null	


/ Einde Intermezzo

/ Intermezzo

aVO	ShipmentOrderVO_$$_javassist_141  (id=19916)	
	handler	JavassistLazyInitializer  (id=26983)	
		target	ShipmentOrderVO  (id=26989)	
			theBillToParty	VirtualParty  (id=27134)	
				partyGroupsAsString	"" (id=27679)	
			theHoldStatus	null	
			theShipmentType	ShipmentType  (id=27477)	
				code	"BENELUXFREIGHT" (id=25393)	
			theToPartyVO	VirtualParty  (id=27550)	
				countryVO	Country_$$_javassist_63  (id=27558)	
					handler	JavassistLazyInitializer  (id=27591)	
						target	Country  (id=27605)	
							code	"NL" (id=27608)	
/ Maar sommige properties zijn een fct	, 
/ TODO

/ Einde Intermezzo

/t
PathServiceImpl.getPathsFor(Resource, ShipmentOrderVO, PathSelectionMode, int) line: 311	

		List<PathTemplateVO> myReturnList = new ArrayList<PathTemplateVO>();
		for (int i = 0; i < myInitialPathsList.size(); i++) {
			if (myPathVO.matchesWith(aVO)) {
/d
/ JA
					myReturnList.add(myPathVO);

/ volgende path template	,
		for (int i = 0; i < myInitialPathsList.size(); i++) {
			PathTemplateVO myPathVO = myInitialPathsList.get(i);
/ Er past er geen een meer	,

/ we disable de ShipmentOrderVO.getPartyMasterDataByGroup b	, 

		return myReturnList;
[pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)]
...
/t
PathAssignmentPickOptimalService(AutomaticPathAssignmentService).assignPath(ShipmentOrderVO) line: 63	
			List<PathTemplateVO> myPathTemplateList = getPathTemplateList(aShipmentOrderVO);
/d
[pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)]

			int myNumberOfPaths = myPathTemplateList == null ? 0 : myPathTemplateList.size();
1
			int myMostImportantPriority = Integer.MAX_VALUE; // descending scale
			List<PathTemplateVO> myHighestPriorityPathTemplateList = new ArrayList<PathTemplateVO>();
			for (PathTemplateVO myPathTemplateVO : myPathTemplateList) {
				int myPathPriority = myPathTemplateVO.getPriority();
0
				if (myPathPriority < myMostImportantPriority) {
					myMostImportantPriority = myPathPriority;
					myHighestPriorityPathTemplateList.clear();
					myHighestPriorityPathTemplateList.add(myPathTemplateVO);

/ myMostImportantPriority=0
/ myHighestPriorityPathTemplateList=[pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)]

			PathTemplateVO mySelectedPathTemplate = determinePath(aShipmentOrderVO, myHighestPriorityPathTemplateList);

/s
PathAssignmentPickOptimalService.determinePath(ShipmentOrderVO, List<PathTemplateVO>) line: 44	

		DateTime myEndDate = new DateTime(aShipmentOrderVO.getDateSetVO().getRequestedEnd());
Tue Sep 29 18:00:00 CEST 2015
/ want	,
/s
			if (theRequestedEndBefore != null) {
				return theRequestedEndBefore;
			}
			return theRequestedEndAfter;
/t
		DateSetVO myDateSet = aShipmentOrderVO.getDateSetVO();
		if (myDateSet.getRequestedStartAfter() != null) {
/ JA
			myBeginDate = new DateTime(aShipmentOrderVO.getDateSetVO().getRequestedStartAfter());
Tue Sep 29 08:00:00 CEST 2015

/ Dus time windows: req start after - reg start before                req end after - req start before 
/                   =start time                                                        = end time 

/////////////////////////////////////////
/ de tijden komen van de sho	, nu kijken welk path  past	,

		SortedSet<ServiceActionVO> myServiceActionList = aShipmentOrderVO.getServiceActionList();
[]

		// determine which path should be taken, and exactly how it should be made concrete
		QuotationPath mySelectedPathTemplate = pathDeterminationService.determinePathShipmentOrder(aShipmentOrderVO, aPathTemplateList, myEndDate, myBeginDate);
/s
/**
 * 
 * Service that searches in given paths to find an optimal path for a shipment order. The path is constrained by a
 * required end date (and first possible start date). Search starts from arrival and works back toward departure. Of
 * possible paths the cheapest is chosen. Lead time and cost calculated using an external module.
 * 
 * WARNING: non-scalable! The algorithm used suffers from possibility of combinatorial explosion. This service must only
 * be used for paths with say not more than 4 service action templates, only a few service order templates(designed to
 * be 1 on 1 with a carrier) attached per service action templates, and per service order template only a few possible
 * service levels.
 * 
 * not thread-safe
 */

public class AdvancedPathDeterminationServiceImpl implements PathDeterminationService {
	protected Map<ServiceActionTemplate, ServiceOrderVO> consolidatedServiceOrderMap;
...
AdvancedPathDeterminationServiceImpl.determinePossiblePathsShipmentOrder(ShipmentOrderVO, List<PathTemplateVO>, DateTime, DateTime, boolean) line: 300	
/=
	public QuotationResult determinePossiblePathsShipmentOrder(ShipmentOrderVO aShipmentOrder, List<PathTemplateVO> aPreSelectedPathTemplateList, DateTime anArrivalDate, DateTime aStartDate, boolean aDummy) {
anArrivalDate	DateTime  (id=31455)	
2015-09-29T18:00:00.000+02:00
aStartDate	DateTime  (id=31640)	
2015-09-28T08:00:00.000+02:00

		Session mySession = serviceOrderDao.getCurrentSession();
/ service order dao speelt geen rol	, ze moeten een dao hebben	,
/s
public abstract class BaseHibernateDAO<T> extends HibernateDaoSupport {
	public Session getCurrentSession() {
		return getHibernateTemplate().getSessionFactory().getCurrentSession();

/t
		Set<ServiceActionVO> myOriginalServiceActionList = new HashSet<ServiceActionVO>();
		myOriginalServiceActionList.addAll(aShipmentOrder.getServiceActionList());
[]
		setOriginalValues();
/s
AdvancedPathDeterminationServiceImpl.setOriginalValues() line: 863	
		originalShipmentOrder = plannedShipmentOrder.copy();
		originalShipmentOrder.setPreferedPartyVO(plannedShipmentOrder.getPreferedPartyVO());
null
		originalShipmentOrder.setActualServiceLevelVO(plannedShipmentOrder.getActualServiceLevelVO());
originalShipmentOrder	ShipmentOrderVO  (id=32723)	
	actualServiceLevelVO	ShipmentServiceLevelVO  (id=26990)	
		code	"3610" (id=32728)	
		description	"Pallet NL BNL Freight" (id=32729)	

/t
AdvancedPathDeterminationServiceImpl.determinePossiblePathsShipmentOrder(ShipmentOrderVO, List<PathTemplateVO>, DateTime, DateTime, boolean) line: 334	
		setOriginalValues();
/d
		// Check consolidation possibilities. If service actions on a path can be consolidated, any other is
		// disregarded.
		checkConsolidationForPathTemplates();
/s
AdvancedPathDeterminationServiceImpl.checkConsolidationForPathTemplates() line: 463	

		/*
		 * For quotation consolidation must not be tried. If a shipment order can be consolidated with an other shipment
		 * order, only this path template is evaluated. In other words, consolidation is always done.
		 */
		if (!isForQuotation()) {
/ JA
/ ALTIJD
/ want
/s
			return false;
/t
			PathTemplateVO myConsolidatedPathTemplate = null;
			for (PathTemplateVO myPathTemplate : preSelectedPathTemplateList) {
				if (consolidate(myPathTemplate)) {
/s
	/**
	 * This method tries to find consolidation candidates for service action templates in the path. If this found, it is
	 * stored in the consolidatedServiceOrderMap. Note that this is only done for service action templates with planning
	 * mode = 'Consolidate' and isOptimizationPossibleFlag = true. Regular, non-optimizable service actions which have
	 * the consolidation flag set are dealt with in ServiceActionFacadeEJB.
	 */
AdvancedPathDeterminationServiceImpl.consolidate(PathTemplateVO) line: 728	

		// loop through service actions of path
		List<ServiceActionTemplate> myServiceActionTemplateList = new ArrayList<ServiceActionTemplate>();
		myServiceActionTemplateList.addAll(aPathTemplateVO.getServiceActionTemplateList());
[
serviceActionTemplate SAT_COLLECT (systemId:26681857), 
serviceActionTemplate SAT_LINEHAUL (systemId:26681986), 
serviceActionTemplate SAT_DELIVERY-RITMO (systemId:26682526), 
serviceActionTemplate SAT_DELIVERY_NOTE (systemId:26682008)]

		// in reverse order, from end date to start date
		Collections.reverse(myServiceActionTemplateList);
/ TODO

/ eerst sa	,
		for (ServiceActionTemplate myServiceActionTemplate : myServiceActionTemplateList) {
serviceActionTemplate SAT_DELIVERY_NOTE (systemId:26682008)

			if (myServiceActionTemplate.isConsolidate() && myServiceActionTemplate.isOptimizationPossibleFlag()) {
false
/ want	,
/s
ServiceActionTemplate.isConsolidate() line: 530	
		return getPlanningMode() != null && getPlanningMode().isConsolidate();
/ getPlanningMode()=PlanningMode.CONSOLIDATE
/ getPlanningMode().isConsolidate()=true
/t
/ myServiceActionTemplate.isOptimizationPossibleFlag()=false

/ Intermezzo

ServiceActionTemplate.getConsolidationCriteria() 
/ heeft call hierarchy	,
consolidationCriteriaValid(ServiceActionVO)
determineServiceOrderTemplateForServiceAction(ServiceActionVO)
findConsolidateServiceOrder(ServiceActionVO, List<ServiceOrderVO>)
next(DateTime, DateTime)
plan(ServiceActionVO, TMSEventContext)

/ set b in ServiceActionTemplate.getConsolidationCriteria en kijk wanneer hij hierin valt	,


/ Einde Intermezzo

/ volgende sa	,
		for (ServiceActionTemplate myServiceActionTemplate : myServiceActionTemplateList) {
serviceActionTemplate SAT_DELIVERY-RITMO (systemId:26682526)
			if (myServiceActionTemplate.isConsolidate() && myServiceActionTemplate.isOptimizationPossibleFlag()) {
false
/ want	,
/s
ServiceActionTemplate.isConsolidate() line: 530	
		return getPlanningMode() != null && getPlanningMode().isConsolidate();
/ getPlanningMode()=PlanningMode.AUTO
/ getPlanningMode().isConsolidate()=false

/ volgende sa	,
		for (ServiceActionTemplate myServiceActionTemplate : myServiceActionTemplateList) {
serviceActionTemplate SAT_LINEHAUL (systemId:26681986)
			if (myServiceActionTemplate.isConsolidate() && myServiceActionTemplate.isOptimizationPossibleFlag()) {
true
/ want	,
/s
ServiceActionTemplate.isConsolidate() line: 530	
		return getPlanningMode() != null && getPlanningMode().isConsolidate();
/ getPlanningMode()=PlanningMode.CONSOLIDATE
/ getPlanningMode().isConsolidate()=true
/t
/ myServiceActionTemplate.isOptimizationPossibleFlag()=false

/ volgende sa	,
		for (ServiceActionTemplate myServiceActionTemplate : myServiceActionTemplateList) {
serviceActionTemplate SAT_COLLECT (systemId:26681857)
			if (myServiceActionTemplate.isConsolidate() && myServiceActionTemplate.isOptimizationPossibleFlag()) {
/ getPlanningMode()=PlanningMode.CONSOLIDATE
/ getPlanningMode().isConsolidate()=true
/t
/ myServiceActionTemplate.isOptimizationPossibleFlag()=false

/t
AdvancedPathDeterminationServiceImpl.consolidate(PathTemplateVO) line: 764	
/ Geen sa's meer	,
		return isConsolidated;
false
/t
AdvancedPathDeterminationServiceImpl.checkConsolidationForPathTemplates() line: 481	
			for (PathTemplateVO myPathTemplate : preSelectedPathTemplateList) {
				if (consolidate(myPathTemplate)) {
/ NEE
/ Geen path template meer	,

/t
AdvancedPathDeterminationServiceImpl.determinePossiblePathsShipmentOrder(ShipmentOrderVO, List<PathTemplateVO>, DateTime, DateTime, boolean) line: 336	
		checkConsolidationForPathTemplates();
/d
		cache = new ServiceActionCache(plannedShipmentOrder, pathDerminationOptions);
/ pathDerminationOptions=
QuotationMode=false, SkipZeroCost=true, SkipZeroPrice=false, IsLogging=true, PathSelectionMode=AUTO_PLAN
/s
/**
 * A ServiceActionCache object represents a service action in the path calculation/quotation methods. It is used to
 * quickly recalculate/evaluate different execution possibilities for the ServiceActionTempateVO. At a certain point in
 * time, this object represents only, exactly one execution variant. By means of calling the method 'next()', you get
 * the next variant, which fits the given time constraints.
 * 
 */
public class ServiceActionCache {
	protected CalculationService calculationService = MpoBeanFactory.getBean(CalculationService.class);
	protected Map<Integer, ServiceActionCacheObject> serviceActionCache = new HashMap<Integer, ServiceActionCacheObject>();
	protected ServiceActionConsolidator serviceActionConsolidator = MpoBeanFactory.getBean(ServiceActionConsolidator.class);
	protected ServiceOrderShipmentOrderCopier serviceOrderShipmentOrderCopier = MpoBeanFactory.getBean(ServiceOrderShipmentOrderCopier.class);
	private BigDecimal costUpperLimit = null;

	public ServiceActionCache(ShipmentOrderVO aShipmentOrder, PathDeterminationOptions aOptions) {
		shipmentOrder = aShipmentOrder;
		costUpperLimit = new BigDecimal(ApplicationPropertyManager.getInstance().getModuleProperty("oms", "serviceorder.cost.upperlimit", "999999"));
400000
		localTimeAtStart = shipmentOrder.getLocalDateTimeAtStart();
2015-09-29T11:00:12.660													/ now	,
		pathDeterminationOptions = aOptions;
QuotationMode=false, SkipZeroCost=true, SkipZeroPrice=false, IsLogging=true, PathSelectionMode=AUTO_PLAN
		serviceOrderDAO = MpoBeanFactory.getBean(ServiceOrderDao.class);
		monetaryValuePartService = MpoBeanFactory.getBean(MonetaryValuePartService.class);
		serviceOrderCalculationService = MpoBeanFactory.getBean(ServiceOrderCalculationService.class);
		serviceOrderService = MpoBeanFactory.getBean(ServiceOrderService.class);
	}

/t
AdvancedPathDeterminationServiceImpl.determinePossiblePathsShipmentOrder(ShipmentOrderVO, List<PathTemplateVO>, DateTime, DateTime, boolean) line: 337	
		cache = new ServiceActionCache(plannedShipmentOrder, pathDerminationOptions);
/d
		cache.setConsolidatedServiceOrderMap(consolidatedServiceOrderMap);
{}
/ herinner	,
	protected Map<ServiceActionTemplate, ServiceOrderVO> consolidatedServiceOrderMap;

		// Now check the paths one by one.
		for (PathTemplateVO myPathTemplate : preSelectedPathTemplateList) {
			evaluatePathTemplate(myPathTemplate);
/s
AdvancedPathDeterminationServiceImpl.evaluatePathTemplate(PathTemplateVO) line: 495	

			currentPathTemplate = aPathTemplateVO;
/ Deze wordt steeds accessed	, via this 	, later	, 
/ logisch	, is de path template	,

			for (ServiceActionTemplate myTemplate : currentPathTemplate.getServiceActionTemplateList()) {
/ myTemplate=serviceActionTemplate SAT_COLLECT (systemId:26681857)

				ServiceActionType myServiceActionType = myTemplate.getServiceActionType();
26681851/COLLECT/Collect / Ophaal
				} else {
					currentServiceActionTemplateList.add(myTemplate);

//////////////
/ currentServiceActionTemplateList is de list van sa's	, bij de path template	,

/ volgende sat	,
			for (ServiceActionTemplate myTemplate : currentPathTemplate.getServiceActionTemplateList()) {
serviceActionTemplate SAT_LINEHAUL (systemId:26681986)
				ServiceActionType myServiceActionType = myTemplate.getServiceActionType();
26681852/LINEHAUL/Linehaul / Vervoer tussen partners
				} else {
					currentServiceActionTemplateList.add(myTemplate);

/ volgende sat	,
			for (ServiceActionTemplate myTemplate : currentPathTemplate.getServiceActionTemplateList()) {
serviceActionTemplate SAT_DELIVERY-RITMO (systemId:26682526)
				ServiceActionType myServiceActionType = myTemplate.getServiceActionType();
26681854/DELIVERY/Delivery / Distributie
				} else {
					currentServiceActionTemplateList.add(myTemplate);

/ volgende sat	,
			for (ServiceActionTemplate myTemplate : currentPathTemplate.getServiceActionTemplateList()) {
serviceActionTemplate SAT_DELIVERY_NOTE (systemId:26682008)
				ServiceActionType myServiceActionType = myTemplate.getServiceActionType();
26681853/DELIVERY_NOTE/Delivery Note
				} else {
					currentServiceActionTemplateList.add(myTemplate);

			if (currentServiceActionTemplateList.size() == 0) {
/ NEE
			} else {
				DateTime myEndDate = requestedEndDate;
2015-09-29T18:00:00.000+02:00

				if (isRelaxEndDateConsolidation() && ...
/ false
				switch (aPathTemplateVO.getPathPlanningMode()) {
					case FORWARD:
						evaluateServiceActionTemplate(0, requestedStartDate, myEndDate);
/ requestedStartDate=	2015-09-28T08:00:00.000+02:00
/ myEndDate=			2015-09-29T18:00:00.000+02:00
/ forward begint vooraan	, dus 1ste arg is 0	, en we pakken dus de eerste sa	, de collect	, 

/ we zijn in evaluatePathTemplate	, en gaat de 1ste (TODO) service action evaluate	,
/s
AdvancedPathDeterminationServiceImpl.evaluateServiceActionTemplate(int, DateTime, DateTime) line: 789	
/=
	private void evaluateServiceActionTemplate(int aOrder, DateTime aRequestedStartDate, DateTime aRequestedEndDate) {

this	com.mpobjects.optimize.model.service.AdvancedPathDeterminationServiceImpl  (id=37169)	
	currentPathTemplate	com.mpobjects.oms.model.leggen.vo.PathTemplateVO  (id=37267)	
pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)
	currentServiceActionTemplateList	java.util.ArrayList  (id=37659)	
[serviceActionTemplate SAT_COLLECT (systemId:26681857), 
serviceActionTemplate SAT_LINEHAUL (systemId:26681986), 
serviceActionTemplate SAT_DELIVERY-RITMO (systemId:26682526), 
serviceActionTemplate SAT_DELIVERY_NOTE (systemId:26682008)]

		ServiceActionTemplate mySaTemplate = currentServiceActionTemplateList.get(aOrder);
aOrder=0	, want FORWARD	,
serviceActionTemplate SAT_COLLECT (systemId:26681857)
/ Klopt	, eerst de collect	,

/ Dit is NIET de delivery sa	, het path template heet nou eenmaal zo	,

		ServiceActionCacheObject myCacheObject = cache.getCachObject(mySaTemplate, currentPathTemplate);
/s
ServiceActionCache.getCachObject(ServiceActionTemplate, PathTemplateVO) line: 788	
		ServiceActionCacheObject myObject = serviceActionCache.get(aTemplate.getSystemId());
null
		if (myObject == null) {
/ JA
			myObject = new ServiceActionCacheObject(aTemplate, aPathTemplateVO);
/s
ServiceActionCache$ServiceActionCacheObject.<init>(ServiceActionCache, ServiceActionTemplate, PathTemplateVO) line: 126	
			serviceActionTemplate = aTemplate;
serviceActionTemplate SAT_COLLECT (systemId:26681857)
			quotationMode = aTemplate.getServiceActionType().getQuotationMode();
IGNORE_ZERO_COST
			pathEvaluationMode = aTemplate.getServiceActionType().getPathEvaluationMode();
IGNORE_ZERO_COST
			manual = PlanningMode.MANUAL.equals(serviceActionTemplate.getPlanningMode());
false
			isOptimizable = serviceActionTemplate.isOptimizationPossibleFlag();
false
			pathTemplate = aPathTemplate;
pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)
			leadTimeConstraint = determineLeadTimeConstraint(pathDeterminationOptions.getLeadTimeConstraint(), pathTemplate.getLeadTimeConstraint());
NO_CHECK
			currentTimeConstraint = determineCurrentTimeConstraint(pathDeterminationOptions.getCurrentTimeConstraint(), pathTemplate.getCurrentTimeConstraint());
IGNORE
			consolidatedServiceOrder = getConsolidationCandidate(serviceActionTemplate);
null
			if (consolidatedServiceOrder != null) {
/ NEE
			} else {
				replanConsolidated = false;
/t
ServiceActionCache.getCachObject(ServiceActionTemplate, PathTemplateVO) line: 788	
			myObject = new ServiceActionCacheObject(aTemplate, aPathTemplateVO);
/d
			serviceActionCache.put(aTemplate.getSystemId(), myObject);
/t
AdvancedPathDeterminationServiceImpl.evaluateServiceActionTemplate(int, DateTime, DateTime) line: 792	
		ServiceActionCacheObject myCacheObject = cache.getCachObject(mySaTemplate, currentPathTemplate);
/d
myCacheObject	com.mpobjects.optimize.model.service.ServiceActionCache$ServiceActionCacheObject  (id=37275)	
	pathTemplate	com.mpobjects.oms.model.leggen.vo.PathTemplateVO  (id=37267)	
pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)
	serviceActionTemplate	com.mpobjects.oms.model.serviceactiontemplate.ServiceActionTemplate  (id=37442)	
serviceActionTemplate SAT_COLLECT (systemId:26681857)
	serviceOrderTemplateList	java.util.ArrayList  (id=37611)	
[]
/ Heeft de sat	, pt	, 
/ Bij aOrder (=0) nu	, heeft de sa template	, dus nu de SAT_COLLECT	,

/ dus this=com.mpobjects.optimize.model.service.AdvancedPathDeterminationServiceImpl@5e8bbc89 heeft alle 4 de sat's	, de myCacheObject=com.mpobjects.optimize.model.service.ServiceActionCache$ServiceActionCacheObject@3fe2199 heeft de sat bij index aOrder	, een SAT_COLLECT bij aOrder=0	,

		while (true) {
			if (!myCacheObject.next(aRequestedStartDate, aRequestedEndDate)) {
/s
ServiceActionCache$ServiceActionCacheObject.next(DateTime, DateTime) line: 191	
/  this heeft pt en sat	, 
			if (serviceAction == null) {
				buildServiceAction();

////////////////////////////////////////
/ we hebben een sat	, sa template dus,	 en nu gaan we een sa build 	,
/s
ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 505	
			serviceAction = new ServiceActionBuilder(shipmentOrder).copyFromTemplate(serviceActionTemplate);
/s
ServiceActionBuilder.<init>(ShipmentOrderVO) line: 34	
		theShipmentOrder = aVO;
		serviceActionTemplateService = MpoBeanFactory.getBean(ServiceActionTemplateService.class);
/t
/s
ServiceActionBuilder.copyFromTemplate(ServiceActionTemplate) line: 47	
/=
	public ServiceActionVO copyFromTemplate(ServiceActionTemplate aTemplate) {
/ aTemplate=serviceActionTemplate SAT_COLLECT (systemId:26681857)

		ServiceActionVO myVO = new ServiceActionVO(ValueObject.VOLATILE_SYSTEM_ID, 0, null, theShipmentOrder, aTemplate.getServiceActionType(), "", null, aTemplate.getReference1(), aTemplate.getReference2(), aTemplate.getReference3(), aTemplate.getReference4(), aTemplate.getReference5(), aTemplate.getRemarks(), aTemplate.getHandlingInstructions());
/ Dus systemId=0
/ aTemplate.getServiceActionType()=26681851/COLLECT/Collect / Ophaal
aTemplate	ServiceActionTemplate  (id=20345)	
	serviceActionType	ServiceActionType  (id=25041)	
26681851/COLLECT/Collect / Ophaal
	theServiceActionTemplateId	"SAT_COLLECT" (id=28059)	

		myVO.setSequenceNr(aTemplate.getSequenceNumber());
5
/ TODO

		int myTemplateId = aTemplate.getSystemId();
26681857
		if (myTemplateId != ValueObject.VOLATILE_SYSTEM_ID) {
			myVO.setServiceActionTemplate(aTemplate);
		}

		myVO.setOrderStatusVO(MpoBeanFactory.getBean(OrderStatusDAO.class).getByCode(OrderStatusVO.STATUS_UNPLANNED));
/ OrderStatusVO.STATUS_UNPLANNED=1404

myVO	ServiceActionVO  (id=25250)	
	theOrderStatusVO	OrderStatusVO  (id=26423)	
		LOG	Log4JLogger  (id=26517)	
		code	"1404" (id=26518)	
		deleted	false	
		description	"OPEN" (id=26519)	
		performanceMonitorService	null	
		systemId	6	
		theType	"OPEN" (id=26520)	

pnllogistics3=# select*from order_status;
 system_id | is_deleted | status_code | status_type |         status_description         
-----------+------------+-------------+-------------+------------------------------------
         6 |          0 | 1404        | OPEN        | OPEN

		String myCopyFromFlag = aTemplate.getCopyLocationFrom();
PTG:FROM
/ PGT=ServiceActionTemplateServiceImpl.PARTY_TYPE_GROUP_PREFIX

		if (!StringUtils.isBlank(myCopyFromFlag)) {
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyFromFlag, theShipmentOrder);
/s
ServiceActionTemplateServiceImpl.resolveShipmentOrderParty(String, ShipmentOrderVO) line: 52	
/=
	public Party resolveShipmentOrderParty(String aCopyFromFlag, ShipmentOrderVO aShipmentOrder) {
aCopyFromFlag	"PTG:FROM" (id=27934)	
/ Deze vinden we niet terug in configuration, planning, party type groups
/ TODO 
		if (aCopyFromFlag.startsWith(PARTY_TYPE_GROUP_PREFIX)) {
/ JA
			String myPartyType = aCopyFromFlag.substring(PARTY_TYPE_GROUP_PREFIX.length());
FROM
			if (FROM.equalsIgnoreCase(myPartyType)) {
				return aShipmentOrder.getFromPartyVO();
/t
ServiceActionBuilder.copyFromTemplate(ServiceActionTemplate) line: 63	
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyFromFlag, theShipmentOrder);
/d
myShipmentOrderParty	VirtualParty  (id=28282)	
this	ServiceActionBuilder  (id=20602)	
aTemplate	ServiceActionTemplate  (id=20345)	
myVO	ServiceActionVO  (id=25250)	
myTemplateId	26681857	
myCopyFromFlag	"PTG:FROM" (id=27934)	
myShipmentOrderParty	VirtualParty  (id=28282)	
	address	"xxx" (id=28784)	
	address2	"7" (id=28785)	
	city	"Schiedam" (id=28787)	
	name	"constst frm" (id=28799)	
	systemId	0	

/ TODO (systemId=0)

			if (myShipmentOrderParty != null) {
				VirtualParty myParty = new VirtualParty();
				myParty.copyValuesFrom(myShipmentOrderParty);
				myVO.setFromPartyVO(myParty);

		String myCopyToFlag = aTemplate.getToLocationCopyFlag();
myCopyToFlag	"PTG:COLLECTIONDEPOT" (id=28068)	

/ Klopt, collect gaat van ship from naar collect	,  NIET naar ship to	,

		if (!StringUtils.isBlank(myCopyToFlag)) {
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyToFlag, theShipmentOrder);
/s
ServiceActionTemplateServiceImpl.resolveShipmentOrderParty(String, ShipmentOrderVO) line: 61	
		if (aCopyFromFlag.startsWith(PARTY_TYPE_GROUP_PREFIX)) {
			String myPartyType = aCopyFromFlag.substring(PARTY_TYPE_GROUP_PREFIX.length());
COLLECTIONDEPOT
			} else {
				return aShipmentOrder.getShipmentOrderParty(myPartyType);
/s
ShipmentOrderVO.getShipmentOrderParty(String) line: 1697	
		for (ShipmentOrderParty party : getShipmentOrderParties()) {
this 								ShipmentOrderVO
	theShipmentOrderPartyList		PersistentBag
		[0] 						ShipmentOrderParty
			name					"Depot Dordrecht"
			partyId					"DOR"
			partyTypeGroup			
				thePartyTypeGroup	"CollectionDepot"
		[1] 						ShipmentOrderParty
			name					"Depot Eindhoven"
			partyId					"EHV"
			partyTypeGroup			
				thePartyTypeGroup	"CollectionDepot"

/ Deze ptg heeft alleen SORTEERHUB als party group	,
		
/ party=com.mpobjects.oms.model.entity.shipmentorderparty.ShipmentOrderParty@3e379a79[shipmentOrder=ShipmentOrder: SH000002993(SystemId:26845924; Org:PNL-CARGO),name=Depot Dordrecht,partyTypeGroup=theSystemId: 26681485PartyTypeGroup :CollectionDepot]

			if (aPartyTypeGroupCode.equalsIgnoreCase(party.getPartyTypeGroup().getCode())) {
/ JA
				return party;

/ Intermezzo 

/ De andere party is het DistributionDepot in Eindhoven	,

/ We zien inderdaad	,
		for (ShipmentOrderParty party : getShipmentOrderParties()) {

/ Dus CollectionDepot, DistributionDepot zijn ShipmentOrderParty's	, Geen VirtualParty's	,

$ vi ShipmentOrderParty.standard.hbm.xml
	<class name="com.mpobjects.oms.model.entity.shipmentorderparty.ShipmentOrderParty" table="SHIPMENT_ORDER_PARTY"


/ Einde Intermezzo 

/t
ServiceActionBuilder.copyFromTemplate(ServiceActionTemplate) line: 79	
		String myCopyToFlag = aTemplate.getToLocationCopyFlag();
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyToFlag, theShipmentOrder);
/d
			if (myShipmentOrderParty != null) {
				VirtualParty myParty = new VirtualParty();
				myParty.copyValuesFrom(myShipmentOrderParty);
				myVO.setToPartyVO(myParty);
/ Ship to wordt inderdaad een Virtual Party	,

		// Take dates from the shipment order.
		myVO.getDateSetVO().setRequestedEndAfter(theShipmentOrder.getDateSetVO().getRequestedEndAfter());
		myVO.getDateSetVO().setRequestedEndBefore(theShipmentOrder.getDateSetVO().getRequestedEndBefore());
		myVO.getDateSetVO().setRequestedStartAfter(theShipmentOrder.getDateSetVO().getRequestedStartAfter());
		myVO.getDateSetVO().setRequestedStartBefore(theShipmentOrder.getDateSetVO().getRequestedStartBefore());

/ myVO is een ServiceActionVO	,

		myVO.setPlanningMode(aTemplate.getPlanningMode());
CONSOLIDATE
		myVO.setExecutionMode(aTemplate.getExecutionMode());
MANUAL

/ we zien de execution mode in de GUI in de configuration, planning , service action template, we zien een list van sat's	, open een sat	, 

		myVO.setAvgLeadTimeHrs(aTemplate.getAvgLeadtimeHrs());
0
		return myVO
/t
ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 505	
			serviceAction = new ServiceActionBuilder(shipmentOrder).copyFromTemplate(serviceActionTemplate);
/d
/////////////////////
			serviceAction.setOrderStatusCode(OrderStatusVO.STATUS_UNPLANNED);

this	ServiceActionCache$ServiceActionCacheObject  (id=27927)	
	serviceAction	ServiceActionVO  (id=30346)	
		theOrderStatusVO	OrderStatusVO  (id=32794)	
			code	"1404" (id=33292)	

			serviceAction.setShipmentOrderVO(shipmentOrder);
			shipmentOrder.addOrReplaceServiceAction(serviceAction);
/s
ShipmentOrderVO.addOrReplaceServiceAction(ServiceActionVO) line: 335	
		for (ServiceActionVO myExistingSA : theServiceActionList) {
[]
		...
		addServiceAction(aVO);
/s
ShipmentOrderVO.addServiceAction(ServiceActionVO) line: 357	
		theServiceActionList.add(aVO);
		aVO.setShipmentOrderVO(this);

/t
ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 510	
			shipmentOrder.addOrReplaceServiceAction(serviceAction);
/d
			serviceOrderTemplateList.addAll(serviceActionTemplate.getServiceOrderTemplateList());
[COLLECT/26682241]
/ Dit is een seo	, een ServiceOrder, zijn serviceOrderId="COLLECT"	,
/ Klopt	, er is niet zoiets als een sat	, een seo template is een seo	, die een template	 is	,

this	com.mpobjects.optimize.model.service.ServiceActionCache$ServiceActionCacheObject  (id=37275)	
	pathTemplate	com.mpobjects.oms.model.leggen.vo.PathTemplateVO  (id=37267)	
pathTemplateVO:DELIVERY RITMO INCL LH(systemId:26682598)
	serviceAction	com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO  (id=40292)	
SH000002993/COLLECT/0
	serviceActionTemplate	com.mpobjects.oms.model.serviceactiontemplate.ServiceActionTemplate  (id=37442)	
serviceActionTemplate SAT_COLLECT (systemId:26681857)
	serviceOrder	null	
	serviceOrderTemplateList	java.util.ArrayList  (id=37611)	
[COLLECT/26682241]

/ Intermezzo

/ we zijn in	,

ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 511	
			serviceAction = new ServiceActionBuilder(shipmentOrder).copyFromTemplate(serviceActionTemplate);
			serviceAction.setOrderStatusCode(OrderStatusVO.STATUS_UNPLANNED);
			serviceAction.setShipmentOrderVO(shipmentOrder);
			shipmentOrder.addOrReplaceServiceAction(serviceAction);

			serviceOrderTemplateList.addAll(serviceActionTemplate.getServiceOrderTemplateList());
/d
			serviceOrderTemplateIndex = 0;

/ we hebben de sa create	,

/ Einde Intermezzo

deploy-mpo.sh /local/apps/releases/tms-mpo-21308-2015.01_build3295.zip /local/apps/jboss-4.0.5.GA/server/mpo


/ Intermezzo

pnllogistics3=# select column_name from information_schema.columns where table_name='service_order' and column_name like '%template%';
    column_name    
-------------------
 is_template
 template_systemid
(2 rows)

pnllogistics3=# select is_template from service_order where system_id=26682241;
 is_template 
-------------
           1
(1 row)

/ Einde Intermezzo

/ dus iedere sat heeft een list van seot's, 	dat zijn seo's die als template fungeren	, 
/ er is niet zoiets als een seo template,	 net als er een sa template is	,

			serviceOrderTemplateIndex = 0;
/ TODO
/t
ServiceActionCache$ServiceActionCacheObject.next(DateTime, DateTime) line: 193	
			if (serviceAction == null) {
				buildServiceAction();
/d
this	ServiceActionCache$ServiceActionCacheObject  (id=27242)	
	serviceAction	ServiceActionVO  (id=27374)	
	serviceActionTemplate	ServiceActionTemplate  (id=26345)	
	serviceOrder	null	
	serviceOrderTemplateIndex	0	
	serviceOrderTemplateList	ArrayList  (id=28687)	

/ er is dus een sa create van de sat	, en de seot is bepaald en beide zijn set in deze sa cache obj	,

			mySaDates.setRequestedStartAfter(aRequestedStartDate.toDate());
			mySaDates.setRequestedStartBefore(aRequestedStartDate.toDate());
			mySaDates.setRequestedEndAfter(aRequestedEndDate.toDate());
			mySaDates.setRequestedEndBefore(aRequestedEndDate.toDate());
			mySaDates.setPlannedEndAfter(aRequestedEndDate.toDate());
			mySaDates.setPlannedEndBefore(aRequestedEndDate.toDate());

			templateLoop: while (true) {
				if (advanceTemplate) {
						} else {
							buildServiceOrder();
/s
ServiceActionCache$ServiceActionCacheObject.buildServiceOrder() line: 519	
			ServiceOrderVO template = serviceOrderTemplateList.get(serviceOrderTemplateIndex);
serviceOrderTemplateIndex=0
			serviceOrder = template.copy();
/s
ServiceOrderVO.copy() line: 401	
		ServiceOrderVO myVO = new ServiceOrderVO();
/e
public abstract class LogisticsOrderVO extends EntityDetailSupport implements PartyLookupContext {
/e
public abstract class EntityDetailSupport extends ResourceProtectedValueObject implements EntityDetailsHolder {
/e
public abstract class ResourceProtectedValueObject extends UniqueFieldValueObjectImpl implements OrganizationValueObjectInterface {
/e
public abstract class UniqueFieldValueObjectImpl extends ValueObject implements UniqueFieldValueObject {
/e
public abstract class ValueObject implements java.io.Serializable, SelectionListHelper.SelectionListItem, EntityInterface {

/ this.isTemplate=true	,
/ myVo.isTemplate=false	, omdat <init> dat doet	,

		copyTo(myVO);
/s
ServiceOrderVO.copyTo(ServiceOrderVO) line: 412	
		super.copyTo(aVO);
/s
ServiceOrderVO(LogisticsOrderVO).copyTo(LogisticsOrderVO) line: 1087	
		super.copyTo(aVO);
...
/s
ServiceOrderVO(ValueObject).copyTo(ValueObject) line: 282	
		aVO.setSystemId(getSystemId());
...
/t
ServiceOrderVO(ResourceProtectedValueObject).copyTo(ResourceProtectedValueObject) line: 67	
		super.copyTo(aVO);
/d
			aVO.setOrganization(getOrganization());
systemId:500	Id:PNL-CARGO	Description:PostNL Cargo
/t
ServiceOrderVO(LogisticsOrderVO).copyTo(LogisticsOrderVO) line: 1088	
		super.copyTo(aVO);
/d
		this.updateTo(aVO);
/s
ServiceOrderVO(LogisticsOrderVO).updateTo(LogisticsOrderVO) line: 1260	
		super.updateTo(aVO);
/s
ServiceOrderVO(EntityDetailSupport).updateTo(LogisticsOrderVO) line: 307	
		for (Entry<EntityDetailType, String> entry : getEntityDetails().entrySet()) {
/ NEE
{}
/t
ServiceOrderVO(LogisticsOrderVO).updateTo(LogisticsOrderVO) line: 1260	
		super.updateTo(aVO);
/d
/ this is het seo template	, aVO =new ServiceOrder()	, en we copy de template data -> aVO
this.isTemplate=true
aVo.isTemplate=false	,

		aVO.setOrderStatusVO(theOrderStatusVO);
null
/ de seo template's theOrderStatusVO=null

		aVO.setValueCurrencyVO(theValueCurrencyVO);
null
		aVO.setAltValueCurrencyVO(theAltValueCurrencyVO);
null
		if (theToPartyVO != null) {
			aVO.setToPartyVO(new VirtualParty(theToPartyVO));
/ JA
/ de seo's theToPartyVO is er 	, niet NULL	,
		}
		if (theFromPartyVO != null) {
/ JA
			aVO.setFromPartyVO(new VirtualParty(theFromPartyVO));
		}
		if (getDateSetVO() == null) {
/ NEE
		} else {
			aVO.setDateSetVO(getDateSetVO().deepClone());
/=
				new DataSetVO();
RSAFTER: null, RSBEFORE: null, REAFTER: null, REBEFORE: null, PSAFTER: null, PSBEFORE: null, PEAFTER: null, PEBEFORE: null, AS: null, AE: null, RELEASE:null, PRELEASE:null, CLOSE:null

		aVO.setHoldStatus(theHoldStatus);
null
		aVO.setAdditionalInformationMap(getAdditionalInformationMap());
{}
/= seot=this's  theAdditionalInfoMap
		aVO.setPayWeight(getPayWeight());
null
/= seot=this's payWeight
		aVO.setPrice(getPrice());
null
/= seot=this's thePrice
		aVO.setTemporary(isTemporary());
false
/= seot=this's tempory
		aVO.setEmission(getEmission());
null
/= seot=this's emission 
		cloneTotals(aVO);
/s
ServiceOrderVO(LogisticsOrderVO).cloneTotals(LogisticsOrderVO) line: 211	
/=
	public void cloneTotals(LogisticsOrderVO aLogisticsOrderVO) {
this=seot	,
aLogisticsOrderVO=new ServiceOrder()	, we cp seot's values in aLogisticsOrderVO	,
			boolean myOrigRecalculate = shouldRecalculate();
false
/= seot=this's theRecalculateFlag
/ Bewaar voor herstel	,

			setRecalculate(false);
/s
				theRecalculateFlag = aRecalculate;
				theRecalculateActualsFlag = aRecalculate;
/t
			aLogisticsOrderVO.setRecalculate(false);

			aLogisticsOrderVO.setRequestedTotalColli(getRequestedTotalColli());
/=seot=this's theRequestedTotalColli
null
			aLogisticsOrderVO.setRequestedTotalWeightKg(getRequestedTotalWeightKg());
/=seot=this's theRequestedTotalWeightKg
null
			aLogisticsOrderVO.setRequestedTotalVolumeM3(getRequestedTotalVolumeM3());
/=seot=this's theRequestedTotalVolumeM3
null
			aLogisticsOrderVO.setRequestedTotalLoadingMeters(getRequestedTotalLoadingMeters());
/=seot=this's theRequestedTotalLoadingMeters
null
			aLogisticsOrderVO.setRequestedAltTotalValue(getRequestedAltTotalValue());
/=seot=this's theRequestedAltTotalValue
null
			aLogisticsOrderVO.setRequestedTotalItems(getRequestedTotalItems());
/=seot=this's theRequestedTotalItems
null
			aLogisticsOrderVO.setRequestedTotalValue(getRequestedTotalValue());
/=seot=this's theRequestedTotalItems
null

			setRecalculate(myOrigRecalculate);
			aLogisticsOrderVO.setRecalculate(myOrigRecalculate);
/ herstel
/t
ServiceOrderVO(LogisticsOrderVO).updateTo(LogisticsOrderVO) line: 1282	
		cloneTotals(aVO);
/d
		aVO.setLockPrecalculation(isLockPrecalculation());
null
/= seot=this's lockPrecalculation
		aVO.setApprovedBy(getApprovedBy());
null
/= seot=this's approvedBy 
		aVO.setApprovedOnDate(getApprovedOnDate());
null
/= seot=this's approvedOnDate 
		aVO.setApprovePrecalculation(isApprovePrecalculation());
null
/= seot=this's approvePrecalculation
		aVO.setRatecalcMd5Hash(getRatecalcMd5Hash());
null
/= seot=this's ratecalcMd5Hash

/t
ServiceOrderVO.copyTo(ServiceOrderVO) line: 415	
		super.copyTo(aVO);
/d

/ Intermezzo

/ we zijn in ,	

ServiceActionCache$ServiceActionCacheObject.next(DateTime, DateTime) line: 239	
				buildServiceAction();
...
							buildServiceOrder();

/ Daarom (op dit moment)	,
this	ServiceActionCache$ServiceActionCacheObject  (id=22559)	
	serviceAction	ServiceActionVO  (id=24594)	
SH000002993/COLLECT/0
	serviceOrder	null	


/ Einde Intermezzo

		aVO.setTemplate(isTemplate());
/= isTemplate																			
true																		/ !
		aVO.setServiceOrderId(getServiceOrderId());
/=serviceOrderId
"COLLECT"
		aVO.setOrderProcess(getOrderProcess());
/=orderProcess
OUTBOUND
		aVO.setServiceType(getServiceType());
/=serviceType
null
		aVO.setServiceOrderType(getServiceOrderType());
/=serviceOrderType
SystemId:26681858	IsDeleted:false	Type:COLLECT	Description:Afhalen
		aVO.setExecutedByPartyVO(getExecutedByPartyVO());
/=executedByVO
null
		aVO.setExecutedBy2PartyVO(getExecutedBy2PartyVO());
/=executedBy2VO
null
		aVO.setCreatedByVO(getCreatedByVO());
/=createdByVO
null
		aVO.setSystemEntryDate(getSystemEntryDate());
/=systemEntryDate
2015-04-16 16:23:27.013
/ TODO
		aVO.setReference1(getReference1());
/=reference1
""
		aVO.setReference2(getReference2());
/=reference2
""
		aVO.setExecutionStrategy(getExecutionStrategy());
/=executionStrategy
FIXED
		aVO.setReference3(getReference3());
		aVO.setReference4(getReference4());
		aVO.setReference5(getReference5());
		aVO.setReference6(getReference6());
		aVO.setReference7(getReference7());
		aVO.setReference8(getReference8());
		aVO.setRemarks(getRemarks());
/=remarks
""
		aVO.setRemarks2(getRemarks2());
/=remarks2
""
		aVO.setBillOfLadingNr(getBillOfLadingNr());
/=billOfLadingNr
""
		aVO.setAirwayBillNr(getAirwayBillNr());
/=airwayBillNr
""
		aVO.setCarrierReference(getCarrierReference());
/=carrierReference
""
		aVO.setVesselName(getVesselName());
/=vesselName
""
		aVO.setDepPort(getDepPort());
/=depPort
""
		aVO.setPortDepDate(getPortDepDate());
/=portDepDate
null
		aVO.setDepPortCountryVO(getDepPortCountryVO());
/=depPortCountryVO
null
		aVO.setArrPort(getArrPort());
/=arrPort
""
		aVO.setPortArrDate(getPortArrDate());
/=portArrDate
null
		aVO.setArrPortCountryVO(getArrPortCountryVO());
/=arrPortCountryVO
null
		aVO.setSealNumber(getSealNumber());
/=sealNumber
""
		aVO.setSeaContainerNumber(getSeaContainerNumber());
/=seaContainerNumber
""
		aVO.setTotalCost(getTotalCost());
/=totalCost
0.00 (BigDecimal; was 0.0000, is setScale (2) to 0.00)
		aVO.setCostCurrencyVO(getCostCurrencyVO());
/=costCurrencyVO
null
		aVO.setCostMethod(getCostMethod());
/=costMethod
NONE
		aVO.setAltTotalCost(getAltTotalCost());
/=altTotalCost
0.00 (BigDecimal; was 0.0000, is setScale (2) to 0.00)
		aVO.setAltCostCurrencyVO(getAltCostCurrencyVO());
/=altCostCurrencyVO
null
		aVO.setDashboardId(getDashboardId());
/=dashboardId
null
		aVO.setSyncFromFlag(getSyncFromFlag());
/=syncFromFlag
"$"
		aVO.setSyncToFlag(getSyncToFlag());
/=syncToFlag
"$"
		aVO.setPlanningReasonCode(getPlanningReasonCode());
/=planningReasonCode
null
		aVO.setServiceOrderTemplate(getServiceOrderTemplate());
/=serviceOrderTemplate
null																				/ !
		aVO.setCapacityVolume(getCapacityVolume());
/=
			return capacityVolume.divide(new BigDecimal(1), getVolumePrecision(), BigDecimal.ROUND_HALF_UP);
/capacityVolume=0.0000 BigDecimal
/getVolumePrecision()=3
0.000
		aVO.setCapacityWeight(getCapacityWeight());
/s
		return capacityWeight.divide(new BigDecimal(1), getWeightPrecision(), BigDecimal.ROUND_HALF_UP);
/ capacityWeight=BigDecimal 0.0000 
/ getWeightPrecision()=2
/t
/s
ServiceOrderVO.setCapacityWeight(BigDecimal) line: 1927	
/=
	public void setCapacityWeight(BigDecimal aCapacityWeight) {
/ aCapacityVolume=0.00 BigDecimal
		capacityWeight = ObjectUtils.defaultValue(aCapacityWeight, BigDecimal.ZERO);
		recalcUtilizationWeight();
/ TODO

/ Intermezzo

/ we zijn in	,

ServiceActionCache$ServiceActionCacheObject.buildServiceOrder() line: 520	
			ServiceOrderVO template = serviceOrderTemplateList.get(serviceOrderTemplateIndex);
			serviceOrder = template.copy();
/s
ServiceOrderVO.copy() line: 403	
		ServiceOrderVO myVO = new ServiceOrderVO();
		copyTo(myVO);
/s
ServiceOrderVO.copyTo(ServiceOrderVO) line: 415	
		super.copyTo(aVO);

		aVO.setTemplate(isTemplate());
...
		aVO.setCapacityWeight(getCapacityWeight());

/ Einde Intermezzo

		aVO.setCapacityLoadingMeter(getCapacityLoadingMeter());
/=
			return capacityLoadingMeter.divide(new BigDecimal(1), getLDMPrecision(), BigDecimal.ROUND_HALF_UP);

		aVO.setServiceProviderRemarks(getServiceProviderRemarks());
/=
			return serviceProviderRemarks;
""
		aVO.setActualDistance(getActualDistance());
/s
			return actualDistance;
BigDecimal 0.0000
		aVO.setActualProcessingTime(getActualProcessingTime());
/s
Duration
	iMillis=0
PT0S
		aVO.setPlannedDistance(getPlannedDistance());
/s
			return plannedDistance;
BigDecimal 0.0000

		aVO.setPlannedProcessingTime(getPlannedProcessingTime());
/s
			return plannedProcessingTime;
Duration
	iMillis=0
PT0S
		aVO.setServiceLevel(getServiceLevel());
/s
			return serviceLevel;
""
		aVO.setPreferencePercentage(getPreferencePercentage());
			return preferencePercentage;
BigDecimal 0.00
		aVO.setManualPlan(isManualPlan());
/s
			return manualPlan;
false
		aVO.setServiceOrderInvoiceStatus(getServiceOrderInvoiceStatus());
/s
			return serviceOrderInvoiceStatus;
OPEN
		// myVO.setInvoicePodStatus(getInvoicePodStatus());
		aVO.setInvoiceRechargeStatus(getInvoiceRechargeStatus());
			return invoiceRechargeStatus;
INITIAL
		aVO.setVatExportLevel(getVatExportLevel());
			return vatExportLevel;
null
		aVO.setExportDateOnStart(getExportDateOnStart());
/s
			return exportDateOnStart;
null
		aVO.setExportDateOnEnd(getExportDateOnEnd());
/s
			return exportDateOnEnd;
null
		aVO.setExportDateOnRelease(getExportDateOnRelease());
/s
			return exportDateOnRelease;
null
		aVO.setFreeCapacityWeight(getFreeCapacityWeight());
/s
			return freeCapacityWeight;
BigDecimal 0
		aVO.setFreeCapacityVolume(getFreeCapacityVolume());
/s
			return freeCapacityVolume;
BigDecimal 0.00000
		aVO.setFreeCapacityLdm(getFreeCapacityLdm());
/s
			return freeCapacityLdm;
BigDecimal 0
		aVO.setUtilizationCapacityWeight(getUtilizationCapacityWeight());
/s
			return utilizationCapacityWeight;
BigDecimal 0
		aVO.setUtilizationCapacityVolume(getUtilizationCapacityVolume());
				return utilizationCapacityVolume;
BigDecimal 0.00
		aVO.setUtilizationCapacityLdm(getUtilizationCapacityLdm());
			return utilizationCapacityLdm;
BigDecimal 0
		aVO.setEnableCapacityCalculations(true);
/s
			enableCapacityCalculations = aEnableCapacityCalculations;
		aVO.setInstructionGroupVO(getInstructionGroupVO());
/s
			return instructionGroup;
null
		aVO.setSupplierContractSystemId(getSupplierContractSystemId());
/s
			return supplierContractSystemId;
null
		aVO.setErrorMessage(getErrorMessage());
/s
			return errorMessage;
""
		aVO.setCustomerStatus(getCustomerStatus());
/s
			return customerStatus;
null
		if (getGenericServiceOrderData() != null) {
/s
			return genericServiceOrderData;
null
/ NEE
		try {
			aVO.setSchedule(getSchedule());
/s
				if (schedule == null && !StringUtils.isEmpty(scheduleXml)) {
/ NEE
				return schedule;

		aVO.setScheduleDescription(getScheduleDescription());
/s
			return scheduleDescription;
null

/t
ServiceOrderVO.copy() line: 404	
		copyTo(myVO);
/d
		return myVO;
/t
ServiceActionCache$ServiceActionCacheObject.buildServiceOrder() line: 520	
			serviceOrder = template.copy();
/d
			serviceOrder.setServiceOrderTemplate(template);
/s
				serviceOrderTemplate = aTemplate;
/t
			serviceOrder.setServiceOrderId(ServiceOrderIdBuilder.buildId(shipmentOrder, serviceOrder));
/s
ServiceOrderIdBuilder.buildId(ShipmentOrderVO, ServiceOrderVO) line: 17	
		StringBuilder myBuilder = new StringBuilder();
		String myPrefix = aShipmentOrderVO.getShipmentOrderId();
myPrefix	"SH000002993" (id=29148)	
		} else {
			myBuilder.append(myPrefix.trim());
		myBuilder.append("-");
		if (aServiceOrder.getServiceOrderType()!=null && !StringUtils.isBlank(aServiceOrder.getServiceOrderType().getCode())){
SystemId:26681858	IsDeleted:false	Type:COLLECT	Description:Afhalen
			myBuilder.append(aServiceOrder.getServiceOrderType().getCode());
SH000002993-COLLECT
		return StringUtils.right(myBuilder.toString(), 80);
/t
ServiceActionCache$ServiceActionCacheObject.buildServiceOrder() line: 523	
			serviceOrder.setServiceOrderId(ServiceOrderIdBuilder.buildId(shipmentOrder, serviceOrder));
/d
			buildConsignment();
/s
ServiceActionCache$ServiceActionCacheObject.buildConsignment() line: 453	

			consignment = ConsignmentHelper.createConsignmentByOrderData(serviceAction, serviceOrder, serviceOrder.getOrderStatusVO());
/s
ConsignmentHelper.createConsignmentByOrderData(ServiceActionVO, ServiceOrderVO, OrderStatusVO) line: 46	
/=
	 * Creates a consignment based on a ServiceAction and a ServiceOrder. The Service action is used to copy the
	 * requested dates from, the planned and actual dates are copied from the service order.
	 *k
	public static ConsignmentVO createConsignmentByOrderData(ServiceActionVO aServiceActionVO, ServiceOrderVO aServiceOrder, OrderStatusVO aStatus) {
/ aStatus=null

		ConsignmentVO myVO = new ConsignmentVO();

		DateSetVO mySourceDateSet = aServiceActionVO.getDateSetVO();
RSAFTER: Mon Sep 28 08:00:00 CEST 2015,									
/ requested start after
RSBEFORE: Mon Sep 28 08:00:00 CEST 2015, 								
/ requested start before
REAFTER: Tue Sep 29 18:00:00 CEST 2015,
/ requested end after 
REBEFORE: Tue Sep 29 18:00:00 CEST 2015, 
/ requested end before 
PSAFTER: null,
PSBEFORE: null,
PEAFTER: Tue Sep 29 18:00:00 CEST 2015,
PEBEFORE: Tue Sep 29 18:00:00 CEST 2015,
AS: null,
AE: null,
RELEASE:null,
PRELEASE:null,
CLOSE:null
		DateSetVO myDateSet = new DateSetVO();

		myDateSet.setRequestedEndAfter(mySourceDateSet.getRequestedEndAfter());
		myDateSet.setRequestedEndBefore(mySourceDateSet.getRequestedEndBefore());
		myDateSet.setRequestedStartAfter(mySourceDateSet.getRequestedStartAfter());
		myDateSet.setRequestedStartBefore(mySourceDateSet.getRequestedStartBefore());

		mySourceDateSet = aServiceOrder.getDateSetVO();
RSAFTER: null,
 RSBEFORE: null,
 REAFTER: null,
 REBEFORE: null,
 PSAFTER: null,
 PSBEFORE: null,
 PEAFTER: null,
 PEBEFORE: null,
 AS: null,
 AE: null,
 RELEASE:null,
 PRELEASE:null,
 CLOSE:null

		myDateSet.setPlannedEndAfter(mySourceDateSet.getPlannedEndAfter());
		myDateSet.setPlannedEndBefore(mySourceDateSet.getPlannedEndBefore());
		myDateSet.setPlannedStartAfter(mySourceDateSet.getPlannedStartAfter());
		myDateSet.setPlannedStartBefore(mySourceDateSet.getPlannedStartBefore());
		myDateSet.setActualStart(mySourceDateSet.getActualStart());
		myDateSet.setActualEnd(mySourceDateSet.getActualEnd());
		myDateSet.setActualRelease(mySourceDateSet.getActualRelease());
		myDateSet.setPlannedReleaseDate(mySourceDateSet.getPlannedReleaseDate());

		myVO.setDateSetVO(myDateSet);

		myVO.setFromPartyVO(new VirtualParty(aServiceActionVO.getFromPartyVO()));
myVO	com.mpobjects.oms.model.consignment.vo.ConsignmentVO  (id=34225)	
	theFromPartyVO	com.mpobjects.oms.model.entity.VirtualParty  (id=36289)	
		address	"xxx" (id=36078)	
		address2	"7" (id=36079)	
		city	"Schiedam" (id=36080)	
		postalCode	"3012cn" (id=36103)	
		...
		myVO.setReference1(aServiceActionVO.getReference1());
		myVO.setReference2(aServiceActionVO.getReference2());
		myVO.setReference3(aServiceActionVO.getReference3());
		myVO.setReference4(aServiceActionVO.getReference4());

		myVO.setServiceOrderVO(aServiceOrder);

		myVO.setOrderStatusVO(aStatus);
		myVO.setToPartyVO(new VirtualParty(aServiceActionVO.getToPartyVO()));
aServiceActionVO	com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO  (id=33859)	
aServiceOrder	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO  (id=31876)	
aStatus	null	
myVO	com.mpobjects.oms.model.consignment.vo.ConsignmentVO  (id=34225)	
	theToPartyVO	com.mpobjects.oms.model.entity.VirtualParty  (id=36895)	
		address	"Pieter Zeemanweg" (id=35923)	
		address2	"146" (id=35926)	
		city	"Dordrecht" (id=35927)	
		name	"Depot Dordrecht" (id=36022)	
		...

		myVO.setSequenceNr(myVO.getSystemId());
0
/t
ServiceActionCache$ServiceActionCacheObject.buildConsignment() line: 456	
			consignment = ConsignmentHelper.createConsignmentByOrderData(serviceAction, serviceOrder, serviceOrder.getOrderStatusVO());
/d
			/* Copy from party details based on sync flags */
			if (serviceOrder.getSyncFromFlag() != null) {
"S"
				} else if (serviceOrder.getSyncFromFlag().equals("S")) {
					serviceOrder.setFromPartyVO(serviceAction.getFromPartyVO());
/ xxx, 7, Schiedam, ...

			/* Copy to party details based on sync flags */
			if (serviceOrder.getSyncToFlag() != null) {
				} else if (serviceOrder.getSyncToFlag().equals("S")) {
					serviceOrder.setToPartyVO(serviceAction.getToPartyVO());
PARTY id:DOR(systemId:0)

			serviceAction.getDateSetVO().copyRequested(serviceOrder.getDateSetVO(), true);
/s
DateSetVO.copyRequested(DateSetVO, boolean) line: 251	
		if (aTarget.getRequestedStartAfter() == null || !onlyWhenEmpty) {
/ JA
			aTarget.setRequestedStartAfter(getRequestedStartAfter());
		}
		if (aTarget.getRequestedStartBefore() == null || !onlyWhenEmpty) {
/ JA
			aTarget.setRequestedStartBefore(getRequestedStartBefore());
		}
		if (aTarget.getRequestedEndAfter() == null || !onlyWhenEmpty) {
/ JA
			aTarget.setRequestedEndAfter(getRequestedEndAfter());
		}
		if (aTarget.getRequestedEndBefore() == null || !onlyWhenEmpty) {
/ JA
			aTarget.setRequestedEndBefore(getRequestedEndBefore());
/t
ServiceActionCache$ServiceActionCacheObject.buildConsignment() line: 479	
			serviceAction.getDateSetVO().copyRequested(serviceOrder.getDateSetVO(), true);
/d
			serviceAction.setConsignmentVO(consignment);
			List<ServiceActionVO> myServiceActionVoList = new ArrayList<ServiceActionVO>();
			myServiceActionVoList.add(serviceAction);
			consignment.setServiceActionList(myServiceActionVoList);

			consignment.setServiceOrderVO(serviceOrder);
			List<ConsignmentVO> myConsignmentVoList = new ArrayList<ConsignmentVO>();
			myConsignmentVoList.add(consignment);
			serviceOrder.setConsignmentList(myConsignmentVoList);
			serviceOrder.setFirstServiceActionForPlanning(serviceAction);
/t
ServiceActionCache$ServiceActionCacheObject.next(DateTime, DateTime) line: 240	
						} else {
							buildServiceOrder();
/d
							serviceOrderTemplateIndex++;
1
/ Het collect template is  de 1ste,	 hierna komt de linehaul	,

					String myReplanCriteria = serviceActionTemplate.getReplanCriteria();
""
					if (StringUtils.isEmpty(myReplanCriteria) || serviceOrderTemplateList.size() == 1) {
						if (serviceOrderTemplateIndex == 1) {
							dealWithManual();
/s
ServiceActionCache$ServiceActionCacheObject.dealWithManual() line: 530	
			buildAlternatives(true);
/s
ServiceActionCache$ServiceActionCacheObject.buildAlternatives(boolean) line: 388	
			serviceOrder.forcedRecalculate();
/s
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 234	
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(true);
/=
				return new LogisticsOrderTotalsCalculator<LogisticsOrderVO>(this, aForcedRecal);
/s
LogisticsOrderTotalsCalculator.<init>(T, boolean) line: 86	
		entity = aEntity;
/ seo
SH000002993-COLLECT/26682241
/ In Java is de serviceOrderid="SH000002993-COLLECT"	, maar in de database "COLLECT"	,
/ TODO
/ de system_id van de seo is 26682241	,

		loadConfig(aForceCalculation);
/ aForceCalculation=true
/s
LogisticsOrderTotalsCalculator.loadConfig(boolean) line: 412	
		if (aForceCalculation) {
/ JA
			calculateRequestedTotalColli = true;
			calculateRequestedTotalItems = true;
			calculateRequestedTotalWeight = true;
			calculateRequestedTotalVolume = true;
			calculateRequestedTotalLDM = true;
			calculateRequestedTotalValue = true;
			calculateRequestedTotalAltValue = true;
			return;
		}
/t
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 241	
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(true);
/d
			Collection<? extends LogisticsOrderVO> items = getCustomerLogisticsOrderList();
/s
ServiceOrderVO.getCustomerLogisticsOrderList() line: 2416	

/ Intermezzo

/ In een seo zitten 
/ de from/to party	, 
/ volume, weight, ...
/ de seo price part list
/ TODO 

this	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO  (id=22722)	
	$SWITCH_TABLE$com$mpobjects$oms$model$entity$entitydetailtype$ValueType	null	
	actualDistance	java.math.BigDecimal  (id=23648)	
	actualProcessingTime	org.joda.time.Duration  (id=23654)	
	airwayBillNr	"" (id=24919)	
	altCostCurrencyVO	null	
	altTotalCost	java.math.BigDecimal  (id=24920)	
	approvedBy	null	
	approvedOnDate	null	
	approvePostcalculation	false	
	approvePrecalculation	false	
	arrPort	"" (id=24921)	
	arrPortCountryVO	null	
	billOfLadingNr	"" (id=24922)	
	calculateVolume	java.lang.Boolean  (id=24923)	
	calculateWeight	java.lang.Boolean  (id=24923)	
	calculationLog	null	
	capacityLoadingMeter	java.math.BigDecimal  (id=24924)	
	capacityVolume	java.math.BigDecimal  (id=24925)	
	capacityWeight	java.math.BigDecimal  (id=24926)	
	carrierReference	"" (id=24927)	
	consignmentList	java.util.ArrayList  (id=24928)	
	costCurrencyVO	null	
	costMethod	com.mpobjects.oms.model.currency.vo.TotalAmountCalculationMethod  (id=24929)	
	createdByVO	null	
	currencyDAO	null	
	customerStatus	null	
	dao	null	
	dashboardId	null	
	depPort	"" (id=24946)	
	depPortCountryVO	null	
	emission	null	
	enableCapacityCalculations	true	
	entityDetails	java.util.HashMap  (id=24947)	
	errorMessage	"" (id=24948)	
	events	null	
	eventType	null	
	executedBy2VO	null	
	executedByVO	null	
	executionStrategy	"FIXED" (id=24949)	
	exportDateOnEnd	null	
	exportDateOnRelease	null	
	exportDateOnStart	null	
	fileObjects	java.util.ArrayList  (id=24950)	
	firstServiceActionForPlanning	com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO  (id=24951)	
	freeCapacityLdm	java.math.BigDecimal  (id=25011)	
	freeCapacityVolume	java.math.BigDecimal  (id=23648)	
	freeCapacityWeight	java.math.BigDecimal  (id=25011)	
	genericServiceOrderData	null	
	importExportInfo	null	
	instructionCode	null	
	instructionGroup	null	
	instructionList	java.util.ArrayList  (id=25012)	
	invoiceRechargeStatus	com.mpobjects.oms.model.serviceorder.vo.InvoiceRechargeStatus  (id=25013)	
	isCalculateEnabled	null	
	isRecurring	false	
	isTemplate	true	
	lastInstanceDate	null	
	lastUpdate	null	
	lockPostcalculation	false	
	lockPrecalculation	false	
	manualPlan	false	
	orderProcess	com.mpobjects.oms.model.entity.orderprocess.OrderProcess  (id=25030)	
	organization	com.mpobjects.oms.model.entity.organization.Organization  (id=25057)	
	payWeight	null	
	performanceMonitorService	com.mpobjects.core.performance.PerformanceMonitorServiceImpl  (id=25089)	
	plannedDistance	java.math.BigDecimal  (id=23648)	
	plannedProcessingTime	org.joda.time.Duration  (id=25114)	
	planningReasonCode	null	
	portArrDate	null	
	portDepDate	null	
	postCalcApprovedBy	null	
	postCalcApprovedOnDate	null	
	preferencePercentage	java.math.BigDecimal  (id=24920)	
	ratecalcMd5Hash	null	
	reference1	"" (id=25115)	
	reference2	"" (id=25116)	
	reference3	"" (id=25117)	
	reference4	"" (id=25118)	
	reference5	"" (id=25119)	
	reference6	"" (id=25120)	
	reference7	"" (id=25121)	
	reference8	"" (id=25122)	
	remarks	"" (id=25123)	
	remarks2	"" (id=25124)	
	schedule	null	
	scheduleDescription	null	
	scheduleXml	null	
	seaContainerNumber	"" (id=25125)	
	sealNumber	"" (id=25126)	
	serviceLevel	"" (id=25127)	
	serviceOrderContainerList	null	
	serviceOrderCostList	java.util.HashSet  (id=25128)	
	serviceOrderId	"SH000002993-COLLECT" (id=25129)	
	serviceOrderInvoiceStatus	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderInvoiceStatus  (id=25130)	
	serviceOrderParties	java.util.HashSet  (id=25131)	
	serviceOrderTemplate	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO  (id=25154)	
	serviceOrderType	com.mpobjects.oms.model.entity.serviceordertype.ServiceOrderType  (id=25155)	
	serviceProviderRemarks	"" (id=25197)	
	serviceType	null	
	shipmentOrderReference1	null	
	shipmentOrderReference2	null	
	shipmentOrderReference3	null	
	shipmentOrderReference3List	null	
	shipmentOrderReference4	null	
	shipmentOrderReference5	null	
	shipmentOrderReference5List	null	
	supplierContractSystemId	null	
	syncFromFlag	"S" (id=25199)	
	syncToFlag	"S" (id=25200)	
	systemEntryDate	java.sql.Timestamp  (id=25201)	
	systemId	26682241	
	temporary	false	
	theActualTotalColli	null	
	theActualTotalLoadingMeters	null	
	theActualTotalVolumeM3	null	
	theActualTotalWeightKg	null	
	theAdditionalInfoMap	java.util.HashMap  (id=26072)	
	theAltValueCurrencySystemId	null	
	theAltValueCurrencyVO	null	
	theDateSetVO	com.mpobjects.oms.model.shipmentorder.vo.DateSetVO  (id=26074)	
	theFormattedEntity	null	
	theFormattedEntity	null	
	theFromPartyVO	com.mpobjects.oms.model.entity.VirtualParty  (id=26077)	
	theHoldStatus	null	
	theOrderStatusVO	null	
	thePrice	null	
	thePriceCurrencySystemid	null	
	theRecalculateActualsFlag	false	
	theRecalculateFlag	false	
	theRequestedAltTotalValue	null	
	theRequestedTotalColli	null	
	theRequestedTotalItems	null	
	theRequestedTotalLoadingMeters	null	
	theRequestedTotalValue	null	
	theRequestedTotalVolumeM3	null	
	theRequestedTotalWeightKg	null	
	theServiceOrderPricePartList	java.util.ArrayList  (id=26085)	
	theToPartyVO	com.mpobjects.oms.model.entity.VirtualParty  (id=26087)	
	theValueCurrencyVO	null	
	totalCost	java.math.BigDecimal  (id=24920)	
	utilizationCapacityLdm	java.math.BigDecimal  (id=25011)	
	utilizationCapacityVolume	java.math.BigDecimal  (id=24920)	
	utilizationCapacityWeight	java.math.BigDecimal  (id=25011)	
	vatExportLevel	null	
	vesselName	"" (id=26091)	




/ Einde Intermezzo
		ArrayList<LogisticsOrderVO> myList = new ArrayList<LogisticsOrderVO>();

/ Intermezzo

public class ShipmentOrderVO extends LogisticsOrderVO implements CustomerStatusSupport, ReferenceSupport, Authorizable, ImportExportTrackable {

public class ServiceOrderVO extends LogisticsOrderVO implements SelectionListHelper.SelectionListItem, CustomerStatusSupport, ImportExportTrackable {

public class ConsignmentVO extends LogisticsOrderVO {

public class ServiceActionVO extends LogisticsOrderVO implements SequencedEntity {



/ Einde Intermezzo

		myList.addAll(getConsignmentList());
/=
			return consignmentList;

/ Intermezzo

/ een seo is een coll sa's 	, Maar daarbinnen kun je ook sa's groeperen	, dat zijn consignments. Bijvoorbeeld bij een rondrit,	 

/ wat heeft een consignment	? 
/ from/to party

this	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO  (id=22722)	
	consignmentList	java.util.ArrayList  (id=24928)	
		elementData	java.lang.Object[10]  (id=25296)	
			[0]	com.mpobjects.oms.model.consignment.vo.ConsignmentVO  (id=25312)	
				$SWITCH_TABLE$com$mpobjects$oms$model$entity$entitydetailtype$ValueType	null	
				approvedBy	null	
				approvedOnDate	null	
				approvePostcalculation	false	
				approvePrecalculation	false	
				calculateVolume	java.lang.Boolean  (id=24923)	
				calculateWeight	java.lang.Boolean  (id=24923)	
				currencyDAO	null	
				dao	null	
				emission	null	
				entityDetails	java.util.HashMap  (id=25352)	
				fileObjects	java.util.ArrayList  (id=25353)	
				isCalculateEnabled	null	
				lockPostcalculation	false	
				lockPrecalculation	false	
				orderProcess	null	
				organization	null	
				payWeight	null	
				performanceMonitorService	null	
				postCalcApprovedBy	null	
				postCalcApprovedOnDate	null	
				ratecalcMd5Hash	null	
				receiptList	java.util.ArrayList  (id=25363)	
				systemId	0	
				temporary	false	
				theActualTotalColli	null	
				theActualTotalLoadingMeters	null	
				theActualTotalVolumeM3	null	
				theActualTotalWeightKg	null	
				theAdditionalInfoMap	java.util.HashMap  (id=25369)	
				theAltValueCurrencySystemId	null	
				theAltValueCurrencyVO	null	
				theComments	"" (id=25372)	
				theConsignmentNr	"" (id=25372)	
				theDateSetVO	com.mpobjects.oms.model.shipmentorder.vo.DateSetVO  (id=25375)	
				theFormattedEntity	null	
				theFormattedEntity	null	
				theFromPartyVO	com.mpobjects.oms.model.entity.VirtualParty  (id=25457)	
				theHoldStatus	null	
				theOrderStatusVO	null	
				thePodReference	"" (id=25372)	
				thePrice	null	
				thePriceCurrencySystemid	null	
				theRecalculateActualsFlag	false	
				theRecalculateFlag	false	
				theReference1	"" (id=25563)	
				theReference2	"" (id=25565)	
				theReference3	"" (id=25567)	
				theReference4	"" (id=25568)	
				theReference5	"" (id=25372)	
				theRequestedAltTotalValue	null	
				theRequestedTotalColli	null	
				theRequestedTotalItems	null	
				theRequestedTotalLoadingMeters	null	
				theRequestedTotalValue	null	
				theRequestedTotalVolumeM3	null	
				theRequestedTotalWeightKg	null	
				theSequenceNr	java.lang.Integer  (id=25576)	
				theServiceActionList	java.util.ArrayList  (id=25578)	
				theServiceOrderVO	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO  (id=22722)	
				theToPartyVO	com.mpobjects.oms.model.entity.VirtualParty  (id=25580)	
				theValueCurrencyVO	null	
		size	1	

/ Einde Intermezzo

/t
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 247	
			Collection<? extends LogisticsOrderVO> items = getCustomerLogisticsOrderList();
/d
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
/s
ServiceOrderVO(LogisticsOrderVO).shouldNestRecalculate() line: 1252	
		return true;
/t
							item.setRecalculate();
/s
ConsignmentVO(LogisticsOrderVO).setRecalculate() line: 971	
		setRecalculate(true);
/=
			theRecalculateFlag = aRecalculate;
			theRecalculateActualsFlag = aRecalculate;
/t
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 251	
							item.setRecalculate();
/d
						}
						item.recalculate();
/s
ConsignmentVO(LogisticsOrderVO).recalculate() line: 768	
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(false);
/s
/ Nu is aForceCalculation=false	,
/ TODO

LogisticsOrderTotalsCalculator.<init>(T, boolean) line: 87	
		entity = aEntity;
aEntity	com.mpobjects.oms.model.consignment.vo.ConsignmentVO  (id=25312)	

		loadConfig(aForceCalculation);
/s
LogisticsOrderTotalsCalculator.loadConfig(boolean) line: 423	
		final ApplicationPropertyManager propMan = ApplicationPropertyManager.getInstance();
		final String entityName = entity.getFormattedEntity();
/=
			theFormattedEntity = StringUtils.formatSqlToJava(getEntity().name()).toLowerCase();
consignment
/getEntity().name()="CONSIGNMENT"
		Organization organization = entity.getOrganizationVO();
/s
ConsignmentVO.getOrganizationVO() line: 161	
		ServiceOrderVO order = getServiceOrderVO();
/=
theServiceOrderVO
			return order.getOrganizationVO();
SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
/ Cargo dus	,

/t
LogisticsOrderTotalsCalculator.loadConfig(boolean) line: 427	
		Organization organization = entity.getOrganizationVO();
/d
		calculateRequestedTotalColli = mustRecalculateValue(propMan, entityName, organization, "colli");
/s
	protected boolean mustRecalculateValue(ApplicationPropertyManager propMan, String aEntityType, Organization aOrganization, String aValueType) {
		String propertyName = String.format("%s.recalculate.requested.%s", aEntityType, aValueType);
consignment.recalculate.requested.colli
		boolean result = propMan.getModuleOrganizationProperty(aOrganization, "oms", propertyName, true);
/s
ApplicationPropertyManager.getModuleOrganizationProperty(Organization, String, String, boolean) line: 314	
		String val = getOrganizationProperty(anOrganization, getPropertyKey(aModule, aKey), Boolean.toString(aDefaultValue));
/ getPropertyKey(aModule, aKey)=module.oms.consignment.recalculate.requested.colli
/s
ApplicationPropertyManager.getOrganizationProperty(Organization, String, String) line: 443	
			return getProperty(anOrganization.getSystemId(), aKey, aDefaultValue);
/s
ApplicationPropertyManager.getProperty(int, String, String) line: 458	
/=
	public String getProperty(int aPreferedOrganizationSystemid, String aPropertyKey, String aDefaultValue) {
aPreferedOrganizationSystemid	500	
aPropertyKey	"module.oms.consignment.recalculate.requested.colli" (id=27850)	
aDefaultValue	"true" (id=19139)	

			myRet = myActiveResource.getUserProperty(aPropertyKey, NOTSET);
null

			myRet = getOrganizationProperty(aPreferedOrganizationSystemid, aPropertyKey, NOTSET, true);
/s
ApplicationPropertyManager.getOrganizationProperty(int, String, String, boolean) line: 396	
		Resource myResource = AuthenticationUtils.getResource();
Resource:eric(systemId:26682479)
		Organization myOrganization = null;

		if (myResource != null) {
			for (Organization myResourceOrganization : myResource.getOrganizations()) {
SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
				if (myResourceOrganization.getSystemId() == anOrganizationSystemid) {
/ JA
					myOrganization = myResourceOrganization;
					break;

		String myRet = myOrganization.getProperty(aPropertyKey, aDefaultValue);
/ myOrganization=cargo
/ aPropertyKey=module.oms.consignment.recalculate.requested.colli
/s
Organization.getProperty(String, String) line: 118	
		PropertiesValueVO prop = mappedProperties.get(aProperty);
null
/ TODO (mappedProperties)
		return aDefaultValue;

/ Intermezzo

/ we vallen bij opstarten in	,

Organization.loadMappedProperties() line: 247	
/ this=SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo

			Collection<PropertiesValueVO> myProperties = getPropertiesValues();
/s

/ we zien properties_value 

$ vi Organization.standard.hbm.xml
	<class name="Organization" lazy="false" table="ORGANIZATION">

		<set name="propertiesValues" inverse="true" fetch="select" lazy="false">
			<!-- cache usage="read-write"/-->
			<key column="ORGANIZATION_SYSTEM_ID" />
			<one-to-many class="com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO" />
			<!-- loader query-ref="orgProperties" /-->
			<filter name="userFilter" condition="USER_SYSTEM_ID is null" />
		</set>
		<filter name="filterOrganization" condition="system_id in (select uo.organization_systemid from user_organization uo where uo.user_systemid = :current_user_system_id)" />

$ vi PropertiesValue.standard.hbm.xml
	<class name="com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO" table="PROPERTIES_VALUE">

/ Doe in psql	, 
pnllogistics3=# \pset null 'NULL'
Null display is "NULL".

pnllogistics3=# \d properties_value
                Table "public.properties_value"
         Column         |           Type           | Modifiers 
------------------------+--------------------------+-----------
 system_id              | integer                  | not null
 properties_system_id   | integer                  | 
 property_value         | character varying(16000) | 
 user_system_id         | integer                  | 
 organization_system_id | integer                  | 

$ vi Organization.java

	private void loadMappedProperties() {
		if (mappedProperties == null) {
			Collection<PropertiesValueVO> myProperties = getPropertiesValues();

/ Dit zijn de properties_value's die bij deze organization horen	,

/ check	,

myProperties	org.hibernate.collection.PersistentSet  (id=7096)	
	set	java.util.HashSet  (id=7109)	
		map	java.util.HashMap  (id=7111)	
			size	110	
			table	java.util.HashMap$Entry[256]  (id=7113)	

pnllogistics3=# select count(*) from properties_value  pv join organization o on o.system_id=pv.organization_system_id  where o.organization_id='PNL-CARGO';
 count 
-------
   110
(1 row)


{
 module.postnlcif.customer-code=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@67e2a988[systemId=26780044, property=module.postnlcif.customer-code - module.postnlcif.customer-code/false, value=MPOB],
 module.oms.shipmentorder.reference5.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@8005a5[systemId=26824562, property=module.oms.shipmentorder.reference5.hidden - Shipmentorder reference5/true, value=true],
 module.oms.shipmentorder.consolidationKey.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@289eb5d0[systemId=26819730, property=module.oms.shipmentorder.consolidationKey.hidden - Show hide consolidationkey/false, value=true],
 module.oms.shipmentitem.weightmode=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@19281351[systemId=26723000, property=module.oms.shipmentitem.weightmode - module.oms.shipmentitem.weightmode/false, value=WEIGHT],
 module.oms.shipmentorder.requestedstartbefore.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@522a540d[systemId=26849117, property=module.oms.shipmentorder.requestedstartbefore.required - set requestedStartBefore required op shipment order form./false, value=false],
 module.oms.shipmentorder.topostalcode.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@6b798fb7[systemId=26824615, property=module.oms.shipmentorder.topostalcode.hidden - hide to postal code on shipment order list/false, value=false],
 module.oms.export.service.order.delivery_note.release=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@2d32e261[systemId=26775614, property=module.oms.export.service.order.delivery_note.release - release orders types/false, value=PNL-CARGO],
 module.oms.shipmentitem.weight.nominvalue.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@532a738f[systemId=26837987, property=module.oms.shipmentitem.weight.nominvalue.required - require the weight(Kg) field in shipment item part of shipment order, but can be 0./false, value=true],
 module.oms.shipmentorder.orderstatusdescription.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@579f6c8a[systemId=26849063, property=module.oms.shipmentorder.orderstatusdescription.hidden - hide shipment order status description field on the shipment order form/false, value=false],
 module.oms.shipmentorder.orderprocess.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@69ce8f3f[systemId=26837985, property=module.oms.shipmentorder.orderprocess.required - require the order process field on shipment order form./false, value=true],
 module.oms.shipmentitemsearch.shipmentitemid.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@591cd3f7[systemId=26824617, property=module.oms.shipmentitemsearch.shipmentitemid.hidden - hide the shipment item id on shipment item list/false, value=true],
 module.oms.shipmentitemsearch.plannedend.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@407fd104[systemId=26824625, property=module.oms.shipmentitemsearch.plannedend.hidden - hide planned end on shipment item list/false, value=true],
 module.oms.shipmentorder.derive.hazgoods.from.items=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@1d2a2e62[systemId=26765208, property=module.oms.shipmentorder.derive.hazgoods.from.items - extended hazgood logic/false, value=true],
 module.oms.productitem.partnumber.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@34846ab3[systemId=26836995, property=module.oms.productitem.partnumber.hidden - hide part no. field in product item part of shipment order form./false, value=true],
 module.oms.shipmentorder.organization.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@33d21b96[systemId=26824556, property=module.oms.shipmentorder.organization.hidden - hide the organization on the shipment order list/false, value=true],
 module.oms.productitem.reference2.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@20101d15[systemId=26836517, property=module.oms.productitem.reference2.hidden - hide reference2 field in product item part of shipment order form./false, value=true],
 module.oms.shipmentitemsearch.topostalcode.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@68f1fe23[systemId=26766804, property=module.oms.shipmentitemsearch.topostalcode.hidden - show/hide shipment item to postal code/false, value=false],
 module.oms.shipmentOrder.reasonCode.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7799bfff[systemId=26849193, property=module.oms.shipmentOrder.reasonCode.hidden - hide reason code on shipment order form/false, value=true],
 module.oms.shipmentitem.stackable.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@88fcab5[systemId=26836991, property=module.oms.shipmentitem.stackable.hidden - hide stackable field in shipment item part of shipment order form./false, value=true],
 module.oms.shipmentOrder.plannedEndAfter.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@4a115fe9[systemId=26849197, property=module.oms.shipmentOrder.plannedEndAfter.hidden - hide planned end after on shipment order form/false, value=true],
 module.oms.shipmentOrder.plannedStartAfter.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@5bc72ed9[systemId=26849195, property=module.oms.shipmentOrder.plannedStartAfter.hidden - hide planned start after on shipment order form/false, value=true],
 module.oms.shipmentOrder.from.city.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@58f44b9f[systemId=26849121, property=module.oms.shipmentOrder.from.city.required - require city in shipfrom part of shipment order form./false, value=true],
 module.oms.productitem.productowner.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7ae8194a[systemId=26836999, property=module.oms.productitem.productowner.hidden - hide product owner field in product item part of shipment order form./false, value=true],
 module.oms.shipmentorder.frompostalcode.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@72030af3[systemId=26824577, property=module.oms.shipmentorder.frompostalcode.hidden - hide from post code on shipment order list/false, value=false],
 module.oms.shipmentOrder.to.address.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@3f1c1eac[systemId=26849138, property=module.oms.shipmentOrder.to.address.required - require address on shipment to/false, value=true],
 module.oms.shipmentOrder.from.address2.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7bc2cbe1[systemId=26849129, property=module.oms.shipmentOrder.from.address2.required - require address2 on shipment from/false, value=true],
 module.oms.shipmentorder.cashondelivery.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7c1fa640[systemId=26734004, property=module.oms.shipmentorder.cashondelivery.hidden - show/hide cash on delivery/false, value=false],
 module.oms.serviceorder.tab.documents.enabled=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@1002f809[systemId=26819269, property=module.oms.serviceorder.tab.documents.enabled - show/hide service order documents tab/false, value=true],
 module.oms.shipmentorder.duplicate.reference2.detail=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@706f1c4c[systemId=26771470, property=module.oms.shipmentorder.duplicate.reference2.detail - duplicate hold/false, value=DuplicateHold],
 module.pnllogistics.activation.scan.plan.event.type=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@28082a77[systemId=26788529, property=module.pnllogistics.activation.scan.plan.event.type - activation scan event type/false, value=ASC],
 module.oms.productitem.productgroup.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@6a019127[systemId=26836998, property=module.oms.productitem.productgroup.hidden - hide product group field in product item part of shipment order form./false, value=true],
 module.oms.productitem.reference3.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7987d01b[systemId=26836518, property=module.oms.productitem.reference3.hidden - hide reference3 field in product item part of shipment order form./false, value=true], user.depot=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@44fe2cd[systemId=26777021, property=user.depot - default depot of user/true, value=<null>],
 module.scannerinterface.serviceaction.type.warehouse.scan=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@6739197f[systemId=26775647, property=module.scannerinterface.serviceaction.type.warehouse.scan - set service action type for warehouse scan (PNLCARGO)/false, value=DELIVERY],
 module.oms.shipmentorder.duplicate.reference1.detail=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7b54ec9e[systemId=26772525, property=module.oms.shipmentorder.duplicate.reference1.detail - check for duplicate on reference1 of SI for for PNL Cargo/false, value=BarcodeHold],
 module.oms.shipmentOrder.billTo.billToParty.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7dae4c7f[systemId=26849140, property=module.oms.shipmentOrder.billTo.billToParty.required - require bill to party on bill to/false, value=true],
 module.oms.shipmentorder.serialnumber.hidden=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@5940f2cb[systemId=26824558, property=module.oms.shipmentorder.serialnumber.hidden - hide the serial number on the shipment order list/false, value=true],
 module.oms.shipmentorder.createreturn.types=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@7d9faf55[systemId=26849061, property=module.oms.shipmentorder.createreturn.types - returnorder types/false, value=BENELUXFREIGHT, EUROFREIGHT],
 module.oms.shipmentOrder.from.address.required=com.mpobjects.oms.model.propertiesvalue.vo.PropertiesValueVO@e90e159[systemId=26849119, property=module.oms.shipmentOrder.from.address.required - require address on shipfrom part of shipment order form/false, value=true], 
 module...

/ we zien module.postnlcif.customer-code in de db	, 

/ Einde Intermezzo

/t
ApplicationPropertyManager.getOrganizationProperty(int, String, String, boolean) line: 420	
		String myRet = myOrganization.getProperty(aPropertyKey, aDefaultValue);
/d
"notset"

		return myRet;
/t
ApplicationPropertyManager.getProperty(int, String, String) line: 468	

		if (NOTSET.equals(myRet)) {
			myRet = getDatabaseProperty(aPropertyKey, NOTSET);
"notset"
		if (NOTSET.equals(myRet)) {
			myRet = getApplicationProperty(aPropertyKey, aDefaultValue);
"true"
/ WH aDefaultValue

		return myRet;
/t
ApplicationPropertyManager.getModuleOrganizationProperty(Organization, String, String, boolean) line: 315	
		String val = getOrganizationProperty(anOrganization, getPropertyKey(aModule, aKey), Boolean.toString(aDefaultValue));
"true"
		return Boolean.parseBoolean(val);
/t
LogisticsOrderTotalsCalculator.mustRecalculateValue(ApplicationPropertyManager, String, Organization, String) line: 446	
		boolean result = propMan.getModuleOrganizationProperty(aOrganization, "oms", propertyName, true);
true
		return result;
/t
LogisticsOrderTotalsCalculator.loadConfig(boolean) line: 428	
		calculateRequestedTotalColli = mustRecalculateValue(propMan, entityName, organization, "colli");
true
/d
		calculateRequestedTotalItems = mustRecalculateValue(propMan, entityName, organization, "items");
true
		calculateRequestedTotalWeight = mustRecalculateValue(propMan, entityName, organization, "weight");
true
		calculateRequestedTotalVolume = mustRecalculateValue(propMan, entityName, organization, "volume");
true
		calculateRequestedTotalLDM = mustRecalculateValue(propMan, entityName, organization, "ldm");
true
		calculateRequestedTotalValue = mustRecalculateValue(propMan, entityName, organization, "value");
true
		calculateRequestedTotalAltValue = mustRecalculateValue(propMan, entityName, organization, "altvalue");
true

/t
ConsignmentVO(LogisticsOrderVO).recalculate() line: 769	
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(false);
/d
			Collection<? extends LogisticsOrderVO> items = getCustomerLogisticsOrderList();
/s
ConsignmentVO.getCustomerLogisticsOrderList() line: 416	
		return getServiceActionList();
/=
			return theServiceActionList;
[SH000002993/COLLECT/0]
/ 'n sa	,

						if (shouldNestRecalculate()) {
/s
ConsignmentVO(LogisticsOrderVO).shouldNestRecalculate() line: 1252	
		return true;
/t
ConsignmentVO(LogisticsOrderVO).recalculate() line: 777	
						if (shouldNestRecalculate()) {
/ JA
							item.setRecalculate();
/s
ServiceActionVO(LogisticsOrderVO).setRecalculate(boolean) line: 981	
this	com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO  (id=24951)	
		theRecalculateFlag = aRecalculate;
		theRecalculateActualsFlag = aRecalculate;

/ Intermezzo

/ we zijn nog in	,
ServiceActionCache$ServiceActionCacheObject.buildAlternatives(boolean) line: 388	
			serviceOrder.forcedRecalculate();
/s
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 251	
			Collection<? extends LogisticsOrderVO> items = getCustomerLogisticsOrderList();
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
							item.setRecalculate();
						}
						item.recalculate();
/s
ConsignmentVO(LogisticsOrderVO).recalculate() line: 777	
			Collection<? extends LogisticsOrderVO> items = getCustomerLogisticsOrderList();
			} else {
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
							item.setRecalculate();
						}
						item.recalculate();
/s
ServiceActionVO(LogisticsOrderVO).recalculate() line: 755	

/ Einde Intermezzo

/t
ConsignmentVO(LogisticsOrderVO).recalculate() line: 779	
							item.setRecalculate();
						}
						item.recalculate();
/s
ServiceActionVO(LogisticsOrderVO).recalculate() line: 755	
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(false);
/s
				return new LogisticsOrderTotalsCalculator<LogisticsOrderVO>(this, aForcedRecal);
/s
LogisticsOrderTotalsCalculator.<init>(T, boolean) line: 85	
		entity = aEntity;
/sa
		loadConfig(aForceCalculation);
/s
LogisticsOrderTotalsCalculator.loadConfig(boolean) line: 423	
/ aForceCalculation=false
		final ApplicationPropertyManager propMan = ApplicationPropertyManager.getInstance();
		final String entityName = entity.getFormattedEntity();
"serviceaction"
		Organization organization = entity.getOrganizationVO();
SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo

		calculateRequestedTotalColli = mustRecalculateValue(propMan, entityName, organization, "colli");
true
		calculateRequestedTotalItems = mustRecalculateValue(propMan, entityName, organization, "items");
true
		calculateRequestedTotalWeight = mustRecalculateValue(propMan, entityName, organization, "weight");
true
		calculateRequestedTotalVolume = mustRecalculateValue(propMan, entityName, organization, "volume");
true
		calculateRequestedTotalLDM = mustRecalculateValue(propMan, entityName, organization, "ldm");
true
		calculateRequestedTotalValue = mustRecalculateValue(propMan, entityName, organization, "value");
true
		calculateRequestedTotalAltValue = mustRecalculateValue(propMan, entityName, organization, "altvalue");
true

/t
ServiceActionVO(LogisticsOrderVO).recalculate() line: 769	
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(false);
/d
			Collection<? extends LogisticsOrderVO> items = getCustomerLogisticsOrderList();
[ShipmentOrder: SH000002993(SystemId:26845924; Org:PNL-CARGO)]
			} else {
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
/s
ServiceActionVO.shouldNestRecalculate() line: 833	
		return false;

/ Tot nu toe hadden we altijd LogisticsOrderVO.shouldNestRecalculate()=return true;

/t
ServiceActionVO(LogisticsOrderVO).recalculate() line: 779	
						if (shouldNestRecalculate()) {
/ NEE
							item.setRecalculate();
/ NIET
						}
						item.recalculate();
/s
ShipmentOrderVO(LogisticsOrderVO).recalculate() line: 755	
		if (!theRecalculateFlag || !isCalculateEnabled()) {
/ JA
			return;
/t
ServiceActionVO(LogisticsOrderVO).recalculate() line: 780	
						item.recalculate();
/d
/ sho2993 is "recalculated", hoefde niet	, want de sa : shouldNest=false	,
						calc.addValues(item);
////////////
/ TODO
				for (Object o : items) {
/ geen meer	,
			calc.applyChanges();
/s
LogisticsOrderTotalsCalculator.applyChanges() line: 133	

this	com.mpobjects.oms.model.logisticsorder.LogisticsOrderTotalsCalculator  (id=29605)	
	altValueCurrencyVO	null	
	calculateRequestedTotalAltValue	true	
	calculateRequestedTotalColli	true	
	calculateRequestedTotalItems	true	
	calculateRequestedTotalLDM	true	
	calculateRequestedTotalValue	true	
	calculateRequestedTotalVolume	true	
	calculateRequestedTotalWeight	true	
	entity	com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO  (id=24951)	
////////////////////////////////////////////////////////////////////////////////////
/ Hiervan gaan we dus properties set	, zoals requestedTotalAltValue 	,
	requestedTotalAltValue	java.math.BigDecimal  (id=23648)	
0.00000
	requestedTotalColli	java.math.BigDecimal  (id=30796)	
2.00
	requestedTotalItems	java.math.BigDecimal  (id=24920)	
0.00
	requestedTotalLDM	java.math.BigDecimal  (id=24920)	
0.00
	requestedTotalValue	java.math.BigDecimal  (id=24920)	
0.00
	requestedTotalVolume	java.math.BigDecimal  (id=30799)	
0.000
	requestedTotalWeight	java.math.BigDecimal  (id=24920)	
0.00
	valueCurrencyVO	null	

		if (calculateRequestedTotalColli && requestedTotalColli != null) {
/ JA
			entity.setRequestedTotalColli(requestedTotalColli);
2.00
		if (calculateRequestedTotalItems && requestedTotalItems != null) {
			entity.setRequestedTotalItems(requestedTotalItems);
0.00
		if (calculateRequestedTotalWeight && requestedTotalWeight != null) {
			entity.setRequestedTotalWeightKg(requestedTotalWeight);
0.00
		if (calculateRequestedTotalVolume && requestedTotalVolume != null) {
			entity.setRequestedTotalVolumeM3(requestedTotalVolume);
0.000
		if (calculateRequestedTotalLDM && requestedTotalLDM != null) {
			entity.setRequestedTotalLoadingMeters(requestedTotalLDM);
0.00
		CurrencyVO myValueCurrency = null;
		if (valueCurrencyVO != null) {
/ NEE
		if (calculateRequestedTotalValue && requestedTotalValue != null) {
			entity.setRequestedTotalValue(requestedTotalValue);
0.00
			if (myValueCurrency != null) {
/ NEE
		CurrencyVO myAltValueCurrency = null;
		if (altValueCurrencyVO != null) {
/ NEE
		if (calculateRequestedTotalAltValue && requestedTotalAltValue != null) {
			entity.setRequestedAltTotalValue(requestedTotalAltValue);
0.00000
			entity.setAltValueCurrencyVO(myAltValueCurrency);
null

		return true;
/t
ServiceActionVO(LogisticsOrderVO).recalculate() line: 784	
			calc.applyChanges();
/d
////////////////////
/ calc heeft dus properties set van de sa	, want calc.entity=sa	,

			theRecalculateFlag = false;
/ Dwz de recalc is gedaan	, niet nog een keer doen	,

/t
ConsignmentVO(LogisticsOrderVO).recalculate() line: 780	
						item.recalculate();
/d
/ item=sa
						calc.addValues(item);
/s
LogisticsOrderTotalsCalculator.addValues(LogisticsOrderVO) line: 101	
/=
	public void addValues(LogisticsOrderVO aItem) {

///////////////////////////////
/ this.entity=cons
/ item=sa
/ dus we gaan properties set in de LogisticsOrderTotalsCalculator, die entity=cons heeft , en halen deze uit sa	,
///////////////////////////////

		if (calculateRequestedTotalColli) {
			addColliValue(aItem);
/s
		BigDecimal val = aItem.getRequestedTotalColli();
/s
ServiceActionVO(LogisticsOrderVO).getRequestedTotalColli() line: 582	
		recalculate();
/s
ServiceActionVO(LogisticsOrderVO).recalculate() line: 759	
		if (!theRecalculateFlag || !isCalculateEnabled()) {
/ JA
			return;
/t
ServiceActionVO(LogisticsOrderVO).getRequestedTotalColli() line: 586	
		recalculate();
		if (theRequestedTotalColli != null && theRequestedTotalColli.scale() != COLLI_PRECISION) {
/ NEE
		return theRequestedTotalColli;
2.00
/t
LogisticsOrderTotalsCalculator.addColliValue(LogisticsOrderVO) line: 329	
/ this=LogisticsOrderTotalsCalculator	, entity=cons	, 
		BigDecimal val = aItem.getRequestedTotalColli();
/d
2.00
		if (requestedTotalColli == null) {
			requestedTotalColli = val;
/t
LogisticsOrderTotalsCalculator.addValues(LogisticsOrderVO) line: 103	
/ tnis.entity=cons
		if (calculateRequestedTotalColli) {
			addColliValue(aItem);
/d
		if (calculateRequestedTotalItems) {
			addItemsValue(aItem);
/s
LogisticsOrderTotalsCalculator.addItemsValue(LogisticsOrderVO) line: 340	
/=
	protected void addItemsValue(@Nonnull LogisticsOrderVO aItem) {
this.entity=cons
aItem=sa
		BigDecimal val = aItem.getRequestedTotalItems();
/s
ServiceActionVO(LogisticsOrderVO).getRequestedTotalItems() line: 595	
		recalculate();
/ niet, want sa's theRecalculateFlag=false
		return theRequestedTotalItems;
0.00
/t
LogisticsOrderTotalsCalculator.addItemsValue(LogisticsOrderVO) line: 345	
		BigDecimal val = aItem.getRequestedTotalItems();
/ aItem=sa
0.00
		if (requestedTotalItems == null) {
			requestedTotalItems = val;
0.00
/ set requestedTotalItems in de LogisticsOrderTotalsCalculator	, die entity=cons heeft	,

/t
LogisticsOrderTotalsCalculator.addValues(LogisticsOrderVO) line: 106	
			addItemsValue(aItem);
/d
		}
		if (calculateRequestedTotalWeight) {
			addWeightValue(aItem);
		}
		if (calculateRequestedTotalVolume) {
			addVolumeValue(aItem);
		}
		if (calculateRequestedTotalLDM) {
			addLDMValue(aItem);
		}
		if (calculateRequestedTotalValue) {
			addValueValue(aItem);
		}
		if (calculateRequestedTotalAltValue) {
			addAltValueValue(aItem);

///////////////
/ Dus de LogisticsOrderTotalsCalculator, met entity=cons	, heeft nieuwe properties (die uit de sa komen, recalc was er niet voor deze properties)	,

this	com.mpobjects.oms.model.logisticsorder.LogisticsOrderTotalsCalculator  (id=28892)	
	altValueCurrencyVO	null	
	calculateRequestedTotalAltValue	true	
	calculateRequestedTotalColli	true	
	calculateRequestedTotalItems	true	
	calculateRequestedTotalLDM	true	
	calculateRequestedTotalValue	true	
	calculateRequestedTotalVolume	true	
	calculateRequestedTotalWeight	true	
	entity	com.mpobjects.oms.model.consignment.vo.ConsignmentVO  (id=25312)	
	requestedTotalAltValue	java.math.BigDecimal  (id=23648)	
/ NEW
	requestedTotalColli	java.math.BigDecimal  (id=30796)	
	requestedTotalItems	java.math.BigDecimal  (id=24920)	
/ NEW
	requestedTotalLDM	java.math.BigDecimal  (id=24920)	
/ NEW
	requestedTotalValue	java.math.BigDecimal  (id=24920)	
/ NEW
	requestedTotalVolume	java.math.BigDecimal  (id=30799)	
/ NEW
	requestedTotalWeight	java.math.BigDecimal  (id=24920)	
/ NEW
	valueCurrencyVO	null	
aItem	com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO  (id=24951)	

/t
ConsignmentVO(LogisticsOrderVO).recalculate() line: 784	
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
							item.setRecalculate();
						}
						item.recalculate();
						calc.addValues(item);
/d
				for (Object o : items) {
/ GEEN meer	,
			calc.applyChanges();
/s
LogisticsOrderTotalsCalculator.applyChanges() line: 129	

/////////////////////////////
/ write de properties van de calc naar de calc.entity=cons	,

		if (calculateRequestedTotalColli && requestedTotalColli != null) {
			entity.setRequestedTotalColli(requestedTotalColli);

		if (calculateRequestedTotalItems && requestedTotalItems != null) {
			entity.setRequestedTotalItems(requestedTotalItems);

		if (calculateRequestedTotalWeight && requestedTotalWeight != null) {
			entity.setRequestedTotalWeightKg(requestedTotalWeight);

		if (calculateRequestedTotalVolume && requestedTotalVolume != null) {
			entity.setRequestedTotalVolumeM3(requestedTotalVolume);

		if (calculateRequestedTotalLDM && requestedTotalLDM != null) {
			entity.setRequestedTotalLoadingMeters(requestedTotalLDM);

		CurrencyVO myValueCurrency = null;
		if (valueCurrencyVO != null) {
/ NEE
		if (calculateRequestedTotalValue && requestedTotalValue != null) {
			LOG.debug(String.format("Updating total value to %s %s", requestedTotalValue, myValueCurrency));
			entity.setRequestedTotalValue(requestedTotalValue);
			if (myValueCurrency != null) {
/ NEE
		CurrencyVO myAltValueCurrency = null;
		if (altValueCurrencyVO != null) {
/ NEE
		if (calculateRequestedTotalAltValue && requestedTotalAltValue != null) {
			entity.setRequestedAltTotalValue(requestedTotalAltValue);
			entity.setAltValueCurrencyVO(myAltValueCurrency);
null

		return true;

/t
ConsignmentVO(LogisticsOrderVO).recalculate() line: 785	
			calc.applyChanges();
/d
			theRecalculateFlag = false;

/t
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 252	
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
							item.setRecalculate();
						}
						item.recalculate();
/d
this=seo
item=cons
						calc.addValues(item);
/s
LogisticsOrderTotalsCalculator.addValues(LogisticsOrderVO) line: 96	
/=
	public void addValues(LogisticsOrderVO aItem) {
/ this=LogisticsOrderTotalsCalculator, this.entity=seo
/ item=cons

		if (calculateRequestedTotalColli) {
			addColliValue(aItem);
/s
LogisticsOrderTotalsCalculator.addColliValue(LogisticsOrderVO) line: 328	
/=
	protected void addColliValue(@Nonnull LogisticsOrderVO aItem) {
/ this.entity=seo
/ aItem=cons
		BigDecimal val = aItem.getRequestedTotalColli();
/s
ConsignmentVO(LogisticsOrderVO).getRequestedTotalColli() line: 582	
		recalculate();
/ NIET	, want cons.theRecalculateFlag=false	,
/ Die hebben we zojuist set	, 
/ TODO
		return theRequestedTotalColli;
/t
LogisticsOrderTotalsCalculator.addColliValue(LogisticsOrderVO) line: 328	
		BigDecimal val = aItem.getRequestedTotalColli();
/ uit cons	,
		if (requestedTotalColli == null) {
			requestedTotalColli = val;
/t
LogisticsOrderTotalsCalculator.addValues(LogisticsOrderVO) line: 103	
		if (calculateRequestedTotalColli) {
			addColliValue(aItem);
/d
/ sets property uit cons in de calc	,

		if (calculateRequestedTotalItems) {
			addItemsValue(aItem);
		}
		if (calculateRequestedTotalWeight) {
			addWeightValue(aItem);
		}
		if (calculateRequestedTotalVolume) {
			addVolumeValue(aItem);
		}
		if (calculateRequestedTotalLDM) {
			addLDMValue(aItem);
		}
		if (calculateRequestedTotalValue) {
			addValueValue(aItem);
		}
		if (calculateRequestedTotalAltValue) {
			addAltValueValue(aItem);
		}

/t
ServiceOrderVO(LogisticsOrderVO).forcedRecalculate() line: 245	
				for (Object o : items) {
					if (o instanceof LogisticsOrderVO) {
						LogisticsOrderVO item = (LogisticsOrderVO) o;
						if (shouldNestRecalculate()) {
							item.setRecalculate();
						}
						item.recalculate();
						calc.addValues(item);
/d
				for (Object o : items) {
/ GEEN
			calc.applyChanges();
/ set in calc.entity=seo	,
			theRecalculateFlag = false;
/t
ServiceActionCache$ServiceActionCacheObject.buildAlternatives(boolean) line: 390	
			serviceOrder.forcedRecalculate();
/d
			/** Set the planned dates before the calculation. Sometimes e.g. fuel surcharges are based on a planned date */
			setServiceOrderPlannedDates();
/s
ServiceActionCache$ServiceActionCacheObject.setServiceOrderPlannedDates() line: 656	
			BigDecimal myAvgLeadTime = BigDecimal.ZERO;
			if (serviceAction.getAvgLeadTimeHrs() != null) {
/=
				return theAvgLeadTimeHrs;
0
/t
				myAvgLeadTime = serviceAction.getAvgLeadTimeHrs();

			/** Now update the missing dates, when not set by the rate calculation */
			DateSetVO myServiceActionDates = serviceAction.getDateSetVO();
/=
				return theDateSetVO;
/t
RSAFTER: Mon Sep 28 08:00:00 CEST 2015, 		/ req start after
 RSBEFORE: Mon Sep 28 08:00:00 CEST 2015,		/ req start before
 REAFTER: Tue Sep 29 18:00:00 CEST 2015,		/ req end after
 REBEFORE: Tue Sep 29 18:00:00 CEST 2015,		/ req end before
 PSAFTER: null,
 PSBEFORE: null,
 PEAFTER: Tue Sep 29 18:00:00 CEST 2015,		/ planned end after
 PEBEFORE: Tue Sep 29 18:00:00 CEST 2015,		/ planned end before
 AS: null,
 AE: null,
 RELEASE:null,
 PRELEASE:null,
 CLOSE:null
/t
			DateSetVO myServiceOrderDates = serviceOrder.getDateSetVO();
/=
				return theDateSetVO;
RSAFTER: Mon Sep 28 08:00:00 CEST 2015,
 RSBEFORE: Mon Sep 28 08:00:00 CEST 2015,
 REAFTER: Tue Sep 29 18:00:00 CEST 2015,
 REBEFORE: Tue Sep 29 18:00:00 CEST 2015,
 PSAFTER: null,
 PSBEFORE: null,
 PEAFTER: null,
 PEBEFORE: null,
 AS: null,
 AE: null,
 RELEASE:null,
 PRELEASE:null,
 CLOSE:null
/t
			if (myServiceOrderDates.getPlannedEndBefore() == null) {
				myServiceOrderDates.setPlannedEndBefore(myServiceActionDates.getRequestedEndBefore());
			if (myServiceOrderDates.getPlannedEndAfter() == null) {
				myServiceOrderDates.setPlannedEndAfter(myServiceActionDates.getRequestedEndAfter());

			if (serviceAction.getServiceActionTemplate().isOptimizationPossibleFlag()) {
/ NEE
			} else {
				if (myServiceOrderDates.getPlannedStartBefore() == null) {
					myServiceOrderDates.setPlannedStartBefore(new DateTime(myServiceActionDates.getRequestedEndBefore()).minusHours(myAvgLeadTime.intValue()) .toDate());

				if (myServiceOrderDates.getPlannedStartAfter() == null) {
					myServiceOrderDates.setPlannedStartAfter(new DateTime(myServiceActionDates.getRequestedEndBefore()).minusHours(myAvgLeadTime.intValue()) .toDate());

/ myAvgLeadTime=0

			myServiceOrderDates.copyPlanned(myServiceActionDates, false);
/s
DateSetVO.copyPlanned(DateSetVO, boolean) line: 225	
/ myServiceActionDates is de target	, dus cp van seo -> sa	,

		if (aTarget.getPlannedStartAfter() == null || !onlyWhenEmpty) {
			aTarget.setPlannedStartAfter(getPlannedStartAfter());
		}
		if (aTarget.getPlannedStartBefore() == null || !onlyWhenEmpty) {
			aTarget.setPlannedStartBefore(getPlannedStartBefore());
		}
		if (aTarget.getPlannedEndAfter() == null || !onlyWhenEmpty) {
			aTarget.setPlannedEndAfter(getPlannedEndAfter());
		}
		if (aTarget.getPlannedEndBefore() == null || !onlyWhenEmpty) {
			aTarget.setPlannedEndBefore(getPlannedEndBefore());
		}

/t
ServiceActionCache$ServiceActionCacheObject.buildAlternatives(boolean) line: 403	
			/** Set the planned dates before the calculation. Sometimes e.g. fuel surcharges are based on a planned date */
			setServiceOrderPlannedDates();
/d
			try {
				myRateCalculation = RateCalculationUtil.getService().calculateRatesForServiceOrder(serviceOrder, aReplanFlag,
						pathDeterminationOptions.isLogging());
/ aReplanFlag=true
/s
	 *
	 * @return A rate calculation with all alternatives for the service order.
	 */
CalculationServiceImpl.calculateRatesForServiceOrder(ServiceOrderVO, boolean, boolean) line: 253	
	try{
			List<RateAgreementVO> mySelectedRateAgreement = getMatchingRateAgreement(aServiceOrder, AgreementType.SERVICE_ORDER);
/s
CalculationServiceImpl.getMatchingRateAgreement(LogisticsOrderVO, AgreementType) line: 710	
/=
	private List<RateAgreementVO> getMatchingRateAgreement(LogisticsOrderVO aLogisticsOrder, AgreementType aRateType) {
aLogisticsOrder	com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO  (id=21461)	
SH000002993-COLLECT/26682241
aRateType	AgreementType  (id=23672)	
SERVICE_ORDER

		JXPathContext myContext = JXPathContext.newContext(aLogisticsOrder);

			/* First we need to check if there are contracts attached and if these contracts have rate agreements */
			Collection<RateAgreementVO> myPreselectedList = new ArrayList<RateAgreementVO>();
			if (ApplicationPropertyManager.getInstance().getModuleProperty("contract", "enabled", false)) {
/ NEE
				/* First try if the previous match is still valid */
				if (aLogisticsOrder.isPersistent()) {
					if (aLogisticsOrder instanceof ServiceOrderVO) {
						// In case of a service order, the executed by party is often determining the rate agreement
						myKey = "SO-" + aRateType + aLogisticsOrder.getSystemId() + "-"
								+ EntityUtil.getSystemId(((ServiceOrderVO) aLogisticsOrder).getExecutedByPartyVO());
SO-SERVICE_ORDER26682241-0
					Integer[] myInt = (Integer[]) matching_cache.getObject(myKey);
					if (myInt != null) {
/ NEE
				myPreselectedList = getRateAgreementList(aRateType);
/s
		return rateAgreementDao.getByType(aRateType);
/s
RateAgreementHibernateDAOImpl.getByType(AgreementType) line: 61	

		DetachedCriteria myCriteria = DetachedCriteria.forClass(RateAgreementVO.class);
		myCriteria.add(Property.forName("agreementType").eq(aRateType)).add(Property.forName("template").eq(false))
				.add(Property.forName("quotation").eq(false)).addOrder(Order.asc("priority"));
		return findNonDeleted(myCriteria);

/ Intermezzo

$ vi RateAgreementVO.standard.hbm.xml

	<class name="com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO" table="RATE_AGREEMENT">
		<property name="agreementType" column="RATE_TYPE" not-null="true">
			<type name="org.hibernate.type.EnumType">
				<param name="enumClass">com.mpobjects.oms.ratecalc.model.rateagreement.vo.AgreementType</param>
				<param name="type">12</param>
			</type>
		</property>
/ TODO

pnllogistics3=# select distinct rate_type from rate_agreement;
         rate_type         
---------------------------
 SERVICE_ORDER
 SHIPMENT_ORDER_PROPERTIES
 SHIPMENT_ORDER
(3 rows)

/ In GUI	,

configuration, finance, service agreement, service agreements (admin)
/ we krijgen list van service agreements	, 
/ we kunnen per type select	, we kiezen service order	,
/ we zien er 9	, maar 4 ervan zijn deleted	, 
/ Klopt	,
pnllogistics3=# select count(*) from rate_agreement where rate_type='SERVICE_ORDER' and is_template=false and is_quotation=false and is_deleted=false;
 count 
-------
     5
(1 row)

/ we kunnen een sa edit click	, we zien de Selection Criteria, 	

/ Einde Intermezzo

/t
CalculationServiceImpl.getMatchingRateAgreement(LogisticsOrderVO, AgreementType) line: 758	
				myPreselectedList = getRateAgreementList(aRateType);
/d

[0]	com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO  (id=24132)	
theSystemId: 26822398Name :VT-0000001-TEST
Description :Test
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SERVICE_ORDER

[0]	com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO  (id=24132)	
, theSystemId: 26816977Name :VT-9841927-2015
Description :Verkooptarieven Pierik Elektro 2015
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SERVICE_ORDER

[0]	com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO  (id=24132)	
, theSystemId: 26785821Name :IT-Oegema-2015
Description :Inkoop tarieven Oegema 2015
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SERVICE_ORDER

[0]	com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO  (id=24132)	
, theSystemId: 26784484Name :VT-10195941-2015
Description :Verkooptarief Glutenvrij Totaal B.V. 2015
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SERVICE_ORDER

[0]	com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO  (id=24132)	
, theSystemId: 26682078Name :RA-BUSINESSRULES SEO
Description :Business rules for service orders
Organization :SystemId:500	Id:PNL-CARGO	Description:PostNL Cargo
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
Type :SERVICE_ORDER
]

			for (RateAgreementVO myRateAgreementVO : myPreselectedList) {
				if (myResultList.isEmpty() || !myResultList.contains(myRateAgreementVO)) {
					if (myRateAgreementVO.matches(myContext)) {
/ NEE
/ Geen van de 5	,

/ Intermezzo

/ we zien Sel crit	,
so-carrier: ./executedByPartyVO/partyId	, 
so-req_start_after: ./consignmentList[1]/serviceActionList[1]/shipmentOrderVO/dateSetVO/requestedStartAfter
so-bill_to_party: ./consignmentList[1]/serviceActionList[1]/shipmentOrderVO/billToPartyVO/partyId

/ Einde Intermezzo

			if (myResultList.isEmpty()) {
				/* Nothing found */
				if (aLogisticsOrder.isPersistent() && !StringUtils.isEmpty(myKey)) {
SO-SERVICE_ORDER26682241-0
					matching_cache.remove(myKey);
SycnCache->LfuCache(pathmatchingcache,86400000,10000)
/ TODO

			return myResultList;
[]

/t
CalculationServiceImpl.calculateRatesForServiceOrder(ServiceOrderVO, boolean, boolean) line: 254	
	/**
	 *
	 * @return A rate calculation with all alternatives for the service order.
	 */
	@Override
	public RateCalculationVO calculateRatesForServiceOrder(ServiceOrderVO aServiceOrder, boolean anEvaluation, boolean aLogFlag) {
			List<RateAgreementVO> mySelectedRateAgreement = getMatchingRateAgreement(aServiceOrder, AgreementType.SERVICE_ORDER);
/d
[]
			RateCalculationVO myRateCalculationVO = new RateCalculationVO();
			myRateCalculationVO.setEvaluation(anEvaluation);
true
			myRateCalculationVO.setServiceOrder(aServiceOrder);
SH000002993-COLLECT/26682241
			myRateCalculationVO.setCreateLog(aLogFlag);
true
			myRateCalculationVO.setRateAgreementVO(mySelectedRateAgreement);
			if (mySelectedRateAgreement.isEmpty()) {
/ JA
				myRateCalculationVO.noRun(AgreementType.SERVICE_ORDER);
/ NIETS
			return myRateCalculationVO;
/t
ServiceActionCache$ServiceActionCacheObject.buildAlternatives(boolean) line: 403	
			try {
				myRateCalculation = RateCalculationUtil.getService().calculateRatesForServiceOrder(serviceOrder, aReplanFlag,
						pathDeterminationOptions.isLogging());
/d
			if (myRateCalculation != null && LOG.isDebugEnabled()) {
				myRateCalculation.createXMLLog();
			if (myRateCalculation == null || myRateCalculation.getAlternativeList() == null || myRateCalculation.getAlternativeList().size() == 0) {
/ JA	,
/ myRateCalculation.getAlternativeList()=null
				LOG.info("No rates calculated for service order/ service action [" + serviceAction + "]");

/t
ServiceActionCache$ServiceActionCacheObject.dealWithManual() line: 531	
			buildAlternatives(true);
/d
			if (alternativeList.size() > 0) {
/ NEE

/t
ServiceActionCache$ServiceActionCacheObject.next(DateTime, DateTime) line: 269	
							dealWithManual();
/d
				/** Are we on time? */
				if (onTime(mySaDates) && acceptCost(currentAlternative)) {
/ JA
/alvast antwoord	,
					return true;
/s
com.mpobjects.optimize.model.service.ServiceActionCache.ServiceActionCacheObject.onTime(DateSetVO aServiceActionDateSet)
			switch (currentTimeConstraint) {
				case IGNORE:
					break;

			switch (leadTimeConstraint) {
				case NO_CHECK:
					myOnTime = true;
					break;
			return myOnTime;
true
/t
/s
com.mpobjects.optimize.model.service.ServiceActionCache.ServiceActionCacheObject.acceptCost(RateCalculationAlternative anAlternative)
/ TODO

/t
AdvancedPathDeterminationServiceImpl.evaluateServiceActionTemplate(int, DateTime, DateTime) line: 804	
		while (true) {
			if (!myCacheObject.next(aRequestedStartDate, aRequestedEndDate)) {
/ NEE

			if (currentPathTemplate.getPathPlanningMode() == PathPlanningMode.BACKWARD && aOrder == 0
/ NEE, is FORWARD
					|| currentPathTemplate.getPathPlanningMode() == PathPlanningMode.FORWARD && aOrder == currentServiceActionTemplateList.size() - 1) {
/ NEE	, aOrder=0 != 4-1

			} else {
				/* Move to the next/previous service level in the path */
				switch (currentPathTemplate.getPathPlanningMode()) {
					case FORWARD:
						evaluateServiceActionTemplate(aOrder + 1, myCacheObject.getRequestedEndDate(), requestedEndDate);
/s
		public DateTime getRequestedEndDate() {
			return new DateTime(serviceOrder.getDateSetVO().getRequestedEnd());
/t
/s
AdvancedPathDeterminationServiceImpl.evaluateServiceActionTemplate(int, DateTime, DateTime) line: 790	
/=
	private void evaluateServiceActionTemplate(int aOrder, DateTime aRequestedStartDate, DateTime aRequestedEndDate) {
/ aOrder=1

		ServiceActionTemplate mySaTemplate = currentServiceActionTemplateList.get(aOrder);
serviceActionTemplate SAT_LINEHAUL (systemId:26681986)

		ServiceActionCacheObject myCacheObject = cache.getCachObject(mySaTemplate, currentPathTemplate);
com.mpobjects.optimize.model.service.ServiceActionCache$ServiceActionCacheObject@20d880e8
		while (true) {
			if (!myCacheObject.next(aRequestedStartDate, aRequestedEndDate)) {
/s
ServiceActionCache$ServiceActionCacheObject.next(DateTime, DateTime) line: 191	
			if (serviceAction == null) {
				buildServiceAction();
/s
ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 505	
			serviceAction = new ServiceActionBuilder(shipmentOrder).copyFromTemplate(serviceActionTemplate);
/s
	public ServiceActionBuilder(ShipmentOrderVO aVO) {
		theShipmentOrder = aVO;
		serviceActionTemplateService = MpoBeanFactory.getBean(ServiceActionTemplateService.class);
/t
/s
ServiceActionBuilder.copyFromTemplate(ServiceActionTemplate) line: 47	
		ServiceActionVO myVO = new ServiceActionVO(ValueObject.VOLATILE_SYSTEM_ID, 0, null, theShipmentOrder, aTemplate.getServiceActionType(), "", null, aTemplate.getReference1(), aTemplate.getReference2(), aTemplate.getReference3(), aTemplate.getReference4(), aTemplate.getReference5(), aTemplate.getRemarks(), aTemplate.getHandlingInstructions());
/ aTemplate.getServiceActionType()=LINEHAUL

		myVO.setSequenceNr(aTemplate.getSequenceNumber());
10
		int myTemplateId = aTemplate.getSystemId();
26681986
		if (myTemplateId != ValueObject.VOLATILE_SYSTEM_ID) {
			myVO.setServiceActionTemplate(aTemplate);

		myVO.setOrderStatusVO(MpoBeanFactory.getBean(OrderStatusDAO.class).getByCode(OrderStatusVO.STATUS_UNPLANNED));

/ Intermezzo

pnllogistics3-# ;
 system_id | is_deleted | status_code | status_type |         status_description         
-----------+------------+-------------+-------------+------------------------------------
         6 |          0 | 1404        | OPEN        | OPEN

/ Einde Intermezzo

		String myCopyFromFlag = aTemplate.getCopyLocationFrom();
PTG:COLLECTIONDEPOT
/ Deze ptg heeft 1 party type: SORTEERHUB
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyFromFlag, theShipmentOrder);
			String myPartyType = aCopyFromFlag.substring(PARTY_TYPE_GROUP_PREFIX.length());
			if (FROM.equalsIgnoreCase(myPartyType)) {
/ NEE
				return aShipmentOrder.getFromPartyVO();
			} else if (TO.equalsIgnoreCase(myPartyType)) {
/ NEE
				return aShipmentOrder.getToPartyVO();
			} else if (BILL_TO.equalsIgnoreCase(myPartyType)) {
/ NEE
				return aShipmentOrder.getBillToPartyVO();

/ Dit waren de 3 gevallen dat de party in de sho zit	, deze zitten altijd in de ptg PTG:FROM	, ...

			} else {
				return aShipmentOrder.getShipmentOrderParty(myPartyType);
/s
ShipmentOrderVO.getShipmentOrderParty(String) line: 1692	
/=
	public ShipmentOrderParty getShipmentOrderParty(String aPartyTypeGroupCode) {
/ aPartyTypeGroupCode=COLLECTIONDEPOT
/ Klopt, dit is een ptg	,

		for (ShipmentOrderParty party : getShipmentOrderParties()) {
			if (aPartyTypeGroupCode.equalsIgnoreCase(party.getPartyTypeGroup().getCode())) {
				return party;

/ Intermezzo

/=theShipmentOrderPartyList
[
com.mpobjects.oms.model.entity.shipmentorderparty.ShipmentOrderParty@3f408c9d[shipmentOrder=ShipmentOrder: SH000002993(SystemId:26845924; Org:PNL-CARGO),name=Depot Dordrecht,partyTypeGroup=theSystemId: 26681485PartyTypeGroup :CollectionDepot]
/ system_id=26846097
,
com.mpobjects.oms.model.entity.shipmentorderparty.ShipmentOrderParty@13224c3[shipmentOrder=ShipmentOrder: SH000002993(SystemId:26845924; Org:PNL-CARGO),name=Depot Eindhoven,partyTypeGroup=theSystemId: 26681486PartyTypeGroup :DistributionDepot]
/ system_id=26846096
]
/ 26845924 is sho's system_id
/ 26681485, 26681486  is ptg 's system_id
/ 26846097, 26846096 is shipment_order_party's system_id	,

pnllogistics3=# select*from shipment_order_party where system_id=26846097;
 system_id |      name       | name2 |     address      | address2 |   city    | postal_code | region_state | phone_number | fax
_number | email_address | contact_name | shipment_order_systemid | is_deleted | country_systemid | party_id | sync_flag | party_
type_group_systemid | reference1 | reference2 | reference3 | reference4 | reference5 | reference6 
-----------+-----------------+-------+------------------+----------+-----------+-------------+--------------+--------------+----
--------+---------------+--------------+-------------------------+------------+------------------+----------+-----------+-------
--------------------+------------+------------+------------+------------+------------+------------
  26846097 | Depot Dordrecht |       | Pieter Zeemanweg | 146      | Dordrecht | 3316 GZ     |              |              |    
        |               |              |                26845924 |          0 |             4153 | DOR      | DISABLED  |       
           26681485 |            |            |            |            | 160213     | 
(1 row)

/ Dit is GEEN ship_from, ship_to, bill_to party , die in de row van de sho is	, 

pnllogistics3=# select*from shipment_order_party where system_id=26846096;
 system_id |      name       | name2 |     address     | address2 |   city    | postal_code | region_state | phone_number | fax_
number  | email_address | contact_name | shipment_order_systemid | is_deleted | country_systemid | party_id | sync_flag | party_
type_group_systemid | reference1 | reference2 | reference3 | reference4 | reference5 | reference6 
-----------+-----------------+-------+-----------------+----------+-----------+-------------+--------------+--------------+-----
--------+---------------+--------------+-------------------------+------------+------------------+----------+-----------+-------
--------------------+------------+------------+------------+------------+------------+------------
  26846096 | Depot Eindhoven |       | Mispelhoefstaat | 11       | Eindhoven | 5651GK      |              | 040-2623194  | 040-
2624666 |               |              |                26845924 |          0 |             4153 | EHV      | DISABLED  |       
           26681486 |            |            |            |            | 160209     | 
(1 row)

/ Dit is GEEN ship_from, ship_to, bill_to party , die in de row van de sho is	, 

/ 13	. 

ShipmentOrderServiceImpl.class
	@Override
	public ShipmentOrderVO create(ShipmentOrderVO aShipmentOrderTemplate, boolean isTemplate) {
		addShipmentOrderParties(myVO);
/ adds deze 2 parties	, 

/ Einde Intermezzo

/t
ServiceActionBuilder.copyFromTemplate(ServiceActionTemplate) line: 63	
		if (!StringUtils.isBlank(myCopyFromFlag)) {
PTG:COLLECTIONDEPOT
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyFromFlag, theShipmentOrder);
/d
com.mpobjects.oms.model.entity.shipmentorderparty.ShipmentOrderParty@67e6e09[shipmentOrder=ShipmentOrder: SH000002993(SystemId:26845924; Org:PNL-CARGO),name=Depot Dordrecht,partyTypeGroup=theSystemId: 26681485PartyTypeGroup :CollectionDepot]

			if (myShipmentOrderParty != null) {
				VirtualParty myParty = new VirtualParty();
				myParty.copyValuesFrom(myShipmentOrderParty);
				myVO.setFromPartyVO(myParty);
/ Toch een VirtualParty 	,
/s
					theFromPartyVO = aParty;

		String myCopyToFlag = aTemplate.getToLocationCopyFlag();
PTG:DISTRIBUTIONDEPOT
		if (!StringUtils.isBlank(myCopyToFlag)) {
			Party myShipmentOrderParty = serviceActionTemplateService.resolveShipmentOrderParty(myCopyToFlag, theShipmentOrder);
com.mpobjects.oms.model.entity.shipmentorderparty.ShipmentOrderParty@573df2bb[shipmentOrder=ShipmentOrder: SH000002993(SystemId:26845924; Org:PNL-CARGO),name=Depot Eindhoven,partyTypeGroup=theSystemId: 26681486PartyTypeGroup :DistributionDepot]

			if (myShipmentOrderParty != null) {
				VirtualParty myParty = new VirtualParty();
				myParty.copyValuesFrom(myShipmentOrderParty);
				myVO.setToPartyVO(myParty);

		// Take dates from the shipment order.
		myVO.getDateSetVO().setRequestedEndAfter(theShipmentOrder.getDateSetVO().getRequestedEndAfter());
/ myVO=sa
		myVO.getDateSetVO().setRequestedEndBefore(theShipmentOrder.getDateSetVO().getRequestedEndBefore());
		myVO.getDateSetVO().setRequestedStartAfter(theShipmentOrder.getDateSetVO().getRequestedStartAfter());
		myVO.getDateSetVO().setRequestedStartBefore(theShipmentOrder.getDateSetVO().getRequestedStartBefore());

		myVO.setPlanningMode(aTemplate.getPlanningMode());
CONSOLIDATIE
		myVO.setExecutionMode(aTemplate.getExecutionMode());
PRECEDE_CLOSE
		myVO.setAvgLeadTimeHrs(aTemplate.getAvgLeadtimeHrs());
0

/t
ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 506	
			serviceAction = new ServiceActionBuilder(shipmentOrder).copyFromTemplate(serviceActionTemplate);
/d
erviceAction.setOrderStatusCode(OrderStatusVO.STATUS_UNPLANNED);
/s
		} else {
			setOrderStatusVO(MpoBeanFactory.getBean(OrderStatusDAO.class).getByCode(aCode));
/s
				theOrderStatusVO = anOrderStatusVO;
theOrderStatusVO	com.mpobjects.oms.model.orderstatus.vo.OrderStatusVO  (id=23028)	
	code	"1404" (id=23518)	
	description	"OPEN" (id=23519)	
systemId	6	

			serviceAction.setShipmentOrderVO(shipmentOrder);
			shipmentOrder.addOrReplaceServiceAction(serviceAction);
/s
				theServiceActionList.add(aVO);
				aVO.setShipmentOrderVO(this);
/t
ServiceActionCache$ServiceActionCacheObject.buildServiceAction() line: 510	
			serviceOrderTemplateList.addAll(serviceActionTemplate.getServiceOrderTemplateList());
/ we zien in de GUI bij de sat 1 seo template: LINEHAUL	,

/ Intermezzo

pnllogistics3=# select system_id,service_order_id, is_template from service_order where service_order_id='LINEHAUL';
 system_id | service_order_id | is_template 
-----------+------------------+-------------
  26682242 | LINEHAUL         |           1
(1 row)

/ Einde Intermezzo

			serviceOrderTemplateIndex = 0;

/ MORGENOCHTEND DEBUG INPLAN























				























































































/ Einde DEBUG INPLAN SHIPMENTORDER
