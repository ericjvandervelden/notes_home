/ CHROME INSTALL

/ lees	,
http://www.howopensource.com/2013/04/yum-install-google-chrome-in-fedora-18-17-cent-os/

[eric@localhost ~]$ sudo rpm --import linux_signing_key.pub
error: linux_signing_key.pub: import read failed(2).
[eric@localhost ~]$ wget https://dl-ssl.google.com/linux/linux_signing_key.pub
--2014-05-01 05:35:46--  https://dl-ssl.google.com/linux/linux_signing_key.pub
Resolving dl-ssl.google.com (dl-ssl.google.com)... 173.194.78.93, 173.194.78.136, 173.194.78.190, ...
Connecting to dl-ssl.google.com (dl-ssl.google.com)|173.194.78.93|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1745 (1.7K) [text/plain]
Saving to: ‘linux_signing_key.pub’

100%[=====================================================================>] 1,745       --.-K/s   in 0s      

2014-05-01 05:35:51 (15.0 MB/s) - ‘linux_signing_key.pub’ saved [1745/1745]

$ vi linux_signing_key.pub

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

mQGiBEXwb0YRBADQva2NLpYXxgjNkbuP0LnPoEXruGmvi3XMIxjEUFuGNCP4Rj/a
kv2E5VixBP1vcQFDRJ+p1puh8NU0XERlhpyZrVMzzS/RdWdyXf7E5S8oqNXsoD1z
fvmI+i9b2EhHAA19Kgw7ifV8vMa4tkwslEmcTiwiw8lyUl28Wh4Et8SxzwCggDcA
feGqtn3PP5YAdD0km4S4XeMEAJjlrqPoPv2Gf//tfznY2UyS9PUqFCPLHgFLe80u
QhI2U5jt6jUKN4fHauvR6z3seSAsh1YyzyZCKxJFEKXCCqnrFSoh4WSJsbFNc4PN
b0V0SqiTCkWADZyLT5wll8sWuQ5ylTf3z1ENoHf+G3um3/wk/+xmEHvj9HCTBEXP
78X0A/0Tqlhc2RBnEf+AqxWvM8sk8LzJI/XGjwBvKfXe+l3rnSR2kEAvGzj5Sg0X
4XmfTg4Jl8BNjWyvm2Wmjfet41LPmYJKsux3g0b8yzQxeOA4pQKKAU3Z4+rgzGmf
HdwCG5MNT2A5XxD/eDd+L4fRx0HbFkIQoAi1J3YWQSiTk15fw7RMR29vZ2xlLCBJ
bmMuIExpbnV4IFBhY2thZ2UgU2lnbmluZyBLZXkgPGxpbnV4LXBhY2thZ2VzLWtl
eW1hc3RlckBnb29nbGUuY29tPohjBBMRAgAjAhsDBgsJCAcDAgQVAggDBBYCAwEC
HgECF4AFAkYVdn8CGQEACgkQoECDD3+sWZHKSgCfdq3HtNYJLv+XZleb6HN4zOcF
AJEAniSFbuv8V5FSHxeRimHx25671az+uQINBEXwb0sQCACuA8HT2nr+FM5y/kzI
A51ZcC46KFtIDgjQJ31Q3OrkYP8LbxOpKMRIzvOZrsjOlFmDVqitiVc7qj3lYp6U
rgNVaFv6Qu4bo2/ctjNHDDBdv6nufmusJUWq/9TwieepM/cwnXd+HMxu1XBKRVk9
XyAZ9SvfcW4EtxVgysI+XlptKFa5JCqFM3qJllVohMmr7lMwO8+sxTWTXqxsptJo
pZeKz+UBEEqPyw7CUIVYGC9ENEtIMFvAvPqnhj1GS96REMpry+5s9WKuLEaclWpd
K3krttbDlY1NaeQUCRvBYZ8iAG9YSLHUHMTuI2oea07Rh4dtIAqPwAX8xn36JAYG
2vgLAAMFB/wKqaycjWAZwIe98Yt0qHsdkpmIbarD9fGiA6kfkK/UxjL/k7tmS4Vm
CljrrDZkPSQ/19mpdRcGXtb0NI9+nyM5trweTvtPw+HPkDiJlTaiCcx+izg79Fj9
KcofuNb3lPdXZb9tzf5oDnmm/B+4vkeTuEZJ//IFty8cmvCpzvY+DAz1Vo9rA+Zn
cpWY1n6z6oSS9AsyT/IFlWWBZZ17SpMHu+h4Bxy62+AbPHKGSujEGQhWq8ZRoJAT
G0KSObnmZ7FwFWu1e9XFoUCt0bSjiJWTIyaObMrWu/LvJ3e9I87HseSJStfw6fki
5og9qFEkMrIrBCp3QGuQWBq/rTdMuwNFiEkEGBECAAkFAkXwb0sCGwwACgkQoECD
D3+sWZF/WACfeNAu1/1hwZtUo1bR+MWiCjpvHtwAnA1R3IHqFLQ2X3xJ40XPuAyY
/FJG
=Quqp
-----END PGP PUBLIC KEY BLOCK-----


$ sudo rpm --import linux_signing_key.pub

$ sudo sh -c 'echo "[google-chrome]
name=Google Chrome 64-bit
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64" >> /etc/yum.repos.d/google-chrome.repo'

$ sudo yum update
...
Downloading packages:
warning: /var/cache/yum/x86_64/20/updates/packages/python3-libs-3.3.2-11.fc20.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 246110c1: NOKEY
Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-20-x86_64
Importing GPG key 0x246110C1:
 Userid     : "Fedora (20) <fedora@fedoraproject.org>"
 Fingerprint: c7c9 a9c8 9153 f201 83ce 7cba 2eb1 61fa 2461 10c1
 Package    : fedora-release-20-1.noarch (@anaconda)
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-20-x86_64
Is this ok [y/N]: y

[eric@localhost ~]$ sudo yum install google-chrome-stable

================================================================================================================
 Package                              Arch           Version                        Repository             Size
================================================================================================================
Installing:
 google-chrome-stable                 x86_64         34.0.1847.132-1                google-chrome          57 M
Installing for dependencies:
 gdbm-devel                           x86_64         1.10-7.fc20                    fedora                 47 k
 glibc-devel                          x86_64         2.18-12.fc20                   updates               1.0 M
 glibc-headers                        x86_64         2.18-12.fc20                   updates               647 k
 kernel-headers                       x86_64         3.13.10-200.fc20               updates               930 k
 libXScrnSaver                        x86_64         1.2.2-6.fc20                   fedora                 24 k
 libdb-devel                          x86_64         5.3.28-1.fc20                  fedora                 37 k
 libmng                               x86_64         1.0.10-12.fc20                 fedora                166 k
 libpng12                             x86_64         1.2.50-6.fc20                  updates               151 k
 m4                                   x86_64         1.4.16-10.fc20                 fedora                255 k
 patch                                x86_64         2.7.1-7.fc20                   fedora                110 k
 perl-B-Lint                          noarch         1.17-291.fc20                  fedora                 20 k
 perl-Business-ISBN                   noarch         2.06-4.fc20                    fedora                 27 k
 perl-Business-ISBN-Data              noarch         20120719.001-4.fc20            fedora                 25 k
 perl-CGI                             noarch         3.64-1.fc20                    updates               250 k
 perl-CPAN                            noarch         2.00-289.fc20                  updates               297 k
 perl-Class-ISA                       noarch         0.36-1012.fc20                 fedora                9.1 k
 perl-Compress-Raw-Bzip2              x86_64         2.062-2.fc20                   fedora                 33 k
 perl-Compress-Raw-Zlib               x86_64         2.062-2.fc20                   fedora                 58 k
 perl-Digest                          noarch         1.17-291.fc20                  fedora                 23 k
 perl-Digest-MD5                      x86_64         2.53-3.fc20                    fedora                 30 k
 perl-Digest-SHA                      x86_64         1:5.85-5.fc20                  updates                58 k
 perl-Encode-Locale                   noarch         1.03-7.fc20                    fedora                 16 k
 perl-Env                             noarch         1.04-291.fc20                  fedora                 16 k
 perl-ExtUtils-Install                noarch         1.59-289.fc20                  updates                74 k
 perl-ExtUtils-MakeMaker              noarch         6.72-2.fc20                    fedora                277 k
 perl-ExtUtils-Manifest               noarch         1.63-1.fc20                    fedora                 31 k
 perl-ExtUtils-ParseXS                noarch         1:3.18-292.fc20                updates                77 k
 perl-FCGI                            x86_64         1:0.74-10.fc20                 fedora                 43 k
 perl-File-CheckTree                  noarch         4.42-291.fc20                  fedora                 18 k
 perl-File-Listing                    noarch         6.04-7.fc20                    fedora                 13 k
 perl-HTML-Parser                     x86_64         3.71-4.fc20                    fedora                115 k
 perl-HTML-Tagset                     noarch         3.20-18.fc20                   fedora                 18 k
 perl-HTTP-Cookies                    noarch         6.01-7.fc20                    fedora                 26 k
 perl-HTTP-Daemon                     noarch         6.01-7.fc20                    fedora                 20 k
 perl-HTTP-Date                       noarch         6.02-8.fc20                    fedora                 14 k
 perl-HTTP-Message                    noarch         6.06-7.fc20                    fedora                 82 k
 perl-HTTP-Negotiate                  noarch         6.01-7.fc20                    fedora                 17 k
 perl-IO-Compress                     noarch         2.062-2.fc20                   fedora                259 k
 perl-IO-HTML                         noarch         1.00-3.fc20                    fedora                 23 k
 perl-IO-Socket-IP                    noarch         0.29-1.fc20                    updates                37 k
 perl-IO-Socket-SSL                   noarch         1.955-1.fc20                   fedora                116 k
 perl-LWP-MediaTypes                  noarch         6.02-4.fc20                    fedora                 24 k
 perl-Locale-Codes                    noarch         3.26-3.fc20                    fedora                312 k
 perl-Locale-Maketext                 noarch         1.25-1.fc20                    updates                94 k
 perl-Module-Pluggable                noarch         1:4.80-292.fc20                updates                29 k
 perl-Net-HTTP                        noarch         6.06-4.fc20                    fedora                 29 k
 perl-Net-LibIDN                      x86_64         0.12-16.fc20                   fedora                 29 k
 perl-Net-SSLeay                      x86_64         1.55-4.fc20                    fedora                284 k
 perl-Pod-Checker                     noarch         1.60-291.fc20                  fedora                 28 k
 perl-Pod-LaTeX                       noarch         0.61-292.fc20                  fedora                 36 k
 perl-Pod-Parser                      noarch         1.61-3.fc20                    fedora                107 k
 perl-Pod-Plainer                     noarch         1.03-6.fc20                    fedora                9.2 k
 perl-Sys-Syslog                      x86_64         0.33-4.fc20                    fedora                 42 k
 perl-Test-Harness                    noarch         3.28-3.fc20                    fedora                302 k
 perl-Test-Simple                     noarch         1.001002-1.fc20                fedora                177 k
 perl-Text-Soundex                    x86_64         3.04-291.fc20                  fedora                 19 k
 perl-Text-Unidecode                  noarch         0.04-21.fc20                   fedora                115 k
 perl-TimeDate                        noarch         1:2.30-3.fc20                  fedora                 52 k
 perl-URI                             noarch         1.60-11.fc20                   fedora                107 k
 perl-WWW-RobotRules                  noarch         6.02-8.fc20                    fedora                 18 k
 perl-XML-LibXML                      x86_64         1:2.0105-1.fc20                fedora                377 k
 perl-XML-NamespaceSupport            noarch         1.11-12.fc20                   fedora                 19 k
 perl-XML-SAX                         noarch         0.99-11.fc20                   fedora                 64 k
 perl-XML-SAX-Base                    noarch         1.08-10.fc20                   fedora                 33 k
 perl-autodie                         noarch         2.20-4.fc20                    fedora                 80 k
 perl-devel                           x86_64         4:5.18.2-289.fc20              updates               473 k
 perl-libwww-perl                     noarch         6.05-3.fc20                    fedora                205 k
 qt                                   x86_64         1:4.8.5-15.fc20                updates               4.6 M
 qt-settings                          noarch         20-12.fc20                     fedora                 18 k
 qt-x11                               x86_64         1:4.8.5-15.fc20                updates                13 M
 qt3                                  x86_64         3.3.8b-56.fc20                 updates               3.4 M
 redhat-lsb                           x86_64         4.1-21.fc20                    updates                24 k
 redhat-lsb-core                      x86_64         4.1-21.fc20                    updates                37 k
 redhat-lsb-cxx                       x86_64         4.1-21.fc20                    updates                16 k
 redhat-lsb-desktop                   x86_64         4.1-21.fc20                    updates                20 k
 redhat-lsb-languages                 x86_64         4.1-21.fc20                    updates                17 k
 redhat-lsb-printing                  x86_64         4.1-21.fc20                    updates                16 k
 redhat-lsb-submod-multimedia         x86_64         4.1-21.fc20                    updates                15 k
 redhat-lsb-submod-security           x86_64         4.1-21.fc20                    updates                15 k
 spax                                 x86_64         1.5.2-8.fc20                   fedora                259 k
 systemtap-sdt-devel                  x86_64         2.4-2.fc20                     updates                57 k


/ Einde CHROME INSTALL

/ JAVA INSTALL

[eric@localhost ~]$ sudo yum install ~/Downloads/jdk-7u55-linux-x64.rpm 
[eric@localhost ~]$ sudo yum install ~/Downloads/jdk-7u55-linux-x64-demos.rpm 
[eric@localhost ~]$  ls /usr/java
default  jdk1.7.0_55  latest
/ /usr/java is van deze rpm's	, niet van openjdk-1.7.0	,



/ Einde JAVA INSTALL

/ ANT INSTALL

/ 7	.

[eric@localhost ~]$ sudo yum install ant

Installing:
 ant                               noarch              1.9.2-7.fc20                  fedora               1.9 M
Installing for dependencies:
 xalan-j2                          noarch              2.7.1-22.fc20                 updates              1.9 M
 xerces-j2                         noarch              2.11.0-16.fc20                fedora               1.1 M
 xml-commons-apis                  noarch              1.4.01-14.fc20                fedora               227 k
 xml-commons-resolver              noarch              1.2-14.fc20                   fedora               108 k
/ 7	.

/ ant zit echt in /usr/bin en in /usr/share/java/ant
[eric@localhost workspace]$ ls /usr/share/java/ant
ant-bootstrap.jar  ant.jar  ant-launcher.jar
/ het meest in /usr/share/ant zijn links	,

[eric@localhost workspace]$ which ant
/usr/bin/ant
[eric@localhost workspace]$ ls /usr/share/ant
bin  etc  lib
[eric@localhost workspace]$ ls -l /usr/share/ant/bin
total 0
lrwxrwxrwx. 1 root root 12 May  1 13:43 ant -> /usr/bin/ant
lrwxrwxrwx. 1 root root 15 May  1 13:43 antRun -> /usr/bin/antRun
[eric@localhost workspace]$ ls -l /usr/share/ant/etc
total 128
-rw-r--r--. 1 root root  3900 Jul  8  2013 ant-update.xsl
-rw-r--r--. 1 root root  4797 Jul  8  2013 changelog.xsl
-rw-r--r--. 1 root root  2125 Jul  8  2013 common2master.xsl
-rw-r--r--. 1 root root 18570 Jul  8  2013 coverage-frames.xsl
-rw-r--r--. 1 root root 29010 Jul  8  2013 junit-frames-xalan1.xsl
-rw-r--r--. 1 root root  6092 Jul  8  2013 log.xsl
-rw-r--r--. 1 root root 37833 Jul  8  2013 mmetrics-frames.xsl
-rw-r--r--. 1 root root  1866 Jul  8  2013 printFailingTests.xsl
-rw-r--r--. 1 root root  6215 Jul  8  2013 tagdiff.xsl
[eric@localhost workspace]$ ls -l /usr/share/ant/lib
total 0
lrwxrwxrwx. 1 root root 32 May  1 13:43 ant-bootstrap.jar -> ../../java/ant/ant-bootstrap.jar
lrwxrwxrwx. 1 root root 22 May  1 13:43 ant.jar -> ../../java/ant/ant.jar
lrwxrwxrwx. 1 root root 31 May  1 13:43 ant-launcher.jar -> ../../java/ant/ant-launcher.jar

[eric@localhost workspace]$ ls -l /usr/share/java/
total 4968
drwxr-xr-x. 2 root root    4096 May  1 13:43 ant
lrwxrwxrwx. 1 root root      21 May  1 13:43 ant-bootstrap.jar -> ant/ant-bootstrap.jar
lrwxrwxrwx. 1 root root      11 May  1 13:43 ant.jar -> ant/ant.jar
lrwxrwxrwx. 1 root root      20 May  1 13:43 ant-launcher.jar -> ant/ant-launcher.jar
lrwxrwxrwx. 1 root root      20 May  1 13:43 jaxp13.jar -> xml-commons-apis.jar
lrwxrwxrwx. 1 root root      20 May  1 13:43 jaxp.jar -> xml-commons-apis.jar
lrwxrwxrwx. 1 root root      34 May  1 13:43 jaxp_parser_impl.jar -> /etc/alternatives/jaxp_parser_impl
lrwxrwxrwx. 1 root root      37 May  1 13:43 jaxp_transform_impl.jar -> /etc/alternatives/jaxp_transform_impl
-rw-r--r--. 1 root root   62866 Aug  4  2013 jline.jar
-rw-r--r--. 1 root root 1070474 Jan 14 17:53 js.jar
-rw-r--r--. 1 root root   18384 Jan 14 17:53 rhino-examples.jar
lrwxrwxrwx. 1 root root       6 May  1 11:48 rhino.jar -> js.jar
-rw-r--r--. 1 root root   92286 Aug  4  2013 tagsoup.jar
-rw-r--r--. 1 root root 1790261 Mar 27 11:40 xalan-j2.jar
-rw-r--r--. 1 root root  284027 Mar 27 11:40 xalan-j2-serializer.jar
-rw-r--r--. 1 root root 1349981 Aug  6  2013 xerces-j2.jar
-rw-r--r--. 1 root root   85984 Aug  6  2013 xml-commons-apis-ext.jar
-rw-r--r--. 1 root root  219527 Aug  6  2013 xml-commons-apis.jar
lrwxrwxrwx. 1 root root      20 May  1 13:43 xml-commons-jaxp-1.3-apis.jar -> xml-commons-apis.jar
-rw-r--r--. 1 root root   86801 Aug 15  2013 xml-commons-resolver.jar
lrwxrwxrwx. 1 root root      24 May  1 13:43 xml-resolver.jar -> xml-commons-resolver.jar
[
[eric@localhost workspace]$  ls -l /usr/share/ant/bin/ant
lrwxrwxrwx. 1 root root 12 May  1 13:43 /usr/share/ant/bin/ant -> /usr/bin/ant

/ 7	.

/ Einde ANT INSTALL

/ ANT BOOK

/ 7	.

/ we download de code	,
http://www.informit.com/search/index.aspx?query=ant
...

[eric@localhost Book]$ pwd
/home/eric/Devel/Java/Ant/Book
[eric@localhost Book]$ unzip  ~/Downloads/code.zip 


/ 7	. 

[eric@localhost Ch01]$ pwd
/home/eric/Devel/Java/Ant/Book/Ch01

/ 13	.

$ vi build.xml

<project name="antbook" default="compile" basedir=".">
        <property name="src" value="src"/>
        <property name="build" value="build/classes"/>

        <target name="init">
                <mkdir dir="${build}"/>
        </target>

        <target name="clean">
                <delete dir="${build}"/>
        </target>

        <target name="compile" depends="init">
        </target>


</project>

[eric@localhost Ch01]$ ant 
Buildfile: /home/eric/Devel/Java/Ant/Book/Ch01/build.xml

init:
    [mkdir] Created dir: /home/eric/Devel/Java/Ant/Book/Ch01/build/classes

compile:

BUILD SUCCESSFUL

/ Let op {} in ${build} en niet (), $(build)	,

/ 13	.

$ vi build.xml

<project name="antbook" default="compile" basedir=".">
        <property name="src" value="src"/>
        <property name="build" value="build/classes"/>

        <target name="init">
                <mkdir dir="${src}"/>
                <mkdir dir="${build}"/>
        </target>

        <target name="clean">
                <delete dir="${build}"/>
        </target>

        <target name="compile" depends="init">
                <javac srcdir="${src}"
                        destdir="${build}"
                        optimize="off"
                        debug="on">
                        <classpath>
                                <pathelement location="${build}"/>
                        </classpath>
                </javac>

        </target>


</project>


[eric@localhost Ch01]$ vi src/Main.java
[eric@localhost Ch01]$ ant
Buildfile: /home/eric/Devel/Java/Ant/Book/Ch01/build.xml

init:

compile:
    [javac] /home/eric/Devel/Java/Ant/Book/Ch01/build.xml:18: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 1 source file to /home/eric/Devel/Java/Ant/Book/Ch01/build/classes

BUILD SUCCESSFUL

/ we zien niets hoe javac is invoke, met -g bijv	,
/ Doe daarom	, 
$ ant -v 

/ 7	.

[eric@localhost Chapter02]$ pwd
/home/eric/Devel/Java/Ant/Book/code/Chapter02
[eric@localhost Chapter02]$ jar tvf build/helloWorld.jar 
     0 Wed May 21 08:23:00 CEST 2014 META-INF/
   169 Wed May 21 08:22:58 CEST 2014 META-INF/MANIFEST.MF
     0 Wed May 21 08:23:00 CEST 2014 hello/
    28 Wed May 21 08:23:00 CEST 2014 hello/Hello.properties
   637 Wed May 21 08:23:00 CEST 2014 hello/HelloWorld.class
   720 Wed May 21 08:23:00 CEST 2014 hello/HelloWorldClient.class

[eric@localhost Chapter02]$ cat etc/Hello.properties 
hello.text=Hello, World!
[eric@localhost Chapter02]$ cat etc/MANIFEST.MF 
Manifest-Version: 1.0
Main-Class: hello.HelloWorldClient

/ We zien dat ook OK	,
[eric@localhost Chapter02]$ cat etc/MANIFEST.MF 
Main-Class: hello.HelloWorldClient

$ vi build.xml

   <target name="compile" depends="prepare">
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               debug="true"		/ als false: -g:none	, als true: -g
               deprecation="true"	/ ?
               optimize="true"		/ als true: -O	, als false: NIETS	,
        />


/ 7	.

/ Manual 
http://ant.apache.org/manual/index.html
/ writing tasks

[eric@localhost Manual]$ pwd
/home/eric/Devel/Java/Ant/Manual

/ we hoeven niet per se via de jar	,

  <target name="use" description="Use the Task" depends="jar">
      	<taskdef name="helloworld" classname="HelloWorld" classpath="${classes.dir}"/>
        <helloworld/>
  </target>

[eric@localhost repository]$ bash <(awk ' {print "jar tvf",$0}' <(find org/hibernate/ -name "*.jar")) | grep ReflectionManager 



/ Einde ANT

/ TMP

<class
        name="Item">
        <id
                column="id_"
                name="id">
                <generator
                        class="increment"/></id>
        <property
                name="name"/>
        <property
                name="city"/>
        <set
                cascade="all,delete-orphan"
                name="bids">
                <key
                        not-null="true"
                        column="item_"/>
                <one-to-many
                        class="Bid"/>
        </set>
<!--
                <cache usage="read-write"/>
                inverse="true"
-->
</class>


<class
        name="Bid">
        <id
                name="id">
                <generator
                        class="increment"/>
        </id>
        <many-to-one
                class="Item"
                name="item"
                column="item_"
        />
<!--
                cascade="all"
                not-null="true"
                update="false"
                insert="false"
-->
</class>



/ Einde TMP

/ POSTGRESQL

[eric@localhost ~]$ sudo yum install postgresql-server

Downloading packages:
(1/3): postgresql-9.3.4-1.fc20.x86_64.rpm                                                | 3.1 MB  00:00:01     
(2/3): postgresql-libs-9.3.4-1.fc20.x86_64.rpm                                           | 229 kB  00:00:01     
(3/3): postgresql-server-9.3.4-1.fc20.x86_64.rpm                                         | 3.8 MB  00:00:00     
[eric@localhost ~]$ sudo  postgresql-setup initdb
Initializing database ... OK


/ Einde POSTGRESQL

/ ECLIPSE

[eric@localhost eclipse-java]$ pwd
/home/eric/Devel/Java/Eclipse/eclipse-java

[eric@localhost eclipse-java]$ tar -xvzf ~/Downloads/eclipse-java-kepler-SR2-linux-gtk-x86_64.tar.gz 

$ vi eclipse.ini
...
#-XX:MaxPermSize=256m
#-Xms40m
#-Xmx512m
-XX:MaxPermSize=512m
-Xms512m
-Xmx1024m



[eric@localhost eclipse-java]$ eclipse/eclipse 
...

23894 23895 23894  3115 pts/0    23894 Sl+   1000   1:13 
java 
-agentpath:/usr/lib64/libabrt-java-connector.so=abrt=on 
-Dosgi.requiredJavaVersion=1.6 
-XX:MaxPermSize=256m 
-Xms40m 
-Xmx512m 
-jar /home/eric/Devel/Java/Eclipse/eclipse-java/eclipse//plugins/org.eclipse.equinox.launcher_1.3.0.v20130327-1440.jar 
-os linux 
-ws gtk 
-arch x86_64 
-showsplash /home/eric/Devel/Java/Eclipse/eclipse-java/eclipse//plugins/org.eclipse.platform_4.3.2.v20140221-1700/splash.bmp 
-launcher /home/eric/Devel/Java/Eclipse/eclipse-java/eclipse/eclipse 
-name Eclipse 
--launcher.library /home/eric/Devel/Java/Eclipse/eclipse-java/eclipse//plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.200.v20140116-2212/eclipse_1508.so 
-startup /home/eric/Devel/Java/Eclipse/eclipse-java/eclipse//plugins/org.eclipse.equinox.launcher_1.3.0.v20130327-1440.jar 
--launcher.appendVmargs 
-exitdata 6c8005 
-product org.eclipse.epp.package.java.product 
-vm /usr/bin/java 
-vmargs -Dosgi.requiredJavaVersion=1.6 
-XX:MaxPermSize=256m 
-Xms40m 
-Xmx512m 
-jar /home/eric/Devel/Java/Eclipse/eclipse-java/eclipse//plugins/org.eclipse.equinox.launcher_1.3.0.v20130327-1440.jar

[eric@localhost eclipse-jee]$ tar -xvzf ~/Downloads/eclipse-jee-kepler-SR2-linux-gtk-x86_64.tar.gz 
[eric@localhost eclipse-jee]$ vi eclipse/eclipse.ini 
...
#-XX:MaxPermSize=256m
#-Xms40m
#-Xmx512m
-XX:MaxPermSize=512m
-Xms512m
-Xmx1024m





/ Einde ECLIPSE

/ APPLICATIE 

/ 7	.

[eric@localhost workspace]$ sudo yum install ntpdate
[eric@localhost workspace]$ ntpdate -q 0.fedora.pool.ntp.org
server 82.196.3.216, stratum 3, offset 0.000473, delay 0.03540
server 46.249.47.127, stratum 4, offset -0.001367, delay 0.03630
server 87.253.148.92, stratum 3, offset -0.006066, delay 0.03487
server 37.34.57.151, stratum 2, offset -0.002966, delay 0.03452
 1 May 10:27:02 ntpdate[26560]: adjust time server 37.34.57.151 offset -0.002966 sec
[eric@localhost workspace]$ ntpdate -q 1.fedora.pool.ntp.org
server 87.195.109.207, stratum 2, offset -0.000919, delay 0.03580
server 83.98.201.134, stratum 2, offset -0.001314, delay 0.03445
server 94.228.220.14, stratum 2, offset -0.000995, delay 0.03604
server 85.17.249.173, stratum 2, offset 0.000812, delay 0.03413
 1 May 10:27:50 ntpdate[26569]: adjust time server 85.17.249.173 offset 0.000812 sec
[eric@localhost workspace]$ sudo ntpdate 0.fedora.pool.ntp.org 1.fedora.pool.ntp.org
 1 May 10:29:12 ntpdate[26576]: adjust time server 83.98.201.134 offset -0.001235 sec

[eric@localhost workspace]$ sudo systemctl enable ntpdate.service 
[eric@localhost workspace]$ sudo systemctl start ntpdate.service 
[eric@localhost workspace]$ sudo systemctl status ntpdate.service 
ntpdate.service - Set time via NTP
   Loaded: loaded (/usr/lib/systemd/system/ntpdate.service; enabled)
   Active: active (exited) since Thu 2014-05-01 10:31:22 EDT; 2s ago
  Process: 26629 ExecStart=/usr/libexec/ntpdate-wrapper (code=exited, status=0/SUCCESS)
 Main PID: 26629 (code=exited, status=0/SUCCESS)

May 01 10:31:22 localhost.localdomain systemd[1]: Started Set time via NTP.

[eric@localhost workspace]$ date
Thu May  1 10:31:34 EDT 2014

/ tz via graphical interface	,
/ Deze doet	,
[eric@localhost workspace]$  ls -l /etc/localtime 
lrwxrwxrwx. 1 root root 38 May  1 16:36 /etc/localtime -> ../usr/share/zoneinfo/Europe/Amsterdam





$ sudo yum install svn

[eric@localhost workspace]$ svn co https://system.mp-objects.com/svn/tms/branches/2014.01


https://system.mp-objects.com/svn/
eric
rtdMpo45
https://system.mp-objects.com/wiki/
eric
rtdMpo45
https://system.mp-objects.com/jira/
eric
rtdMpo45

https://system.mp-objects.com/fisheye/login

mpopostgres
mpopostgres@mpo

/ 7	. 

[eric@localhost eclipse-jee]$ sudo mount mount -t cifs -o username=eric,password=rtdMpo45 //mpofs1/scratch /mnt/mpofs1/

/ Maar we deden het via Nautulus	,
Connect to server: smb://mpofs1


/ 7	.

/ mpo configuration in eclipse	,

/ 7	.

http://127.0.0.1:8080/tms/core/index_frameset

/ 7	.

[root@localhost apps]# mkdir -p /local/apps/interface/mpo/to_tms_archive
[root@localhost apps]# chown -R eric:eric *

[root@localhost apps]# ls -ld /local/
drwxr-xr-x. 3 root root 4096 May  2 09:39 /local/
[root@localhost apps]# ls -ld /local/apps/
drwxr-xr-x. 3 root root 4096 May  2 09:39 /local/apps/
[root@localhost apps]# ls -ld /local/apps/interface/
drwxr-xr-x. 3 eric eric 4096 May  2 09:40 /local/apps/interface/

/ 7	.

/ ga naar	,
http://localhost:8080/tms/core/index_frameset

/ planning, shipment order, search	,

/ click op laatste entry, edit icon	,

/ we zien onderaan	, Service Action 
/ click op consignment N00000265 

/click op Save	, (naast Save and Close)	,

/ we vallen in 	de workspace	,
./2014.01/module/oms/src/java/com/mpobjects/oms/control/serviceorder/action/ServiceOrderSaveAction.java

/ er zijn ook	,
./2014.01/module/oms/oms-menu.xml
./2014.01/module/oms/war/oms/oms-sitemap.xmap
./2014.01/module/oms/war/oms/jsp/dashboard-view.jsp
./2014.01/customer0005/customer0005/war/customer0005/jsp/shipment-order_edit.jsp

/ 7	.

/ Als we click op Save op http://127.0.0.1:8080/tms/core/index_frameset, op "Service Order Edit"	,
<input type="button" name="saveBtn" id="saveBtn" value="Save" onclick=" theMpoFormFormManager.submit('../oms/service-order_save', false, 0);">
/ TODO

/ Dan vallen we in	,
Daemon Thread [http-0.0.0.0-8080-10] (Suspended (breakpoint at line 87 in ServiceOrderSaveAction))	
	ServiceOrderSaveAction(ServiceOrderSaveAction).handleSave() line: 87	
	ServiceOrderSaveAction.handleSave() line: 21	
	ServiceOrderSaveAction(AbstractSaveAction).act() line: 69	
	ServiceOrderSaveAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 170	
	ActTypeNode.invoke(Environment, InvokeContext) line: 125	
	MatchNode(AbstractParentProcessingNode).invokeNodes(ProcessingNode[], Environment, InvokeContext, String, Map) line: 47	
	MatchNode.invoke(Environment, InvokeContext) line: 108	
	PipelineNode(AbstractParentProcessingNode).invokeNodes(ProcessingNode[], Environment, InvokeContext) line: 69	
	PipelineNode.invoke(Environment, InvokeContext) line: 143	
	PipelinesNode(AbstractParentProcessingNode).invokeNodes(ProcessingNode[], Environment, InvokeContext) line: 69	
	PipelinesNode.invoke(Environment, InvokeContext) line: 93	
	ConcreteTreeProcessor.process(Environment, InvokeContext) line: 235	
	ConcreteTreeProcessor.process(Environment) line: 177	
	TreeProcessor.process(Environment) line: 253	
	MountNode.invoke(Environment, InvokeContext) line: 118	
	PipelineNode(AbstractParentProcessingNode).invokeNodes(ProcessingNode[], Environment, InvokeContext) line: 69	
	PipelineNode.invoke(Environment, InvokeContext) line: 143	
	PipelinesNode(AbstractParentProcessingNode).invokeNodes(ProcessingNode[], Environment, InvokeContext) line: 69	
	PipelinesNode.invoke(Environment, InvokeContext) line: 93	
	ConcreteTreeProcessor.process(Environment, InvokeContext) line: 235	
	ConcreteTreeProcessor.process(Environment) line: 177	
	TreeProcessor.process(Environment) line: 253	
	Cocoon.process(Environment) line: 699	
	CocoonServlet.service(HttpServletRequest, HttpServletResponse) line: 1154	
	CocoonServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 810	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 252	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	FirstLoginFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 75	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 202	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	SetCharacterEncodingFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 111	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 202	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	CoreOpenSessionInViewFilter(OpenSessionInViewFilter).doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain) line: 230	
	CoreOpenSessionInViewFilter(OncePerRequestFilter).doFilter(ServletRequest, ServletResponse, FilterChain) line: 107	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 202	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	ReplyHeaderFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 96	
	ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 202	
	ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 173	
	StandardWrapperValve.invoke(Request, Response) line: 213	
	StandardContextValve.invoke(Request, Response) line: 178	
	SecurityAssociationValve.invoke(Request, Response) line: 175	
	FormAuthenticator(AuthenticatorBase).invoke(Request, Response) line: 524	
	JaccContextValve.invoke(Request, Response) line: 74	
	StandardHostValve.invoke(Request, Response) line: 126	
	ErrorReportValve.invoke(Request, Response) line: 105	
	CachedConnectionValve.invoke(Request, Response) line: 156	
	StandardEngineValve.invoke(Request, Response) line: 107	
	CoyoteAdapter.service(Request, Response) line: 148	
	Http11Processor.process(InputStream, OutputStream) line: 869	
	Http11Protocol$JmxHttp11ConnectionHandler(Http11BaseProtocol$Http11ConnectionHandler).processConnection(TcpConnection, Object[]) line: 664	
	PoolTcpEndpoint.processSocket(Socket, TcpConnection, Object[]) line: 527	
	MasterSlaveWorkerThread.run() line: 112	
	ThreadWithAttributes(Thread).run() line: 744	


/ See oms-sitemap.xmap	,

	<!-- SERVICE ORDERS -->
	<map:action logger="serviceorder" name="serviceOrderSave" src="com.mpobjects.oms.control.serviceorder.action.ServiceOrderSaveAction"/>
/= def serviceOrderSave action	,
/ Deze wordt op 2 plaatsen used	,

			<map:match pattern="service-order_save">
				<map:act type="serviceOrderSave"/>
				<map:act type="debugAction"/>
			</map:match>

            <map:match pattern="consignment_remove-service-actions">
                <map:act type="serviceOrderSave">
                    <!-- for validation of the form -->
                    <map:parameter name="noRedirect" value="true"/>
                </map:act>
                <map:act type="consignmentRemoveServiceActions">
                    <map:act type="redirectByFlow">
                        <map:parameter name="levelOffset" value="0"/>
                    </map:act>
                </map:act>
                <map:act type="redirectByFlow">
                    <map:parameter name="levelOffset" value="-1"/>
                </map:act>
            </map:match>

/ we zien	,

[eric@localhost 2014.01]$  vi ./module/oms/src/java/com/mpobjects/oms/model/serviceorder/vo/ServiceOrderVO.java

@HbmFilterDef(filterName = "serviceOrderOrganization")
public class ServiceOrderVO extends LogisticsOrderVO implements SelectionListHelper.SelectionListItem {




/ 7	. 

/ shipment 

/ we zien	,

./module/oms/war/oms/jsp/shipment-order_edit.jsp

$ vi ./module/oms/src/java/com/mpobjects/oms/model/shipmentorder/dao/ShipmentOrderDAOImpl.java
...
public class ShipmentOrderDAOImpl extends ResourceProtectedDAO<ShipmentOrderVO> implements ShipmentOrderDAO {

$ vi ./module/oms/src/java/com/mpobjects/oms/model/shipmentorder/vo/ShipmentOrderVO.java
...
@HbmFilterDef(filterName = "filterShipmentOrderOrganization")
public class ShipmentOrderVO extends LogisticsOrderVO {

$ vi ./module/oms/src/java/com/mpobjects/oms/model/resource/dao/ResourceProtectedDAO.java
...
public abstract class ResourceProtectedDAO<Type extends ResourceProtectedValueObject> extends UniqueFieldDAO<Type> implements ResourceProtectedDAOInterface {

./module/oms/war/oms/jsp/dashboard-view.jsp

$ vi ./module/oms/src/java/com/mpobjects/oms/model/shipmentorder/dao/ShipmentOrderDAO.java
public interface ShipmentOrderDAO {
...

[eric@localhost 2014.01]$ vi ./module/oms/src/java/com/mpobjects/oms/dao/ShipmentOrder.standard.hbm.xml
...

$ vi ./module/oms/src/java/com/mpobjects/oms/dao/shipmentorder/ShipmentOrderDaoImpl.java

public class ShipmentOrderDaoImpl extends AbstractMonitoringDashboardEntityDAO<ShipmentOrderVO> implements ShipmentOrderDao {
...






 


/ Einde APPLICATIE 

/ APPLICATIE SHO

[eric@localhost ~]$ psql -U mpopostgres -W mpo
mpopostgres@mpo

/ click Save	,


			for (Enumeration myParams = getRequest().getParameterNames(); myParams.hasMoreElements();) {
				myParameter = (String) myParams.nextElement();

getRequest().getParameterNames().getClass() java.util.Hashtable$Enumerator	  
getRequest().getClass() org.apache.cocoon.environment.http.HttpRequest 


/ we zien text fields	,

event26632547ExpectedEndDate	: Events tab	, expected end
actualServiceLevel		: Shipment order details , Actual Service Level		
reasonCode			: Shipment order details, hidden, na actualServiceLevel	,
productItemProductModel		: Product items tab, Model
toName				: Ship to tab, Name
log1LogDateDateTime		: Log tab, 3de field laatste row 
event26632546CarrierRemarks	: Events tab	, hidden , achter Closed on, = event26632547ClosedOnDateTime, 
shipmentType			: Shipment order details,  Shipment type
orderStatusDescription		: Shipmetn order details, Order status , 2de text veld (PLANNED bijv)	,
log2LogDateDate
shipmentItemComputedItemWeightKg: Gross weight in "Create Shipment Item" form	,
BILL_TOSyncFlag			: 2de Bill To tab, Copy from select
productItemIndividualItemValue	: ProductItem tab, Individual Item Value	,
billToFaxNumber			: 2de Bill to tab, form onder select list, Fax
requestedTotalColli		: 2de Shipment order details , Total lines	,
productItemTotalVolumeM3	: ProductItem tab, Total Volume (M3)
widthM				: Form "Create Shipment Item", Width(M)
productItemReference5		: Form "Create new product item", Reference5
requestedEndBeforeDateTime	: 1ste form "Shipment order details", Req. End (Before) 2de input	,
plannedEndAfterDateTime		: hidden, achter deze hierboven	,
...

/ 7	.

/ de sho is planned	,
/ als we naar de so gaan, zien we veld actual start date,
/ als we met calendar widget de date set	, wordt de so started en de sho ook	,
/ we kunnen deze date ook weer null set	, door "Clear date" te click	,

/7	. 

/ we zien shipment-order_list	,

/ we set b in 
ShipmentOderListAction.act	,

Daemon Thread [http-0.0.0.0-8080-6] (Suspended (breakpoint at line 16 in ShipmentOrderListAction))	
	ShipmentOrderListAction.act() line: 16	
	ShipmentOrderListAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 170	
			try {
->				Map myMap = act();
...


/ 7	.

/ we click in de list van shipment orders	,

/ we zien shipment-order_edit	,

/ we set b in	,
Daemon Thread [http-0.0.0.0-8080-5] (Suspended (breakpoint at line 55 in ShipmentOrderEditAction))	
->	ShipmentOrderEditAction.act() line: 55	

	ShipmentOrderEditAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 170	
			try {
->				Map myMap = act();
...

/ we zijn in 
->	ShipmentOrderEditAction.act() line: 55	

			myVO = MpoBeanFactory.getBean(ShipmentOrderDao.class).getBySystemId(mySystemId);
/ ctrl-T of F4 : type hierarchy, op getBySystemId	,
/ we zien het interface	,
com.mpobjects.util.dao.BaseDAOInterface<Type extends EntityInterface>
/ en 
com.mpobjects.util.dao.AbstractDAOInterface
/ en
com.mpobjects.util.dao.AbstractDAO<Type>
/ Hierin zit de getBySystemId	,

/ click F4 op een class, bijv GenericHibernateDAO	, we zien de class & super classes & sub classes	,
baseframework/core/src/java/com/mpobjects/util/dao/GenericHibernateDAO.java
/ als we click op een sub class, 
com.mpobjects.invoice.dao.ShipmentOrderDAOImpl
/ dan zien we 2 keer de getBySystemId 	,
/ click op alle 2, 	dan zien we	,
com.mpobjects.util.dao.GenericHibernateDAO.getBySystemId(int)
com.mpobjects.util.dao.BaseDAOInterface.getBySystemId(int)

/ we zien 	,
com.mpobjects.util.dao.GenericHibernateDAO<Type>
com.mpobjects.util.dao.BaseHibernateDAO<T>
org.springframework.orm.hibernate3.support.HibernateDaoSupport
org.springframework.dao.support.DaoSupport
java.lang.Object

/ we zien	,
Daemon Thread [http-0.0.0.0-8080-6] (Suspended (breakpoint at line 278 in GenericHibernateDAO))	
	ShipmentOrderDaoImpl(GenericHibernateDAO<Type>).getBySystemId(int) line: 278	
	GeneratedMethodAccessor627.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	AopUtils.invokeJoinpointUsingReflection(Object, Method, Object[]) line: 317	
	ReflectiveMethodInvocation.invokeJoinpoint() line: 183	
	ReflectiveMethodInvocation.proceed() line: 150	
	MethodInvocationProceedingJoinPoint.proceed() line: 80	
	PerformanceMeasurementAspect.measurePerformance(ProceedingJoinPoint) line: 56	
	GeneratedMethodAccessor81.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 606	
	AspectJAroundAdvice(AbstractAspectJAdvice).invokeAdviceMethodWithGivenArgs(Object[]) line: 621	
	AspectJAroundAdvice(AbstractAspectJAdvice).invokeAdviceMethod(JoinPoint, JoinPointMatch, Object, Throwable) line: 610	
	AspectJAroundAdvice.invoke(MethodInvocation) line: 65	
	ReflectiveMethodInvocation.proceed() line: 172	
	MethodBeforeAdviceInterceptor.invoke(MethodInvocation) line: 51	
	ReflectiveMethodInvocation.proceed() line: 161	
	TransactionInterceptor$1.proceedWithInvocation() line: 96	
	TransactionInterceptor(TransactionAspectSupport).invokeWithinTransaction(Method, Class, TransactionAspectSupport$InvocationCallback) line: 260	
	TransactionInterceptor.invoke(MethodInvocation) line: 94	
	ReflectiveMethodInvocation.proceed() line: 172	
	ExposeInvocationInterceptor.invoke(MethodInvocation) line: 91	
	ReflectiveMethodInvocation.proceed() line: 172	
	JdkDynamicAopProxy.invoke(Object, Method, Object[]) line: 204	
	$Proxy240.getBySystemId(int) line: not available	
	ShipmentOrderEditAction.act() line: 61	
	ShipmentOrderEditAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 170	
...

/ we hebben b set in 
com.mpobjects.util.dao.GenericHibernateDAO.getBySystemId(int)
/ en daar vallen we in	,

/ Dus we zijn	,

ShipmentOrderEditAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 170	
	public Map act() throws java.lang.Exception {
			myVO = MpoBeanFactory.getBean(ShipmentOrderDao.class).getBySystemId(mySystemId);
/c
ShipmentOrderDaoImpl(GenericHibernateDAO<Type>).getBySystemId(int) line: 278	
	public Type getBySystemId(int aSystemId) {



/ Intermezzo


com.mpobjects.invoice.dao.ShipmentOrderDAOImpl
public class ShipmentOrderDAOImpl extends com.mpobjects.ratecalc.dao.ShipmentOrderDAOImpl implements com.mpobjects.ratecalc.dao.ShipmentOrderDAO {
/ extends	,
com.mpobjects.ratecalc.dao.ShipmentOrderDAOImpl
public class ShipmentOrderDAOImpl extends ShipmentOrderDaoImpl implements ShipmentOrderDAO {
/ extends
com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDaoImpl
public class ShipmentOrderDaoImpl extends AbstractMonitoringDashboardEntityDAO<ShipmentOrderVO> implements ShipmentOrderDao {
/ extends
com.mpobjects.oms.dao.dashboard.AbstractMonitoringDashboardEntityDAO<T>
public abstract class AbstractMonitoringDashboardEntityDAO<T extends EntityInterface> extends GenericHibernateDAO<T> implements MonitoringDashboardEntityDAO<T> {
/ extends
com.mpobjects.util.dao.GenericHibernateDAO<Type>
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {


/ Einde Intermezzo

/ we waren in	,
ShipmentOrderDaoImpl(GenericHibernateDAO<Type>).getBySystemId(int) line: 278	
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));
aSystemId	26632024	
type	Class<T> (com.mpobjects.oms.model.shipmentorder.vo.ShipmentOrderVO) (id=466)	

 public | shipment_order                  | table | mpopostgres
 public | shipment_order_cost_part        | table | mpopostgres
 public | shipment_order_detail           | table | mpopostgres
 public | shipment_order_party            | table | mpopostgres
 public | shipment_order_price_part       | table | mpopostgres
 public | shipment_order_status_history   | table | mpopostgres
 public | shipment_order_trigger          | table | mpopostgres
 public | shipment_order_type             | table | mpopostgres

mpo=> select*from shipment_order where system_id=26632024\g
 system_id | is_template | shipment_order_id | order_process_systemid | act_service_level_systemid | status_code_systemid | or
ganization_systemid | inco_term_systemid | path_systemid | to_location_id |  to_name   | to_name2 |   to_address    | to_addre
ss2 | to_city | to_postal_code | to_region_state | to_country_systemid | to_phone_number | to_fax_number | to_email_address | 
to_contact_name | from_location_id | from_name | from_name2 | from_address | from_address2 | from_city | from_postal_code | fr
om_region_state | from_country_systemid | from_phone_number | from_fax_number | from_email_address | from_contact_name | hold_
status_systemid | invoice_party_id | invoice_name | invoice_name2 | invoice_address | invoice_address2 | invoice_city | invoic
e_postal_code | invoice_region_state | invoice_country_systemid | invoice_phone_number | invoice_fax_number | invoice_email_ad
dress | invoice_contact_name | requested_departure_before | requested_departure_after | planned_departure_before | planned_dep
arture_after | org_planned_departure_before | org_planned_departure_after | requested_arrival_before | requested_arrival_after
 | planned_arrival_before | planned_arrival_after | org_planned_arrival_before | org_planned_arrival_after | actual_departure 
| actual_arrival | created_by_systemid |    system_entry_date    | req_service_level_systemid | shipment_item_line_count | tot
_value_currency_systemid | tot_val_alt_curr_systemid | sales_organization | pod_date | customer_order_number | reason_code_sys
temid |  reference1   | reference2 | reference3 | reference4 | reference5 | prefered_party_systemid |          remarks        
  | shipm_type_systemid | price | price_currency_systemid | close_date | planning_reason_code_systemid | sync_from_flag | sync
_to_flag | sync_bill_to_flag | backup_sheet_report_name | cash_on_del | cash_on_del_currency_systemid | charge_time_window_yn 
| ratecalc_md5_hash | reference6 | reference7 | reference8 | reference9 | reference10 | dangerous_goods_yn | inco_term_referen
ce | cash_on_del_done | hold_status_description | override_address_validation | customer_status_systemid | hold_release_dtm | 
to_longitude | to_latitude | from_longitude | from_latitude | remarks2 | last_update | not_updatable_by_interface | bill_of_la
ding_number | return_created | is_temporary | original_system_entry_date | co2_emission | consolidation_key | port_systemid | 
employee_party_id | employee_name | employee_name2 | employee_address | employee_address2 | employee_city | employee_postal_co
de | employee_region_state | employee_country_systemid | employee_phone_number | employee_fax_number | employee_email_address 
| employee_contact_name | sync_employee_responsible_flag | template_systemid | is_deleted | notify_to | rate_calc_log_systemid
 | gcd_carrier_code | gcd_account_number | gcd_company_code | gcd_service_level | gcd_service_level_code | gcd_service_level_d
escription | assignee_systemid | instruction_group_systemid | gcd_tracking_reference1 | gcd_tracking_reference2 | gcd_tracking
_reference3 | gcd_from_routing_code1 | gcd_from_routing_code2 | gcd_from_routing_code3 | gcd_to_routing_code1 | gcd_to_routing
_code2 | gcd_to_routing_code3 | tot_cost  | tot_cost_currency_systemid | tot_cost_method | tot_price_method | total_volume_m3 
| total_nr_of_items | total_weight_kg | total_ldm | tot_value | tot_value_alt | pay_weight 
-----------+-------------+-------------------+------------------------+----------------------------+----------------------+---
--------------------+--------------------+---------------+----------------+------------+----------+-----------------+---------
----+---------+----------------+-----------------+---------------------+-----------------+---------------+------------------+-
----------------+------------------+-----------+------------+--------------+---------------+-----------+------------------+---
----------------+-----------------------+-------------------+-----------------+--------------------+-------------------+------
----------------+------------------+--------------+---------------+-----------------+------------------+--------------+-------
--------------+----------------------+--------------------------+----------------------+--------------------+-----------------
------+----------------------+----------------------------+---------------------------+--------------------------+------------
-------------+------------------------------+-----------------------------+--------------------------+------------------------
-+------------------------+-----------------------+----------------------------+---------------------------+------------------
+----------------+---------------------+-------------------------+----------------------------+--------------------------+----
-------------------------+---------------------------+--------------------+----------+-----------------------+----------------
------+---------------+------------+------------+------------+------------+-------------------------+-------------------------
--+---------------------+-------+-------------------------+------------+-------------------------------+----------------+-----
---------+-------------------+--------------------------+-------------+-------------------------------+-----------------------
+-------------------+------------+------------+------------+------------+-------------+--------------------+------------------
---+------------------+-------------------------+-----------------------------+--------------------------+------------------+-
-------------+-------------+----------------+---------------+----------+-------------+----------------------------+-----------
------------+----------------+--------------+----------------------------+--------------+-------------------+---------------+-
------------------+---------------+----------------+------------------+-------------------+---------------+-------------------
---+-----------------------+---------------------------+-----------------------+---------------------+------------------------
+-----------------------+--------------------------------+-------------------+------------+-----------+-----------------------
-+------------------+--------------------+------------------+-------------------+------------------------+--------------------
-----------+-------------------+----------------------------+-------------------------+-------------------------+-------------
------------+------------------------+------------------------+------------------------+----------------------+---------------
-------+----------------------+-----------+----------------------------+-----------------+------------------+-----------------
+-------------------+-----------------+-----------+-----------+---------------+------------
  26632024 |           0 | SH000000105       |               26594670 |                   26631687 |                   28 |   
               4000 |            9772224 |      26632011 |                | Customer X |          | Kirchstrasse 88 |         
    | Hamburg | 20095          |                 |                4052 |                 |               |                  | 
                |                  | Haal      |            | Bottelweg 11 |               | Utrecht   | 5651 GH          |   
                |                  4153 |                   |                 |                    |                   |      
                |                  |              |               |                 |                  |              |       
              |                      |                          |                      |                    |                 
      |                      |                            | 2014-04-30 06:58:00       | 2014-05-16 17:00:00      | 2014-05-16 
17:00:00     |                              |                             | 2014-05-16 17:00:00      | 2014-05-16 16:00:00    
 | 2014-05-16 17:00:00    | 2014-05-15 17:00:00   |                            |                           |                  
|                |               10100 | 2014-04-22 08:58:55.895 |                            |                  2.00000 |    
                         |                           |                    |          |                       |                
      | 201400234-001 |            |            |            |            |                         | Please put on EUR pallet
s |            26631688 |       |                         |            |                               | D              | D   
         | P                 |                          |             |                               |                     0 
|                   |            |            |            |            |             |                  0 |                  
   |                0 |                         |                           0 |                      105 |                  | 
             |             |                |               |          |             |                          0 |           
            |              0 |            0 | 2014-04-22 08:58:55.895    |      0.00000 |                   |               | 
                  |               |                |                  |                   |               |                   
   |                       |                           |                       |                     |                        
|                       | P                              |                   |          0 |           |                       
 |                  |                    |                  |                   |                        |                    
           |                   |                            |                         |                         |             
            |                        |                        |                        |                      |               
       |                      | 153.54000 |                       7001 | SINGLE          | NONE             |         1.40000 
|           0.00000 |        40.00000 |   0.40000 |   0.00000 |       0.00000 |           
(1 row)

/ 7	. 

/ we click edit een sho	,
/we komen in	,

Map com.mpobjects.control.action.AbstractAction.act(Redirector aRedirector, SourceResolver aSourceResolver, Map anObjectModel, String aSource, Parameters aParameterList) throws Exception
	public final Map act(Redirector aRedirector, SourceResolver aSourceResolver, Map anObjectModel, String aSource, Parameters aParameterList) throws Exception {
			try {
				Map myMap = act();
/ c
/ invoice	,
Map com.mpobjects.invoice.control.shipmentorder.action.ShipmentOrderEditAction.act() throws Exception
	public Map act() throws Exception {
		getRequest().setAttribute("financialPartyBinding", true);
		getRequest().setAttribute("financialPartyBindingReadOnly", true);

		int myShipmentOrderId = getSystemIdFromRequest();
26632024
		if (myShipmentOrderId == ValueObject.VOLATILE_SYSTEM_ID) {
			return EMPTY_MAP;
		}
->		ShipmentOrderVO myShipmentOrder = ShipmentOrderUtil.getShipmentOrderFacadeLocal().getShipmentOrder(myShipmentOrderId);
/c
com.mpobjects.oms.model.service.ShipmentOrderServiceImpl
	public ShipmentOrderVO getShipmentOrder(int aSystemId) {
		return shipmentOrderDao.getBySystemId(aSystemId);
/c
com.mpobjects.util.dao.GenericHibernateDAO<Type extends EntityInterface>
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));

/t
->		ShipmentOrderVO myShipmentOrder = ShipmentOrderUtil.getShipmentOrderFacadeLocal().getShipmentOrder(myShipmentOrderId);
/ D
myShipmentOrder	ShipmentOrderVO_$$_javassist_103  (id=889)	

/ later	,
package com.mpobjects.oms.control.shipmentorder.action;
public class ShipmentOrderEditAction extends AbstractAction {

/ Hierboven invoice,
Map com.mpobjects.invoice.control.shipmentorder.action.ShipmentOrderEditAction.act() throws Exception

			myVO = MpoBeanFactory.getBean(ShipmentOrderDao.class).getBySystemId(mySystemId);
myVO	ShipmentOrderVO_$$_javassist_103  (id=889)	

/ 7	.

/ we click Save sho	,

com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderSaveAction
	public void handleSave() throws java.lang.Exception {
			ShipmentOrderVO myVO = (ShipmentOrderVO) getValueObject();
/ Alvast antwoord	,
myVO, 
handler
	target
		theOrganizationVO	Organization  (id=15030)	
code	"HAAL-ZW" (id=1054)	
/c
package com.mpobjects.view.taglib.form;
public class FormTag extends TagBase implements FieldOwner {
	public ArrayList<EntityInterface> getValueObjects() {
		return theValueObjects;
theValueObjects	ArrayList<E>  (id=15045)	
	elementData	Object[33]  (id=15047)	
		[0]	ShipmentOrderVO_$$_javassist_103  (id=15315)	
		[1]	DateSetVO  (id=15316)	
...
/ Hij komt nu dus niet in Hibernate, 	want dat is al	, 

/ 7	.

/ opnieuw	,

/ we click Save sho	,

com.mpobjects.oms.control.shipmentorder.action.ShipmentOrderSaveAction
        public void handleSave() throws java.lang.Exception {
                        ShipmentOrderVO myVO = (ShipmentOrderVO) getValueObject();
/ Alvast antwoord       ,
myVO 
handler
        target  
                theOrganizationVO       Organization  (id=15030)
code    "HAAL-ZW" (id=1054)
			} else {
				ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(myVO, true, true);
/c
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, boolean propagateChange, boolean lastUpdateCheck) {
aShipmentOrder	ShipmentOrderVO_$$_javassist_103  (id=15315)	
			} else {
				myOldVO = shipmentOrderDao.getBySystemId(aShipmentOrder.getSystemId());
/c
package com.mpobjects.util.dao;
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));

/t
	public void handleSave() throws java.lang.Exception {
                        ShipmentOrderVO myVO = (ShipmentOrderVO) getValueObject();
/ D
/ het form	,
			} else {
				ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(myVO, true, true);
/ c
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, boolean propagateChange, boolean lastUpdateCheck) {
			} else {
				myOldVO = shipmentOrderDao.getBySystemId(aShipmentOrder.getSystemId());
/ myOldVO=form, zonder proxy	,
/ aShipmentOrder=myVO hierboven	= de proxy	, 

			updateShipmentOrder(aShipmentOrder, new TMSEventContext(), propagateChange);
/c
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
			if (aShipmentOrder.isTemplate()) {
/ NEE
			} else {
				aShipmentOrder.setSystemId(myOldVO.getSystemId());
aShipmentOrder	ShipmentOrderVO_$$_javassist_103  (id=15565)	
myOldVO	ShipmentOrderVO  (id=15576)	
/ myOldVO is bij ons aShipmentOrder.handler.target	,
				ShipmentOrderVO myNewVO = shipmentOrderDao.merge(aShipmentOrder);

/ Intermezzo

$ vi oms-dao.sb.xml
<beans>
	<bean id="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDao" class="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDaoImpl" parent="HibernateDAOTemplate" />

$ vi oms-service.sb.xml

	<bean id="shipmentOrderService" class="com.mpobjects.oms.model.service.ShipmentOrderServiceImpl">
...
		<property name="shipmentOrderDao" ref="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDao" />
	</bean> 

$ vi com.mpobjects.oms.model.service.ShipmentOrderServiceImpl
	private ShipmentOrderDao shipmentOrderDao;
	public void setShipmentOrderDao(ShipmentOrderDao aShipmentOrderDao) {
		shipmentOrderDao = aShipmentOrderDao;
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
		ShipmentOrderVO myNewVO = shipmentOrderDao.merge(aShipmentOrder);

/ Einde Intermezzo

/ we komen in	,
/ Geef ctrl, hover boven merge, en click Open Implementation	, 1 er van is 
package com.mpobjects.util.dao;
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type merge(Type anObject) {
... 

this	ShipmentOrderDaoImpl  (id=633)	

/ Intermezzo

/ we kunnen in de stack trace Actual Type , Actual Type hierarchy click	, dat is de type van this	, dus helemaal onderaan	,
/ we kunnen in type hierarchy click Copy Qualified Name	,

java.lang.Object
org.springframework.dao.support.DaoSupport
org.springframework.orm.hibernate3.support.HibernateDaoSupport
com.mpobjects.util.dao.BaseHibernateDAO<T>
com.mpobjects.util.dao.GenericHibernateDAO<Type>
com.mpobjects.oms.dao.dashboard.AbstractMonitoringDashboardEntityDAO<T>
com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDaoImpl		/ type van this, niet de aller onderste	,
com.mpobjects.ratecalc.dao.ShipmentOrderDAOImpl
com.mpobjects.invoice.dao.ShipmentOrderDAOImpl

/ Einde Intermezzo

		ShipmentOrderVO myNewVO = shipmentOrderDao.merge(aShipmentOrder);
/ D
				myNewVO.performCustomRecalculation(myOldVO);
/ click ctrl, hover over, "Open Implementation"	,
/c
package com.mpobjects.oms.model.shipmentorder.vo;
public class ShipmentOrderVO extends LogisticsOrderVO {
	public void performCustomRecalculation(ShipmentOrderVO myOldShipmentOrderVO) {
...

/t
				myNewVO.performCustomRecalculation(myOldVO);
/ D
				setDatesAndStatus(myNewVO);
/ we zijn in 
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
/ en we blijven er in	,
/c
	private void setDatesAndStatus(ShipmentOrderVO aShipmentOrderVO) throws AbstractException {

/ Intermezzo

$ vi oms-service.sb.xml

	<bean id="shipmentOrderService" class="com.mpobjects.oms.model.service.ShipmentOrderServiceImpl">
		<property name="productItemService">
			<ref local="productItemService" />
		</property>
		<property name="shipmentItemService">
			<ref local="shipmentItemService" />
		</property>
		<property name="shipmentOrderDuplicator" ref="com.mpobjects.oms.service.ShipmentOrderDuplicator" />
		<property name="returnOrderType" value="${module.oms.shipmentorder.returnordertype}" />
		<property name="returnOrderIdPostFix" value="${module.oms.shipmentorder.returnorderidpostfix}" />
		<property name="returnOrderIdPreFix" value="${module.oms.shipmentorder.returnorderidprefix}" />
		<property name="returnOrderName" value="${module.oms.shipmentorder.returnordername}" />
		<property name="timeService" ref="com.mpobjects.core.model.service.TimeService" />
		<property name="eventHandlerService" ref="com.mpobjects.oms.service.event.EventHandlerService" />
		<property name="shipmentOrderDao" ref="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDao" />
		<property name="customerOrderLineService" ref="com.mpobjects.oms.service.customerorder.CustomerOrderLineService" />
		<property name="shipmentOrderPricePartDAO" ref="com.mpobjects.oms.model.shipmentorderpricepart.dao.ShipmentOrderPricePartDAO" />
		<property name="productItemDAO" ref="com.mpobjects.oms.model.shipmentorder.dao.ProductItemDAO" />
		<property name="shipmentItemDAO" ref="com.mpobjects.oms.model.shipmentorder.dao.ShipmentItemDAO" />
	</bean> 

/ Einde Intermezzo

/t
				setDatesAndStatus(myNewVO);
/ D
				applySyncFlags(myNewVO);
/ we zijn in 	,
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
/ en we blijven er in	,
	protected void applySyncFlags(ShipmentOrderVO aShipmentOrder) {
...

/t
				applySyncFlags(myNewVO);
/ D
				handleTimeWindow(myNewVO);
/c
/ we zijn in 	,
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
/ en we blijven er in	,
	protected void handleTimeWindow(ShipmentOrderVO aShipmentOrderVO) {

/t
				handleTimeWindow(myNewVO);
 /D
				ShipmentOrderPartyUtil.createShipmentOrderParties(aShipmentOrder);
/c
package com.mpobjects.oms.util;
public class ShipmentOrderPartyUtil {
	public static void createShipmentOrderParties(ShipmentOrderVO aShipmentOrder) {

/ Intermezzo

/ In Debug	, 
ShipmentOrderSaveAction(AbstractSaveAction).act() line: 69	
/ we kunnen right click	,
Open Declared Type Hierarchy
Open Actual Type Hierarchy
/ we kunnen ctrl+shift+h, maar deze staat los van alles, we moeten een type geven	,  we kunnen het interface type geven, dan net als "Open Declared Type Hierarchy", of het impl class type,	dan net als "Open Actual Type Hierarchy"	,

/ Einde Intermezzo

		myPartyGroupsToCreate.addAll(MpoBeanFactory.getBean(PartyTypeGroupDAO.class).getShowOnShipmentOrder());
/c
package com.mpobjects.oms.model.partytypegroup.dao;
public class PartyTypeGroupDAOHibernate extends EnumeratedValueObjectHibernateDAO<PartyTypeGroupVO> implements PartyTypeGroupDAO {
	public List<PartyTypeGroupVO> getShowOnShipmentOrder() {


/ Intermezzo

/ oms-dao.sb.xml

	<bean id="com.mpobjects.oms.model.partytypegroup.dao.PartyTypeGroupDAO" parent="HibernateDAOTemplate" class="com.mpobjects.oms.model.partytypegroup.dao.PartyTypeGroupDAOHibernate" />

/ Einde Intermezzo

/ t
				ShipmentOrderPartyUtil.createShipmentOrderParties(aShipmentOrder);
/ D
				myNewVO.setRecalculate();
/c
package com.mpobjects.oms.model.logisticsorder.vo;
public abstract class LogisticsOrderVO extends EntityDetailSupport {
	public void setRecalculate() {
...

/t
				myNewVO.recalculate();
/c
package com.mpobjects.oms.model.logisticsorder.vo;
public abstract class LogisticsOrderVO extends EntityDetailSupport {
	public void recalculate() {
							item.recalculate();
/c
package com.mpobjects.oms.model.shipmentorder.vo;
public class ShipmentItemVO extends LogisticsOrderVO implements StringSequencedEntity {
	public void recalculate() {

/t
							item.recalculate();
/ D
							calc.addValues(item);
calc	ShipmentOrderTotalsCalculator  (id=18859)	

/ Intermezzo

/ Voorbeeld	,shipment items 
		item id
sh item 1 	-010
sh item 2 	-020
pallet		030

/ de sh item 1,2 zijn children van 030	,


/ Einde Intermezzo

/t
				myNewVO.recalculate();
/ D
				myNewVO.calculatePrice();
/c
package com.mpobjects.oms.model.shipmentorder.vo;
public class ShipmentOrderVO extends LogisticsOrderVO {
	public void calculatePrice() {

		CurrencyGroup myGroup = getPriceGroup();

		setPrice(myGroup.getAmount());
		setPriceCurrencyVO(myGroup.getCurrency());
		setPriceMethod(myGroup.getMethod());
	}

/t
				myNewVO.calculatePrice();
/ D
				shipmentOrderDao.setEventContext((TMSEventContext) anEventContext.clone());
/ in ShipmentOrderDaoImpl	,
package com.mpobjects.oms.dao.shipmentorder;
public class ShipmentOrderDaoImpl extends AbstractMonitoringDashboardEntityDAO<ShipmentOrderVO> implements ShipmentOrderDao {

/t
				shipmentOrderDao.setEventContext((TMSEventContext) anEventContext.clone());
/ D
				// Calculate total price /cost
				updatePricePart(aShipmentOrder);
				aShipmentOrder.calculatePrice();
				aShipmentOrder.calculateTotalCosts();
/c
package com.mpobjects.oms.model.shipmentorder.vo;
public class ShipmentOrderVO extends LogisticsOrderVO {
	public void calculateTotalCosts() {

/t
				aShipmentOrder.calculateTotalCosts();
/D
				myNewVO = shipmentOrderDao.save(myNewVO);
/c
package com.mpobjects.util.dao;
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type save(Type anEntity) {

/t
				myNewVO = shipmentOrderDao.save(myNewVO);
/ D
				getTriggerHandler().handleUpdate(myOldVO, myNewVO);
/c
package com.mpobjects.oms.service.trigger;
public class ShipmentOrderTriggerHandlerImpl extends AbstractTriggerHandlerImpl implements ShipmentOrderTriggerHandler {
	public void handleUpdate(ShipmentOrderVO anOld, ShipmentOrderVO aNew) {
/ TODO (viel er niet in)

/t
				getTriggerHandler().handleUpdate(myOldVO, myNewVO);
/ D

/ 7	.

					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);

/ Intermezzo

$ vi oms-service.sb.xml

	<bean id="com.mpobjects.oms.model.service.ServiceActionService" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.model.service.ServiceActionServiceImpl">
				<property name="eventHandlerService" ref="com.mpobjects.oms.service.event.EventHandlerService" />
...

$ vi core-hibernate.sb.xml

	<bean abstract="true" id="transactionRequiredTemplate" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">



/ Einde Intermezzo

/ Intermezzo

ServiceAction.standard.hbm.xml (10 matches)
ServiceActionTemplate.standard.hbm.xml (8 matches)
ShipmentOrder.standard.hbm.xml (3 matches)
ServiceActionType.standard.hbm.xml (5 matches)

/ 7	.

$ vi ServiceAction.standard.hbm.xml (10 matches)

		<many-to-one name="serviceActionTemplate" class="com.mpobjects.oms.model.serviceactiontemplate.ServiceActionTemplate"
			fetch="select">
			<column name="TEMPLATE_SYSTEMID" />
		</many-to-one>
		<component name="toPartyVO" class="com.mpobjects.oms.model.entity.VirtualParty">

$ vi LogisticsOrderVO.java
public abstract class LogisticsOrderVO extends EntityDetailSupport {
	private Party theToPartyVO;

/ Hibernate boek (185)

/ Einde Intermezzo

/ Intermezzo

$ vi date.java

import java.util.Date;
import java.sql.Timestamp;
class date{
	public static void main(String...args){
		Date d=new Date("09-May-2014");
		Date e=new Date(1399649075000l);
		//Timestamp t=new Timestamp(d.getTime());
		boolean b=false;
	}
}

main[1] dump e
 e = {
    gcal: instance of sun.util.calendar.Gregorian(id=462)
    jcal: null
    fastTime: 1399649075000
    cdate: null
    defaultCenturyStart: 0
    serialVersionUID: 7523967970034938905
    wtb: instance of java.lang.String[32] (id=463)
    ttb: instance of int[32] (id=464)
}
main[1] print e
 e = "Fri May 09 17:24:35 CEST 2014"

/ Dus de ctor arg wordt fastTime, 

/ Einde Intermezzo

/ 13	

/class ShipmentOrderVO{
	public SortedSet<ServiceActionVO> getServiceActionList() {
		return theServiceActionList;

/ we zien in  eclipse	,
s	ShipmentOrderVO  (id=19970)	
	theServiceActionList	PersistentSortedSet  (id=20006)	
		set	TreeSet<E>  (id=20015)	
			m	TreeMap<K,V>  (id=20020)	
				root	TreeMap$Entry<K,V>  (id=20027)	
					key	ServiceActionVO  (id=20030)	
						theDateSetVO	DateSetVO  (id=20069)	
							theActualStart	Timestamp  (id=19644)	
								fastTime	1399649075000	


/c
	public static <T> T getBean(String aBeanName, Class<T> aClass) {
		return aClass.cast(getBeanFactory().getBean(aBeanName, aClass));
/ getBeanFactory()===ClassPathXmlApplicationContext

/t
/c
package com.mpobjects.oms.model.service;
public class ServiceActionServiceImpl implements ServiceActionService {
	public void handleShipmentOrderChange(ShipmentOrderVO myOldShipmentOrderVO, ShipmentOrderVO mynewShipmentOrderVO) {
			updateServiceActionsForShipmentOrder(myOldShipmentOrderVO, mynewShipmentOrderVO, new TMSEventContext());
/c
	public void updateServiceActionsForShipmentOrder(ShipmentOrderVO anOldShipmentOrderVO, ShipmentOrderVO aNewShipmentOrderVO, TMSEventContext anEventContext)

		boolean shouldUpdateToParty = !PartyComparator.compareName1Address1ZipCityCountry(anOldShipmentOrderVO.getToPartyVO(), aNewShipmentOrderVO.getToPartyVO());
/ false
/ want	,
/ anOldShipmentOrderVO.getToPartyVO()=deze zien we onder tab "Ship to"	,
/c
package com.mpobjects.oms.model.logisticsorder.vo;
public abstract class LogisticsOrderVO extends EntityDetailSupport {
	public Party getToPartyVO() {
		return theToPartyVO;
theToPartyVO	VirtualParty  (id=19441)	
	address	"Kirchstrasse 88" (id=19443)	
	city	"Hamburg" (id=19444)	
...
/ Stuk uit het hele form	,

/c
package com.mpobjects.oms.model.party.util;
		boolean shouldUpdateToParty = !PartyComparator.compareName1Address1ZipCityCountry(anOldShipmentOrderVO.getToPartyVO(), aNewShipmentOrderVO.getToPartyVO());
/ false
		shouldUpdateToParty &= StringUtils.equalsIgnoreCase(myPropertyManager.getModuleProperty("oms", "serviceaction.sync.to.flag", "D"), "S");
/ false & false=false
/ myPropertyManager.getModuleProperty("oms", "serviceaction.sync.to.flag", "D")="D"

		boolean shouldUpdateFromParty = !PartyComparator.compareName1Address1ZipCityCountry(anOldShipmentOrderVO.getFromPartyVO(), aNewShipmentOrderVO.getFromPartyVO());
false
		shouldUpdateFromParty &= shouldUpdateFromParty && StringUtils.equals(myPropertyManager.getModuleProperty("oms", "serviceaction.sync.from.flag", "D"), "S");
false&false=false

theFromPartyVO	 (id=19458)	
	address	"Bottelweg 11" (id=19506)	
	city	"Utrecht" (id=19507)	
/ Deze zien we onder de Ship From tab	,

		Party myNewFromParty = aNewShipmentOrderVO.getFromPartyVO();
		Party myNewToParty = aNewShipmentOrderVO.getToPartyVO();

		for (Object myElement : aNewShipmentOrderVO.getServiceActionList()) {
/c
	public SortedSet<ServiceActionVO> getServiceActionList() {
		return theServiceActionList;
/ heeft 1 elem	, deze heeft	,
key	Integer  (id=19194)	
	value	26632024	

myElement	ServiceActionVO  (id=20647)	

/ Intermezzo

package com.mpobjects.oms.model.serviceaction.vo;
public class ServiceActionVO extends LogisticsOrderVO implements SequencedEntity {
	private ServiceActionTemplate serviceActionTemplate;

$ vi ServiceAction.standard.hbm.xml (10 matches)

		<many-to-one name="serviceActionTemplate" class="com.mpobjects.oms.model.serviceactiontemplate.ServiceActionTemplate"
			fetch="select">
			<column name="TEMPLATE_SYSTEMID" />
		</many-to-one>
		<component name="toPartyVO" class="com.mpobjects.oms.model.entity.VirtualParty">


/ Einde Intermezzo

				myServiceActionVO = getServiceAction(myServiceActionVO.getSystemId());
myServiceAction...O.getSystemId()	 
26632538 
/c
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));
type=ServiceActionVO
/ WH doet query in service_action table	,
  26632538 |              10 |             26632540 |                26632024 |                     26631827 |                
   |                              2 |          26632009 |                | Customer X |          | Kirchstrasse 88 |          
   | Hamburg | 20095          |                 |                4052 |                 |               |                  |  
               |                  | Haal      |            | Bottelweg 11 |               | Utrecht   | 5651 GH          |    
               |                  4153 |    ...


/t
				myServiceActionVO = getServiceAction(myServiceActionVO.getSystemId());
/D
			if (aNewShipmentOrderVO.getOrderStatusVO().isCancelled()) {
/ NEE
/ OrderStatusVO is wat we zien in de sho	,
this	ShipmentOrderVO  (id=20923)	
	theOrderStatusVO	OrderStatusVO_$$_javassist_120  (id=20945)	
		handler	JavassistLazyInitializer  (id=20949)	
			target	OrderStatusVO  (id=20956)	
				code	"8000" (id=20957)	
				deleted	false	
				description	"STARTED" (id=20958)	
				performanceMonitorService	null	
				systemId	2	
				theType	"STARTED" (id=20960)	

			if (shouldUpdateFromParty) {
/ NEE
			if (shouldUpdateToParty) {
/ NEE

			updateServiceAction(myServiceActionVO, anEventContext, true, true);
/c
public class ServiceActionServiceImpl implements ServiceActionService {
	public void updateServiceAction(ServiceActionVO aServiceAction, TMSEventContext aContext, boolean propagate, boolean replan) {
/c
			ServiceActionDAO myDAO = serviceActionDAO;
			ServiceActionVO myOldServiceAction = getOld(aServiceAction);
/c
			myOld = serviceActionDAO.getOld(aServiceAction);
/c
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type getOld(final Type aCurrent) {
...

/t
			myOld = serviceActionDAO.getOld(aServiceAction);
/ D
/ NIETS, de aServiceAction is al in de hib session	,

			setDatesAndStatus(aServiceAction);
/////////////////////
/ writes dates and status in the sa	,  from the sho en con
/c
public class ServiceActionServiceImpl implements ServiceActionService {

	private void setDatesAndStatus(ServiceActionVO aServiceActionVO) {
		boolean isCancelled = aServiceActionVO.getOrderStatusVO().isCancelled();

/c
	public boolean isCancelled() {
		return getCode().startsWith("95");
	}
/ NEE	,
/ want	,
/c
package com.mpobjects.util.dao;
public abstract class EnumeratedValueObject extends SoftDeletableValueObject implements EnumeratedValueObjectInterface {
this	OrderStatusVO  (id=20956)	
code	"8000" (id=20957)	

	@Override
	public String getCode() {
		return code;
	}


/ Intermezzo

/ Configuration -> Planning-> Path templates
/ edit OEGEMA_DELIVERY
/ click tab Path criteria
NL
BE|DE|NL
/ click service actions templates tab
/ we zien 1 entry	,
OEGEMA_DELIVERY
/ we zien 1 event template	, waar 2 events inzitten	,


1404 open
1450 planned
8000 started
9000 finished

/ 7	. 

/ set sho op started (1450) door in so actual start date leeg te maken	,

/ Einde Intermezzo


/t
	private void setDatesAndStatus(ServiceActionVO aServiceActionVO) {
		boolean isCancelled = aServiceActionVO.getOrderStatusVO().isCancelled();
false

/ Intermezzo

mpo=> select*from shipment_order\g
/ pak de laatste entry	, lees system_id
/ sho  26632024,  
mpo=> select*from service_action\g
/ sa 26632538	
mpo=> select*from consignment\g
/ pak de laatste entry	, lees system_id
/ cons  26632540 

/ seo 26632537

/ 7	.

$ vi ServiceAction.standard.hbm.xml

<hibernate-mapping package="com.mpobjects.oms.model.entity">
	<class name="com.mpobjects.oms.model.serviceaction.vo.ServiceActionVO" table="SERVICE_ACTION">
		<many-to-one name="shipmentOrderVO" class="com.mpobjects.oms.model.shipmentorder.vo.ShipmentOrderVO"
			fetch="select">
			<column name="SHIPMENT_ORDER_SYSTEMID" />
		</many-to-one>

$ vi ShipmentOrder.standard.hbm.xml

/ geen service action	, 

/ de mapping is echt 1:N	,

/ Einde Intermezzo

		DateSetVO myDateSet = aServiceActionVO.getDateSetVO();

		// Calculate the requested dates.
		ShipmentOrderVO myShipmentOrderVO = shipmentOrderDao.getBySystemId(aServiceActionVO.getShipmentOrderVO().getSystemId());
		if (myShipmentOrderVO != null) {
/ JA
			calculateMileStones(myShipmentOrderVO);
/ ERICJ
/c
	public void calculateMileStones(ShipmentOrderVO aShipmentOrderVO) {
			MileStoneCalculatorFactory.getInstance().getMileStoneCalculator().calculate(aShipmentOrderVO);
/c
package com.mpobjects.oms.model.serviceaction.util;
public class BasicMileStoneCalculator implements MileStoneCalculator {
	public void calculate(ShipmentOrderVO aShipmentOrderVO) {

/ aShipmentOrderVO is een proxy	,
aShipmentOrderVO	ShipmentOrderVO_$$_javassist_103  (id=21539)	

		if (aShipmentOrderVO.getPreferedPath() == null) {

/ we doen met de hand	,
"aShipmentOrderV...tPreferedPath()"	 
	handler
		target	PathTemplateVO  (id=21690)				/ !
			code	"OEGEMA_DELIVERY" (id=21691)	
...

/ we moeten 2 keer handler, target nemen	,
/ Dus aShipmentOrderVO is een proxy, en in handler.target=ShipmentOrderVO is preferredPathTemplate en dat is ook een proxy, 
preferedPathTemplate	PathTemplateVO_$$_javassist_22  (id=21656)	
/ en moeten we ook handler, target nemen	, 

/c
public class ShipmentOrderVO extends LogisticsOrderVO {
	public PathTemplateVO getPreferedPath() {
		return preferedPathTemplate;
/ 'n PathTemplateVO_$$_javassist_22	,

		if (aShipmentOrderVO.getPreferedPath() == null) {
/ D
/ NEE
		} else {
			myMode = aShipmentOrderVO.getPreferedPath().getRequestedDateMode().toString();
/c
public class PathTemplateVO extends EnumeratedValueObject {
	public PathRequestedDateMode getRequestedDateMode() {
		return requestedDateMode;
requestedDateMode	PathRequestedDateMode  (id=21675)	
	name	"BACKWARD" (id=21914)	
	ordinal	0	

/t
	public void calculate(ShipmentOrderVO aShipmentOrderVO) {
		if (myMode.equalsIgnoreCase("BACKWARD")) {
			theCalculationMode = PathRequestedDateMode.BACKWARD;

		String myTimeWindowsMode = ApplicationPropertyManager.getInstance().getModuleProperty("oms", "milestone.serviceaction.timewindow.mode", "none").trim();
/ "none"
		if (myTimeWindowsMode.equalsIgnoreCase("none")) {
			theTimeWindowsMode = NONE;

		String myReplanMode = ApplicationPropertyManager.getInstance().getModuleProperty("oms", "milestone.serviceaction.recalculate.dates", "false").trim();
true
/ TODO (set b erachter)	,

		theRecalculateDatesFlag = "true".equals(myReplanMode);
true
		if (theTimeWindowsMode == COPY) {
/ NEE
		if (isShipmentOderCopyBased()) {
/ NEE
		} else if (isAvailableTime()) {
/ NEE
		} else {
			if (isEndDateBased() || ...){ 
/ JA
				calculateEndBefore();
/c
public class BasicMileStoneCalculator implements MileStoneCalculator {
	private boolean calculateEndBefore() {

		Date myShipmentOrderEnd = theShipmentOrderVO.getDateSetVO().getRequestedEndBefore();
/  theShipmentOrderVO is een proxy, theDateSetVO niet	,
/ TODO
/c
public class DateSetVO extends ValueObject implements java.io.Serializable {
	public Date getRequestedEndBefore() {
		return theRequestedEndBefore;

/ Intermezzo

http://localhost:8080/tms
https://scs.mp-objects.com/dsvfms/core/index_frameset
https://system.mp-objects.com/jira/issues/?filter=-1
http://libcontainer.sourceforge.net/
/ TODO

/ 7	.

$ vi date.java

class date{
        public static void main(String[]args){
                long l=Long.parseLong(args[0],16);
                Date e=new Date(l);
                System.out.println(e);

[eric@localhost Test]$ java date 1400252400000
Mon Oct 20 18:19:08 CEST 13119
/ Geen l erachter	,



/ Einde Intermezzo

		Date myShipmentOrderEnd = theShipmentOrderVO.getDateSetVO().getRequestedEndBefore();
/ D
Fri May 16 17:00:00 CEST 2014

			Date myEndDate = myShipmentOrderEnd;
				setRequestedStartAndEndBefore(myAction, myEndDate);
/s
	private void setRequestedStartAndEndBefore(ServiceActionVO aServiceActionVO, Date aRequestedEndBefore) {
	if (myDateSet.getRequestedEndBefore() == null || recalculateRequestedDates()) {
true (recalculateRequestedDates()==true)
			myDateSet.setRequestedEndBefore(aRequestedEndBefore);

		BigDecimal myLeadTime = aServiceActionVO.getAvgLeadTimeHrs();
/=
		return theAvgLeadTimeHrs;
0

		BigDecimal myHours = myLeadTime.divide(new BigDecimal(1), 0, BigDecimal.ROUND_DOWN);
0
		BigDecimal myMinutes = myLeadTime.subtract(myHours).multiply(new BigDecimal(60));
0

		// TODO: Fix for timezones
		Calendar myCalendar = Calendar.getInstance();
		myCalendar.setTime(aRequestedEndBefore);
		myCalendar.add(Calendar.HOUR_OF_DAY, -1 * myHours.intValue());
		myCalendar.add(Calendar.MINUTE, -1 * myMinutes.intValue());
/ bij ons =aRequestedEndBefore

			myDateSet.setRequestedStartBefore(myCalendar.getTime());

/t
public class BasicMileStoneCalculator implements MileStoneCalculator {
	private boolean calculateEndBefore() {
		setRequestedStartAndEndBefore(myAction, myEndDate);
/ D
					copyBeforeToAfter(myAction);
/c
	private void copyBeforeToAfter(ServiceActionVO aServiceActionVO) {
		DateSetVO myDateSet = aServiceActionVO.getDateSetVO();
		myDateSet.setRequestedEndAfter(new Date(myDateSet.getRequestedEndBefore().getTime() - endTimeWindow));
		myDateSet.setRequestedStartAfter(new Date(myDateSet.getRequestedStartBefore().getTime() - startTimeWindow));
/ endTimeWindow==startTimeWindow==0


/t
ServiceActionServiceImpl.setDatesAndStatus(ServiceActionVO) line: 1074	
			calculateMileStones(myShipmentOrderVO);
/ D
/ ERICJ

			ConsignmentVO myConsignmentVO = aServiceActionVO.getConsignmentVO();
/ proxy	,
				myConsignmentVO = consignmentService.getConsignment(myConsignmentVO.getSystemId());
/c
public class ConsignmentServiceImpl implements ConsignmentService {
	public ConsignmentVO getConsignment(int aSystemId) {
		return consignmentDAO.getBySystemId(aSystemId);

/ Intermezzo

$ vi oms-dao.sb.xml

	<bean id="com.mpobjects.oms.dao.ConsignmentDAO" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.dao.ConsignmentDAOImpl" parent="HibernateDAOTemplate" />
		</property>
	</bean>

$ vi oms-service.sb.xml

	<bean id="consignmentService" class="com.mpobjects.oms.model.service.ConsignmentServiceImpl">
		<property name="consignmentDAO" ref="com.mpobjects.oms.dao.ConsignmentDAO" />
...
	</bean>

public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));

public abstract class BaseHibernateDAO<T> extends HibernateDaoSupport {

	protected Class<? extends T> type;



/ Einde Intermezzo

/ we komen in	,
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));
type	Class<T> (com.mpobjects.oms.model.consignment.vo.ConsignmentVO) (id=12028)	

/t
ServiceActionServiceImpl.setDatesAndStatus(ServiceActionVO) line: 1080	
		myConsignmentVO = consignmentService.getConsignment(myConsignmentVO.getSystemId());
/ D
				myCoDateSet = myConsignmentVO.getDateSetVO();
/ ERICJ
				aServiceActionVO.setOrderStatusVO(myConsignmentVO.getOrderStatusVO());
/c
LogisticsOrder.getOrderStatusVO
		return theOrderStatusVO;

"myConsignmentVO...OrderStatusVO()"	 (pending)	
	handler	JavassistLazyInitializer  (id=23555)	
		target	OrderStatusVO  (id=23556)	
			code	"8000" (id=20957)	
			description	"STARTED" (id=20958)	


/ we hadden 	,
		DateSetVO myDateSet = aServiceActionVO.getDateSetVO();
				myCoDateSet = myConsignmentVO.getDateSetVO();
				aServiceActionVO.setOrderStatusVO(myConsignmentVO.getOrderStatusVO());
/ D
			myDateSet.setPlannedStartAfter(myCoDateSet.getPlannedStartAfter());
			myDateSet.setPlannedStartBefore(myCoDateSet.getPlannedStartBefore());
			myDateSet.setPlannedEndAfter(myCoDateSet.getPlannedEndAfter());
			myDateSet.setPlannedEndBefore(myCoDateSet.getPlannedEndBefore());
			myDateSet.setActualStart(myCoDateSet.getActualStart());
			myDateSet.setActualEnd(myCoDateSet.getActualEnd());
			myDateSet.setCloseDate(myCoDateSet.getCloseDate());

/t
ServiceActionServiceImpl.updateServiceAction(ServiceActionVO, TMSEventContext, boolean, boolean) line: 864	
			ServiceActionDAO myDAO = serviceActionDAO;
			setDatesAndStatus(aServiceAction);
/ D
			ServiceActionVO myNew = myDAO.merge(aServiceAction);
/ aServiceAction is een ServiceActionVO	, saves deze sa in ... (TODO) 

/ Intermezzo

/ In ServiceAction.standard.hbm.xml is mapping van ServiceActionVO naar db	,

$ vi oms-dao.sb.xml

	<bean id="com.mpobjects.oms.dao.ServiceActionDAO" parent="HibernateDAOTemplate" class="com.mpobjects.oms.dao.ServiceActionDAOImpl" />


$ vi oms-service.sb.xml

	<bean id="com.mpobjects.oms.model.service.ServiceActionService" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.model.service.ServiceActionServiceImpl">
				<property name="serviceActionDAO" ref="com.mpobjects.oms.dao.ServiceActionDAO"/>


/ Einde Intermezzo


/ Intermezzo

/ we zijn in	,
ShipmentOrderSaveAction(ShipmentOrderSaveAction).handleSave() line: 93	
				ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(myVO, true, true);
/ c
ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 1625	
					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
/ c
ServiceActionServiceImpl.handleShipmentOrderChange(ShipmentOrderVO, ShipmentOrderVO) line: 480	
			updateServiceActionsForShipmentOrder(myOldShipmentOrderVO, mynewShipmentOrderVO, new TMSEventContext());
/ c
ServiceActionServiceImpl.updateServiceAction(ServiceActionVO, TMSEventContext, boolean, boolean) line: 864	
			setDatesAndStatus(aServiceAction);
/ Haalt ook values uit co
/ TODO (ERICJ)
			ServiceActionVO myNew = myDAO.merge(aServiceAction);

/ Einde Intermezzo

/t
	public void updateServiceAction(ServiceActionVO aServiceAction, TMSEventContext aContext, boolean propagate, boolean replan) {
			ServiceActionVO myNew = myDAO.merge(aServiceAction);
/ D
			shipmentOrderService.handleServiceActionChange(myNew, myOldServiceAction);
/ ERICJ
/c
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void handleServiceActionChange(ServiceActionVO aNewServiceActionVO, ServiceActionVO aOldServiceActionVO) {
		// --Make sure we have a recent version of the shipment order.--
		ShipmentOrderVO myNewShipmentOrder = aNewServiceActionVO.getShipmentOrderVO();
/ bij iedere sa is maar 1 so	, en we vragen de so aan de nieuwste sa	,

		if (aOldServiceActionVO == null || !aNewServiceActionVO.getDateSetVO().equals(aOldServiceActionVO.getDateSetVO()) || aOldServiceActionVO.getConsignmentSystemid() != aNewServiceActionVO.getConsignmentSystemid() || shipmentOrderOpenAndServiceActionNot) {
/NEE. nu	,
			updateShipmentOrder(myNewShipmentOrder, false);
/ Q ERICJ Hier is een callback op sho	,
/ TODO (Hoe call?)

/t
	public void updateServiceAction(ServiceActionVO aServiceAction, TMSEventContext aContext, boolean propagate, boolean replan) {
			shipmentOrderService.handleServiceActionChange(myNew, myOldServiceAction);
/ D
				consignmentService.handleServiceActionChange(myNew, myOldServiceAction);
/ ERICJ
/s
package com.mpobjects.oms.model.service;
public class ConsignmentServiceImpl implements ConsignmentService {
	public void handleServiceActionChange(ServiceActionVO myNewVO, ServiceActionVO myOldVO) {
				} else if (myNewVO.getConsignmentSystemid() != 0) {
/ JA
					boolean propagateServiceActionEvent = new Boolean(ApplicationPropertyManager.getInstance().getModuleProperty("oms", "consignment.propagate_sa_event", "false"));
false
/ Q ERICJ 
/ TODO (Waar instellen, zodat call op cons)

/t
ServiceActionServiceImpl.updateServiceAction(ServiceActionVO, TMSEventContext, boolean, boolean) line: 869	
				consignmentService.handleServiceActionChange(myNew, myOldServiceAction);
/ D

			if (replan) {
/ JA
				replan(myNew);
/c
ServiceActionServiceImpl.
	private void replan(ServiceActionVO aServiceActionVO) {

		boolean myServiceActionReplanning = StringUtils.isTrue(ApplicationPropertyManager.getInstance().getModuleProperty("bizzdec", "serviceaction.replanning", "false"));
true
		if (myServiceActionReplanning) {
/ JA
			serviceActionPlanningService.plan(aServiceActionVO, new TMSEventContext());
		}
/ TODO

/t
			if (replan) {
				replan(myNew);
/s
package com.mpobjects.optimize.model.service;
public class ServiceActionPlanningServiceImpl implements ServiceActionPlanningService {
	public void plan(ServiceActionVO aServiceAction, TMSEventContext aContext) {

			ServiceActionVO myServiceAction = aServiceAction;
			ShipmentOrderVO myShipmentOrder = myServiceAction.getShipmentOrderVO();

			for (ServiceActionVO myPeerServiceAction : myShipmentOrder.getServiceActionList()) {
/ myServiceAction.equals(myPeerServiceAction)==true

				if (!myPeerServiceAction.getOrderStatusVO().isEndedOrFurther()) {
/ JA
					ServiceActionTemplate myTemplate = myPeerServiceAction.getServiceActionTemplate();
/ Q ERICJ Hoe komt sa aan sat?
					serviceOrderDao.getCurrentSession().update(myTemplate);
/ Q ERICJ  Wat doet dit?

					if (StringUtils.isNotEmpty(myTemplate.getConsolidationCriteria()) && !myTemplate.isOptimizationPossibleFlag()) {
/ NEE
/ Q ERICJ Hoe JA ?

/t
package com.mpobjects.oms.model.service;
public class ServiceActionServiceImpl implements ServiceActionService {
	public void updateServiceAction(ServiceActionVO aServiceAction, TMSEventContext aContext, boolean propagate, boolean replan) {
			if (replan) {
				replan(myNew);
/ D
			if (propagate) {
				aContext.removeFlag(TMSEventContext.FLAG_UPDATE_ENTITY_DETAILS);
				aContext.removeFlag(TMSEventContext.FLAG_UPDATE_SHIPMENT_ITEMS);
				aContext.removeFlag(TMSEventContext.FLAG_UPDATE_SHIPMENTORDER_SERVICE_ACTIONS);
				triggerEventHandler(myOldServiceAction, myNew, aContext);
/s
public class ServiceActionServiceImpl implements ServiceActionService {
	private void triggerEventHandler(ServiceActionVO anOldVO, ServiceActionVO aNewVO, TMSEventContext anEventContext) throws AbstractException {

		} else {
			myEvent = new ServiceActionEvent(anOldVO, aNewVO, ServiceActionEvent.UPDATED, anEventContext);
		}
		if (myEvent != null) {
/ JA
			eventHandlerService.handleEvent(myEvent);
/c
package com.mpobjects.oms.service.event;
public class EventHandlerServiceImpl implements EventHandlerService {
	public void handleEvent(Event anEvent) throws ChangeManagementException {

			String myLevelPrefix = com.mpobjects.common.util.StringUtils.repeat("...", myLevel);
""

			boolean info = LOG.isInfoEnabled();
			if (info) {
/ JA
				if (anEvent.getOldVO() != null && LogisticsOrderVO.class.isAssignableFrom(anEvent.getOldVO().getClass()) || 
	anEvent.getNewVO() != null && LogisticsOrderVO.class.isAssignableFrom(anEvent.getNewVO().getClass())) {
/ JA
/ TODO
			}
			listenerList.fireEvent(anEvent);
	listenerList	ListenerList  (id=24017)	
		theListenerList	ArrayList<E>  (id=24039)	
			elementData	Object[10]  (id=24044)	
				[0]	TMSCarConServiceOrderEventListener  (id=24048)	
				[1]	$Proxy426  (id=24049)	
				[2]	EventEventListener  (id=24016)	
				[3]	AllocationEventListener  (id=24050)	
				[4]	CapableToPromiseEventListener  (id=24051)	
				[5]	EmailReportEventListener  (id=24052)	
				[6]	$Proxy382  (id=24053)	
				[7]	RateCalcEventListener  (id=24054)	
/c
package com.mpobjects.oms.model.eventhandler.util;
public class ListenerList {
	public void fireEvent(Event anEvent) throws AbstractException {
		for (EventListener myListener : theListenerList) {
			myListener.handleEvent(anEvent);
/c
public class EventEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
		String myType = anEvent.getEventType();
myType	"serviceaction.updated" (id=23975)	
		if (myType.equals(ServiceActionEvent.UPDATED)) {
/ JA
		} else if (myType.equals(ServiceOrderEvent.UPDATED)) {
/ NEE, 
			handleServiceOrderChange((ServiceOrderEvent) anEvent);
		} else if (myType.equals(ServiceActionEvent.CREATED)) {
/ NEE, 
			handleServiceActionCreate((ServiceActionEvent) anEvent);
		} else if (myType.equals(ServiceActionEvent.DELETED)) {
/ NEE, 
			handleServiceActionDelete((ServiceActionEvent) anEvent);
		} else if (myType.equals(LogisticsOrderEventEvent.CREATED)) {
/ NEE, 
/ Is 1 van de 2 SA events	, 

			handleServiceActionChange((ServiceActionEvent) anEvent);
/c
public class EventEventListener extends AbstractEventListener {
	protected void handleServiceActionChange(ServiceActionEvent anEvent) throws AbstractException {
anEvent	ServiceActionEvent  (id=23966)	
	theNewVO	ServiceActionVO  (id=22077)	
	theOldVO	ServiceActionVO  (id=22079)	

		ServiceActionVO myNewServiceActionVO = anEvent.getNewServiceActionVO();
		ServiceActionVO myOldServiceActionVO = anEvent.getOldServiceActionVO();

		/* First check if the shipment items are still in sync with events of type shipment item */
		Collection<EventTemplate> myNewEventList = MpoBeanFactory.getBean(EventTemplateDAO.class).getAllEventTemplatesForSat( myNewServiceActionVO.getServiceActionTemplateSystemId());

myNewServiceActionVO.getServiceActionTemplateSystemId()=26632009

mpo=> select*from service_action_template\g
 system_id | sequence_number | organization_systemid | service_action_type_systemid | service_action_template_id | to_location
_copy_flag | to_location_id | to_name | to_name2 | to_address | to_address2 | to_city | to_postal_code | to_region_state | to_
country_systemid | to_phone_number | to_fax_number | to_email_address | to_contact_name | copy_location_from | from_location_i
d | from_name | from_name2 | from_address | from_address2 | from_city | from_postal_code | from_region_state | from_country_sy
stemid | from_phone_number | from_fax_number | from_email_address | from_contact_name | reference1 | reference2 | reference3 |
 reference4 | reference5 | remarks | handling_instructions | planning_mode | consolidation_criteria | planning_mode_offline | 
execution_mode | optimization_poss | replan_criteria | service_order_replan_criteria | consolidation_window_hrs | avg_leadtime
_hrs 
  0
  26632009 |              10 |                  4000 |                     26631827 | OEGEMA_DELIVERY            | PTG:TO     
           |                |         |          |            |             |         |                |                 |    
         4205189 |                 |               |                  |                 | PTG:FROM           |                
  |           |            |              |               |           |                  |                   |                
  4153 |                   |                 |                    |                   |            |            |            |
            |            |         |                       | CONSOLIDATE   |                        |                     0 | 
MANUAL         |                 1 |                 |                               |                        0 |             
   0

/c
	public Collection<EventTemplate> getAllEventTemplatesForSat(int aSatId) {
		String myQuery = "Select et.* from event_template et, event_sat es " + "where es.sat_systemid IN (" + aSatId + ") " + "and es.event_template_systemid = et.system_id";
		return executeSqlSelect(myQuery, "et");

/ aSatId=26632009. sa template "OEGEMA"	,

/ Intermezzo

mpo=> select*from event_template\g
 system_id | event_type_systemid | is_required | is_public | expected_value | expected_start_expr |  expected_end_expr   | rep
orting_level | close_action_systemid | organization_systemid | is_deleted | alert_sms | alert_email | phone_number | email_add
ress | is_shipment_item_event | shipment_item_action_trigger | is_not_closed_by_later |   code    
-----------+---------------------+-------------+-----------+----------------+---------------------+----------------------+----
-------------+-----------------------+-----------------------+------------+-----------+-------------+--------------+----------
-----+------------------------+------------------------------+------------------------+-----------
  26631836 |            26631835 |           1 |         1 |                |                     | plannedEnd+0H        | SER
VICE_ACTION  |              26631837 |                  4000 |          0 |         0 |           0 |              |          
     |                      0 |                              |                      0 | HAAL-POD
  26632116 |            26632115 |           1 |         1 |                |                     | actualReleaseDate+4h | SER
VICE_ACTION  |                       |                  4000 |          0 |         0 |           0 |              |          
     |                      0 |                              |                      0 | HAAL_CONF
(2 rows)

/ koppeltable event templates en sa templates	,
mpo=>  select*from event_sat\g
 event_template_systemid | party_systemid | system_id | sat_systemid 
-------------------------+----------------+-----------+--------------
                26631836 |                |  26632074 |     26632009
                26632116 |                |  26632117 |     26632009
...
/ de event templates bij de sa template	,
/Klopt deze 2 event_template_systemid's zien we hierboven	, dat zijn de event (templates) zie bij deze sat horen	, deze zien we altijd	,


/ Einde Intermezzo


/t
public class EventEventListener extends AbstractEventListener {
	protected void handleServiceActionChange(ServiceActionEvent anEvent) throws AbstractException {

/ anEvent="serviceaction.update"

		Collection<EventTemplate> myNewEventList = MpoBeanFactory.getBean(EventTemplateDAO.class).getAllEventTemplatesForSat( myNewServiceActionVO.getServiceActionTemplateSystemId());
myNewEventList	ArrayList<E>  (id=24271)	
	elementData	Object[10]  (id=24273)	
		[0]	EventTemplate  (id=24277)	
			code	"HAAL-POD" (id=24286)	
		[1]	EventTemplate  (id=24279)	
			code	"HAAL_CONF" (id=24283)	

		for (EventTemplate myEventTemplate : myNewEventList) {
			if (myEventTemplate.isShipmentItemEvent()) {
/s
public class EventTemplate extends EnumeratedValueObject {
	public boolean isShipmentItemEvent() {
		return shipmentItemEvent;
false

/t
	public void fireEvent(Event anEvent) throws AbstractException {
anEvent="serviceaction.updated"

		for (EventListener myListener : theListenerList) {
			myListener.handleEvent(anEvent);
/ D, de 1ste handler 
/ Deze ging na of de 2 sa events shipment events waren	,

/ 2de handler	,
package com.mpobjects.oms.ratecalc.model.eventhandler.util;
public class AllocationEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {

		if (!ShipmentOrderCostPartUtil.isCostAllocationEnabled()) {
/NEE
/c
package com.mpobjects.oms.model.shipmentordercostpart.util;
public abstract class ShipmentOrderCostPartUtil {
	public static boolean isCostAllocationEnabled() {
		return "true".equalsIgnoreCase(ApplicationPropertyManager.getInstance().getModuleProperty("ratecalc", "cost.allocation.enabled", "false"));

	String myType = anEvent.getEventType();
"serviceaction.updated"

		} else if (myType.equals(ServiceActionEvent.UPDATED)) {
			anEvent.debug("handled by " + this.getClass());
			ServiceActionVO myOld = ((ServiceActionEvent) anEvent).getOldVO();
			ServiceActionVO myNew = ((ServiceActionEvent) anEvent).getNewVO();
			if (myOld.getConsignmentVO() != null && myNew.getConsignmentVO() == null) {
/ NEE
				/* Re-allocate the old service order */
				ServiceOrderVO myServiceOrder = myOld.getConsignmentVO().getServiceOrderVO();
				ShipmentOrderCostPartUtil.getShipmentOrderCostPartService().updateBasedOnServiceOrder(myServiceOrder);
				MpoBeanFactory.getBean(ProductItemCostService.class).update(myNew.getShipmentOrderVO());
			} else if (myOld.getConsignmentVO() == null && myNew.getConsignmentVO() != null) {
/ NEE
				/* The service action was planned to a new Consignment */
				ServiceOrderVO myServiceOrder = myNew.getConsignmentVO().getServiceOrderVO();
				ShipmentOrderCostPartUtil.getShipmentOrderCostPartService().updateBasedOnServiceOrder(myServiceOrder);
			}

/t
package com.mpobjects.oms.model.eventhandler.util;
public class ListenerList {
	public void fireEvent(Event anEvent) throws AbstractException {
		for (EventListener myListener : theListenerList) {
			myListener.handleEvent(anEvent);
/ volgende,	
/c
package com.mpobjects.capabletopromise.model.eventhandler.util;
public class CapableToPromiseEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {

		if (!CTPUtil.isServiceOrderEnabled()) {
/ NEE
/c
class CTPUtil
	public static boolean isServiceOrderEnabled() {
		return "true".equalsIgnoreCase(ApplicationPropertyManager.getInstance().getModuleProperty("capabletopromise", "plan.serviceorder", "false"));
	}

/t
			myListener.handleEvent(anEvent);
/ volgende,
package com.mpobjects.emailnot.eventhandler;
public abstract class ReportEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
this	EmailReportEventListener  (id=24052)	

		for (int i = 0; i < myNotificationsList.size(); i++) {
/ aantal=3, maar ze doen NIETS	,

/ t
			myListener.handleEvent(anEvent);
/ volgende
this	ListenerList  (id=24017)	
	theListenerList	ArrayList<E>  (id=24039)	
		elementData	Object[10]  (id=24044)	
			[6]	$Proxy382  (id=24053)	
				h	JdkDynamicAopProxy  (id=24132)	
					advised	ProxyFactory  (id=24133)	
						targetSource	SingletonTargetSource  (id=24141)	
							target	InvoiceServiceOrderEventHandler  (id=26248)	
/c
package com.mpobjects.invoice.model.service;
public class InvoiceServiceOrderEventHandler implements EventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
		String myEventType = anEvent.getEventType();
		if (myEventType.equals(ServiceOrderEvent.UPDATED)) {
/ NEE

/ t
			myListener.handleEvent(anEvent);
/ volgende
/c
package com.mpobjects.oms.ratecalc.model.eventhandler.util;
public class RateCalcEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {

		if (anEvent.getEventContext().hasFlag(TMSEventContext.FLAG_MAY_RATE_CALC)) {
/ TODO ERICJ 
			String myRecalcExecution = ApplicationPropertyManager.getInstance().getModuleProperty("ratecalc", "serviceorder.ratecalculation.execution");
"auto"
			if (myRecalcExecution.equalsIgnoreCase("auto")) {
/ JA
				recalcServiceOrderCost(anEvent);
/s
package com.mpobjects.oms.ratecalc.model.eventhandler.util;
public class RateCalcEventListener extends AbstractEventListener {
	private void recalcServiceOrderCost(Event anEvent) throws AbstractException {

/ Doet NIETS voor serviceaction.updated	,

/t
public class RateCalcEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {

			String myPriceExecution = ApplicationPropertyManager.getInstance().getModuleProperty("ratecalc", "shipmentorderprice.ratecalculation.execution");
"auto"
			if (myPriceExecution.equalsIgnoreCase("auto")) {
/JA
				recalcShipOrderPrice(anEvent);
/c
	public void recalcShipOrderPrice(Event anEvent) {
/ Doet NIETS voor "serviceaction.updated"

/t
public class EventHandlerServiceImpl implements EventHandlerService {
	public void handleEvent(Event anEvent) throws ChangeManagementException {
			listenerList.fireEvent(anEvent);
/ "serviceaction.updated"
/D

/t
ServiceActionServiceImpl.
	private void triggerEventHandler(ServiceActionVO anOldVO, ServiceActionVO aNewVO, TMSEventContext anEventContext) throws AbstractException {

		if (myEvent != null) {
			eventHandlerService.handleEvent(myEvent);
/ D
eventHandlerService	$Proxy221  (id=23925)	
	h	JdkDynamicAopProxy  (id=24018)	
		advised	ProxyFactory  (id=27823)	
			targetSource	SingletonTargetSource  (id=27831)	
				target	EventHandlerServiceImpl  (id=23969)	

/t
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {

					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
/ D

/ Intermezzo

/ 7	.

/ create shipment item	,

package com.mpobjects.oms.control.shipmentorder.action;
public class ShipmentItemSaveAction extends AbstractShipmentSaveAction {
	public void handleSave() throws java.lang.Exception {

		ShipmentItemVO myShipmentItemVO = myShipmentItemBeanVO.getShipmentItem();

		// handle shipment order creation scenario...
		if (myShipmentItemVO.getShipmentOrder() == null) {
			ShipmentOrderVO myOrder = (ShipmentOrderVO) getValueObject();
			myOrder.addShipmentItem(myShipmentItemVO);

/ TODO

/ 7	.

package com.mpobjects.oms.model.shipmentorder.dao;
public class ShipmentItemDAOHibernate extends GenericHibernateDAO<ShipmentItemVO> implements ShipmentItemDAO {
	public void updateShipmentItemsForOrder(ShipmentOrderVO aShipmentOrder, Collection<ShipmentItemVO> anItemList) {

		for (ShipmentItemVO myShipmentItem : anItemList) {
			aShipmentOrder.addShipmentItem(myShipmentItem);

/ 7	.

/ Einde Intermezzo

/ 7	.

					MpoBeanFactory.getBean(ConsignmentService.class).handleShipmentOrderChange(myNewVO, myOldVO);
/s
package com.mpobjects.oms.model.service;
public class ConsignmentServiceImpl implements ConsignmentService {
	public void handleShipmentOrderChange(ShipmentOrderVO myNewShipmentOrder, ShipmentOrderVO myOldShipmentOrder) {

			if (myNewShipmentOrder != null && myOldShipmentOrder != null) {
				LOG.debug("handled by " + this.getClass() + ".handleShipmentOrderChange");
				ArrayList<BigDecimal> myCalculatedValues = myOldShipmentOrder.getAllCalculatedValues();
/c
package com.mpobjects.oms.model.logisticsorder.vo;
public abstract class LogisticsOrderVO extends EntityDetailSupport {
	public ArrayList<BigDecimal> getAllCalculatedValues() {
...

/t
				ArrayList<BigDecimal> myCalculatedValues = myOldShipmentOrder.getAllCalculatedValues();
/ D
[null, 2.00, 0.40, 1.400, 40.00, 2.00, 0.00, 0.40, 0.00, 1.400, 40.00]

				if (!myNewShipmentOrder.calculateValuesAreEqualTo(myCalculatedValues)) {
/ NEE
/ Q ERICJ Hoe JA	?
/ TODO

/t
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {

					MpoBeanFactory.getBean(ConsignmentService.class).handleShipmentOrderChange(myNewVO, myOldVO);
/ D
					triggerEventHandler(myOldVO, myNewVO, anEventContext);
/ s
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	private void triggerEventHandler(ShipmentOrderVO anOldVO, ShipmentOrderVO aNewVO, TMSEventContext anEventContext) throws AbstractException {

		} else {
			myEvent = new ShipmentOrderEvent(anOldVO, aNewVO, ShipmentOrderEvent.UPDATED, anEventContext);
		eventHandlerService.handleEvent(myEvent);
/s
package com.mpobjects.oms.service.event;
public class EventHandlerServiceImpl implements EventHandlerService {
	public void handleEvent(Event anEvent) throws ChangeManagementException {

/ TODO (Afmaken)












	public void handleSave() throws java.lang.Exception {
			} else {
				ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(myVO, true, true);
/ D


/ SAMENVATTING

package com.mpobjects.oms.control.shipmentorder.action;
public class ShipmentOrderSaveAction extends AbstractShipmentSaveAction {
	public void handleSave() throws java.lang.Exception {
			} else {
				ShipmentOrderUtil.getShipmentOrderFacadeLocal().updateShipmentOrder(myVO, true, true);
/c
package com.mpobjects.oms.model.service;
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
/c
				getTriggerHandler().handleUpdate(myOldVO, myNewVO);

				if (propagateChange) {
/ als TRUE

					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
/ updates sa
					MpoBeanFactory.getBean(ConsignmentService.class).handleShipmentOrderChange(myNewVO, myOldVO);
/ updates con
					triggerEventHandler(myOldVO, myNewVO, anEventContext);

/ Einde  SAMENVATTING



/ Einde APPLICATIE SHO

/ APPLICATIE SA -> SO

/ 

/ Einde APPLICATIE SA -> SO

/ APPLICATIE

[eric@localhost knight]$ ssh eric@mposerv8
rtdMpo45
eric@mposerv8:~$ pg_dump -U mpopostgres -W -v -c -f mpo.dump -h 127.0.0.1 mpo
password: mpopostgres@mpo
/ HOEFT NIET: -W -v -h 127.0.0.1 
eric@mposerv8:~$ pwd
/home/INTERNAL/eric
eric@mposerv8:~$ ls
mpo.dump

[eric@localhost knight]$ scp eric@mposerv8:/home/INTERNAL/eric/mpo.dump /home/eric/Downloads/
eric@mposerv8's password: rtdMpo45
mpo.dump 
/ OK

/ we hebben een sho rm	, 
[eric@localhost Postgres]$ pg_dump -U mpopostgres -f rmsampo.dump mpo





/ Einde APPLICATIE

/ APPLICATIE CREATE SHO

/ act is van cocoon	,



/ 7	.

/ click op edit een sho	,

/ we vallen in js op een HTML page	,
http://localhost:8080/tms/oms/shipment-order_edit?base_sessionLevelOffset=1&systemid=26632024&systemId=26632024
/ we zien	,

Shipment Order

var theShipmentorderFormManager= new FormManager('shipmentorder');var theActiveFormManager=theShipmentorderFormManager;document.theActiveFormManager=theActiveFormManager

/ we vallen in 
$ vi class.formmanager.js

function FormManager(aFormName) {
aFormName="shipmentorder"

    this.theFormName = aFormName;
...

/we vallen in 
$ vi smartsave.js

function initSmartSave() {
	DhtmlUtils.log('Initializing smart-save ...');

/ we click "create shipment item"
/ In popup window we select "WW-EURO"
/ we vallen in 	,
$ vi smartsave.js

 */
function smartSaveRegisterChangeListener() {
	this.onchange = function(e) {
->		smartSaveChangeHandler.call(this);
this=input#shipmentItemShippingUnit.required
e.type="change"

/ we vallen in smartsave.js

function smartSaveChangeHandler() {
...

/t
function smartSaveRegisterChangeListener() {
	this.onchange = function(e) {
		smartSaveChangeHandler.call(this);
/ D
		if (typeof origOnChange == "function") {
			origOnChange.call(this, e);
/ TODO


/click op "Save shipment item"	,

<input type="button" name="saveShipmentItemBtn" id="saveShipmentItemBtn" value="Save Shipment item" onclick=" theShipmentorderFormManager.submit('../oms/shipment-order_save-shipment-item', false, 0);"> 

/ we vallen in 
$ vi http://localhost:8080/tms/m_script/oms/class.shipment-order_edit.js

ShipmentOrderEdit.saveShipmentItem = function() {
    theShipmentorderFormManager.submit("../oms/shipment-item_save", false, myRedirectLevelOffset);
/c
$ vi smartsave.js
function initSmartSave() {
	theActiveFormManager.submit = function(anAction, aBoolDoRedirect, aRedirectionLevelOffset) {
this is FormManager inst	,
			return this._smartSaveSubmit(anAction, aBoolDoRedirect, aRedirectionLevelOffset);
/c
$ vi class.formmanager.js
    this.submit = function(anAction, aBoolDoRedirect, aRedirectionLevelOffset) {
anAction="../oms/shipment-item_save"

        var myForm = document.getElementById(this.theFormName);
this.theFormName="shipmentorder"
       if(anAction){
        	myForm.action=anAction;
"../oms/shipment-item_save"

/ TODO (Afmaken)
/ Geef cont	,

/ we vallen in eclipse
ShipmentOrderSaveAction(ShipmentOrderSaveAction).handleSave() line: 55	

$ vi oms-sitemap.xmap

			<map:match pattern="shipment-item_save">
				<map:act type="shipmentOrderSave">
					<map:parameter name="noRedirect" value="true"/>
					<map:parameter name="skipFieldPrefix" value="productItem"/>
				</map:act>
				<map:act type="shipmentItemSave"/>
			</map:match>

/ we zien in de link ...	, maar in js zagen we shipment-item_save	,
/ TODO

/ 7	. 

/ Verder in eclipse	,

ShipmentOrderSaveAction(ShipmentOrderSaveAction).handleSave() line: 55	

	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, boolean propagateChange, boolean lastUpdateCheck) {

			} else {
				myOldVO = shipmentOrderDao.getBySystemId(aShipmentOrder.getSystemId());

/ kijk naar	,
myOldVO.theShipmentItemList

				ShipmentOrderVO myNewVO = shipmentOrderDao.merge(aShipmentOrder);
/TODO
				myNewVO.performCustomRecalculation(myOldVO);

/ 7	. 

/ verder	,

ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 1625	
					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
/ myNewVO heeft theShipmentItemList=[]
/TODO

/c
ServiceActionServiceImpl.updateServiceAction(ServiceActionVO, TMSEventContext, boolean, boolean) line: 868	
			shipmentOrderService.handleServiceActionChange(myNew, myOldServiceAction);
/ ERICJ Terug naar de sho	,

/ later	,
ServiceActionPlanningServiceImpl.plan(ServiceActionVO, TMSEventContext) line: 94	

		ServiceActionTemplate myTemplate = myPeerServiceAction.getServiceActionTemplate();
		serviceOrderDao.getCurrentSession().update(myTemplate);
/ TODO

/ later	,
ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 1627	
	triggerEventHandler(myOldVO, myNewVO, anEventContext);
/ myOldVO.theShipmentItemList
[shipmentItem: 010(systemId:26632026, labelInfo:0000001056177), shipmentItem: 020(systemId:26632376, labelInfo:0000001056179), shipmentItem: 030(systemId:26632565, labelInfo:0000001056181), shipmentItem: 040(systemId:26632566, labelInfo:0000001056182), shipmentItem: 050(systemId:26632567, labelInfo:0000001056183)]
/ myNewVO.theShipmentItemList
[]
/ toch	,
myOldVO.equals(myNewVO)		true

/ later	,
ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 1627	
	MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
	MpoBeanFactory.getBean(ConsignmentService.class).handleShipmentOrderChange(myNewVO, myOldVO);
	triggerEventHandler(myOldVO, myNewVO, anEventContext);
/ TODO 
/ Deze 8 handlers waren zonet nog called, 

/ in 	,
ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 1622	
				getTriggerHandler().handleUpdate(myOldVO, myNewVO);
/ Dit is een andere	,
/ TODO

/ in
ServiceActionServiceImpl.updateServiceAction(ServiceActionVO, TMSEventContext, boolean, boolean) line: 863	
				triggerEventHandler(myOldServiceAction, myNew, aContext);

/ 7	. 

/ we save een shipment item

ShipmentOrderServiceImpl.updateShipmentOrder(ShipmentOrderVO, TMSEventContext, boolean) line: 1592	
				ShipmentOrderVO myNewVO = shipmentOrderDao.merge(aShipmentOrder);
aShipmentOrder.theShipmentItemList=[]
/ TODO

/c
ShipmentOrderDaoImpl(GenericHibernateDAO<Type>).merge(Type) line: 414	
			return type.cast(getHibernateTemplate().merge(anObject));
/c
ShipmentItemVO.<init>() line: 139	

/ 7	.

mpo=> \d+ shipment_item














/ Einde APPLICATIE CREATE SHO

/ APPLICATIE SHO -> SEO 

/ 7	.

/ click op cons link op sa	,
<a href="#" onclick="javascript:gotoServiceOrder('26632537');return false">N0000265.1</a>

/ click ctrl+shift+f in chrome en zoek in alle js files  naar gotoServiceOrder	, we vinden	,
class.shipment-order_edit.js

$ vi class.shipment-order_edit.js
function gotoServiceOrder(aSystemId){
	var myUrl = "../oms/service-order_edit?base_sessionLevelOffset=1&systemId=" + aSystemId;

/ in eclipse	,
$ vi oms-sitemap.xmap

			</map:match>
			<map:match pattern="service-order_edit">
				<map:act type="serviceOrderEdit"/>
				<map:read mime-type="text/html" type="jsp" src="jsp/service-order_edit.jsp"/>
			</map:match>
/ en dus	,
			<map:action logger="serviceorder" name="serviceOrderEdit" src="com.mpobjects.oms.control.serviceorder.action.ServiceOrderEditAction"/>

/ we vallen in eclipse in	,
package com.mpobjects.oms.control.serviceorder.action;
public class ServiceOrderEditAction extends ActionBase {
	public Map act() throws java.lang.Exception {
				ServiceOrderVO myVO = getServiceOrderBAO().getServiceOrder(getSystemIdFromRequest());
/c
package com.mpobjects.oms.model.service;
public class ServiceOrderServiceImpl implements ServiceOrderService {
	public ServiceOrderVO getServiceOrder(int aSystemId) {
			ServiceOrderVO myRet = serviceOrderDAO.getBySystemId(aSystemId);
/c
package com.mpobjects.util.dao;
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type getBySystemId(int aSystemId) {
				return type.cast(getHibernateTemplate().load(type, aSystemId));
this	RcaServiceOrderDAOImpl  (id=621)	
	hibernateTemplate	HibernateTemplate  (id=22510)	
	type	Class<T> (com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO) (id=2389)	

/ Intermezzo


Object
org.springframework.dao.support.DaoSupport
org.springframework.orm.hibernate3.support.HibernateDaoSupport
com.mpobjects.util.dao.BaseHibernateDAO<T>
com.mpobjects.util.dao.GenericHibernateDAO<Type>
com.mpobjects.oms.dao.ServiceOrderDaoImpl
com.mpobjects.ratecalc.dao.RcaServiceOrderDAOImpl


/ WH	,
$ vi ratecalc-dao.sb.xml

	<bean id="com.mpobjects.ratecalc.dao.RcaServiceOrderDAO" class="com.mpobjects.ratecalc.dao.RcaServiceOrderDAOImpl" parent="HibernateDAOTemplate" />
	<!-- replace standard ServiceOrderDAO with the RCA one -->
	<alias name="com.mpobjects.ratecalc.dao.RcaServiceOrderDAO" alias="com.mpobjects.oms.dao.ServiceOrderDao" />

$ vi oms-dao.sb.xml

	<bean id="com.mpobjects.oms.dao.ServiceOrderDao" class="com.mpobjects.oms.dao.ServiceOrderDaoImpl" parent="HibernateDAOTemplate" />


	<bean id="com.mpobjects.oms.model.serviceorder.dao.ServiceOrderDAO" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.model.serviceorder.dao.ServiceOrderDAOImpl">
				<property name="fileObjectDAO" ref="com.mpobjects.document.dao.fileobject.FileObjectDAO" />
			</bean>
		</property>
	</bean>


$ vi oms-service.sb.xml

<bean id="com.mpobjects.oms.model.service.ServiceOrderService" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.model.service.ServiceOrderServiceImpl">
				<property name="serviceOrderDAO" ref="com.mpobjects.oms.dao.ServiceOrderDao" />


 

/ Einde Intermezzo

mpo=> select*from service_order where system_id=26632537\g
...

/t
public class ServiceOrderEditAction extends ActionBase {
	public Map act() throws java.lang.Exception {
				ServiceOrderVO myVO = getServiceOrderBAO().getServiceOrder(getSystemIdFromRequest());
/ getServiceOrderBAO=serviceorderservice


/ F4 geeft hierarchy of current type	,
/ ctrl+shift+h : kun je zelf het type geven	,
/ bijv hierboven als we F4 geven: hierarchy of ServiceOrderEditAction	,
/ als we de hierarchy van ServiceOrderVO : ctrl+shift+h en geef ServiceOrderVO	,

/ we zien 	,
...
com.mpobjects.oms.model.logisticsorder.vo.LogisticsOrderVO
com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO
...

				Party myFrom = myVO.getFromPartyVO();
				Party myTo = myVO.getToPartyVO();
myFrom	VirtualParty  (id=23114)	
	address	"Bottelweg 11" (id=23116)	
...

				DateSetVO myDateSetVO = myVO.getDateSetVO();
/ 'n DateSetVO
RSAFTER: Fri May 16 17:00:00 CEST 2014, RSBEFORE: Fri May 16 17:00:00 CEST 2014, REAFTER: Fri May 16 17:00:00 CEST 2014, REBEFORE: 2014-05-16 17:00:00.0, PSAFTER: Thu May 15 16:00:00 CEST 2014, PSBEFORE: 2014-05-15 16:00:00.0, PEAFTER: 2014-05-15 17:00:00.0, PEBEFORE: Thu May 15 17:00:00 CEST 2014, AS: 2014-05-09 17:24:35.075, AE: null, RELEASE:null, PRELEASE:Mon May 12 16:00:00 CEST 2014, CLOSE:null
				OrderStatusVO myOrderStatusVO = myVO.getOrderStatusVO();
/ 'n proxy naar een OrderStatusVO

myOrderStatusVO	OrderStatusVO_$$_javassist_120  (id=23147)	
	handler	JavassistLazyInitializer  (id=23165)	
		target	OrderStatusVO  (id=23188)	
			code	"8000" (id=23189)	
			deleted	false	
			description	"STARTED" (id=23190)	
			performanceMonitorService	null	
			systemId	2	
			theType	"STARTED" (id=23192)	

"getRequest()"	 (pending)	
	req	RequestFacade  (id=23232)	
		request	Request  (id=23235)	
			attributes	HashMap<K,V>  (id=23237)	
{invoice_module_present=true, Open hibernate session in view.FILTERED=true, eventVO=Event id: [0], event type: [], status: [OPEN_DEFAULT], org.springframework.web.context.request.async.WebAsyncManager.WEB_ASYNC_MANAGER=org.springframework.web.context.request.async.WebAsyncManager@4463c923, requestManager=com.mpobjects.control.web.RequestManager@732a3be8}

				getSession().setAttribute(ServiceOrderView.ACTIVE_SERVICEORDER, myVO);
"getSession()"	 (pending)	
	wrappedSession	StandardSessionFacade  (id=23455)	
		session	StandardSession  (id=23353)	
			attributes	Hashtable<K,V>  (id=23456)	
{
javax.servlet.jsp.jstl.fmt.request.charset=ISO-8859-1
old_shipment_order=ShipmentOrder: SH000000105(SystemId:26632024)
myShipmentOrderView=com.mpobjects.oms.view.shipmentorder.ShipmentOrderView@312384c5
user.locale.code=isben
base_sessionMap={1400486129799=com.mpobjects.control.action.BaseRequest@12e1bab7
1400486179149=com.mpobjects.control.action.BaseRequest@21a94e10
1400486072088=com.mpobjects.control.action.BaseRequest@72440db3}
wicket:WicketServlet:m:null=[PageMap name=null]
shipmentItemBean=com.mpobjects.oms.control.shipmentorder.ShipmentItemFormBean/id:0
Wicket:SessionUnbindingListener-WicketServlet=org.apache.wicket.protocol.http.AbstractHttpSessionStore$SessionBindingListener@51df9d60
org.apache.cocoon.webapps.authentication.components.DefaultAuthenticationManager/UserStatus=org.apache.cocoon.webapps.authentication.user.UserState@2fd5339e
base_sessionLevel=2
web-controller=com.mpobjects.control.web.WebController@562fe29a
theResource=com.mpobjects.oms.view.resource.ResourceView@61c618aa
myShipmentItemView=com.mpobjects.oms.view.shipmentorder.ShipmentItemView@147d730c
filter_cache=com.mpobjects.view.util.table.FilterCache@49addc97
base_sessionList=[1400486072088
1400486129799
1400486179149]
resource-id=all-admin
active_order=shipment_order
1400486129859_form=com.mpobjects.view.taglib.form.FormTag@380c2356
productItemVO=PRODUCT_ITEM id:null(systemId:0)
active_shipment_order=ShipmentOrder: SH000000105(SystemId:26632024)
locale=isben
FROM_SUBMIT_LISTENERS=[class com.mpobjects.event.event.control.ServiceOrderSaveListener]
LastUsedTable=shipment-order
localeObject=isben
active_service_order=N0000265/26632537							/ !
wicket:WicketServlet:session=com.mpobjects.view.wicket.BaseWebSession@146c5e8b
shipment-order_Table=com.mpobjects.view.util.table.Table@24e3ffd9
}

				Collection<FileObject> fileObjects = MpoBeanFactory.getBean(FileObjectDAO.class).getFilesByObjectType("service-order", myVO.getSystemId());
[]
/ want	,
/c
package com.mpobjects.document.dao.fileobject;
public class FileObjectDAOImpl extends GenericHibernateDAO<FileObject> implements FileObjectDAO {
	public List<FileObject> getFilesByObjectType(final String aType, final int aRelatedObjectSystemId) throws DAOException {
/ aType="service-order"

		return getHibernateTemplate().executeFind(new HibernateCallback() {
			@Override
			public Object doInHibernate(Session session) throws HibernateException, SQLException {
type	Class<T> (com.mpobjects.document.entity.FileObject) (id=14483)	
				Criteria criteria = session.createCriteria(type);
				criteria.add(Entity.RELATED_OBJECT_TYPE.property().eq(aType));
				criteria.add(Entity.RELATED_OBJECT_SYSTEMID.property().eq(aRelatedObjectSystemId));
CriteriaImpl(com.mpobjects.document.entity.FileObject:this[][relatedObjectType=service-order, relatedObjectSystemid=26632537])
				return criteria.list();
			}
		});
	}


/t
				Collection<FileObject> fileObjects = MpoBeanFactory.getBean(FileObjectDAO.class).getFilesByObjectType("service-order", myVO.getSystemId());
[]
				getRequest().setAttribute("fileObjects", fileObjects);
				myVO.setFileObjects(fileObjects);

				Collection<TraceEntry> logs;
				if (StringUtils.isTrue(ApplicationPropertyManager.getInstance().getModuleProperty("oms", "tracing.enabled", "false"))) {
/ JA
					logs = MpoBeanFactory.getBean(Tracer.class).getEntries(TracerSubject.SERVICE_ORDER, myVO.getSystemId());
[com.mpobjects.core.tracing.TraceEntry@4b1a3596
com.mpobjects.core.tracing.TraceEntry@e4fed17
com.mpobjects.core.tracing.TraceEntry@21568858
com.mpobjects.core.tracing.TraceEntry@38115a81
com.mpobjects.core.tracing.TraceEntry@7b4ce7e8
com.mpobjects.core.tracing.TraceEntry@760d6f95
com.mpobjects.core.tracing.TraceEntry@6c18dbbf
com.mpobjects.core.tracing.TraceEntry@5403100a
com.mpobjects.core.tracing.TraceEntry@15122b9d
com.mpobjects.core.tracing.TraceEntry@5bed5b39
com.mpobjects.core.tracing.TraceEntry@3c002a55]
/c
package com.mpobjects.core.tracing;
public class TracerImpl implements Tracer {
	public List<TraceEntry> getEntries(@Nonnull String aSubject, int aEntitySystemId) {
		return traceEntryDao.getEntries(aSubject, aEntitySystemId);
/c 
package com.mpobjects.core.tracing;
public class TraceEntryDaoImpl extends GenericHibernateDAO<TraceEntry> implements TraceEntryDao {
	public List<TraceEntry> getEntries(@Nonnull String aSubject, int aEntitySystemId) {
		DetachedCriteria crit = DetachedCriteria.forClass(TraceEntry.class);
		crit.add(Property.forName("subject").eq(aSubject));
		crit.add(Property.forName("entitySystemId").eq(aEntitySystemId));
		crit.addOrder(Order.desc("logDate"));
		return getHibernateTemplate().findByCriteria(crit, 0, maxEntries);
	}
/ crit=
DetachableCriteria(CriteriaImpl(com.mpobjects.core.tracing.TraceEntry:this[][subject=SERVICE_ORDER, entitySystemId=26632537]))
/ Kijk naar TraceEntry.standard.hbm.xml

	<class name="com.mpobjects.core.tracing.TraceEntry" table="TRACE_ENTRY">
		<id name="systemId">
			<column name="SYSTEM_ID" />
			<generator class="sequence">
				<param name="sequence">GEN_TRACING_ID</param>
			</generator>
		</id>
		<property name="entryType" column="ENTRY_TYPE">
			<type name="org.hibernate.type.EnumType">
				<param name="enumClass">com.mpobjects.core.tracing.TraceEntryType</param>
				<param name="type">12</param>
			</type>
		</property>
		<property name="subject" column="SUBJECT" />
		<property name="entitySystemId" column="ENTITY_SYSTEMID" />
		<property name="entityId" column="ENTITY_ID" />
		<property name="logDate" column="LOGDATE" />
		<property name="detailMessage" column="DETAIL_MESSAGE" />
		<property name="userId" column="USER_ID" />
	</class>

/  Er staat bijv	, 
		DetachedCriteria crit = DetachedCriteria.forClass(TraceEntry.class);
		crit.add(Property.forName("entitySystemId").eq(aEntitySystemId));

/ We zien in de mapping dat TraceEntry.class -> trace_entry table	,  
/ en entitySystemId -> entity_systemid column	, 
/ Dus zo achterhalen we de query	,
mpo=> select*from trace_entry where entity_systemid=26632537 and subject='SERVICE_ORDER'\g
 system_id | entry_type |    subject    | entity_systemid | entity_id |         logdate         | detail_message |  user_id  
-----------+------------+---------------+-----------------+-----------+-------------------------+----------------+-----------
        91 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-02 14:56:27.654 |                | all-admin
        92 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-02 14:58:32.646 |                | all-admin
        93 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-02 17:34:11.846 |                | all-admin
        95 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-08 07:33:53.498 |                | all-admin
        99 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 08:13:52.485 |                | all-admin
       100 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 08:36:14.571 |                | all-admin
       101 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 08:39:35.451 |                | all-admin
       102 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 09:05:09.534 |                | all-admin
       103 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 09:06:41.343 |                | all-admin
       104 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 09:11:08.485 |                | all-admin
       105 | UPDATE     | SERVICE_ORDER |        26632537 | N0000265  | 2014-05-09 09:16:33.783 |                | all-admin



/t
public class ServiceOrderEditAction extends ActionBase {
	public Map act() throws java.lang.Exception {

					logs = MpoBeanFactory.getBean(Tracer.class).getEntries(TracerSubject.SERVICE_ORDER, myVO.getSystemId());
/ D
				getRequest().setAttribute("tracingLogs", logs);
			boolean hasResourceInvoicePrivilige = ResourceUtil.getResource().hasPrivilege(INVOICE_BUSINESS_OBJECT, INVOICE_MATCHING_PRIVILEGE);
true
/ want	,
/c
package com.mpobjects.oms.model.user;
public class Resource extends EnumeratedValueObject implements EntityInterface, SoftDeletable {
	public boolean hasPrivilege(String aBusinessObjectName, String aPrivilegeType) {
		return hasPrivilege(new PrivilegeVO(aBusinessObjectName, aPrivilegeType));
/c
package com.mpobjects.oms.model.privilegeentity.vo;
public class PrivilegeVO extends EnumeratedValueObject {
	public PrivilegeVO(String businessObject, String privilegeType) {
		super(businessObject, privilegeType);
businessObject	"service-order" (id=23538)	
privilegeType	"invoice-matching" (id=23705)	
...
/ TODO (Afmaken)

			getRequest().setAttribute("hasResourceInvoicePrivilige", hasResourceInvoicePrivilige);


/ Intermezzo

/ HIER HIER

/ 7	.

/ op seo scherm zien we alleen de _after fields	, dus als we op seo pln. start date edit, wordt alleen requested_departure_after set	,
/ Eig. fout	,

select requested_departure_before , requested_departure_after , planned_departure_before , planned_departure_after , org_planned_departure_before , org_planned_departure_after , requested_arrival_before , requested_arrival_after , planned_arrival_before , planned_arrival_after , org_planned_arrival_before , org_planned_arrival_after ,  actual_departure , actual_arrival 
from shipment_order 
where system_id=26632024\g

requested_departure_before   | 
requested_departure_after    | 2014-04-30 06:58:00
planned_departure_before     | 2014-05-16 17:00:00
planned_departure_after      | 2014-05-16 17:00:00
org_planned_departure_before | 
org_planned_departure_after  | 
requested_arrival_before     | 2014-05-16 17:00:00
requested_arrival_after      | 2014-05-16 16:00:00
planned_arrival_before       | 2014-05-16 17:00:00
planned_arrival_after        | 2014-05-15 17:00:00
org_planned_arrival_before   | 
org_planned_arrival_after    | 
actual_departure             | 2014-05-09 08:53:00
actual_arrival               | 



select  requested_start_before , requested_start_after , planned_start_before , planned_start_after , original_planned_start_before , original_planned_start_after , requested_end_before , requested_end_after , planned_end_before  ,  planned_end_after
from service_action 
where system_id=26632538\g

requested_start_before        | 2014-05-16 17:00:00
requested_start_after         | 2014-05-16 17:00:00
planned_start_before          | 2014-05-16 17:00:00
planned_start_after           | 2014-05-16 17:00:00
original_planned_start_before | 
original_planned_start_after  | 
requested_end_before          | 2014-05-16 17:00:00
requested_end_after           | 2014-05-16 17:00:00
planned_end_before            | 2014-05-16 17:00:00
planned_end_after             | 2014-05-15 17:00:00



select requested_start_before , requested_start_after , planned_start_before , planned_start_after , original_planned_start_before , original_planned_start_after , requested_end_before , requested_end_after , planned_end_before  ,  planned_end_after  , original_planned_end_before , original_planned_end_after ,    actual_start     , actual_end
from service_order
where system_id=26632537\g

requested_start_before        | 2014-05-16 17:00:00
requested_start_after         | 2014-05-16 17:00:00
planned_start_before          | 2014-05-15 16:00:00
planned_start_after           | 2014-05-15 16:00:00
original_planned_start_before | 
original_planned_start_after  | 2014-05-15 16:00:00
requested_end_before          | 2014-05-16 17:00:00
requested_end_after           | 2014-05-16 17:00:00
planned_end_before            | 2014-05-15 17:00:00
planned_end_after             | 2014-05-15 17:00:00
original_planned_end_before   | 2014-05-15 17:00:00
original_planned_end_after    | 2014-05-15 17:00:00
actual_start                  | 2014-05-09 08:53:00
actual_end                    | 

/ 7	. 

/ op seo edit,	 
pln. start 17 may 16:00
pln. end 19 may 17:00
actual start LEEG

from service_order
where system_id=26632537\g
-[ RECORD 1 ]-----------------+--------------------
requested_start_before        | 2014-05-16 17:00:00
requested_start_after         | 2014-05-16 17:00:00
planned_start_before          | 2014-05-15 16:00:00		/ !
planned_start_after           | 2014-05-17 16:00:00 		/ !
original_planned_start_before | 
original_planned_start_after  | 2014-05-15 16:00:00
requested_end_before          | 2014-05-16 17:00:00
requested_end_after           | 2014-05-16 17:00:00
planned_end_before            | 2014-05-15 17:00:00		/ !
planned_end_after             | 2014-05-19 17:00:00		/ !
original_planned_end_before   | 2014-05-15 17:00:00
original_planned_end_after    | 2014-05-15 17:00:00
actual_start                  | 
actual_end        

from service_action
where system_id=26632538\g
-[ RECORD 1 ]-----------------+--------------------
requested_start_before        | 2014-05-16 17:00:00
requested_start_after         | 2014-05-16 17:00:00
planned_start_before          | 2014-05-17 16:00:00		/ !	, verschil met seo
planned_start_after           | 2014-05-17 16:00:00		/ !
original_planned_start_before | 
original_planned_start_after  | 
requested_end_before          | 2014-05-16 17:00:00		
requested_end_after           | 2014-05-16 17:00:00
planned_end_before            | 2014-05-15 17:00:00		/ ! 	, verschil met seo
planned_end_after             | 2014-05-19 17:00:00		/ !

from shipment_order
where system_id=26632024\g
-[ RECORD 1 ]----------------+--------------------
requested_departure_before   | 
requested_departure_after    | 2014-04-30 06:58:00
planned_departure_before     | 2014-05-17 16:00:00		/ !	
planned_departure_after      | 2014-05-17 16:00:00		/ !
org_planned_departure_before | 
org_planned_departure_after  | 
requested_arrival_before     | 2014-05-16 17:00:00
requested_arrival_after      | 2014-05-16 16:00:00
planned_arrival_before       | 2014-05-15 17:00:00		/ !
planned_arrival_after        | 2014-05-19 17:00:00		/ !
org_planned_arrival_before   | 
org_planned_arrival_after    | 
actual_departure             | 
actual_arrival               | 

/ 7	. 

seo 
actual start 18 may 10: 

from service_order
where system_id=26632537\g
-[ RECORD 1 ]-----------------+--------------------
requested_start_before        | 2014-05-16 17:00:00
requested_start_after         | 2014-05-16 17:00:00
planned_start_before          | 2014-05-15 16:00:00
planned_start_after           | 2014-05-17 16:00:00
original_planned_start_before | 
original_planned_start_after  | 2014-05-15 16:00:00
requested_end_before          | 2014-05-16 17:00:00
requested_end_after           | 2014-05-16 17:00:00
planned_end_before            | 2014-05-15 17:00:00
planned_end_after             | 2014-05-19 17:00:00
original_planned_end_before   | 2014-05-15 17:00:00
original_planned_end_after    | 2014-05-15 17:00:00
actual_start                  | 2014-05-18 10:38:00
actual_end                    | 

from service_action
where system_id=26632538\g
-[ RECORD 1 ]-----------------+--------------------
requested_start_before        | 2014-05-16 17:00:00
requested_start_after         | 2014-05-16 17:00:00
planned_start_before          | 2014-05-17 16:00:00
planned_start_after           | 2014-05-17 16:00:00
original_planned_start_before | 
original_planned_start_after  | 
requested_end_before          | 2014-05-16 17:00:00
requested_end_after           | 2014-05-16 17:00:00
planned_end_before            | 2014-05-15 17:00:00
planned_end_after             | 2014-05-19 17:00:00

from shipment_order
where system_id=26632024\g
-[ RECORD 1 ]----------------+--------------------
requested_departure_before   | 
requested_departure_after    | 2014-04-30 06:58:00
planned_departure_before     | 2014-05-17 16:00:00
planned_departure_after      | 2014-05-17 16:00:00
org_planned_departure_before | 
org_planned_departure_after  | 
requested_arrival_before     | 2014-05-16 17:00:00
requested_arrival_after      | 2014-05-16 16:00:00
planned_arrival_before       | 2014-05-15 17:00:00
planned_arrival_after        | 2014-05-19 17:00:00
org_planned_arrival_before   | 
org_planned_arrival_after    | 
actual_departure             | 2014-05-18 10:38:00
actual_arrival               | 

/ 7	. 

/ op sho
requested start before 1 may 10:43

from shipment_order
where system_id=26632024\g
-[ RECORD 1 ]----------------+--------------------
requested_departure_before   | 2014-05-01 10:43:00
requested_departure_after    | 2014-04-30 06:58:00
planned_departure_before     | 2014-05-17 16:00:00
planned_departure_after      | 2014-05-17 16:00:00
org_planned_departure_before | 
org_planned_departure_after  | 
requested_arrival_before     | 2014-05-16 17:00:00
requested_arrival_after      | 2014-05-16 16:00:00
planned_arrival_before       | 2014-05-15 17:00:00
planned_arrival_after        | 2014-05-19 17:00:00
org_planned_arrival_before   | 
org_planned_arrival_after    | 
actual_departure             | 2014-05-18 10:38:00
actual_arrival               | 




/ Einde Intermezzo

/ Intermezzo

/ 7	. 

/ configuratie	,

Configuration, Finance, Rate calculation, Rate agreements (admin)
Edit OEGEMA
click rate parameters
Edit RP_FUEL
/ we zien free value parameter, parameters, service order details: uit alle 3 kunnen we kiezen, en die zullen in de berekening voorkomen	, we zien bij parameters rp_freight (vervoerskosten)	, 
/ wat is rp_freight? Bij edit OEGEMA, click op rete components (ipv rate parameters)	, edit rp_freight	,

/ we zien bij rate parameters	,
rp_start_date_after
rp_start_date_before
rp_fuel 			/ zonet	,

/ we zien dat rp_start_date_after wordt berekend met 1 en REQ_END_AFTER
/ we zien dat rp_start_date_before wordt berekend met 1 en REQ_END_BEFORE`k`



/ Einde Intermezzo


/ Einde APPLICATIE SHO->SEO 

/ APPLICATIE SEO SAVE

/ we click op Service Order , Save	,
<input type="button" name="saveBtn" id="saveBtn" value="Save" onclick=" theMpoFormFormManager.submit('../oms/service-order_save', false, 0);">

/ we vallen in smartsave.js	,

function initSmartSave() {
	theActiveFormManager.submit = function(anAction, aBoolDoRedirect, aRedirectionLevelOffset) {
->			smartSaveResetDirtyFlag();
			return this._smartSaveSubmit(anAction, aBoolDoRedirect, aRedirectionLevelOffset);
/c
class.formmanager.js
   this.submit = function(anAction, aBoolDoRedirect, aRedirectionLevelOffset) {
        if(anAction){
        	myForm.action=anAction;
"../oms/service-order_save"


$ vi oms-sitemap.xmap

			<map:action logger="serviceorder" name="serviceOrderSave" src="com.mpobjects.oms.control.serviceorder.action.ServiceOrderSaveAction"/>

			<map:match pattern="service-order_save">
				<map:act type="serviceOrderSave"/>
				<map:act type="debugAction"/>
			</map:match>

/ we vallen in	,
/ TODO (in oms-sitemap.xmap staat de super class)	,

package com.mpobjects.oms.ratecalc.control.serviceorder.action;
public class ServiceOrderSaveAction extends com.mpobjects.oms.control.serviceorder.action.ServiceOrderSaveAction {
	public void handleSave() throws Exception {
...
		super.handleSave();
/c
package com.mpobjects.oms.control.serviceorder.action;
public class ServiceOrderSaveAction extends BoundSaveAction {
	public void handleSave() throws java.lang.Exception {

			theVO = (ServiceOrderVO) getValueObject();
/ proxy naar ServiceOrderVO
			int mySystemId = getSystemIdFromRequest();
mySystemId	26632537	

			boolean isExecutionSequenceEnabled = !ApplicationPropertyManager.getInstance().getModuleProperty("oms", "tab.serviceaction.executionsequence.hidden", false);
false

			// save service actions (executionSequence), only when field is visble
			// on screen...
			if (isExecutionSequenceEnabled) {
/ NEE
/ TODO

			Collection myFetchedData = getFetchedData();
[N0000265/26632537
RSAFTER: Fri May 16 17:00:00 CEST 2014
RSBEFORE: Fri May 16 17:00:00 CEST 2014
REAFTER: Fri May 16 17:00:00 CEST 2014
REBEFORE: 2014-05-16 17:00:00.0
PSAFTER: Thu May 15 16:00:00 CEST 2014
PSBEFORE: 2014-05-15 16:00:00.0
PEAFTER: Thu May 15 17:00:00 CEST 2014
PEBEFORE: Thu May 15 17:00:00 CEST 2014
AS: Fri May 09 17:24:00 CEST 2014
AE: null
RELEASE:null
PRELEASE:Mon May 12 16:00:00 CEST 2014
CLOSE:null
N0000265/26632537
N0000265/26632537
N0000265/26632537
N0000265/26632537
com.mpobjects.oms.model.entity.VirtualParty@5825160f[,]
com.mpobjects.oms.model.entity.VirtualParty@5825160f[,]
N0000265/26632537
N0000265/26632537
com.mpobjects.oms.model.entity.VirtualParty@6acb5ffe[,]
com.mpobjects.oms.model.entity.VirtualParty@6acb5ffe[,]
N0000265/26632537
N0000265/26632537
N0000265/26632537
RSAFTER: 2014-05-16 17:00:00.0
RSBEFORE: 2014-05-16 17:00:00.0
REAFTER: 2014-05-16 17:00:00.0
REBEFORE: 2014-05-16 17:00:00.0
PSAFTER: 2014-05-16 17:00:00.0
PSBEFORE: 2014-05-16 17:00:00.0
PEAFTER: 2014-05-15 17:00:00.0
PEBEFORE: 2014-05-16 17:00:00.0
AS: 2014-05-09 17:24:00.0
AE: null
RELEASE:null
PRELEASE:null
CLOSE:null
N0000265/26632537
Event id: [26632546]
event type: [POD]
status: [OPEN_ALERTED]
Event id: [26632547]
event type: [CONF]
status: [OPEN_ALERTED]
Event id: [26632537]
event type: []
status: [OPEN_DEFAULT]
N0000265/26632537]


			for (Object myElement : myFetchedData) {
				if (myElement instanceof Instruction) {
/ NEE
				if (myElement instanceof FileObject) {
/ NEE

			updateVO(theVO);
/ LEEG	,

/ we zijn nog in	,
package com.mpobjects.oms.control.serviceorder.action;
public class ServiceOrderSaveAction extends BoundSaveAction {
	public void handleSave() throws java.lang.Exception {
			} else {
...
				theVO = MpoBeanFactory.getBean(ServiceOrderService.class).updateServiceOrder(theVO, myEventContext, true, true);
/c
package com.mpobjects.oms.model.service;
public class ServiceOrderServiceImpl implements ServiceOrderService {
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {
			boolean isTemplate = aServiceOrder.isTemplate();
false
			if (!isTemplate) {
				ServiceOrderVO myOldServiceOrderVO = getOld(aServiceOrder);
/c

	private ServiceOrderVO getOld(ServiceOrderVO aServiceOrder) throws ServiceOrderException {
		} else {
			myOld = serviceOrderDAO.getOld(aServiceOrder);
/c
public class ServiceOrderDaoImpl extends GenericHibernateDAO<ServiceOrderVO> implements ServiceOrderDao {
/c
package com.mpobjects.util.dao;
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type getOld(final Type aCurrent) {
aCurrent	ServiceOrderVO_$$_javassist_93  (id=24588)	

this	RcaServiceOrderDAOImpl  (id=621)	

/ click F4
com.mpobjects.util.dao.GenericHibernateDAO<Type>
com.mpobjects.oms.dao.ServiceOrderDaoImpl

		final EntityPersister persister = sessionImpl.getEntityPersister(type.getName(), null);

/ Lees	,
http://www.onjava.com/pub/a/onjava/2004/01/14/hibernate.html
Note: If you don't want your classes to be persisted in a database, but say, serialized, the Hibernate API provides you with the net.sf.hibernate.persister.EntityPersister class and the net.sf.hibernate.persister.ClassPersister interface. By subclassing or implementing them, you can write your own persister classes and simply use them as needed.

		if (hibernateSession.contains(aCurrent)) {
/ NEE
		} else {
			EntityKey key = new EntityKey(entityId, persister, sessionImpl.getEntityMode());
EntityKey[com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO#26632537]
key	EntityKey  (id=24876)	
	entityName	"com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO" (id=24648)	
	identifier	Integer  (id=24862)	
		value	26632537	

			lookupThing = sessionImpl.getPersistenceContext().getEntity(key);
null

		if (lookupThing == null) {
			lookupThing = sessionImpl.immediateLoad(type.getName(), entityId);
lookupThing	ServiceOrderVO  (id=24993)	

		if (lookupThing != null) {
			EntityEntry entry = sessionImpl.getPersistenceContext().getEntry(lookupThing);
			if (entry != null) {
				// an original loaded state was found, use it to create a new instance
				loadedState = entry.getLoadedState();
Object[93]
			Object result = sessionImpl.instantiate(persister.getEntityName(), entityId);
persister.getEntientityName="com.mpobjects.oms.model.serviceorder.vo.ServiceOrderVO"
entityId.value=26632537
result	ServiceOrderVO  (id=25046)	
			persister.setPropertyValues(result, loadedState, EntityMode.POJO);
/ WH copy loadedState -> result

			if (type.isInstance(result)) {
				return type.cast(result);
/ TODO

/t
public class ServiceOrderServiceImpl implements ServiceOrderService {

	private ServiceOrderVO getOld(ServiceOrderVO aServiceOrder) throws ServiceOrderException {
		} else {
			myOld = serviceOrderDAO.getOld(aServiceOrder);
/D
/ een ServiceOrder	,
		}
		return myOld;

/t
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {
				ServiceOrderVO myOldServiceOrderVO = getOld(aServiceOrder);
/ D

				// FIXME: this seems incorrect
				// we merge because there's still an object with the same id in the session?
				aServiceOrder = serviceOrderDAO.merge(aServiceOrder);

				setStatus(aServiceOrder);
/ TODO
				applySyncFlags(aServiceOrder);
/ TODO
				ensureInstructions(aServiceOrder);
/ TODO
				if (invoiceModulePresent) {
/ JA
					setVatExportLevel(aServiceOrder);
/ TODO
				}
				handleCustomSoCostEntry(aServiceOrder);
/ TODO

				// Update the service order
				serviceOrderDAO.save(aServiceOrder);

				// export service order on state change to started or ended
				if (propagate && !myOldServiceOrderVO.getOrderStatusVO().isStarted() && aServiceOrder.getOrderStatusVO().isStarted() || !myOldServiceOrderVO.getOrderStatusVO().isEnded() && aServiceOrder.getOrderStatusVO().isEnded() || !myOldServiceOrderVO.getOrderStatusVO().isReleased() && aServiceOrder.getOrderStatusVO().isReleased()) {
					MpoBeanFactory.getBean(ServiceOrderExportService.class).exportServiceOrder(aServiceOrder);
/ D

				if (propagate) {
/ JA
					consignmentService.handleServiceOrderActualDateChange(aServiceOrder, myOldServiceOrderVO);
/c
package com.mpobjects.oms.model.service;
public class ConsignmentServiceImpl implements ConsignmentService {
	public void handleServiceOrderActualDateChange(ServiceOrderVO myNewServiceOrder, ServiceOrderVO myOldServiceOrder) {

		if (	!DateUtils.equals(myOldActualStart, myNewActualStart) || 
			!DateUtils.equals(myOldActualEnd, myNewActualEnd) || 
			!DateUtils.equals(myOldCloseDate, myNewCloseDate)) {
/ NEE

"myOldServiceOrd....getDateSetVO()"	 (pending)	
	estimatedEndAfter	null	
	estimatedEndBefore	null	
	estimatedStartAfter	null	
	estimatedStartBefore	null	
	performanceMonitorService	null	
	systemId	0	
	theActualEnd	null	
	theActualRelease	null	
	theActualStart	Date  (id=26170)	
	theCloseDate	null	
	theHoldRelease	null	
	theOrigPlannedEndAfter	Timestamp  (id=26173)	
	theOrigPlannedEndBefore	Timestamp  (id=26174)	
	theOrigPlannedStartAfter	Timestamp  (id=26175)	
	theOrigPlannedStartBefore	null	
	thePlannedEndAfter	Date  (id=26176)	
	thePlannedEndBefore	Date  (id=26177)	
	thePlannedReleaseDate	Date  (id=26178)	
	thePlannedStartAfter	Date  (id=26179)	
	thePlannedStartBefore	Timestamp  (id=26180)	
	theRequestedEndAfter	Timestamp  (id=26181)	
	theRequestedEndBefore	Timestamp  (id=26182)	
	theRequestedStartAfter	Timestamp  (id=26183)	
	theRequestedStartBefore	Timestamp  (id=26184)	
/ TODO

/t
					consignmentService.handleServiceOrderActualDateChange(aServiceOrder, myOldServiceOrderVO);
/ D
					consignmentService.handleServiceOrderPlannedDateChange(aServiceOrder, myOldServiceOrderVO);
/c
package com.mpobjects.oms.model.service;
public class ConsignmentServiceImpl implements ConsignmentService {
	public void handleServiceOrderPlannedDateChange(ServiceOrderVO myNewServiceOrder, ServiceOrderVO myOldServiceOrder) {

		boolean keepRestrictions = new Boolean(ApplicationPropertyManager.getInstance()
				.getModuleProperty("oms", "consignment.update.dateset.restrict", "false"));
false

			if (!DateUtils.equals(myOldPlannedStartAfter, myNewPlannedStartAfter) || 
				!DateUtils.equals(myOldPlannedEndAfter, myNewPlannedEndAfter) || 
				!DateUtils.equals(myOldPlannedEndBefore, myNewPlannedEndBefore)) {
/ NEE

				if (propagate && !myOldServiceOrderVO.getOrderStatusVO().isEnded() && aServiceOrder.getOrderStatusVO().isEnded()) {
/ NEE

public class OrderStatusVO extends EnumeratedValueObject {
	public boolean isStarted() {
		return getCode().startsWith("80");
	}
	public boolean isEnded() {
		return getCode().startsWith("90");
	}

				if (propagate && !myOldServiceOrderVO.getOrderStatusVO().isEnded() && aServiceOrder.getOrderStatusVO().isEnded()) {
/ NEE

				getTriggerHandler().handleUpdate(myOldServiceOrderVO, aServiceOrder);
/c
package com.mpobjects.oms.service.trigger;
public class ServiceOrderTriggerHandlerImpl extends AbstractTriggerHandlerImpl implements ServiceOrderTriggerHandler {
	public void handleUpdate(ServiceOrderVO myOld, ServiceOrderVO myNew) {
		List<ServiceOrderTypeTrigger> myList = MpoBeanFactory.getBean(ServiceOrderTypeTriggerDAO.class).getByServiceOrderType(myNew.getServiceOrderType());

"myNew.getServiceOrderType()"	 (pending)	
	code	"DELIVERY" (id=26272)	
	deleted	false	
	description	"DELIVERY" (id=26273)	
	maxDateMode	MaxDateMode  (id=26274)	
	performanceMonitorService	null	
	showDocuments	false	
	systemId	26631826	
/c
public class ServiceOrderTypeTriggerDAOImpl extends GenericHibernateDAO<ServiceOrderTypeTrigger> implements ServiceOrderTypeTriggerDAO {
	@Override
	public List<ServiceOrderTypeTrigger> getByServiceOrderType(ServiceOrderType aServiceOrderType) {
		DetachedCriteria myDetachedCriteria = DetachedCriteria.forClass(ServiceOrderTypeTrigger.class);
		myDetachedCriteria.add(Restrictions.eq("serviceOrderType", aServiceOrderType));
		return getHibernateTemplate().findByCriteria(myDetachedCriteria);
	}

$ vi ServiceOrderTypeTrigger.hbm.xml

hibernate-mapping>
	<class name="com.mpobjects.oms.model.trigger.ServiceOrderTypeTrigger" table="SO_TYPE_TRIGGER">
...
		<many-to-one name="serviceOrderType" column="SO_TYPE_SYSTEMID"
			class="com.mpobjects.oms.model.entity.serviceordertype.ServiceOrderType" />

/t
		List<ServiceOrderTypeTrigger> myList = MpoBeanFactory.getBean(ServiceOrderTypeTriggerDAO.class).getByServiceOrderType(myNew.getServiceOrderType());

this	ServiceOrderTriggerHandlerImpl  (id=26260)	
myList	ArrayList<E>  (id=26311)	
	elementData	Object[10]  (id=26313)	
		[0]	ServiceOrderTypeTrigger  (id=26368)	
			expressionRuleUpdate	null	
			expressionUpdate	(id=26371)	
			filterExpression	null	
			filterExpressionRule	null	
			name	"CARRIER_ALERT" (id=26375)	
			onCreate	Boolean  (id=26377)	
			onEnd	Boolean  (id=26377)	
			onPlan	Boolean  (id=26377)	
			onPlannedEndChange	Boolean  (id=26377)	
			onPlannedStartChange	Boolean  (id=26377)	
			onRelease	Boolean  (id=654)	
			onStart	Boolean  (id=26377)	
			onUpdate	Boolean  (id=26377)	
			organization	Organization  (id=26386)	
			performanceMonitorService	null	
			serviceOrderType	ServiceOrderType  (id=26271)	
			systemId	26632022	
			triggerList	PersistentSet  (id=26391)	
	modCount	2	
	size	1	

			if (myEval.noChange() && !mySotTrigger.getOnUpdate()) {
/ JA
				continue;

/ Dus er wordt NIETS gedaan	,

/t
package com.mpobjects.oms.model.service;
public class ServiceOrderServiceImpl implements ServiceOrderService {
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {

				if (replan) {
/ JA
					replan(aServiceOrder);
private void replan(ServiceOrderVO aServiceOrderVO) {

		boolean myRateBasedSelection = ApplicationPropertyManager.getInstance().getModuleProperty("bizzdec", "serviceorder.ratebased.selection", false);
true
		if (myRateBasedSelection) {
			if (!aServiceOrderVO.isManualPlan()) {
/ JA
				MpoBeanFactory.getBean(ServiceOrderReplanService.class).replan(aServiceOrderVO, new TMSEventContext());
/c
package com.mpobjects.optimize.model.service;
public class ServiceOrderReplanServiceImpl implements ServiceOrderReplanService {
	public void replan(ServiceOrderVO aServiceOrder, TMSEventContext aContext) {
		boolean replan = serviceOrderService.mayReplan(aServiceOrder);
/c
package com.mpobjects.oms.model.service;
public class ServiceOrderServiceImpl implements ServiceOrderService {
	public boolean mayReplan(ServiceOrderVO aServiceOrder) {

		boolean useServiceActionCriteria = ApplicationPropertyManager.getInstance().getModuleProperty("oms",
				"serviceorder.replan.use.serviceactionreplancriteria", true);
		boolean useServiceOrderCriteria = ApplicationPropertyManager.getInstance().getModuleProperty("oms",
				"serviceorder.replan.use.serviceorderreplancriteria", false);
		boolean useServiceTypeCriteria = ApplicationPropertyManager.getInstance().getModuleProperty("oms", "serviceorder.replan.use.servicetypereplancriteria",
				false);
true
false
false

		ServiceActionTemplate myServiceActionTemplate = aServiceOrder.getFirstServiceActionTemplate();
/ directe call	,
/ TODO DIRECTE CALL
package com.mpobjects.oms.model.serviceorder.vo;
public class ServiceOrderVO extends LogisticsOrderVO implements SelectionListHelper.SelectionListItem {
	public ServiceActionTemplate getFirstServiceActionTemplate() {
		if (getConsignmentList().size() > 0) {
/ JA
			ConsignmentVO myConsignment = getConsignmentList().iterator().next();
this	ServiceOrderVO  (id=26168)	
myConsignment	ConsignmentVO  (id=26629)	
	calculateVolume	Boolean  (id=654)	
	calculateWeight	Boolean  (id=654)	
	dao	null	
	emission	null	
	entityDetails	HashMap<K,V>  (id=26630)	
	fileObjects	ArrayList<E>  (id=26631)	
	isCalculateEnabled	null	
	orderProcess	null	
	payWeight	null	
	performanceMonitorService	null	
	receiptList	PersistentBag  (id=26632)	
	systemId	26632540	
	temporary	false	
	theActualTotalColli	null	
	theActualTotalLoadingMeters	null	
	theActualTotalVolumeM3	null	
	theActualTotalWeightKg	null	
	theAdditionalInfoMap	HashMap<K,V>  (id=26633)	
	theAltValueCurrencySystemId	null	
	theAltValueCurrencyVO	null	
	theComments	"" (id=26634)	
	theConsignmentNr	"N0000265.1" (id=26635)	
	theDateSetVO	DateSetVO  (id=26636)	
	theFormattedEntity	null	
	theFromPartyVO	VirtualParty  (id=26637)	
		address	"Bottelweg 11" (id=26639)	
		address2	"" (id=26640)	
		city	"Utrecht" (id=26641)	
		code	"" (id=680)	
		contactName	"" (id=26651)	
		countryVO	Country_$$_javassist_42  (id=26652)	
		deleted	false	
		description	"" (id=680)	
		emailAddress	"" (id=26653)	
		faxNumber	"" (id=26654)	
		latitude	null	
		longitude	null	
		manifestReport	"" (id=680)	
		name	"Haal" (id=26655)	
		name2	"" (id=26656)	
		partyGroups	HashSet<E>  (id=26657)	
		partyId	"" (id=26658)	
		partyType	null	
		performanceMonitorService	null	
		phoneNumber	"" (id=26659)	
		postalCode	"5651 GH" (id=26660)	
		prenotifyCarcon	false	
		qualifier	"" (id=680)	
		reference1	"" (id=680)	
		reference2	"" (id=680)	
		reference3	"" (id=680)	
		reference4	"" (id=680)	
		reference5	"" (id=680)	
		regionState	"" (id=26661)	
		scheduleVo	null	
		serviceOrderUrlExpression	"" (id=680)	
		serviceRemarks	"" (id=680)	
		systemId	0	
		theOrganizationSystemid	0	
		theOrganizationVO	null	
		TimeZone	null	
	theHoldStatus	null	
	theOrderStatusVO	OrderStatusVO_$$_javassist_120  (id=26638)	
	theOrganizationSystemid	0	
	theOrganizationVO	null	
	thePodReference	"" (id=26662)	
	thePrice	null	
	thePriceCurrencySystemid	null	
	theRecalculateActualsFlag	false	
	theRecalculateFlag	false	
	theReference1	"" (id=26673)	
	theReference2	"" (id=26674)	
	theReference3	"" (id=26675)	
	theReference4	"" (id=26676)	
	theReference5	"" (id=26677)	
	theRequestedAltTotalValue	null	
	theRequestedTotalColli	null	
	theRequestedTotalItems	null	
	theRequestedTotalLoadingMeters	BigDecimal  (id=26678)	
	theRequestedTotalValue	null	
	theRequestedTotalVolumeM3	BigDecimal  (id=26679)	
	theRequestedTotalWeightKg	null	
	theSequenceNr	26632539	
	theServiceActionList	PersistentBag  (id=26680)	
	theServiceOrderVO	ServiceOrderVO  (id=26168)	
	theToPartyVO	VirtualParty  (id=26681)	
	theValueCurrencyVO	null	

			Collection<ServiceActionVO> myServiceActionList = myConsignment.getServiceActionList();
myServiceActionList	PersistentBag  (id=26680)	
	bag	ArrayList<E>  (id=26687)	
		elementData	Object[10]  (id=26708)	
			[0]	ServiceActionVO  (id=26709)	

			if (myServiceActionList.size() != 0) {
				return myServiceActionList.iterator().next().getServiceActionTemplateVO();
/c
public class ServiceActionVO extends LogisticsOrderVO implements SequencedEntity {
	public ServiceActionTemplate getServiceActionTemplateVO() {
		return getServiceActionTemplate();
	}

/t
	public boolean mayReplan(ServiceOrderVO aServiceOrder) {
		ServiceActionTemplate myServiceActionTemplate = aServiceOrder.getFirstServiceActionTemplate();
/ D

/ Intermezzo

/ ServiceActionTemplate is een hibernate proxy	,

$ vi ServiceActionTemplate.standard.hbm.xml
	<class name="ServiceActionTemplate" table="SERVICE_ACTION_TEMPLATE">
... 

/ ServiceActionTemplateDAO is een spring proxy	,

$ vi oms-dao.xml
	<bean id="com.mpobjects.oms.dao.ServiceActionTemplateDAO" class="com.mpobjects.oms.dao.ServiceActionTemplateDAOImpl" parent="HibernateDAOTemplate" />


/ Einde Intermezzo

		if (useServiceActionCriteria) {
			if (myServiceActionTemplate != null && myServiceActionTemplate.isOptimizationPossibleFlag() && StringUtils.isNotEmpty(myServiceActionTemplate.getReplanCriteria())) {
/' NEE


		if (mustEvaluate && useServiceOrderCriteria) {
/ NEE

		if (mustEvaluate && useServiceTypeCriteria) {
/ NEE

		if (mustEvaluate) {
/ NEE

/t
public class ServiceOrderServiceImpl implements ServiceOrderService {
	private void replan(ServiceOrderVO aServiceOrderVO) {
				MpoBeanFactory.getBean(ServiceOrderReplanService.class).replan(aServiceOrderVO, new TMSEventContext());
/ D

/t
				if (replan) {
					replan(aServiceOrder);
/ D
					triggerEventHandler(myOldServiceOrderVO, aServiceOrder, false, aContext);
/s
	private void triggerEventHandler(ServiceOrderVO anOldVO, ServiceOrderVO aNewVO, boolean anIsInitiatedByConsignmentChange, TMSEventContext aContext)

			} else {
				myEvent = new ServiceOrderEvent(anOldVO, aNewVO, ServiceOrderEvent.UPDATED, aContext);
			myEvent.setInitiatedByConsignmentChange(anIsInitiatedByConsignmentChange);
false

			eventHandlerService.handleEvent(myEvent);
/c
package com.mpobjects.oms.service.event;
public class EventHandlerServiceImpl implements EventHandlerService {
	public void handleEvent(Event anEvent) throws ChangeManagementException {

			if (anEvent.getOldVO() != null && LogisticsOrderVO.class.isAssignableFrom(anEvent.getOldVO().getClass()) 
	|| anEvent.getNewVO() != null && LogisticsOrderVO.class.isAssignableFrom(anEvent.getNewVO().getClass())) {
/ JA
			}

			listenerList.fireEvent(anEvent);
/s
/ Directe call	,
package com.mpobjects.oms.model.eventhandler.util;
public class ListenerList {
public void fireEvent(Event anEvent) throws AbstractException {
		for (EventListener myListener : theListenerList) {
/ 8 listeners	,
			myListener.handleEvent(anEvent);
this	EventHandlerServiceImpl  (id=1524)	
	listenerList	ListenerList  (id=1541)	
		theListenerList	ArrayList<E>  (id=1543)	
			elementData	Object[10]  (id=1544)	
				[0]	TMSCarConServiceOrderEventListener  (id=27152)	
				[1]	$Proxy426  (id=27153)	
				[2]	EventEventListener  (id=1574)	
				[3]	AllocationEventListener  (id=1587)	
				[4]	CapableToPromiseEventListener  (id=27185)	
				[5]	EmailReportEventListener  (id=27189)	
				[6]	$Proxy382  (id=27199)	
				[7]	RateCalcEventListener  (id=27206)	

/ directe call	,
package com.mpobjects.omscarcon.model.eventhandler.util;
public class TMSCarConServiceOrderEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
		String myEventType = anEvent.getEventType();
		if (myEventType.equals(ServiceOrderEvent.UPDATED)) {
			handleServiceOrderUpdate((ServiceOrderEvent) anEvent);
/s
package com.mpobjects.omscarcon.model.eventhandler.util;
public class TMSCarConServiceOrderEventListener extends AbstractEventListener {
	protected void handleServiceOrderUpdate(ServiceOrderEvent anEvent) throws ServiceOrderException {
/ TODO

/ volgende	,
				[1]	$Proxy426  (id=27153)	
/ TODO

/ volgende	,
package com.mpobjects.event.event.model.util;
public class EventEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
/ Doet NIETS	,

/ volgende,	
package com.mpobjects.oms.ratecalc.model.eventhandler.util;
public class AllocationEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {

		} else if (myType.equals(ServiceOrderEvent.UPDATED)) {
			ServiceOrderVO myOldServiceOrderVO = ((ServiceOrderEvent) anEvent).getOldServiceOrderVO();
			ServiceOrderVO myNewServiceOrderVO = ((ServiceOrderEvent) anEvent).getNewServiceOrderVO();
			ShipmentOrderCostPartUtil.getShipmentOrderCostPartService().updateShipmentOrderCostPartDueToServiceOrderEvent(ServiceOrderEvent.UPDATED, myOldServiceOrderVO, myNewServiceOrderVO);

/ Spring call	,
/c
package com.mpobjects.oms.service.shipmentordercostpart;
public class ShipmentOrderCostPartServiceImpl implements ShipmentOrderCostPartService {
	public void updateShipmentOrderCostPartDueToServiceOrderEvent(String anEventType, ServiceOrderVO anOldServiceOrderVO, ServiceOrderVO aNewServiceOrderVO) {
/ Doet NIETS	,

/ volgende	,
package com.mpobjects.capabletopromise.model.eventhandler.util;
public class CapableToPromiseEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
			} else {
				ServiceOrderVO myServiceOrder = (ServiceOrderVO) anEvent.getNewVO();
				myRequest = new CtpRequest(myServiceOrder);
				ctpService.book(myRequest);
/ Spring call	,
/c
public class CapableToPromiseServiceImpl implements CapableToPromiseService {
	public ScheduleResponse book(ScheduleRequest aRequest) {

			List<BookedCapacity> bookedCapacityBuckets = MpoBeanFactory.getBean(BookedCapacityDAO.class).getBookedCapacity(myServiceOrder);
/c
/Spring call	,

/ Intermezzo

$ vi BookedCapacity.standard.hbm.xml

	<class name="com.mpobjects.capabletopromise.model.entity.BookedCapacity" table="BOOKED_CAPACITY">
		<property name="serviceOrderVOId" column="SERVICE_ORDER_SYSTEMID" />

$ vi capabletopromise-dao.xml

<bean id="com.mpobjects.capabletopromise.dao.BookedCapacityDAO" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.capabletopromise.dao.BookedCapacityDAOImpl" parent="HibernateDAOTemplate" />
		</property>
	</bean>

/ Einde Intermezzo

/c
package com.mpobjects.capabletopromise.dao;
public class BookedCapacityDAOImpl extends EnumeratedValueObjectHibernateDAO<BookedCapacity> implements BookedCapacityDAO {
	public List<BookedCapacity> getBookedCapacity(ServiceOrderVO aServiceOrder) {

		DetachedCriteria myCriteria = DetachedCriteria.forClass(BookedCapacity.class);
		myCriteria.add(Property.forName("serviceOrderVOId").eq(aServiceOrder.getSystemId()));
		List<BookedCapacity> myList = getHibernateTemplate().findByCriteria(myCriteria);
		return myList;
[]
/ want	,
mpo=> select *from booked_capacity\g
 system_id | capacity_bucket_systemid | shipment_order_systemid | service_order_systemid | service_action_systemid | booked_ca
pacity | is_deleted 
-----------+--------------------------+-------------------------+------------------------+-------------------------+----------
-------+------------

/ volgende,	

package com.mpobjects.oms.ratecalc.model.eventhandler.util;
public class RateCalcEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
/ NIETS	,

























/ Einde APPLICATIE SEO SAVE

/ APPLICATIE CHANGE SEO

/we rm de actual start date	, was 9 mei 2014	, 17:24	,
/ Save

package com.mpobjects.oms.control.serviceorder.action;
public class ServiceOrderSaveAction extends BoundSaveAction {
	public void handleSave() throws java.lang.Exception {

			theVO = (ServiceOrderVO) getValueObject();
theDateSetVO	DateSetVO  (id=13555)	
	theActualEnd	null	
	theActualStart	null	

/ Dit is de nieuwe	,
/ We zien dat theActualStart=null	,

$ vi DateSetVO.java

	public String toString() {
		return "RSAFTER: " + getRequestedStartAfter() + ", RSBEFORE: " + getRequestedStartBefore() + ", REAFTER: " + getRequestedEndAfter() + ", REBEFORE: "
				+ getRequestedEndBefore() + ", PSAFTER: " + getPlannedStartAfter() + ", PSBEFORE: " + getPlannedStartBefore() + ", PEAFTER: "
				+ getPlannedEndAfter() + ", PEBEFORE: " + getPlannedEndBefore() + ", AS: " + getActualStart() + ", AE: " + getActualEnd() + ", RELEASE:"
				+ getActualRelease() + ", PRELEASE:" + getPlannedReleaseDate() + ", CLOSE:" + getCloseDate();

RSAFTER: 2014-05-16 17:00:00.0 		/ requested start after	,
RSBEFORE: 2014-05-16 17:00:00.0
REAFTER: 2014-05-16 17:00:00.0
REBEFORE: 2014-05-16 17:00:00.0
PSAFTER: Thu May 15 16:00:00 CEST 2014	/ planned start after	,
PSBEFORE: 2014-05-15 16:00:00.0
PEAFTER: Thu May 15 17:00:00 CEST 2014
PEBEFORE: 2014-05-15 17:00:00.0
AS: null
AE: null
RELEASE:null
PRELEASE:Mon May 12 16:00:00 CEST 2014
CLOSE:null


/ we komen in	,
package com.mpobjects.oms.control.serviceorder.action;
public class ServiceOrderSaveAction extends BoundSaveAction {
	public void handleSave() throws java.lang.Exception {

			theVO = (ServiceOrderVO) getValueObject();
/ uit het form, de nieuwe	,
/ proxy  naar ServiceOrderVO	,
			Collection myFetchedData = getFetchedData();
/ een ArrayList	,
myFetchedData	ArrayList<E>  (id=19387)	
	elementData	Object[22]  (id=19404)	
		[0]	ServiceOrderVO_$$_javassist_93  (id=19399)	
		[1]	DateSetVO  (id=19407)	
		[6]	VirtualParty  (id=19415)	
...
/ ook de nieuwe	,
/ TODO
			} else {
				theVO = MpoBeanFactory.getBean(ServiceOrderService.class).updateServiceOrder(theVO, myEventContext, true, true);
/c
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {
				ServiceOrderVO myOldServiceOrderVO = getOld(aServiceOrder);
/c
			myOld = serviceOrderDAO.getOld(aServiceOrder);
/c
public class ServiceOrderDaoImpl extends GenericHibernateDAO<ServiceOrderVO> implements ServiceOrderDao {
	public Type getOld(final Type aCurrent) {
		if (lookupThing == null) {
/JA
			lookupThing = sessionImpl.immediateLoad(type.getName(), entityId);
lookupThing	ServiceOrderVO  (id=13649)	
	theDateSetVO	DateSetVO  (id=13687)	
		theActualEnd	null	
		theActualStart	Timestamp  (id=13690)	
/ Dit is inderdaad de oude	,

		if (lookupThing != null) {
			EntityEntry entry = sessionImpl.getPersistenceContext().getEntry(lookupThing);
			if (entry != null) {
				loadedState = entry.getLoadedState();
Object[93]
		if (loadedState != null) {
			Object result = sessionImpl.instantiate(persister.getEntityName(), entityId);
ServiceOrder
/ WH een default	, in theDateSetVO is alles null	,
loadedState.theDateSetVO.theActualStart= niet null, de oude	, 
			persister.setPropertyValues(result, loadedState, EntityMode.POJO);
/ cp loadedState in result	, de result is de oude	,

/t
			myOld = serviceOrderDAO.getOld(aServiceOrder);
/ D

/t
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {
				ServiceOrderVO myOldServiceOrderVO = getOld(aServiceOrder);


mpo=> select actual_start from service_order where system_id=26632537\g 
      actual_start       
-------------------------
Sun May 18 10:38:00 CEST 2014

				serviceOrderDAO.save(aServiceOrder);
/ Nog niet flush, want de db is nog niet veranderd	,
/ Waar @Transactional	?
/ TODO

				if (propagate) {
					consignmentService.handleServiceOrderActualDateChange(aServiceOrder, myOldServiceOrderVO);
/c
public class ConsignmentServiceImpl implements ConsignmentService {
	public void handleServiceOrderActualDateChange(ServiceOrderVO myNewServiceOrder, ServiceOrderVO myOldServiceOrder) {

		Date myOldActualStart = myOldServiceOrder.getDateSetVO().getActualStart();
Sun May 18 10:38:00 CEST 2014
		Date myNewActualStart = myNewServiceOrder.getDateSetVO().getActualStart();
null

	if (!DateUtils.equals(myOldActualStart, myNewActualStart) || !DateUtils.equals(myOldActualEnd, myNewActualEnd) || !DateUtils.equals(myOldCloseDate, myNewCloseDate)) {
/ JA

			for (ConsignmentVO myConsignmentVO : myNewServiceOrder.getConsignmentList()) {
				ConsignmentVO myOld = myConsignmentVO.deepClone();
/ myConsignmentVO heeft theActualStart is niet null	,

				Date myCoStart = myConsignmentVO.getDateSetVO().getActualStart();
Sun May 18 10:38:00 CEST 2014
				Date myCoEnd = myConsignmentVO.getDateSetVO().getActualEnd();
null
				Date mySoStart = myNewServiceOrder.getDateSetVO().getActualStart();
null
				Date mySoEnd = myNewServiceOrder.getDateSetVO().getActualEnd();
null

				if (myCoStart == null || mySoStart == null || myCoStart.before(mySoStart) || !keepRestrictions && !DateUtils.equals(myOldActualStart, myNewActualStart)) {
/ JA
					myConsignmentVO.getDateSetVO().setActualStart(mySoStart);
null
///////////////////
/ we zien dat de con.actual start uit de seo komt	,

					myConsignmentVO.setOrderStatusVO(myNewServiceOrder.getOrderStatusVO());
theOrderStatusVO	OrderStatusVO  (id=19772)	
	code	"1450" (id=19928)	
	deleted	false	
	description	"PLANNED" (id=19929)	
	performanceMonitorService	null	
	systemId	28	
	theType	"PLANNED" (id=19930)	
/ Klopt, we hebben in de new service order de actual start null set	, dus wordt van 8000=STARTED -> 1450=PLANNED
					isChanged = true;
				}	

				if (myCoEnd == null || mySoEnd == null || myCoEnd.after(mySoEnd) || !keepRestrictions && !DateUtils.equals(myOldActualEnd, myNewActualEnd)) {
/ JA
					myConsignmentVO.getDateSetVO().setActualEnd(mySoEnd);
///////////////////
/ we zien dat de con.actual end uit de seo komt	,
					myConsignmentVO.setOrderStatusVO(myNewServiceOrder.getOrderStatusVO());

					try {
						updateConsignmentAfterServiceOrderChange(myOld, myConsignmentVO);
/s

	private void updateConsignmentAfterServiceOrderChange(ConsignmentVO anOld, ConsignmentVO aConsignment) throws ConsignmentException {
			setDates(aConsignment);
/c
public class ConsignmentServiceImpl implements ConsignmentService {
	private void setDates(ConsignmentVO aConsignmentVO) {
...
		// Only set the planned dates to the requested dates if the planned
		// dates are not filled
		myDateSet.copyRequestedToPlanned(true);
/ TODO

/t
	private void updateConsignmentAfterServiceOrderChange(ConsignmentVO anOld, ConsignmentVO aConsignment) throws ConsignmentException {
			setDates(aConsignment);
/ D
			setStatus(aConsignment);
/c
	private void setStatus(ConsignmentVO aConsignment) throws AbstractException {

		} else if (myDateSet.isPlanned()) {
/ JA
			aConsignment.setOrderStatusVO(orderStatusDAO.getByCode(OrderStatusVO.STATUS_PLANNED));
/ TODO

/t
	private void updateConsignmentAfterServiceOrderChange(ConsignmentVO anOld, ConsignmentVO aConsignment) throws ConsignmentException {
			setStatus(aConsignment);
/ D
			consignmentDAO.saveConsignment(aConsignment);

			if (anOld == null || !aConsignment.getDateSetVO().equals(anOld.getDateSetVO())) {
/ JA
/  false || true == true	, 
theActualStart van de aConsignment=null, en anOld.theActualStart=Sun May 18 10:38:00 CEST 2014

				boolean replan = Boolean.parseBoolean(ApplicationPropertyManager.getInstance().getModuleProperty("oms", "serviceaction.replan_after_consignment_date_change", "true"));
truej
				serviceActionService.handleConsignmentDateChange(aConsignment, replan);
///////////////////////
/ con->sa seo change	,
/ In  updateConsignmentAfterServiceOrderChange wordt sa update	, NIET duidelijk	,
/ TODO
/c
public class ServiceActionServiceImpl implements ServiceActionService {
	public void handleConsignmentDateChange(ConsignmentVO myNewConsignmentVO, boolean replan) {
		handleConsignmentDateChange(myNewConsignmentVO, replan, false);
/ directe call	,
	public void handleConsignmentDateChange(ConsignmentVO myNewConsignmentVO, boolean replan, boolean propagate) {

				myServiceActionVO.setConsignmentVO(myNewConsignmentVO);
/ myNewConsignemtVO.theActualStart=null


				setDatesAndStatus(myServiceActionVO);
/c
	private void setDatesAndStatus(ServiceActionVO aServiceActionVO) {
/ co dates -> sa 

			calculateMileStones(myShipmentOrderVO);
/ Calc. requested sa dates ogv sho dates	,

				aServiceActionVO.setOrderStatusVO(myConsignmentVO.getOrderStatusVO());
///////////////////
/ een sa krijgt status uit cons	, bijv STARTED of PLANNED	, die op hun beurt uit de seo komen	,

			myDateSet.setPlannedStartAfter(myCoDateSet.getPlannedStartAfter());
			myDateSet.setPlannedStartBefore(myCoDateSet.getPlannedStartBefore());
			myDateSet.setPlannedEndAfter(myCoDateSet.getPlannedEndAfter());
			myDateSet.setPlannedEndBefore(myCoDateSet.getPlannedEndBefore());
			myDateSet.setActualStart(myCoDateSet.getActualStart());
			myDateSet.setActualEnd(myCoDateSet.getActualEnd());
/ planned en actual dates komen uit con	(seo)	,


/t
	public void handleConsignmentDateChange(ConsignmentVO myNewConsignmentVO, boolean replan, boolean propagate) {
				setDatesAndStatus(myServiceActionVO);
/ D
				ServiceActionVO myNew = myDAO.merge(myServiceActionVO);
/ myServiceActionVO heeft theActualStart=null	,

				shipmentOrderService.handleServiceActionChange(myNew, myOld);
/c
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void handleServiceActionChange(ServiceActionVO aNewServiceActionVO, ServiceActionVO aOldServiceActionVO) {
		// --Make sure we have a recent version of the shipment order.--
		ShipmentOrderVO myNewShipmentOrder = aNewServiceActionVO.getShipmentOrderVO();

		if (aOldServiceActionVO == null || 
/ NEE
	!aNewServiceActionVO.getDateSetVO().equals(aOldServiceActionVO.getDateSetVO()) || 
/ JA
	aOldServiceActionVO.getConsignmentSystemid() != aNewServiceActionVO.getConsignmentSystemid() || 
/ NEE
	shipmentOrderOpenAndServiceActionNot) {
/ NEE 
------
/ JA
	updateShipmentOrder(myNewShipmentOrder, false); 
/////////////////////////////////////
/ false is propagateChange en is dus false, 
/ dus hij gaat later NIET	,  

public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {

					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
					MpoBeanFactory.getBean(ConsignmentService.class).handleShipmentOrderChange(myNewVO, myOldVO);

/ Einde NIET

/s
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, boolean propagateChange) {
		updateShipmentOrder(aShipmentOrder, new TMSEventContext(), propagateChange);
/s
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {

			ShipmentOrderVO myOldVO = getOld(aShipmentOrder);
/c
public class ShipmentOrderDaoImpl extends AbstractMonitoringDashboardEntityDAO<ShipmentOrderVO> implements ShipmentOrderDao {
/ TODO
/c
public class GenericHibernateDAO<Type extends EntityInterface> extends BaseHibernateDAO<Type> implements HibernateDAOInterface<Type> {
	public Type getOld(final Type aCurrent) {

		if (hibernateSession.contains(aCurrent)) {
/ JA
aCurrent=proxy naar een ShipmentOrderVO	,
/ Hierboven NEE
			if (aCurrent instanceof HibernateProxy) {
				LazyInitializer li = ((HibernateProxy) aCurrent).getHibernateLazyInitializer();
				lookupThing = li.getImplementation();
lookUpThing is een ShipmentOrderVO	,
			EntityEntry entry = sessionImpl.getPersistenceContext().getEntry(lookupThing);
				loadedState = entry.getLoadedState();
Object[89]	,

		Object result = sessionImpl.instantiate(persister.getEntityName(), entityId);
/ een ShipmentOrderVO	,
/ WH 'n default
			persister.setPropertyValues(result, loadedState, EntityMode.POJO);
/ fill
/ TODO (Wat gebeurt hier ? )

/ Intermezzo

$ vi oms-dao.sb.xml

<bean id="com.mpobjects.oms.dao.entitydetail.EntityDetailValueSetTypeDAO" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.dao.entitydetail.EntityDetailValueSetTypeDAOImpl" parent="HibernateDAOTemplate" />
		</property>
</bean>

<bean id="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDao" class="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDaoImpl" parent="HibernateDAOTemplate" />


/ Einde Intermezzo
	 
/t
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
/ aShipmentOrder=proxy	,

			ShipmentOrderVO myOldVO = getOld(aShipmentOrder);
/ D
/ 'n ShipmentOrderVO	,
			if (aShipmentOrder.isTemplate()) {
/ NEE
			} else {
...
				myNewVO.performCustomRecalculation(myOldVO);
/c
public class ShipmentOrderVO extends LogisticsOrderVO {
	public void performCustomRecalculation(ShipmentOrderVO myOldShipmentOrderVO) {
		if (myOldShipmentOrderVO != null && mustRecalculateRequestedValues("custom.enabled")) {
/ NEE
/ NIETS	,

/t
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
				myNewVO.performCustomRecalculation(myOldVO);
/ D
				setDatesAndStatus(myNewVO);
/c
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	private void setDatesAndStatus(ShipmentOrderVO aShipmentOrderVO) throws AbstractException {

			if (aShipmentOrderVO.getOrderStatusVO() == null || !aShipmentOrderVO.getOrderStatusVO().isCancelled()) {
/ JA
false || true
				DateSetVO myDateSet = aShipmentOrderVO.getDateSetVO();
theActualStart!=null	, dus dit is de current, de oude	,

				Collection myServiceActionList = aShipmentOrderVO.getServiceActionList();
[1450/SH000000105/DELIVERY/26632538]

				if (CollectionUtils.isEmpty(myServiceActionList)) {
/ NEE
				} else {
					for (Iterator myIterator = myServiceActionList.iterator(); myIterator.hasNext();) {
							myFirst = myServiceActionVO;
							myLast = myServiceActionVO;
								myFirstPlanned = myServiceActionVO;
								myLastPlanned = myServiceActionVO;

						if ((myServiceActionVO.getOrderStatusVO().isStarted() || myServiceActionVO.getOrderStatusVO().isEnded() || myServiceActionVO.getOrderStatusVO().isClosed()) && (myFirstShipped == null || myServiceActionVO.getDateSetVO().before(myFirst.getDateSetVO()))) {
/ NEE 
/ we hebben in seo theActualStart=null, dus de sa is planned, niet meer started	,

							myAllEndedOrClosed = false;
							myAllClosed = false;
							released = true;

/ einde for loops over sa's	,

					myLastSet = myLast.getDateSetVO();
					myDateSet.setPlannedStartAfter(myFirstPlanned.getDateSetVO().getPlannedStartAfter());
					myDateSet.setPlannedStartBefore(myFirstPlanned.getDateSetVO().getPlannedStartBefore());

					myDateSet.setPlannedEndAfter(myLastPlanned.getDateSetVO().getPlannedEndAfter());
					myDateSet.setPlannedEndBefore(myLastPlanned.getDateSetVO().getPlannedEndBefore());

				if (myFirstShipped != null) {
/ NEE
				} else {
					myDateSet.setActualStart(null);


				if (myLast != null && myAllEndedOrClosed) {
/ NEE
				} else {
					myDateSet.setActualEnd(null);

				if (myLast != null && myAllClosed) {
/ NEE
				} else {
					myDateSet.setCloseDate(null);

/ Dan	,
...
				} else if (myDateSet.isPlanned() || released) {
					aShipmentOrderVO.setOrderStatusVO(MpoBeanFactory.getBean(OrderStatusDAO.class).getByCode(OrderStatusVO.STATUS_PLANNED));
aShipmentOrderVO	ShipmentOrderVO  (id=20230)	
	theOrderStatusVO	OrderStatusVO  (id=19772)	
		code	"1450" (id=19928)	
		deleted	false	
		description	"PLANNED" (id=19929)	
		performanceMonitorService	null	
		systemId	28	
		theType	"PLANNED" (id=19930)	
	

				// Set the customer status after the order status as the CS may depend on the order status
				MpoBeanFactory.getBean(CustomerStatusService.class).updateStatusNoUpdate(aShipmentOrderVO);

/ Intermezzo	

mpo=> select*from customer_status\g
 system_id |      name       |                                                                       expression               
                                                        | hierarchy | next_step_sat_systemid | next_step_status_systemid | vis
ible | days_back_used | next_step_name | poll_status | process_type | assignable 
-----------+-----------------+------------------------------------------------------------------------------------------------
--------------------------------------------------------+-----------+------------------------+---------------------------+----
-----+----------------+----------------+-------------+--------------+------------
       500 | Label printed   | ${shipmentOrder.serviceActionMap['PRINT_LABEL'].orderStatusVO.code == 9000}                    
                                                        |         5 |                      0 |                         0 |    
   1 |              0 |                |           0 | OUTBOUND     |          0
       700 | Delivered       | ${shipmentOrder.orderStatusVO.code == 9000}                                                    
                                                        |         7 |                      0 |                         0 |    
   0 |              1 |                |           0 | OUTBOUND     |          0
       600 | Picked up       | ${shipmentOrder.serviceActionMap['PICKUP'].orderStatusVO.code == 9000}                         
                                                        |         6 |                      0 |                         0 |    
   1 |              1 |                |           0 | OUTBOUND     |          0
       110 | Released to LSP | ${shipmentOrder.orderProcess.code == 'OUTBOUND' && shipmentOrder.serviceActionMap['DELIVERY'].c
onsignmentVO.serviceOrderVO.orderStatusVO.code == 1500} |       130 |                      0 |                         0 |    
   1 |              0 |                |           0 | OUTBOUND     |          0
       150 | Inbound         | ${shipmentOrder.reference4 == 'Inbound'}                                                       
                                                        |         8 |                      0 |                         0 |    
   1 |              0 |                |           0 | INBOUND      |          0
       105 | Planned         | ${shipmentOrder.orderStatusVO.code == 1450}                                                    
                                                        |         2 |                      0 |                         0 |    
   1 |              0 |                |           0 | OUTBOUND     |          0
       104 | Open            | ${shipmentOrder.orderStatusVO.code == 1404}                                                    
                                                        |         1 |                      0 |                         0 |    
   1 |              0 |                |           0 | OUTBOUND     |          0
       100 | No status       | true                                                                                           
                                                        |         1 |                      0 |                         0 |    
   1 |              0 |                |           0 | OUTBOUND     |          0

/ ceva maakt de shipment order, maar is niet de klant, 	je kunt de klant tussentijds info sturen over hoe het ervoor staat	, als de sho nog niet status 9000 heeft, maar bepaalde WH sa's wel

/ Einde Intermezzo	

/s
public class CustomerStatusServiceImpl extends AbstractService<CustomerStatusVo, CustomerStatusDao> implements CustomerStatusService {
	public void updateStatusNoUpdate(ShipmentOrderVO aShipmentOrderVO) {

		for (CustomerStatusVo myCustomerStatus : getInDescendingHierarchy()) {
elementData	Object[10]  (id=20488)	

	[0]	CustomerStatusVo  (id=20469)	
expression	"${shipmentOrder.orderProcess.code == 'OUTBOUND' && shipmentOrder.serviceActionMap['DELIVERY'].consignmentVO.serviceOrderVO.orderStatusVO.code == 1500}" (id=20472)	
hierarchy	130	

	[1]	CustomerStatusVo  (id=20476)	
expression	"${shipmentOrder.reference4 == 'Inbound'}" (id=20574)	
hierarchy	8	

	[2]	CustomerStatusVo  (id=20477)	
	[3]	CustomerStatusVo  (id=20478)	
	[4]	CustomerStatusVo  (id=20479)	
	[5]	CustomerStatusVo  (id=20480)	
	[6]	CustomerStatusVo  (id=20481)	
	[7]	CustomerStatusVo_$$_javassist_123  (id=20422)	


			String myMatchExpression = myCustomerStatus.getExpression();
			ExpressionEvaluator myEvaluator = new ExpressionEvaluator();
			myEvaluator.setVariable("shipmentOrder", aShipmentOrderVO);
			if (StringUtils.isTrue(myEvaluator.evaluate(myMatchExpression).toString())) {
/ JA	,
myCustomerStatus	CustomerStatusVo  (id=21813)	
	assignable	false	
	daysBackUsed	false	
	expression	"${shipmentOrder.orderStatusVO.code == 1450}" (id=21814)	
	hierarchy	2	
	messageList	PersistentSet  (id=21819)	
	name	"Planned" (id=21820)	

					aShipmentOrderVO.setCustomerStatus(myCustomerStatus);
					sendMessages(myCustomerStatus, aShipmentOrderVO);
/ NIETS	
				break;


/t
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
				setDatesAndStatus(myNewVO);
/ D
				applySyncFlags(myNewVO);
/ NIETS
				handleTimeWindow(myNewVO);
/ NIETS

				ShipmentOrderPartyUtil.createShipmentOrderParties(aShipmentOrder);
/s
public class ShipmentOrderPartyUtil {
	public static void createShipmentOrderParties(ShipmentOrderVO aShipmentOrder) {

/ SAMENVATTING STACK TRACE 

/ we save een seo	,

/ de stack trace	,

public class ServiceOrderSaveAction extends BoundSaveAction {
	public void handleSave() throws java.lang.Exception {
				theVO = MpoBeanFactory.getBean(ServiceOrderService.class).updateServiceOrder(theVO, myEventContext, true, true);
/c
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {
					consignmentService.handleServiceOrderActualDateChange(aServiceOrder, myOldServiceOrderVO);
/c
public class ConsignmentServiceImpl implements ConsignmentService {
	public void handleServiceOrderActualDateChange(ServiceOrderVO myNewServiceOrder, ServiceOrderVO myOldServiceOrder) {
						updateConsignmentAfterServiceOrderChange(myOld, myConsignmentVO);
/ c
public class ConsignmentServiceImpl implements ConsignmentService {
	private void updateConsignmentAfterServiceOrderChange(ConsignmentVO anOld, ConsignmentVO aConsignment) throws ConsignmentException {
				serviceActionService.handleConsignmentDateChange(aConsignment, replan);
/c
...
public class ServiceActionServiceImpl implements ServiceActionService {
	public void handleConsignmentDateChange(ConsignmentVO myNewConsignmentVO, boolean replan, boolean propagate) {
				shipmentOrderService.handleServiceActionChange(myNew, myOld);
/c
public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void handleServiceActionChange(ServiceActionVO aNewServiceActionVO, ServiceActionVO aOldServiceActionVO) {
			updateShipmentOrder(myNewShipmentOrder, false);



/ Einde SAMENVATTING STACK TRACE 

/ Intermezzo

$ vi oms-dao.sb.xml

	<bean id="com.mpobjects.oms.dao.shipmentservicelevel.ShipmentServiceLevelDAO" parent="HibernateDAOTemplate" class="com.mpobjects.oms.dao.shipmentservicelevel.ShipmentServiceLevelDAOHibernate" />

$ vi  oms-service.sb.xml

<bean id="com.mpobjects.oms.model.service.ServiceActionTemplateService" class="com.mpobjects.oms.model.service.ServiceActionTemplateServiceImpl">
		<property name="partyTypeGroupDAO" ref="com.mpobjects.oms.model.partytypegroup.dao.PartyTypeGroupDAO" />
	</bean>

$ vi PartyTypeGroupVO.standard.hbm.xml

	<class name="PartyTypeGroupVO" table="PARTY_TYPE_GROUP">
		<property name="deleted" column="IS_DELETED" />
		<property name="showOnSho" column="SHOW_ON_SHO" />
		<property name="system" column="IS_SYSTEM" />

		DetachedCriteria myDetachedCriteria = DetachedCriteria.forClass(PartyTypeGroupVO.class).add(Property.forName("showOnSho").eq(true)) .add(Property.forName("system").eq(false)).add(Property.forName("deleted").eq(false));
		HibernateTemplate myTemplate = getHibernateTemplate();
		myTemplate.setCacheQueries(true);
		return myTemplate.findByCriteria(myDetachedCriteria);

/ Einde Intermezzo

mpo=> select*from party_type_group where show_on_sho=true and is_system=false and is_deleted=false\g
 system_id | party_type_group |  description  | is_deleted | show_on_sho | show_on_so | is_system 
-----------+------------------+---------------+------------+-------------+------------+-----------
  26632057 | BILL_TO          | Bill to party |          0 |           1 |          0 |         0
(1 row)

/t
	public static void createShipmentOrderParties(ShipmentOrderVO aShipmentOrder) {
		myPartyGroupsToCreate.addAll(MpoBeanFactory.getBean(PartyTypeGroupDAO.class).getShowOnShipmentOrder());
/ D
aShipmentOrder	ShipmentOrderVO_$$_javassist_103  (id=21658)	
myPartyGroupsToCreate	ArrayList<E>  (id=21868)	
	elementData	Object[10]  (id=21978)	
			handler	JavassistLazyInitializer  (id=22000)	
				target	PartyTypeGroupVO  (id=22037)	
					code	"" (id=13380)	
					deleted	false	
					description	"Bill to party" (id=22044)	
					partyTypes	PersistentSet  (id=22045)	
					systemId	26632057	
					thePartyTypeGroup	"BILL_TO" (id=22056)	


		for (ShipmentOrderParty myParty : aShipmentOrder.getShipmentOrderParties()) {
			PartyTypeGroupVO myPartyTypeGroupVO = myParty.getPartyTypeGroup();
			myPartyGroupsToCreate.remove(myPartyTypeGroupVO);
/ 1 entry wordt rm	,
		}
		for (PartyTypeGroupVO myGroup : myPartyGroupsToCreate) {
/ NIETS, is leeg	,

/t
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
				ShipmentOrderPartyUtil.createShipmentOrderParties(aShipmentOrder);
/ D
/ TODO

/ In aShipmentOrder zit theOrderStatusVO, PLANNED	,
/ TODO (Hierboven)

myNewVO	ShipmentOrderVO  (id=21665)	
	theOrderStatusVO	OrderStatusVO  (id=22112)	
		code	"1450" (id=22115)	
		description	"PLANNED" (id=22116)	

				myNewVO.setRecalculate();
			LogisticsOrderTotalsCalculator<? extends LogisticsOrderVO> calc = getLogisticsOrderTotalsCalculator(false);
			Collection items = getCustomerLogisticsOrderList();
/ c
public class ShipmentOrderVO extends LogisticsOrderVO {
	protected Collection<LogisticsOrderVO> getCustomerLogisticsOrderList() {

		myList.addAll(getShipmentItemList());
/ TODO ( =theShipmentItemList, maar steeds wordt ShipmentItemVO.<init> called	,
[shipmentItem: 010(systemId:26632026, labelInfo:0000001056177), shipmentItem: 020(systemId:26632376, labelInfo:0000001056179)]

		myList.addAll(getProductItemList());
[]

/t
	public void recalculate() {
			Collection items = getCustomerLogisticsOrderList();
/ D
[shipmentItem: 010(systemId:26632026, labelInfo:0000001056177), shipmentItem: 020(systemId:26632376, labelInfo:0000001056179)]

			} else {
				for (Object o : items) {
							item.recalculate();

/t
				myNewVO.recalculate();
/ D
				myNewVO.calculatePrice();
/ TODO (waar wordt alles set?)

				// Calculate total price /cost
				updatePricePart(aShipmentOrder);
				aShipmentOrder.calculatePrice();
				aShipmentOrder.calculateTotalCosts();
/ TODO( Waarom aShipmentOrder, en niet myNewVO	,
/ WH aShipmentOrder gaat NIET naar de db	,

				getTriggerHandler().handleUpdate(myOldVO, myNewVO);
/c
public class ShipmentOrderTriggerHandlerImpl extends AbstractTriggerHandlerImpl implements ShipmentOrderTriggerHandler {
	public void handleUpdate(ShipmentOrderVO anOld, ShipmentOrderVO aNew) {
/ NIETS	, 

/t
				if (propagateChange) {
false
/ NEE
/////////////////////////////////
/ Dus NIET	,
					MpoBeanFactory.getBean(ServiceActionService.class).handleShipmentOrderChange(myOldVO, myNewVO);
					MpoBeanFactory.getBean(ConsignmentService.class).handleShipmentOrderChange(myNewVO, myOldVO);
					triggerEventHandler(myOldVO, myNewVO, anEventContext);
/ Einde NIET

/t
			updateShipmentOrder(myNewShipmentOrder, false);
/ D
	public void handleServiceActionChange(ServiceActionVO aNewServiceActionVO, ServiceActionVO aOldServiceActionVO) {
/ D

	public void handleConsignmentDateChange(ConsignmentVO myNewConsignmentVO, boolean replan, boolean propagate) {
				shipmentOrderService.handleServiceActionChange(myNew, myOld);
/ D
				if (replan) {
					replan(myNew);
/s
public class ServiceActionPlanningServiceImpl implements ServiceActionPlanningService {
	public void plan(ServiceActionVO aServiceAction, TMSEventContext aContext) {
					ServiceActionTemplate myTemplate = myPeerServiceAction.getServiceActionTemplate();
					serviceOrderDao.getCurrentSession().update(myTemplate);
serviceActionTemplate OEGEMA_DELIVERY (systemId:26632009)
/ Na session.update is de proxy resolved	,
/ Lees boek(409) .update reattaches	,

/ Doet NIETS	,

/t
	public void handleConsignmentDateChange(ConsignmentVO myNewConsignmentVO, boolean replan, boolean propagate) {
					replan(myNew);
/ D

				if (propagate) {
/ NEE

/t
public class ConsignmentServiceImpl implements ConsignmentService {
	private void updateConsignmentAfterServiceOrderChange(ConsignmentVO anOld, ConsignmentVO aConsignment) throws ConsignmentException {
				serviceActionService.handleConsignmentDateChange(aConsignment, replan);
/ D
			triggerEventHandler(anOld, aConsignment, true, new TMSEventContext());
/s
public class ConsignmentServiceImpl implements ConsignmentService {
	private void triggerEventHandler(ConsignmentVO anOldVO, ConsignmentVO aNewVO, boolean anIsInitiatedByServiceOrderChange, TMSEventContext anEventContext)
			eventHandlerService.handleEvent(myEvent);
/s
public class EventHandlerServiceImpl implements EventHandlerService {
	public void handleEvent(Event anEvent) throws ChangeManagementException {
			listenerList.fireEvent(anEvent);
theEventType	"consignment.updated" (id=22779)	

theListenerList	ArrayList<E>  (id=22799)	

com.mpobjects.omscarcon.model.eventhandler.util.TMSCarConServiceOrderEventListener
com.mpobjects.event.service.DeferredEventServiceImpl@3678b4be
/ TODO
com.mpobjects.event.event.model.util.EventEventListener
com.mpobjects.oms.ratecalc.model.eventhandler.util.AllocationEventListener
com.mpobjects.capabletopromise.model.eventhandler.util.CapableToPromiseEventListener
com.mpobjects.emailnot.notification.model.EmailReportEventListener
com.mpobjects.invoice.model.service.InvoiceServiceOrderEventHandler@6909baec
/ TODO
com.mpobjects.oms.ratecalc.model.eventhandler.util.RateCalcEventListener]

/de laatste	,
public class RateCalcEventListener extends AbstractEventListener {
	public void handleEvent(Event anEvent) throws AbstractException {
				recalcServiceOrderCost(anEvent);
anEvent	ConsignmentEvent  (id=22772)	
	theEventType	"consignment.updated" (id=22779)	
	theNewVO	ConsignmentVO  (id=21744)	
		theOrderStatusVO	OrderStatusVO  (id=22112)	
			code	"1450" (id=22115)	
			description	"PLANNED" (id=22116)	
	theOldVO	ConsignmentVO  (id=22763)	
		theOrderStatusVO	OrderStatusVO_$$_javassist_120  (id=21753)	
			handler	JavassistLazyInitializer  (id=23063)	
				target	OrderStatusVO  (id=23070)	
					code	"8000" (id=23071)	
					description	"STARTED" (id=23072)	
					theType	"STARTED" (id=23120)	

/s
public class RateCalcEventListener extends AbstractEventListener {
	private void recalcServiceOrderCost(Event anEvent) throws AbstractException {
		if (myType.equals(ConsignmentEvent.UPDATED) || myType.equals(ConsignmentEvent.CREATED)) {
/ JA
			ConsignmentVO myNewVO = ((ConsignmentEvent) anEvent).getNewConsignmentVO();
			if (myNewVO.getServiceOrderVO() != null) {
				ServiceOrderType myServiceOrderType = myNewVO.getServiceOrderVO().getServiceOrderType();
					myOrderType = myNewVO.getServiceOrderVO().getServiceOrderType().getCode();
"DELIVERY"
					ServiceOrderVO myOrderVO = getServiceOrderBAO().getServiceOrder(myNewVO.getServiceOrderVO().getSystemId());
					recalculate(myOrderVO, RateType.RATE_TYPE_SERVICE_ORDER_COST, anEvent.getEventContext());
/s
public class RateCalcEventListener extends AbstractEventListener {
	private void recalculate(ServiceOrderVO anOrder, String aRateType, TMSEventContext anEventContext) throws AbstractException {
aRateType	"service_order_cost" (id=22927)	
...
		if (doRecalculate) {
/ JA
			boolean calculateServiceOrderCostsImmediately = Boolean.parseBoolean(ApplicationPropertyManager.getInstance().getModuleProperty("ratecalc", "serviceorder.calculaterightafterplanning", "false"));
true
			if (calculateServiceOrderCostsImmediately) {
				CalculationService myService = RateCalculationUtil.getService();
com.mpobjects.oms.ratecalc.model.service.CalculationServiceImpl@458d4db3
				myService.recalculate(myOrder, RateType.RATE_TYPE_SERVICE_ORDER_COST, anEventContext);

/ Intermezzo

$ vi ratecalc-service.sb.xml

	<bean id="com.mpobjects.oms.ratecalc.model.service.CalculationService" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.ratecalc.model.service.CalculationServiceImpl">
				<property name="rateAgreementDao" ref="com.mpobjects.oms.ratecalc.model.rateagreement.dao.RateAgreementDAO" />
				<property name="shipmentOrderDao" ref="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDao" />
				<property name="serviceOrderDao" ref="com.mpobjects.oms.dao.ServiceOrderDao" />
			</bean>
		</property>
	</bean>

/ Einde Intermezzo

/s
public class CalculationServiceImpl implements CalculationService {
	public void recalculate(LogisticsOrderVO anOrder, String aRateType, TMSEventContext anEventContext) throws AbstractException {
			RateAgreementVO mySelectedRateAgreement = getFirstMatchingRateAgreement(anOrder, aRateType);
/ anOrder=ServiceOrder	,
/ aRateType="service_order_cost"
/c
public class CalculationServiceImpl implements CalculationService {
	private RateAgreementVO getFirstMatchingRateAgreement(LogisticsOrderVO aLogisticsOrder, String aRateType) {
	// In case of a service order, the executed by party is often determining the rate agreement
	myKey = "SO-" + aLogisticsOrder.getSystemId() + "-" + EntityUtil.getSystemId(((ServiceOrderVO) aLogisticsOrder).getExecutedByPartyVO());
"((ServiceOrderV...utedByPartyVO()"	 (pending)	
	address	"Pascalstraat 32" (id=27808)	
	city	"Dedemsvaart" (id=27810)	
	emailAddress	"info@oegematransport.nl" (id=27819)	
	faxNumber	"+31 523 612028" (id=27820)	
	name	"Oegema Transport Dedemsvaart B.V." (id=27822)	
	partyId	"OEGEMA" (id=27825)	
	postalCode	"7701 SE" (id=27829)	
myKey	"SO-26632537-26631670" (id=27791)	
/ = seo-<seo system_id>-<carrier system_id>

/ Intermezzo

mpo=> select*from party\g

            |                |              |          |            |            |            |            |            |     
                         |                 |           |           |          |                   |                0 | 
  26631670 |          0 | OEGEMA            |            26631667 |                  4000 | Oegema Transport Dedemsvaart B.V. 
|       | Pascalstraat 32 |          | Dedemsvaart | 7701 SE |             4153 |              | info@oegematransport.nl | +31
 523 612028 | +31 523 612039 |              |          |            |            |            |            |            |     
                         |                 |           |           |          |                   |                0 | Aaaaa
(9 rows)

/ Einde Intermezzo

				Integer myInt = (Integer) matching_cache.getObject(myKey);
value	26631869	

/ Intermezzo


mpo=> select*from rate_agreement\g
 system_id |  name  | description | organization_systemid | unit_systemid | is_deleted |     rate_type      | is_quotation | i
s_template 
-----------+--------+-------------+-----------------------+---------------+------------+--------------------+--------------+--
-----------
...
  26631869 | OEGEMA |             |                  4000 |       1000072 |          0 | service_order_cost |            0 |  
         0
(2 rows)

/ Einde Intermezzo

					myEducatedGuess = rateAgreementDao.getBySystemId(myInt);
myEducatedGuess	RateAgreementVO  (id=28329)	
					if (myEducatedGuess.getRateType().equals(aRateType) && myEducatedGuess.matches(myContext) && !myEducatedGuess.isDeleted()) {
/s
public class RateAgreementVO extends ValueObject implements SoftDeletable {
public boolean matches(JXPathContext aContext) throws RateException {
		Collection<RAgreementSelCriterion> myRagreementSelCriteriumList = getRateAgreementSelCriterionList();

[theSystemId: 26631870
RateAgreementSystemid: 26631869
Unit: null
ValueFrom: HAAL-ZW
ValueTo: null
MatchType: SystemId [3800001], Name [REGEX]
OrderDetail: SystemId: 554184, Name :ORGANIZATION_ID, PathOrClass :./organizationVO/code
, 

theSystemId: 26631871
RateAgreementSystemid: 26631869
Unit: null
ValueFrom: OEGEMA
ValueTo: null
MatchType: SystemId [3800001], Name [REGEX]
OrderDetail: SystemId: 4200001, Name :CARRIER, PathOrClass :./executedByPartyVO/partyId
, 

theSystemId: 26631872
RateAgreementSystemid: 26631869
Unit: null
ValueFrom: NL
ValueTo: null
MatchType: SystemId [3800001], Name [REGEX]
OrderDetail: SystemId: 4200003, Name :FROM COUNTRY, PathOrClass :./fromPartyVO/countryVO/code
, 

theSystemId: 26631873
RateAgreementSystemid: 26631869
Unit: null
ValueFrom: BE|NL|DE
ValueTo: null
MatchType: SystemId [3800001], Name [REGEX]
OrderDetail: SystemId: 4200006, Name :TO COUNTRY, PathOrClass :./toPartyVO/countryVO/code

]

/ Bij de laatste bijv, moet in de so de ./toPartyVO/countryVO/code =="BE|NL|DE"	, dat zien we in	,

/s
	public boolean matches(JXPathContext aContext) throws RateException {
		Collection<RAgreementSelCriterion> myRagreementSelCriteriumList = getRateAgreementSelCriterionList();
		for (RAgreementSelCriterion myRagreementSelCriteriumVO : myRagreementSelCriteriumList) {
			if (!myRagreementSelCriteriumVO.matches(aContext)) {
/ NEE
/ want	,
myRagreementSelCriteriumVO
/ =
theSystemId: 26631870
RateAgreementSystemid: 26631869
Unit: null
ValueFrom: HAAL-ZW
ValueTo: null
MatchType: SystemId [3800001], Name [REGEX]
OrderDetail: SystemId: 554184, Name :ORGANIZATION_ID, PathOrClass :./organizationVO/code

/ zo allemaal	, 
	return true;

/t
	private RateAgreementVO getFirstMatchingRateAgreement(LogisticsOrderVO aLogisticsOrder, String aRateType) {
					if (myEducatedGuess.getRateType().equals(aRateType) && myEducatedGuess.matches(myContext) && !myEducatedGuess.isDeleted()) {
/ JA
						return myEducatedGuess;

/ Intermezzo

$ vi RateAgreementVO.hbm.xml

<hibernate-mapping>
	<class name="com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO" lazy="false" table="RATE_AGREEMENT">
...

$ vi ratecalc-dao.sb.xml

	<bean id="com.mpobjects.oms.ratecalc.model.rateagreement.dao.RateAgreementDAO" parent="HibernateDAOTemplate"
		class="com.mpobjects.oms.ratecalc.model.rateagreement.dao.RateAgreementHibernateDAOImpl" />

$ vi ratecalc-service.sb.xml

<bean id="com.mpobjects.oms.ratecalc.model.service.CalculationService" parent="transactionRequiredTemplate">
		<property name="target">
			<bean class="com.mpobjects.oms.ratecalc.model.service.CalculationServiceImpl">
				<property name="rateAgreementDao" ref="com.mpobjects.oms.ratecalc.model.rateagreement.dao.RateAgreementDAO" />
				<property name="shipmentOrderDao" ref="com.mpobjects.oms.dao.shipmentorder.ShipmentOrderDao" />
				<property name="serviceOrderDao" ref="com.mpobjects.oms.dao.ServiceOrderDao" />
			</bean>
		</property>
	</bean>

/ TODO

/ Einde Intermezzo

/t
	public void recalculate(LogisticsOrderVO anOrder, String aRateType, TMSEventContext anEventContext) throws AbstractException {
			RateAgreementVO mySelectedRateAgreement = getFirstMatchingRateAgreement(anOrder, aRateType);
/ D
			// Now calculate the rates
			RateCalculationVO myRateCalculationVO = new RateCalculationVO();
			if (anOrder instanceof ServiceOrderVO) {
				myRateCalculationVO.setServiceOrder((ServiceOrderVO) anOrder);
			if (mySelectedRateAgreement != null) {
				myRateCalculationVO.setRateAgreementVO(mySelectedRateAgreement);

					if (!myRateCalculationVO.rateCalculationRequired()) {
/s

/ NEE
/ want	,
/c
public class RateCalculationVO {
	public boolean rateCalculationRequired() {
		if (serviceOrder != null && !StringUtils.isEmpty(serviceOrder.getRatecalcMd5Hash())) {
/ JA
serviceOrder.ratecalcMd5Hash	"7CA5BC8EB998E45F92D4999A78F4E87EF9895872" (id=24372)	

			String myHash = RateCalcHashCalculator.calculate(rateAgreement, getOrder());
/ s
public class RateCalcHashCalculator {
	public static String calculate(RateAgreementVO aRateAgreement, LogisticsOrderVO anOrder) {
			Hibernate.initialize(anOrder.getEntityDetails());
{}
			Collection<Object> myValues = aRateAgreement.getOrderDetailValues(anOrder);
/ alvast antwoord,	
[1.0, 2014-05-16 16:00:00.0, , DE, 0.40, DE, DE, 20095, STANDARD, , , 0.40, , DE, 2014-05-16 17:00:00.0]
/ Want
/s
public class RateAgreementVO extends ValueObject implements SoftDeletable {
	public Collection<Object> getOrderDetailValues(Object anOrderVO) throws RateException {
/ anOrderVO=de so	,
this	RateAgreementVO  (id=17676)	
/ =
theSystemId: 26631869Name :OEGEMA
Description :null
Organization :SystemId:4000	Id:HAAL-ZW	Description:HAAL
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
RateType :service_order_cost

anOrderVO	ServiceOrderVO  (id=17679)	
/=
N0000265/26632537

		Collection<RateParameterVO> myRateParameterList = getRateParameterList();
[theSystemId: 26631993Name :RP_RELEASE_DATE
Description :null
, theSystemId: 26632353Name :RT_ADDITIONAL_ADDRESS_OUTPUT
Description :null
, theSystemId: 26631989Name :RP_START_DATE_AFTER
Description :null
, theSystemId: 26631943Name :RT_NL-BE_OUTPUT
Description :null
, theSystemId: 26631980Name :LT_CARRIER_OUTPUT
Description :null
, theSystemId: 26631964Name :RT_NL_DE_OUTPUT
Description :null
, theSystemId: 26631919Name :RP_FUEL
Description :null
, theSystemId: 26631887Name :RP_FREIGHT
Description :null
, theSystemId: 26632003Name :SERVICE
Description :null
, theSystemId: 26631929Name :RT_NL-SPEC_OUTPUT
Description :null
, theSystemId: 26631884Name :RP_LDM_WEIGHT
Description :null
, theSystemId: 26631912Name :RT_NL_OUTPUT
Description :null
, theSystemId: 26631983Name :RP_START_DATE_BEFORE
Description :null
]
/ LIST
/ TODO (Waar vandaan?)

/ Intermezzo

$ vi RateAgreementVO.standard.hbm.xml

<hibernate-mapping>
	<class name="com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO" lazy="false" table="RATE_AGREEMENT">
...
	<set name="rateParameterList" inverse="true" cascade="delete-orphan" table="RATE_PARAMETER" >
			<cache usage="read-write" />
			<key column="RATE_AGREEMENT_SYSTEMID"  not-null="true" ></key>
			<one-to-many class="com.mpobjects.oms.ratecalc.model.rateparameter.vo.RateParameterVO" />
		</set>

$ vi RateParameter.standard.hbm.xml

<hibernate-mapping>
	<class name="com.mpobjects.oms.ratecalc.model.rateparameter.vo.RateParameterVO" table="RATE_PARAMETER">
		<many-to-one name="rateAgreementVO"
			class="com.mpobjects.oms.ratecalc.model.rateagreement.vo.RateAgreementVO"
			column="RATE_AGREEMENT_SYSTEMID"
			cascade="save-update"
			not-null="true" />
		<many-to-one name="outputfromFunctionVO" 
			class="com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO"
			column="OUTPUTFROM_FUNCTION_SYSTEMID"
			cascade="save-update,delete"
			unique="true"
			not-null="true" />

$ vi RateFunction.standard.hbm.xml

<hibernate-mapping>
	<class name="com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO" table="RATE_FUNCTION">
		<cache usage="read-write"/>
		<id name="systemId" type="integer">
			<column name="SYSTEM_ID" />
			<generator class="com.mpobjects.core.model.HibernateIdGenerator" />
		</id>
		<many-to-one name="functionDefinitionVO" class="com.mpobjects.oms.ratecalc.model.functiondefinition.vo.FunctionDefinitionVO" column="FUNCTION_DEFINITION_SYSTEMID" />
		<property name="userDefined" column="IS_USER_DEFINED" />
		<property name="userFuncDef" column="USER_FUNC_DEF" />
		<one-to-one name="rateParameter" class="com.mpobjects.oms.ratecalc.model.rateparameter.vo.RateParameterVO" property-ref="outputfromFunctionVO" />
		<many-to-one name="rateTableVO" unique="true" class="com.mpobjects.oms.ratecalc.model.ratetable.vo.RateTableVO" column="RATE_TABLE_SYSTEMID"/>
		<many-to-one name="unit" class="com.mpobjects.ratecalc.entity.Unit" column="UNIT_SYSTEMID" />
		<set name="inputParameterList" cascade="all,delete-orphan" lazy="false" inverse="true">
			<cache usage="read-write"/>
			<key column="RATE_FUNC_SYSTEMID"/>
			<one-to-many class="com.mpobjects.oms.ratecalc.model.inputparameter.vo.InputParameterVO" not-found="ignore" />
		</set>
	</class>
</hibernate-mapping>
 

$ vi InputParameter.standard.hbm.xml

<hibernate-mapping package="com.mpobjects.oms.ratecalc.model.inputparameter.vo">
	<class name="InputParameterVO" table="INPUT_PARAMETER" lazy="false">
		<cache usage="read-write" />
		<id name="systemId" type="int" unsaved-value="0">
			<column name="SYSTEM_ID" />
			<generator class="com.mpobjects.core.model.HibernateIdGenerator" />
		</id>
		<many-to-one name="parameterVO"
			class="com.mpobjects.oms.ratecalc.model.rateparameter.vo.RateParameterVO"
			column="PARAMETER_SYSTEMID" not-null="false" />
		<many-to-one name="orderDetailVO"
			class="com.mpobjects.oms.ratecalc.model.orderdetail.vo.OrderDetail"
			column="ORDER_DETAIL_SYSTEMID" not-null="false" />
		<many-to-one name="funcParDefVO" 
			class="com.mpobjects.oms.ratecalc.model.funcparameterdef.vo.FuncParameterDefVO" 
			column="FUNC_PAR_DEF_SYSTEMID" />
		<many-to-one name="rateFuncVO" 
			class="com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO" 
			column="RATE_FUNC_SYSTEMID" />
		<property name="configurationValue" column="CONFIGURATION_VALUE"/>
		<property name="freeValue" column="FREE_VALUE"/>


$ vi FunctionDefinition.standard.hbm.xml

<hibernate-mapping package="com.mpobjects.oms.ratecalc.model.functiondefinition.vo">
	<class name="FunctionDefinitionVO" table="FUNCTION_DEFINITION" lazy="false">
		<cache usage="read-write" />
		<id name="systemId" type="int" unsaved-value="0">
			<column name="SYSTEM_ID" />
			<generator class="com.mpobjects.core.model.HibernateIdGenerator" />
		</id>
		<property name="name" column="NAME" />
		<property name="definition" column="DEFINITION" />
	</class>
</hibernate-mapping>

/ Voorbeeld	,

/ De fct RATE_TABLE berekent de rate par RT_NL_DE_OUTPUT, en heeft als input 3 pars	, waarvan 1 rate par	, en 2 order details	, hun system_id's zijn 26631960, 26631961, 26631962	,    

mpo=> select*from rate_parameter where  outputfrom_function_systemid=26631963\g
 system_id |      name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | seque
nce_nr | parameter_type_systemid | is_user_editable 
-----------+-----------------+-------------+------------------------------+-------------------------+---------------+------
-------+-------------------------+------------------
  26631964 | RT_NL_DE_OUTPUT |             |                     26631963 |                26631869 |             0 |      
     0 |                         |                0
(1 row)
mpo=> select*from input_parameter where  rate_func_systemid=26631963\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | o
rder_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--
---------------------+------------
  26631960 |           26631884 |                       |           26631963 |                    |                     |  
                     |           
  26631961 |                    |                       |           26631963 |                    |                     |  
             4200007 |           
  26631962 |                    |                       |           26631963 |                    |                     |  
             4200006 |           
(3 rows)

mpo=> select*from rate_function where system_id=26631963\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631963 |                      3500001 |               0 |               |            26631955 |              
(1 row)
mpo=> select*from function_definition where system_id=3500001\g
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)

mpo=> select*from rate_table where system_id= 26631955 \g
...

/we zien dat deze fct nog een extra field heeft, rate_table_systemid	, 
/ andere fcts hebben dat bijv niet	,

mpo=> select*from rate_function where system_id=26631990\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631990 |                      3500014 |               0 |               |                     |       1000536
(1 row)

mpo=> select*from function_definition where system_id=3500014\g
 system_id |                             definition                              |   name    
-----------+---------------------------------------------------------------------+-----------
   3500014 | com.mpobjects.oms.ratecalc.model.process.function.StartDateFunction | STARTDATE
(1 row)
/ De def van deze fct is in de class	,

///////////////////////////////////////////////////////////////////////////////////////
/ GIVEN RATE PARAMETER, WHAT ARE THE INPUT PARAMETERS (AND THE FUNCTION)? 

/ Met select	,
mpo=>select*from input_parameter where rate_func_systemid=(	
	select outputfrom_function_systemid from rate_parameter 
	where system_id=26631993))\g

/ of met joins	,
mpo=> select*from input_parameter i join rate_parameter r 
	on i.rate_func_systemid=r.outputfrom_function_systemid 
	where r.system_id=26631993\g 
/ OK

/ we hadden eerst ook de rate_function ertussen, maar dat hoeft niet	,

/ met select	,
mpo=>select*from input_parameter 
where rate_func_systemid=(
	select system_id from rate_function 
	where system_id=(
		select outputfrom_function_systemid from rate_parameter 
		where system_id=26631993))\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | 
order_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+-
----------------------+------------
  26631991 |           26631980 |                       |           26631990 |                    |                     | 
                      |           
  26631992 |           26631989 |                       |           26631990 |                    |                     | 
                      |           
(2 rows)

/ Met joins	,

mpo=> select*from 
	(input_parameter i join rate_function f 
			on i.rate_func_systemid=f.system_id) 
	join rate_parameter r 
		on r.outputfrom_function_systemid=f.system_id 
	where r.system_id= 26631993\g


/ Einde  GIVEN RATE PARAMETER, WHAT ARE THE INPUT PARAMETERS (AND THE FUNCTION)? 



mpo=> select*from rate_parameter where system_id=26631993\g
 system_id |      name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | seque
nce_nr | parameter_type_systemid | is_user_editable 
-----------+-----------------+-------------+------------------------------+-------------------------+---------------+------
-------+-------------------------+------------------
  26631993 | RP_RELEASE_DATE |             |                     26631990 |                26631869 |             0 |      
     0 |                         |                0
(1 row)

/ Intermezzo

/ Kan het ook op name? 
/ Nee, want er zijn 2 rate_agreements	, 

mpo=> select*from rate_parameter where name='RP_RELEASE_DATE'\g
 system_id |      name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | seque
nce_nr | parameter_type_systemid | is_user_editable 
-----------+-----------------+-------------+------------------------------+-------------------------+---------------+------
-------+-------------------------+------------------
  26631774 | RP_RELEASE_DATE |             |                     26631772 |                26631689 |             0 |      
     0 |                         |                0
  26631993 | RP_RELEASE_DATE |             |                     26631990 |                26631869 |             0 |      
     0 |                         |                0
(2 rows)

/ we kunnen	m

mpo=> select*from rate_parameter p join rate_agreement a on p.rate_agreement_systemid=a.system_id where p.name='RP_RELEASE_DATE' and a.name='OEGEMA'\g
 system_id |      name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence_nr | parameter_type_systemid | is_user_editable | system_id |  name  | description | organization_systemid | unit_systemid | is_deleted |     rate_type      | is_quotation | is_template 
-----------+-----------------+-------------+------------------------------+-------------------------+---------------+------
-------+-------------------------+------------------+-----------+--------+-------------+-----------------------+-----------
----+------------+--------------------+--------------+-------------
  26631993 | RP_RELEASE_DATE |             |                     26631990 |                26631869 |             0 |      
     0 |                         |                0 |  26631869 | OEGEMA |             |                  4000 |       1000
072 |          0 | service_order_cost |            0 |           0
(1 row)

/ Einde Intermezzo

/ Intermezzo

/ RELATION RATE_FUNCTION : RATE_PARAMETER IS 1:1

mpo=> select*from rate_function\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
  26631981 |                      3500014 |               0 |               |                     |       1000536
  26631986 |                      3500014 |               0 |               |                     |       1000536
  26631990 |                      3500014 |               0 |               |                     |       1000536


mpo=> select*from function_definition\g
 system_id |                                  definition                                   |        name         
   3500014 | com.mpobjects.oms.ratecalc.model.process.function.StartDateFunction           | STARTDATE

/ 13	.

mpo=> select*from input_parameter where rate_func_systemid=26631981\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value |
 order_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+
-----------------------+------------
  26631984 |                    |                       |           26631981 |                    |                     |
                       |    1.00000
  26631985 |                    |                       |           26631981 |                    |                     |
              26631801 |           
(2 rows)

mpo=> select*from order_detail  where system_id=26631801\g
system_id |                                     path_or_class                                      |      name      | un
it_systemid | parameter_type_systemid |     rate_type      
-----------+----------------------------------------------------------------------------------------+----------------+---
------------+-------------------------+--------------------
  26631801 | ./consignmentList[1]/serviceActionList[1]/shipmentOrderVO/dateSetVO/requestedEndBefore | REQ_END_BEFORE |   
    1000536 |                 3700005 | service_order_cost
(1 row)

/ 13	.

mpo=> select*from input_parameter where rate_func_systemid=26631986\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value |
 order_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+
-----------------------+------------
  26631987 |                    |                       |           26631986 |                    |                     |
                       |    1.00000
  26631988 |                    |                       |           26631986 |                    |                     |
              26631800 |           
(2 rows)

mpo=> select*from order_detail  where system_id=26631800\g
 system_id |                                     path_or_class                                     |     name      | unit
_systemid | parameter_type_systemid |     rate_type      
-----------+---------------------------------------------------------------------------------------+---------------+-----
----------+-------------------------+--------------------
  26631800 | ./consignmentList[1]/serviceActionList[1]/shipmentOrderVO/dateSetVO/requestedEndAfter | REQ_END_AFTER |     
  1000536 |                 3700005 | service_order_cost
(1 row)


/ Als we in de cases hierboven kijken , dan is de rate_function table niet nodig	, 
/ De rate_function table is er omdat er ook zijn (al had je rate_table_systemid ook in de rate_parameter table kunnen set	), 
/ TODO

mpo=> select*from rate_function\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631696 |                      3500001 |               0 |               |            26631691 |              
  26631703 |                      3500001 |               0 |               |            26631698 |              
  26631723 |                      3500001 |               0 |               |            26631718 |              

/ Einde Intermezzo







/ Einde Intermezzo

/ Intermezzo

/ RATE PARAMETER FUNCTIONS

Configuration, Finance, Rate calculation, Rate agreements(admin)

/ we zien er 2	, voor 2 vervoerders	, dat is altijd	, per service order 	,
/ een rate agreement is met een vervoerder	, 

/bij rate parameters	,
rp_	: rate par	,
rt_	: rate table	,
lt_ 	: lead time	,
_output	: een table 

/ we click tab rate parameters	,
	RP_RELEASE_DATE	
	RP_START_DATE_AFTER	
	RP_FUEL	
	RP_FREIGHT	
	SERVICE	
	RP_LDM_WEIGHT	
	RP_START_DATE_BEFORE	

/we click op RP_RELEASE_DATE		,

Function	  	: STARTDATE
Rate Parameter Name	: RP_RELEASE_DATE  
Description	   	: ... 
Unit	 		: ...

/ Dus hij gaat met de STARTDATE fct de RP_RELEASE_DATE uitrekenen	,

Free value parameters	: NIETS
Parameters		: LT_CARRIER_OUTPUT
			 RP_START_DATE_AFTER

/ LT_CARRIER_OUTPUT is een table, een fct dus met 2 pars	,
/ RP_START_DATE_AFTER is ook het result  van een fct call	,

/ Ga terug naar tab "Rate parameters" en kies nu niet RP_RELEASE_DATE	, maar RP_START_DATE_AFTER	,

function: STARTDATE
Rate par name: PR_START_DATE_AFTER

Free value par	: 1
Parameters	: GEEN
Service order details	: REQ_END_AFTER

/ Service order details is geen fct	, komt van de so	, 

/ STARTDATE is een fct	, die terug rekent vanaf een date	, 
/ bij pr_start_date_after doet hij 1 af van de req end after, de start van de req delivery window	, 1 is dus voor deze so bij deze  vervoerder de wat normaal de lead time heet, het is altijd 1 
/ bij pr_release_date (moment waarop e-mail wordt verstuurd naar de vervoerder van : ga dan en dan het vervoer beginnen)	,  als het kleine ldm  betreft	, heeft de vervoerder meer tijd om te plannen, bij grote ldm is het maar 1 dag, omdat het makkelijk is: een vrachtwagen	, ze noeem dit aantal dagen lt_carrier_output: al heet dit normaal nooit lead time	,

    | --------------------- | ---------------------- |
pr_release_date		pr_start_date_after	req_end_after	

/ HIER HIER

 
mpo=> select*from rate_parameter where system_id=26631993\g
 system_id |      name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequence
_nr | parameter_type_systemid | is_user_editable 
-----------+-----------------+-------------+------------------------------+-------------------------+---------------+---------
----+-------------------------+------------------
  26631993 | RP_RELEASE_DATE |             |                     26631990 |                26631869 |             0 |         
  0 |                         |                0

mpo=> select*from rate_agreement where system_id=26631869\g
 system_id |  name  | description | organization_systemid | unit_systemid | is_deleted |     rate_type      | is_quotation | i
s_template 
-----------+--------+-------------+-----------------------+---------------+------------+--------------------+--------------+--
-----------
  26631869 | OEGEMA |             |                  4000 |       1000072 |          0 | service_order_cost |            0 |  
         0

mpo=> select*from rate_function where system_id=26631990\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631990 |                      3500014 |               0 |               |                     |       1000536
(1 row)

mpo=> select*from function_definition where system_id=3500014\g
 system_id |                             definition                              |   name    
-----------+---------------------------------------------------------------------+-----------
   3500014 | com.mpobjects.oms.ratecalc.model.process.function.StartDateFunction | STARTDATE
(1 row)

mpo=> select*from input_parameter where system_id=26631992 or system_id=26631991\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | orde
r_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+-----
------------------+------------
  26631991 |           26631980 |                       |           26631990 |                    |                     |     
                  |           
  26631992 |           26631989 |                       |           26631990 |                    |                     |     
                  |           

mpo=> select*from rate_parameter where system_id=26631980 or system_id=26631989\g
 system_id |        name         | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | seque
nce_nr | parameter_type_systemid | is_user_editable 
-----------+---------------------+-------------+------------------------------+-------------------------+---------------+------
-------+-------------------------+------------------
  26631980 | LT_CARRIER_OUTPUT   |             |                     26631979 |                26631869 |             0 |      
     0 |                         |                0
  26631989 | RP_START_DATE_AFTER |             |                     26631986 |                26631869 |             0 |      
     0 |                         |                0
(2 rows)




/ Einde Intermezzo

		for (RateParameterVO myParameter : myRateParameterList) {
			if (myParameter.getOutputfromFunctionVO() != null) {
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631990
/ myParameter
/ =
theSystemId: 26631993Name :RP_RELEASE_DATE
Description :null


/ Intermezzo

theOutputfromFunction	RateFunctionVO_$$_javassist_58  (id=17927)	
			systemId	26631990	
			theFunctionDefinition	FunctionDefinitionVO  (id=17955)	
/=
theSystemId: 3500014
Definition :com.mpobjects.oms.ratecalc.model.process.function.StartDateFunction,Name :STARTDATE
			theRateParameter	RateParameterVO  (id=17909)	
/=
theSystemId: 26631993Name :RP_RELEASE_DATE
Description :null

/ Einde Intermezzo
					myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
/s
public class RateFunctionVO extends ValueObject {
	synchronized public Set<InputParameterVO> getInputParameterList() {
this	RateFunctionVO  (id=17949)	
/=
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631990

	theFunctionDefinition	FunctionDefinitionVO  (id=17955)	
/=
theSystemId: 3500014
Definition :com.mpobjects.oms.ratecalc.model.process.function.StartDateFunction,Name :STARTDATE

	theInputParameterList	PersistentSet  (id=17956)	
/=
[SystemId: 26631992, SystemId: 26631991]

	theRateParameter	RateParameterVO  (id=17909)	
/=
theSystemId: 26631993Name :RP_RELEASE_DATE
Description :null

		return theInputParameterList;


/ t
	public Collection<Object> getOrderDetailValues(Object anOrderVO) throws RateException {

		for (RateParameterVO myParameter : myRateParameterList) {
/ result
			if (myParameter.getOutputfromFunctionVO() != null) {
				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
/ D
				for (InputParameterVO element : myInputParameterList) {
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
/ volgende input
/ element
SystemId: 26631992
	theParameter
theSystemId: 26631989Name :RP_START_DATE_AFTER
Description :null
	theRateFunc
bjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631990
/ element is in input_parameter	, de rate_parameter is de echte arg, 989, de rp_start_date_after	,
	theOrderDetail
null

/ volgende input	,
				for (InputParameterVO element : myInputParameterList) {
/ element
SystemId: 26631991
	theParameter
theSystemId: 26631980Name :LT_CARRIER_OUTPUT
Description :null
	theRateFunc
bjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631990
/ element is in input_parameter	, de rate_parameter is de echte arg, 989, de rp_start_date_after	,
	theOrderDetail
null

/ volgende result
		for (RateParameterVO myParameter : myRateParameterList) {

theSystemId: 26632353Name :RT_ADDITIONAL_ADDRESS_OUTPUT
Description :null

/ Intermezzo

mpo=> select*from rate_parameter where system_id=26632353\g
 system_id |             name             | description | outputfrom_function_systemid | rate_agreement_systemid | is_persisten
t | sequence_nr | parameter_type_systemid | is_user_editable 
-----------+------------------------------+-------------+------------------------------+-------------------------+-------------
--+-------------+-------------------------+------------------
  26632353 | RT_ADDITIONAL_ADDRESS_OUTPUT |             |                     26632352 |                26631869 |             
0 |           0 |                         |                0
(1 row)

mpo=> select*from rate_function where system_id=26632352\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26632352 |                      3500001 |               0 |               |            26632349 |              
(1 row)

mpo=> select*from function_definition where system_id=3500001\g
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)

/ welke args heeft een fct	? 
/ We kunen het in Java zien, maar niet in de db	, is er geen tbl ?
/ TODO
/ we zien in Java 				
	myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
/ de input par list (input_parameter's) zien we in de rate_function	,
/ we zijn in de achterste fct	,

this	RateFunctionVO  (id=20825)	
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26632352
/
theFunctionDefinition	FunctionDefinitionVO  (id=20826)	
theSystemId: 3500001
Definition :com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction,Name :RATE TABLE
/
theInputParameterList	PersistentSet  (id=20827)	
[SystemId: 26632351]

mpo=> select*from input_parameter where system_id=26632351\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order
_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+------
-----------------+------------
  26632351 |                    |                       |           26632352 |                    |                     |      
        26631840 |           
(1 row)
/ Het arg is nu geen parameter_systemid, het is geen rate par	,
/ Maar het arg komt van de so,

mpo=> select*from order_detail where system_id=26631840\g
 system_id |      path_or_class       |        name        | unit_systemid | parameter_type_systemid |     rate_type      
-----------+--------------------------+--------------------+---------------+-------------------------+--------------------
  26631840 | count(./consignmentList) | NR_OF_CONSIGNMENTS |               |                 3700002 | service_order_cost
(1 row)

/ Einde Intermezzo

		for (RateParameterVO myParameter : myRateParameterList) {
/ Hier waren we	,
				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
				for (InputParameterVO element : myInputParameterList) {
/ element = InputParameterVO, SystemId: 26632351
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
theOrderDetail	OrderDetail  (id=20867)	
SystemId: 26631840, Name :NR_OF_CONSIGNMENTS, PathOrClass :count(./consignmentList)

/ een input par heeft een order detail (die null kan zijn)	,

/ t
		Collection<Object> myRet = new ArrayList<Object>();
...
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
					if (myOrderDetailVO != null) {
						myRet.add(myOrderDetailVO.retrieveValueFromOrder(myContext));
/s
public class OrderDetail extends ValueObject implements Comparable<OrderDetail> {
	public Object retrieveValueFromOrder(JXPathContext aContext) {
this	OrderDetail  (id=20867)	
SystemId: 26631840, Name :NR_OF_CONSIGNMENTS, PathOrClass :count(./consignmentList)

		String myPathOrClass = getPathOrClass();
getPathOrClass()=count(./consignmentList)

		Object myValue = aContext.getValue(myPathOrClass);
myValue	Double  (id=20897)	
1.0

/t
	public Collection<Object> getOrderDetailValues(Object anOrderVO) throws RateException {
		Collection<Object> myRet = new ArrayList<Object>();
		for (RateParameterVO myParameter : myRateParameterList) {
				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
				for (InputParameterVO element : myInputParameterList) {
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
						myRet.add(myOrderDetailVO.retrieveValueFromOrder(myContext));
/ myRet
[1.0]

/ volgende result	,
		for (RateParameterVO myParameter : myRateParameterList) {
theSystemId: 26631989Name :RP_START_DATE_AFTER
Description :null
				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
[SystemId: 26631988, SystemId: 26631987]

myParameter.getOutputfromFunctionVO()
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631986


/  Intermezzo

mpo=> select*from rate_function where system_id=26631986\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631986 |                      3500014 |               0 |               |                     |       1000536
(1 row)

mpo=> select*from function_definition where system_id=3500014\g
 system_id |                             definition                              |   name    
-----------+---------------------------------------------------------------------+-----------
   3500014 | com.mpobjects.oms.ratecalc.model.process.function.StartDateFunction | STARTDATE

mpo=> select*from input_parameter where system_id=26631988 or system_id=26631987\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order
_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+------
-----------------+------------
  26631987 |                    |                       |           26631986 |                    |                     |      
                 |    1.00000
  26631988 |                    |                       |           26631986 |                    |                     |      
        26631800 |     

mpo=> select*from order_detail  where system_id=26631800\g
 system_id |                                     path_or_class                                     |     name      | unit_syste
mid | parameter_type_systemid |     rate_type      
-----------+---------------------------------------------------------------------------------------+---------------+-----------
----+-------------------------+--------------------
  26631800 | ./consignmentList[1]/serviceActionList[1]/shipmentOrderVO/dateSetVO/requestedEndAfter | REQ_END_AFTER |       1000
536 |                 3700005 | service_order_cost
(1 row)

/ Einde Intermezzo

			for (InputParameterVO element : myInputParameterList) {
/ element=SystemId: 26631988
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
					if (myOrderDetailVO != null) {
						myRet.add(myOrderDetailVO.retrieveValueFromOrder(myContext));
/s
	public Object retrieveValueFromOrder(JXPathContext aContext) {
		String myPathOrClass = getPathOrClass();
./consignmentList[1]/serviceActionList[1]/shipmentOrderVO/dateSetVO/requestedEndAfter
		Object myValue = aContext.getValue(myPathOrClass);
		return myValue;

/t
myRet
[1.0, 2014-05-16 16:00:00.0]

/ volgende input	,
				for (InputParameterVO element : myInputParameterList) {

mpo=> select*from input_parameter where system_id=26631988 or system_id=26631987\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | order
_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+------
-----------------+------------
  26631987 |                    |                       |           26631986 |                    |                     |      
                 |    1.00000

/ heeft geen order_detail, is niet uit de so	, maar een constante	,

/ volgende result	,
	for (RateParameterVO myParameter : myRateParameterList) {
			if (myParameter.getOutputfromFunctionVO() != null) {
				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();

myParameter	RateParameterVO  (id=21052)	
theSystemId: 26631943Name :RT_NL-BE_OUTPUT

/ myParameter.getOutputfromFunctionVO()=
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631942
/ myParameter.getOutputfromFunctionVO().getInputParameterList() 
[SystemId: 26631939, SystemId: 26631940, SystemId: 26631941]

/ Intermezzo

mpo=> select*from rate_parameter where system_id=26631943\g 
system_id |      name       | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | seque
nce_nr | parameter_type_systemid | is_user_editable 
-----------+-----------------+-------------+------------------------------+-------------------------+---------------+------
-------+-------------------------+------------------
  26631943 | RT_NL-BE_OUTPUT |             |                     26631942 |                26631869 |             0 |      
     0 |                         |                0
(1 row)

mpo=> select*from rate_function where system_id=26631942\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631942 |                      3500001 |               0 |               |            26631935 |              
(1 row)

mpo=> select*from function_definition where system_id=3500001\g
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)

mpo=> select*from input_parameter where system_id in (26631939,26631940, 26631941)\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | o
rder_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--
---------------------+------------
  26631939 |           26631884 |                       |           26631942 |                    |                     |  
                     |           
  26631940 |                    |                       |           26631942 |                    |                     |  
             4200010 |           
  26631941 |                    |                       |           26631942 |                    |                     |  
             4200006 |           
(3 rows)

mpo=> select*from rate_parameter where system_id=26631884\g
 system_id |     name      | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequenc
e_nr | parameter_type_systemid | is_user_editable 
-----------+---------------+-------------+------------------------------+-------------------------+---------------+--------
-----+-------------------------+------------------
  26631884 | RP_LDM_WEIGHT |             |                     26631881 |                26631869 |             0 |        
   0 |                         |                0
(1 row)
mpo=> select*from order_detail  where system_id in (4200010,4200006)\g
 system_id |       path_or_class        |     name      | unit_systemid | parameter_type_systemid |     rate_type      
-----------+----------------------------+---------------+---------------+-------------------------+--------------------
   4200010 | ./fromPartyVO/partyId      | FROM PARTY ID |               |                 3700001 | service_order_cost
   4200006 | ./toPartyVO/countryVO/code | TO COUNTRY    |               |                 3700001 | service_order_cost
(2 rows)

/ RP_LDM_WEIGTH is een rate par,	 is zelf ook een result van een fct	,


=> select*from rate_function where system_id=26631881\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631881 |                      3500007 |               0 |               |                     |       1000532
(1 row)

mpo=> select*from function_definition where system_id=3500007\g
 system_id |                             definition                             |   name   
-----------+--------------------------------------------------------------------+----------
   3500007 | com.mpobjects.oms.ratecalc.model.process.function.MultiplyFunction | MULTIPLY



/ we zien in de GUI rate table RT_NL-BE	, 
/ De table heeft inderdaad 3 args	, 
payweight, bijv 1750.0	, 
from_id , OMMEN of ETTENLEUR
TO_country, BE
/ We zien in de GUI rate parameter RP_FREIGHT	, deze is result van fct "not empty", en heeft parameters RT_NL-BE_OUTPUT, ...
/ Deze RT_NL-BE_OUTPUT is ook een rate par, maar een result van een table fct	,


/ Einde Intermezzo

				for (InputParameterVO element : myInputParameterList) {
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
					if (myOrderDetailVO != null) {
						myRet.add(myOrderDetailVO.retrieveValueFromOrder(myContext));
 					}
/ 1ste	,
/  myOrderDetail: SystemId: 4200010, Name :FROM PARTY ID, PathOrClass :./fromPartyVO/partyId 	,
""
/ 2de	,
/ myOrderDetail=
null
/ 3de 
/ myOrderDetail=
SystemId: 4200006, Name :TO COUNTRY, PathOrClass :./toPartyVO/countryVO/code
"DE"

/ myRet=
[1.0, 2014-05-16 16:00:00.0, , DE]

/ volgende result	,
		for (RateParameterVO myParameter : myRateParameterList) {
/ myParameter=
theSystemId: 26631980Name :LT_CARRIER_OUTPUT

			if (myParameter.getOutputfromFunctionVO() != null) {
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631979

/ Intermezzo

mpo=> select*from rate_function where system_id=26631979\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631979 |                      3500001 |               0 |               |            26631974 |              
(1 row)

mpo=> select*from function_definition where system_id=3500001\g
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)



/ Einde Intermezzo

				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
[SystemId: 26631977, SystemId: 26631978]

=> select*from input_parameter where system_id in (26631977, 26631978)\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | o
rder_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--
---------------------+------------
  26631977 |                    |                       |           26631979 |                    |                     |  
            26631726 |           
  26631978 |                    |                       |           26631979 |                    |                     |  
             4200006 |           
(2 rows)

/ Beide args zijn uit de so	,
mpo=> select*from order_detail  where system_id in (26631726,4200006)\g
 system_id |         path_or_class          |    name    | unit_systemid | parameter_type_systemid |     rate_type      
-----------+--------------------------------+------------+---------------+-------------------------+--------------------
  26631726 | ./calculatedTotalLoadingMeters | CALC_LDM   |      26631725 |                 3700002 | service_order_cost
   4200006 | ./toPartyVO/countryVO/code     | TO COUNTRY |               |                 3700001 | service_order_cost
(2 rows)
				for (InputParameterVO element : myInputParameterList) {
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
					if (myOrderDetailVO != null) {
SystemId: 26631726, Name :CALC_LDM, PathOrClass :./calculatedTotalLoadingMeters
						myRet.add(myOrderDetailVO.retrieveValueFromOrder(myContext));
BigDecimal 0.40


SystemId: 4200006, Name :TO COUNTRY, PathOrClass :./toPartyVO/countryVO/code
"DE"

/ Nu is myRet=
[1.0, 2014-05-16 16:00:00.0, , DE, 0.40, DE]

/ 7	.

/ volgende result	,
		for (RateParameterVO myParameter : myRateParameterList) {
theSystemId: 26631964Name :RT_NL_DE_OUTPUT

			if (myParameter.getOutputfromFunctionVO() != null) {
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26631963

/ Intermezzo

mpo=> select*from rate_function where system_id= 26631963\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
-----------+------------------------------+-----------------+---------------+---------------------+---------------
  26631963 |                      3500001 |               0 |               |            26631955 |              
(1 row)
mpo=> select*from function_definition where system_id=3500001\g
 system_id |                             definition                              |    name    
-----------+---------------------------------------------------------------------+------------
   3500001 | com.mpobjects.oms.ratecalc.model.process.function.RateTableFunction | RATE TABLE
(1 row)

mpo=> select*from input_parameter where system_id in (26631962,  26631960, 26631961)\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | o
rder_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+--
---------------------+------------
  26631960 |           26631884 |                       |           26631963 |                    |                     |  
                     |           
  26631961 |                    |                       |           26631963 |                    |                     |  
             4200007 |           
  26631962 |                    |                       |           26631963 |                    |                     |  
             4200006 |           
(3 rows)

/ 1 rate par,	 en 2 uit de so	,

mpo=> select*from rate_parameter where system_id=26631884 \g
 system_id |     name      | description | outputfrom_function_systemid | rate_agreement_systemid | is_persistent | sequenc
e_nr | parameter_type_systemid | is_user_editable 
-----------+---------------+-------------+------------------------------+-------------------------+---------------+--------
-----+-------------------------+------------------
  26631884 | RP_LDM_WEIGHT |             |                     26631881 |                26631869 |             0 |        
   0 |       

mpo=> select*from order_detail  where system_id in (4200007,4200006)\g
 system_id |       path_or_class        |     name      | unit_systemid | parameter_type_systemid |     rate_type      
-----------+----------------------------+---------------+---------------+-------------------------+--------------------
   4200007 | ./toPartyVO/postalCode     | TO POSTALCODE |               |                 3700001 | service_order_cost
   4200006 | ./toPartyVO/countryVO/code | TO COUNTRY    |               |                 3700001 | service_order_cost
(2 rows)

/ Einde Intermezzo
				myInputParameterList = myParameter.getOutputfromFunctionVO().getInputParameterList();
[SystemId: 26631962, SystemId: 26631960, SystemId: 26631961]
				for (InputParameterVO element : myInputParameterList) {
					OrderDetail myOrderDetailVO = element.getOrderDetailVO();
					if (myOrderDetailVO != null) {
						myRet.add(myOrderDetailVO.retrieveValueFromOrder(myContext));
SystemId: 4200006, Name :TO COUNTRY, PathOrClass :./toPartyVO/countryVO/code
"DE"
SystemId: 4200007, Name :TO POSTALCODE, PathOrClass :./toPartyVO/postalCode
"20095"

/ HIER HIER

/ we slaan de rest over	,
/ myRet=
[1.0, 2014-05-16 16:00:00.0, , DE, 0.40, DE, DE, 20095, STANDARD, , , 0.40, , DE, 2014-05-16 17:00:00.0]

/ OVERZICHT
[1.0
 2014-05-16 16:00:00.0
 
 DE
 0.40
 DE
 DE
 20095
 STANDARD
 
 
 0.40
 
 DE
 2014-05-16 17:00:00.0]

public class RateCalcHashCalculator {
	public static String calculate(RateAgreementVO aRateAgreement, LogisticsOrderVO anOrder) {
			Collection<Object> myValues = aRateAgreement.getOrderDetailValues(anOrder);
/ D
[1.0, 2014-05-16 16:00:00.0, , DE, 0.40, DE, DE, 20095, STANDARD, , , 0.40, , DE, 2014-05-16 17:00:00.0]

/ Waar komt de list vandaan	, bij LIST
/ TODO


			myValues.add(aRateAgreement.getName());
[1.0, 2014-05-16 16:00:00.0, , DE, 0.40, DE, DE, 20095, STANDARD, , , 0.40, , DE, 2014-05-16 17:00:00.0, OEGEMA]
			String myValuesAsString = StringUtils.implode(myValues.toArray(), "-");
1.0-2014-05-16 16:00:00.0--DE-0.40-DE-DE-20095-STANDARD---0.40--DE-2014-05-16 17:00:00.0-OEGEMA

			return StringUtils.encriptSha(myValuesAsString);
7CA5BC8EB998E45F92D4999A78F4E87EF9895872

/ we zien in HTML dat op de so "Total LDM" is theRequestedTotalLoadingMeters	,

/t
	public boolean rateCalculationRequired() {
			String myHash = RateCalcHashCalculator.calculate(rateAgreement, getOrder());
/ D
7CA5BC8EB998E45F92D4999A78F4E87EF9895872
			if (ObjectUtils.equals(myHash, serviceOrder.getRatecalcMd5Hash())) {
/ =ratecalcMd5Hash field in serviceOrder
7CA5BC8EB998E45F92D4999A78F4E87EF9895872
/ TODO( Wanneer is deze calc?)











					} else if (myServiceOrder.isServiceOrderCostActual()) {
/s
		for (ServiceOrderCostVO myCostVO : getServiceOrderCostList()) {
[26632542        50.00, 26632543        11.91, 26632541        91.63]

/ Intermezzo

po=> select*from service_order_cost\g
 system_id | service_order_systemid | cost_type_systemid |       reason        | correction_type_systemid | entry_type | seque
nce_nr |  amount   |  status   | currency_systemid | invoice_detail_systemid | rate_agreement_systemid |       source_ref     
  
-----------+------------------------+--------------------+---------------------+--------------------------+------------+------
-------+-----------+-----------+-------------------+-------------------------+-------------------------+----------------------
--
...
  26632543 |               26632537 |           26631760 | Calc.: 11.91 (ADD)  |                 38500001 | AUTOMATIC  |      
     0 |  11.91000 | ESTIMATED |              7001 |                         |                         | RateAgreement:2663186
9
  26632542 |               26632537 |           26631763 | Calc.: 50.00 (ADD)  |                 38500001 | AUTOMATIC  |      
     0 |  50.00000 | ESTIMATED |              7001 |                         |                         | RateAgreement:2663186
9
  26632541 |               26632537 |           26600544 | Calc.: 91.63 (ADD)  |                 38500001 | AUTOMATIC  |      
     0 |  91.63000 | ESTIMATED |              7001 |                         |                         | RateAgreement:2663186
9

/ Op service order page, click "Edit costs"	, we komen op page

Service Order Costs

Estimated
/ precies deze 3 items	,


/ Einde Intermezzo

/ t
	public boolean isServiceOrderCostActual() {
		for (ServiceOrderCostVO myCostVO : getServiceOrderCostList()) {
			if (CostPartStatus.ACTUAL.equals(myCostVO.getStatus())) {
/ NEE
/ want zijn allen "ESTIMATED"	,

/t
public class CalculationServiceImpl implements CalculationService {
	public void recalculate(LogisticsOrderVO anOrder, String aRateType, TMSEventContext anEventContext) throws AbstractException {

				myRateCalculationVO.runFor(mySelectedRateAgreement);
theSystemId: 26631869Name :OEGEMA
Description :null
Organization :SystemId:4000	Id:HAAL-ZW	Description:HAAL
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
RateType :service_order_cost

/s
public class RateCalculationVO {
	public void runFor(RateAgreementVO aRateAgreementVO) {
			Set<Variable> myList = aRateAgreementVO.getVariableList();
[]
			if (myList.size() == 0) {
/ JA
				/* No variables (iteration) involved */
				RateCalculationAlternative myAlterNative = new RateCalculationAlternative(this);
				alternativeList.add(myAlterNative);
				runFor(aRateAgreementVO, myAlterNative);
/s
public class RateCalculationVO {
	protected void runFor(RateAgreementVO aRateAgreementVO, RateCalculationAlternative anAlternative) {
			Collection<CostComponentSpecificationVO> myCostComponentSpecificationList = aRateAgreementVO.getCostComponentSpecificationList();

[CostComponentSpecification:26632354/RC_ADDITIONAL_STOP/Additional stop
CostComponentSpecification:26631994/RC_RELEASE_DATE/Release Date
CostComponentSpecification:26631995/RC_START_AFTER/Planned start After
CostComponentSpecification:26631920/RC_FUEL/Fuel costs
CostComponentSpecification:26631888/RC_FREIGHT/Freight costs
CostComponentSpecification:26632004/RC_SERVICE/Service
CostComponentSpecification:26631996/RC_START_BEFORE/Planned start before]

/ Intermezzo

/ Deze zien we  op	,
Service Order Costs

Calculation log	,

/ Einde Intermezzo

				for (CostComponentSpecificationVO myCostComp : myCostComponentSpecificationList) {
					for (RateResult myResult : myCostComp.run(this)) {
/c
public class CostComponentSpecificationVO extends ValueObject implements Cloneable {
CostComponentSpecification:26632354/RC_ADDITIONAL_STOP/Additional stop

	public List<RateResult> run(RateCalculationVO aRateCalculation) throws RateException {
rateCalculationVO (RA: OEGEMA, orderSystemid:N0000265/26632537)
		} else {
			RateParameterVO myParameter = getRateParameter();
theSystemId: 26632353Name :RT_ADDITIONAL_ADDRESS_OUTPUT
Description :null
			RateResult myResult = myParameter.calculate(aRateCalculation);
/s
public class RateParameterVO extends ValueObject implements Comparable<RateParameterVO> {
	public RateResult calculate(RateCalculationVO aRateCalculation) throws RateException {
			RateResult myResult = aRateCalculation.getManuallyModifiedResult(this);
			if (myResult == null) {
/ JA
				// Note, the RateCalculation cache is cleared after each alternative
				if (!aRateCalculation.hasCachedResult(this)) {
/ JA
						if (aRateCalculation.shouldCalculate(this)) {
/ JA
							AbstractRateFunction myAbstractRateFunction = aRateCalculation.getRateFunction(this);
myAbstractRateFunction	RateTableFunction  (id=28562)	
	theRateFunctionVO	RateFunctionVO_$$_javassist_58  (id=28537)	
/=
	com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26632352

/ Intermezzo



mpo=> select*from rate_function\g
 system_id | function_definition_systemid | is_user_defined | user_func_def | rate_table_systemid | unit_systemid 
  26632352 |                      3500001 |               0 |               |            26632349 |              

/ Einde Intermezzo

							RateFunctionVO myRateFunction = getOutputfromFunctionVO();
com.mpobjects.oms.ratecalc.model.ratefunction.vo.RateFunctionVO/id:26632352

							Collection<InputParameterVO> myInputParameterList = myRateFunction.getInputParameterList();
[SystemId: 26632351]

							if (myAbstractRateFunction instanceof AbstractShipmentItemFunction) {
/ NEE
							} else {
								// First, make sure al input parameters are calculated
								for (InputParameterVO myInputParameter : myInputParameterList) {
[SystemId: 26632351]
									RateResult mySub = myInputParameter.calculate(aRateCalculation);
rateCalculationVO (RA: OEGEMA, orderSystemid:N0000265/26632537)
/s
public class InputParameterVO extends ValueObject {
	public RateResult calculate(RateCalculationVO aRateCalculation) throws RateException {

/ Intermezzo

mpo=> select*from input_parameter where system_id=26632351\g
 system_id | parameter_systemid | func_par_def_systemid | rate_func_systemid | dimension_systemid | configuration_value | orde
r_detail_systemid | free_value 
-----------+--------------------+-----------------------+--------------------+--------------------+---------------------+-----
------------------+------------
  26632351 |                    |                       |           26632352 |                    |                     |     
         26631840 |           
(1 row)

/ Einde Intermezzo

			OrderDetail myServiceorderDetail = getOrderDetailVO();
SystemId: 26631840, Name :NR_OF_CONSIGNMENTS, PathOrClass :count(./consignmentList)

/ Deze zien we ook op Service Order Costs, Calculation Log	,

			RateParameterVO myParameter = getParameterVO();
null
			BigDecimal myFreeValue = getFreeValue();
null
				myRateResult = aRateCalculation.evaluate(myServiceorderDetail);
rateCalculationVO (RA: OEGEMA, orderSystemid:N0000265/26632537)
SystemId: 26631840, Name :NR_OF_CONSIGNMENTS, PathOrClass :count(./consignmentList)
/ s
public class RateCalculationVO {
	public RateResult evaluate(OrderDetail aOrderDetailVO) {
		String myVariableValue = variableValues.get(aOrderDetailVO.getName());
null
name	"NR_OF_CONSIGNMENTS" (id=28674)	

				} else {
					LogisticsOrderVO myOrder = getOrder();
/ seo	,
/s
	public LogisticsOrderVO getOrder() {
this	RateCalculationVO  (id=28389)	

		if (getRateAgreementVO() != null) {
/ JA	,
/ =
theSystemId: 26631869Name :OEGEMA
Description :null
Organization :SystemId:4000	Id:HAAL-ZW	Description:HAAL
Unit :theSystemId: 1000072	Symbol :EUR	Description :Euro	UnitType :CURRENCY	IsDeleted :0	
IsDeleted :false
RateType :service_order_cost
			if (isServiceOrderCostRate()) {
/ JA
/ =
			return getRateAgreementVO().getRateType().equals(RateAgreementVO.TYPE_SERVICE_ORDER_COST);
				return serviceOrder;

/t
					LogisticsOrderVO myOrder = getOrder();
/ D
/ seo	,
					String myPathOrClass = aOrderDetailVO.getPathOrClass();
/ aOrderDetailVO=SystemId: 26631840, Name :NR_OF_CONSIGNMENTS, PathOrClass :count(./consignmentList)

							} else {
								myRet = aOrderDetailVO.retrieveValueFromOrder(myOrder);
/s
	public Object retrieveValueFromOrder(LogisticsOrderVO anOrder) {
		JXPathContext myContext = JXPathContext.newContext(anOrder);
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl@6ed5db58
	contextBean	ServiceOrderVO
		consignmentList
[N0000265.1/26632540]
		myContext.setLenient(true);
		String myPathOrClass = getPathOrClass();
myPathOrClass	"count(./consignmentList)" (id=28687)	
		Object myValue = myContext.getValue(myPathOrClass);
Double 1.0
/  er is 1 consignment	,

/t
	public RateResult evaluate(OrderDetail aOrderDetailVO) {
								myRet = aOrderDetailVO.retrieveValueFromOrder(myOrder);
/ D
Double 1.0
/ aOrderDetailVO=SystemId: 26631840, Name :NR_OF_CONSIGNMENTS, PathOrClass :count(./consignmentList)

   4200511 | ./toPartyVO/partyId                                                                                              
/ Intermezzo

mpo=> select*from order_detail where system_id=26631840\g
 system_id |      path_or_class       |        name        | unit_systemid | parameter_type_systemid |     rate_type      
-----------+--------------------------+--------------------+---------------+-------------------------+--------------------
  26631840 | count(./consignmentList) | NR_OF_CONSIGNMENTS |               |                 3700002 | service_order_cost
(1 row)

/ Einde Intermezzo

							} else if (myRet instanceof Number) {
								myRateResult = new RateResult(BigDecimal.valueOf(((Number) myRet).floatValue()));
aOrderDetailVO	OrderDetail  (id=28665)	
myRateResult	RateResult  (id=28765)	
	theValue	"1.0" (id=28770)	

/t
public class InputParameterVO extends ValueObject {
	public RateResult calculate(RateCalculationVO aRateCalculation) throws RateException {
				myRateResult = aRateCalculation.evaluate(myServiceorderDetail);
/D
					myRateResult.setResultName(myServiceorderDetail.getName());
name	"NR_OF_CONSIGNMENTS" (id=28674)	

			setRateResult(myRateResult);
/s
		if (theRateResult == null) {
			theRateResult = new ThreadLocal<RateResult>();
		}
		theRateResult.set(aRateResult);

















							updateServiceOrderCostPartList(firstAlt);
/s
public class RateCalculationVO {
	protected void updateServiceOrderCostPartList(RateCalculationAlternative anAlternative) throws Exception {
...
				getServiceOrderFacade().updateServiceOrder(serviceOrder, eventCtx, true, false);
/s
public class ServiceOrderServiceImpl implements ServiceOrderService {
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {

/ SAMENVATTING STACKTRACE

/ we zijn voor de 2de keer in ServiceOrderServiceImpl.updateServiceOrder	,

	ServiceOrderServiceImpl.updateServiceOrder(ServiceOrderVO, TMSEventContext, boolean, boolean) line: 1270	
	$Proxy267.updateServiceOrder(ServiceOrderVO, TMSEventContext, boolean, boolean) line: not available	
	RateCalculationVO.updateServiceOrderCostPartList(RateCalculationAlternative) line: 1590	
	RateCalculationVO.runFor(RateAgreementVO) line: 771	
	CalculationServiceImpl.recalculate(LogisticsOrderVO, String, TMSEventContext) line: 405	
	JdkDynamicAopProxy.invoke(Object, Method, Object[]) line: 204	
	$Proxy453.recalculate(LogisticsOrderVO, String, TMSEventContext) line: not available	
	RateCalcEventListener.recalculate(ServiceOrderVO, String, TMSEventContext) line: 258	
	RateCalcEventListener.recalcServiceOrderCost(Event) line: 164	
	RateCalcEventListener.handleEvent(Event) line: 67	
	ListenerList.fireEvent(Event) line: 80	
	EventHandlerServiceImpl.handleEvent(Event) line: 89	
	$Proxy221.handleEvent(Event) line: not available	
	ConsignmentServiceImpl.triggerEventHandler(ConsignmentVO, ConsignmentVO, boolean, TMSEventContext) line: 1047	
	ConsignmentServiceImpl.updateConsignmentAfterServiceOrderChange(ConsignmentVO, ConsignmentVO) line: 1073	
	ConsignmentServiceImpl.handleServiceOrderActualDateChange(ServiceOrderVO, ServiceOrderVO) line: 489	
	$Proxy258.handleServiceOrderActualDateChange(ServiceOrderVO, ServiceOrderVO) line: not available	
	ServiceOrderServiceImpl.updateServiceOrder(ServiceOrderVO, TMSEventContext, boolean, boolean) line: 1320	
	$Proxy267.updateServiceOrder(ServiceOrderVO, TMSEventContext, boolean, boolean) line: not available	
	ServiceOrderSaveAction(ServiceOrderSaveAction).handleSave() line: 178	
	ServiceOrderSaveAction.handleSave() line: 21	
	ServiceOrderSaveAction(AbstractSaveAction).act() line: 69	
	ServiceOrderSaveAction(AbstractAction).act(Redirector, SourceResolver, Map, String, Parameters) line: 170	

/ In de 1ste updateServiceOrder is propagate=true	, 
/ In de 2de updateServiceOrder is propagate=true	, 

/ Einde SAMENVATTING STACKTRACE

/ QUESTION 

public class ShipmentOrderServiceImpl implements ShipmentOrderService {
	public void updateShipmentOrder(ShipmentOrderVO aShipmentOrder, TMSEventContext anEventContext, boolean propagateChange) {
				// Calculate total price /cost
				updatePricePart(aShipmentOrder);
				aShipmentOrder.calculatePrice();
				aShipmentOrder.calculateTotalCosts();
/ TODO

/ Einde QUESTION 

/ we zijn dus voor de 2de keer in	,
public class ServiceOrderServiceImpl implements ServiceOrderService {
	public ServiceOrderVO updateServiceOrder(ServiceOrderVO aServiceOrder, TMSEventContext aContext, boolean propagate, boolean replan) {

/ aServiceOrder.theActualStart=null

				setStatus(aServiceOrder);
/s
public class ServiceOrderServiceImpl implements ServiceOrderService {
	private void setStatus(ServiceOrderVO aServiceOrderVO, ConsignmentVO aLastConsisignmentVO) throws AbstractException {
		} else if (myDateSet.isPlanned() && aServiceOrderVO.getConsignmentList().size() > 0) {
			aServiceOrderVO.setOrderStatusVO(MpoBeanFactory.getBean(OrderStatusDAO.class).getByCode(OrderStatusVO.STATUS_PLANNED));
/ TODO( Hoe de 1ste keer)	,

/t
				applySyncFlags(aServiceOrder);
/s
public class ServiceOrderServiceImpl implements ServiceOrderService {
	protected void applySyncFlags(ServiceOrderVO aServiceOrder) {

				myFirst = myConsignmentVO;
				myLast = myConsignmentVO;

		// Copy the start location from the first consignment if the flag indicates so and if the service order has no shipped date
		if (aServiceOrder.getSyncFromFlag() != null && myFirst != null) {
			if (aServiceOrder.getSyncFromFlag().equals("P") && aServiceOrder.getFromPartyVO() != null && StringUtils.isNotEmpty(aServiceOrder.getFromPartyVO().getCode())) {
/ NEE
			} else if (aServiceOrder.getSyncFromFlag().equals("S")) {
/ JA
				aServiceOrder.setFromPartyVO(myFirst.getFromPartyVO());

		// Copy the end location from the last consignment if the flag indicates so and if the service order has no delivery date
		if (aServiceOrder.getSyncToFlag() != null && myLast != null) {
			if (aServiceOrder.getSyncToFlag().equals("P") && aServiceOrder.getToPartyVO() != null
					&& StringUtils.isNotEmpty(aServiceOrder.getToPartyVO().getCode())) {
/ NEE
			} else if (aServiceOrder.getSyncToFlag().equals("S")) {
/JA
				aServiceOrder.setToPartyVO(myLast.getToPartyVO());

/t
				applySyncFlags(aServiceOrder);
/ D
				ensureInstructions(aServiceOrder);
/ NIETS	,
/ s
	protected void ensureInstructions(ServiceOrderVO aServiceOrder) {
		ServiceOrderVO template = aServiceOrder.getServiceOrderTemplate();
null
		if (template == null || template.getInstructionGroupVO() == null) {
/ JA
			return;

/t
				if (invoiceModulePresent) {
					setVatExportLevel(aServiceOrder);
/s
public class ServiceOrderServiceImpl implements ServiceOrderService {
private void setVatExportLevel(ServiceOrderVO aServiceOrder) throws AbstractException {

			Country myCountryTo = aServiceOrder.getToPartyVO().getCountryVO();
code="DE"
			Country myCountryFrom = aServiceOrder.getFromPartyVO().getCountryVO();
code=""

				else if (myEuGroup.getCountries().contains(myCountryFrom) && myEuGroup.getCountries().contains(myCountryTo)) {
/ JA
					// INTRA_COMMUNITARIAN_TRANSPORT
					aServiceOrder.setVatExportLevel(VatExportLevel.INTRA_COMMUNITARIAN_TRANSPORT);

/t
					setVatExportLevel(aServiceOrder);
/ D
				handleCustomSoCostEntry(aServiceOrder);
/ NIETS	, want	,
/s
private void handleCustomSoCostEntry(ServiceOrderVO aServiceOrder) throws AbstractException {

		if (!NumberUtils.isNullOrZero(aServiceOrder.getTotalCost())) {
153.54
			if (aServiceOrder.getServiceOrderCostList().isEmpty()) {
/ NEE
			} else if (aServiceOrder.getEstimatedCostList().size() == 1) {
/ NEE

/t
				handleCustomSoCostEntry(aServiceOrder);
/ D







































 Einde APPLICATIE CHANGE SEO

/ SPRING 

/ Ga naar	,
http://spring.io/docs
/ Kies Spring framework 4.0.4 reference
http://docs.spring.io/spring/docs/4.0.4.RELEASE/spring-framework-reference/htmlsingle/
/ Lees 14.3 Hibernate	,

/ we zien bij 31.1 dat hoe we het nu doen oud is	, we moeten naar 14	,

/ Einde SPRING 


/ HIBERNATE TUTORIALS

[eric@localhost Hibernate]$ pwd
/home/eric/Devel/Java/Hibernate
[eric@localhost Hibernate]$ unzip -d hibernate-tutorials/ ~/Downloads/hibernate-tutorials.zip 

[eric@localhost hibernate-tutorials]$ pwd
/home/eric/Devel/Java/Hibernate/hibernate-tutorials
[eric@localhost hibernate-tutorials]$ vi pom.xml 

    <modules>
        <module>basic</module>
        <module>annotations</module>
        <module>entitymanager</module>
        <module>envers</module>
<!--
        <module>osgi</module>
-->
    </modules>

$ mvn install
/ OK

/ 7	.

/ we copy basic, en veranderen de artifactId van deze	, 

[eric@localhost hibernate-tutorials]$ pwd
/home/eric/Devel/Java/Hibernate/hibernate-tutorials
[eric@localhost hibernate-tutorials]$  vi pom.xml 
    <modules>
        <module>basic</module>
        <module>annotations</module>
        <module>entitymanager</module>
        <module>envers</module>
<!--
        <module>osgi</module>
-->
        <module>my</module>
    </modules>

[eric@localhost hibernate-tutorials]$ vi my/pom.xml 
    <artifactId>my-hibernate-tutorial-hbm</artifactId>

/ we geven	,
$ mvn test
/ In ~/.m2/reposistory	,
[eric@localhost repository]$ ls org/hibernate/
common  hibernate-core  hibernate-entitymanager  hibernate-envers  javax
$ mvn test
/ OK

/ Als we 1 test willen	, 
$ cd my
$ mvn test
/ Kan dit ook in de parent dir	, en dan een test kiezen	?
/ TODO

/ psql

/ Ga naar 	,
http://jdbc.postgresql.org/
/ Maar we hebben maven dependency	,
/ Hoe downloaded jdbc driver handmatig in de maven repo set	?
/ TODO

$ vi pom.xml

   <dependencies>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
        </dependency>
    </dependencies>

/ Waarom kan
            <version>9.3-901.jdbc4</version>
/ niet	?
/ TODO 

/ Lees	,
http://jdbc.postgresql.org/documentation/80/connect.html

[eric@localhost psql]$ vi src/test/resources/hibernate.cfg.xml 

 <hibernate-configuration>
 <session-factory>

 <!-- Database connection settings -->
 <property name="connection.driver_class">org.postgresql.Driver</property>
 <property name="connection.url">jdbc:postgresql://localhost/foo</property>
 <property name="connection.username">foo</property>
 <property name="connection.password">foo</property>

 <!-- SQL dialect - generate SQL for a particular database -->
 <property name="dialect">org.hibernate.dialect.PostgreSQLDialect</property>

 <!-- Echo all executed SQL statements -->
 <property name="show_sql">true</property>

 <!-- Drop and re-create the database schema on startup -->
 <property name="hbm2ddl.auto">create</property>

 <!-- Mapping resource configuration files -->
 <mapping resource="org/hibernate/tutorial/hbm/Event.hbm.xml"/>

 </session-factory>
 </hibernate-configuration>

/ Lees	,

http://maven.apache.org/surefire/maven-surefire-plugin/examples/debugging.html

[eric@localhost psql]$ mvn -Dmaven.surefire.debug test
/ we zien	,
11486 11489 11461  5242 pts/12   11461 Sl+   1000   0:00 java -agentpath:/usr/lib64/libabrt-java-connector.so=abrt=on -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -jar /home/eric/Devel/Java/Hibernate/hibernate-tutorials/psql/target/surefire/surefirebooter4495531677809886281.jar /home/eric/Devel/Java/Hibernate/hibernate-tutorials/psql/target/surefire/surefire3027908043875428867tmp /home/eric/Devel/Java/Hibernate/hibernate-tutorials/psql/target/surefire/surefire_08875806354091999917tmp

[eric@localhost psql]$ pwd
/home/eric/Devel/Java/Hibernate/hibernate-tutorials/psql
[eric@localhost java]$  jdb -attach 5005

main[1] stop in org.hibernate.tutorial.hbm.NativeApiIllustrationTest.setUp                               
main[1] stop in org.hibernate.tutorial.hbm.NativeApiIllustrationTest.testBasicUsage
main[1] use src/test/java
main[1] use src/test/java
main[1] list
56    	}
57    
58    	public void testBasicUsage() {
59    		// create a couple of events...
60 => 		Session session = sessionFactory.openSession();
...

/ 7	. 

/ psql2

/ test -> main

/ 13	.

/ we doen het zelf	,

[eric@localhost psql2]$  mvn clean compile  exec:exec -Dexec.executable="java" -Dexec.args="-classpath target/classes:/home/eric/.m2/repository/org/hibernate/hibernate-core/4.2.12.Final/hibernate-core-4.2.12.Final.jar:/home/eric/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/eric/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.2.Final/hibernate-commons-annotations-4.0.2.Final.jar:/home/eric/.m2/repository/org/jboss/logging/jboss-logging/3.1.0.GA/jboss-logging-3.1.0.GA.jar:/home/eric/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/1.0.1.Final/jboss-transaction-api_1.1_spec-1.0.1.Final.jar:/home/eric/.m2/repository/postgresql/postgresql/9.1-901.jdbc4/postgresql-9.1-901.jdbc4.jar:/home/eric/.m2/repository/./org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar:/home/eric/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/eric/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar  org.hibernate.tutorial.hbm.NativeApiIllustrationTest"  
/ OK

/ Als we willen debug	, add 
-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=1044 

/ In /home/eric/.m2/repository/./org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar
   430 Wed Jun 15 10:44:30 CEST 2011 javax/persistence/EntityListeners.class

/ In antlr/antlr/2.7.7/antlr-2.7.7.jar
  1390 Sun Jan 19 16:47:12 CET 2003 antlr/RecognitionException.class

/ In /home/eric/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar  
javassist/util/proxy/MethodFilter



/ als we debug	,
[eric@localhost psql2]$ jdb -attach 1044
main[1] use src/main/java
main[1] stop in org.hibernate.tutorial.hbm.NativeApiIllustrationTest.main
main[1] run
> 
Breakpoint hit: "thread=main", org.hibernate.tutorial.hbm.NativeApiIllustrationTest.main(), line=45 bci=0
45    		new NativeApiIllustrationTest();

/ 13	.

/ assembly,	 alles in 1 jar	,

[eric@localhost psql2]$ vi pom.xml 

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
        </plugins>
    </build>

$ mvn clean assembly:assembly
...
[INFO] --- maven-compiler-plugin:2.5.1:compile (default-compile) @ psql-hibernate-tutorial-hbm ---
...

[eric@localhost psql2]$  find
.
./src
./src/main
./src/main/java
./src/main/java/org
./src/main/java/org/hibernate
./src/main/java/org/hibernate/tutorial
./src/main/java/org/hibernate/tutorial/hbm
./src/main/java/org/hibernate/tutorial/hbm/NativeApiIllustrationTest.java
./src/main/java/org/hibernate/tutorial/hbm/Event.java
./src/main/java/org/hibernate/tutorial/hbm/Event.hbm.xml
./src/main/resources
./src/main/resources/org
./src/main/resources/org/hibernate
./src/main/resources/org/hibernate/tutorial
./src/main/resources/org/hibernate/tutorial/hbm
./src/main/resources/org/hibernate/tutorial/hbm/Event.hbm.xml
./src/main/resources/hibernate.cfg.xml
./target
./target/maven-archiver
./target/maven-archiver/pom.properties
./target/archive-tmp
./target/psql-hibernate-tutorial-hbm-4.2.12.Final.jar
./target/classes
./target/classes/org
./target/classes/org/hibernate
./target/classes/org/hibernate/tutorial
./target/classes/org/hibernate/tutorial/hbm
./target/classes/org/hibernate/tutorial/hbm/Event.hbm.xml
./target/classes/org/hibernate/tutorial/hbm/NativeApiIllustrationTest.class
./target/classes/org/hibernate/tutorial/hbm/Event.class
./target/classes/hibernate.cfg.xml
./target/psql-hibernate-tutorial-hbm-4.2.12.Final-jar-with-dependencies.jar
./pom.xml

[eric@localhost psql2]$   java -cp target/psql-hibernate-tutorial-hbm-4.2.12.Final-jar-with-dependencies.jar:target/classes/ org.hibernate.tutorial.hbm.NativeApiIllustrationTest
/ OK





 


/ 7	. 

/ mysql 

/ we hebben mariadb install, maar mysql jdbc driver	, 
/ er is ook mariadb driver 
/ TODO


/ Einde HIBERNATE TUTORIALS

/ HIBERNATE BOOK

[eric@localhost Hibernate]$ cp -a hibernate-tutorials/ hibernate-book

/ psql2 many-to-one mapping			
/ psql2a many-to-one, one-to-many mappings
/ psql2b one-to-many mapping

[eric@localhost psql2]$ mvn clean assembly:assembly
[eric@localhost psql2]$ java -cp target/psql2-1.0-SNAPSHOT-jar-with-dependencies.jar:target/classes/ org.hibernate.book.hbm.Main


/ SAMENVATTING

[eric@localhost psql2]$ find
.
./src
./src/main
./src/main/java
./src/main/java/org
./src/main/java/org/hibernate
./src/main/java/org/hibernate/book
./src/main/java/org/hibernate/book/hbm
./src/main/java/org/hibernate/book/hbm/Item.java
./src/main/java/org/hibernate/book/hbm/Bid.java
./src/main/java/org/hibernate/book/hbm/Main.java
./src/main/resources
./src/main/resources/org
./src/main/resources/org/hibernate
./src/main/resources/org/hibernate/book
./src/main/resources/org/hibernate/book/hbm
./src/main/resources/org/hibernate/book/hbm/Bid.hbm.xml
./src/main/resources/org/hibernate/book/hbm/Item.hbm.xml
./src/main/resources/hibernate.cfg.xml

///////////////////////////////////////////////////////////////////
/ De hbm.xml files zijn de mapping files naar de db	, 
/ Dus als we in Java bid.setItem hebben , en we hebben in de mapping  van bid 
<!--
        <many-to-one
                name="item"
                not-null="true"/>
-->
/ dan wordt het bid.item NIET mapped naar de db	, dus de bid table heeft GEEN item column, waarin de fk zou staan naar de item row	, een 


$ vi psql2/src/main/resources/org/hibernate/book/hbm/Item.hbm.xml

hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Item">
        <id name="id">
                <generator
                        class="increment"/></id>
        <property
                name="name"/>
     	<property
                name="city"/>

</class>

</hibernate-mapping>

$ vi psql2/src/main/resources/org/hibernate/book/hbm/Bid.hbm.xml

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Bid">
        <id
                name="id">
                <generator
                        class="increment"/></id>
        <many-to-one
                name="item"
                not-null="true"/>
</class>
<!--
                class="Item"
-->

</hibernate-mapping>

$ vi psql2/src/main/java/org/hibernate/book/hbm/Main.java

                Session session = sessionFactory.openSession();
                session.beginTransaction();

                Item item=new Item("first","Vlaardingen");

                Bid bid=new Bid();
                bid.setItem(item);

                Bid bid2=new Bid();
                bid2.setItem(item);

                session.save(item); 
                session.save(bid);
                session.save(bid2);

                session.getTransaction().commit();
                session.close();

                session = sessionFactory.openSession();

               	session = sessionFactory.openSession();
                session.beginTransaction(); 

                List result = session.createQuery( "from Bid" ).list();
                for ( Bid b: (List<Bid>) result ) {
                        System.out.println( "Bid(" + b.getItem()  );
                }

                session.getTransaction().commit();
                session.close();


/ we zien	,

foo=> select*from item;
 id | name  |    city     
----+-------+-------------
  1 | first | Vlaardingen
(1 row)


foo=> select*from bid;
 id | item 
----+------
  1 |    1
  2 |    1
(2 rows)

[eric@localhost eclipse-jee]$ pg_dump -U foo -d foo -t bid -t item

COPY bid (id, item) FROM stdin;
1	1
2	1
\.

COPY item (id, name) FROM stdin;
1	first
\.

[eric@localhost psql2]$ mvn clean assembly:assembly
[eric@localhost psql2]$  java -cp target/classes/:target/psql-hibernate-book-hbm-4.2.12.Final-jar-with-dependencies.jar org.hibernate.book.hbm.Main 


Hibernate: select max(id) from Item
Hibernate: select max(id) from Bid
Hibernate: insert into Item (name, id) values (?, ?)
Hibernate: insert into Bid (item, id) values (?, ?)
Hibernate: insert into Bid (item, id) values (?, ?)
Hibernate: select bid0_.id as id1_0_, bid0_.item as item2_0_ from Bid bid0_
Hibernate: select item0_.id as id1_1_0_, item0_.name as name2_1_0_ from Item item0_ where item0_.id=?
Bid(org.hibernate.book.hbm.Item@e72fd0e
Bid(org.hibernate.book.hbm.Item@e72fd0e


/ Als we 
<!--
        <many-to-one
                name="item"
                class="Item"
                not-null="true"/>
-->

/ zien 	we dat de bids geen ref naar het item hebben	,

foo=> select*from item;
 id | name  |    city     
----+-------+-------------
  1 | first | Vlaardingen
(1 row)

foo=> select*from bid;
 id 
----
  1
  2
(2 rows)

/////////////////////////////////////////////////
/ De item column is er NIET	,

[eric@localhost eclipse-jee]$ pg_dump -U foo -d foo -t bid -t item

COPY bid (id) FROM stdin;
1
2
\.

COPY item (id, name, city) FROM stdin;
1	first	Vlaardingen
\.



Hibernate: select max(id) from Item
Hibernate: select max(id) from Bid
Hibernate: insert into Item (name, id) values (?, ?)
Hibernate: insert into Bid (id) values (?)
Hibernate: insert into Bid (id) values (?)
Hibernate: select bid0_.id as id1_0_ from Bid bid0_
Bid(null
Bid(null

////////////////////////
/ we zien in de db GEEN refs meer naar item	,

/ Einde SAMENVATTING


[eric@localhost psql2]$ mvn clean assembly:assembly
[eric@localhost psql2]$  java -cp target/classes/:target/psql-hibernate-book-hbm-4.2.12.Final-jar-with-dependencies.jar org.hibernate.book.hbm.Main 


[eric@localhost eclipse-jee]$ pg_dump -U foo -d foo -t bids -t items


/ Lees	over ONLY,
http://www.postgresql.org/docs/9.1/static/ddl-inherit.html
/ TODO

/ we kunnen ook zelf	,
DETAIL:  Key (item_id)=(2) already exists.
CONTEXT:  COPY items, line 1
foo=> copy items from stdin\g
Enter data to be copied followed by a newline.
End with a backslash and a period on a line by itself.
>> 11
>> 12
>> 13
>> \.

/ bij meerdere columns moet er een tab tussen	,

foo=> copy bids from stdin\g
Enter data to be copied followed by a newline.
End with a backslash and a period on a line by itself.
>> 11	11
>> \.

/ drop table cascade	,
/ Lees	,
http://www.postgresql.org/docs/8.1/static/sql-droptable.html

/ SAMENVATTING

/ psql2b

/ one-to-many

$ vi psql2b/src/main/resources/org/hibernate/book/hbm/Item.hbm.xml

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Item">
        <id name="id">
                <generator
                        class="increment"/></id>
        <property
                name="name"/>
        <set
                name="bids">
                <key
                        column="item"/>
                <one-to-many
                        class="Bid"/>
        </set>

</class>

</hibernate-mapping>

$ vi psql2b/src/main/resources/org/hibernate/book/hbm/Bid.hbm.xml

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Bid">
        <id
                name="id">
                <generator
                        class="increment"/></id>
<!--
       <many-to-one
                name="item"
                not-null="true"/>
-->

                Session session = sessionFactory.openSession();
                session.beginTransaction();

                Item item=new Item("first");

                Bid bid=new Bid();
                item.getBids().add(bid);

                Bid bid2=new Bid();
                item.getBids().add(bid2);

                session.save(item);
                session.save(bid);
                session.save(bid2);

                session.getTransaction().commit();
                session.close();

                session = sessionFactory.openSession();
                session.beginTransaction();

                List result = session.createQuery( "from Bid" ).list();
                for ( Bid b: (List<Bid>) result ) {
                        System.out.println( "Bid(" + b.getItem()  );
                }

                session.getTransaction().commit();
                session.close();

COPY bid (id, item) FROM stdin;
1	1
2	1
\.


COPY item (id, name) FROM stdin;
1	first
\.

/ De saves gaan OK	, want we hebben bids included in Item's mapping naar de db  , 
/ we hoeven in Java NIET bid.setItem of bids.setItem 	, 

/ Maar de query gaat ERR, b.item=null voor alle b's in result	, dat is omdat we in Bid's mapping geen item hebben	,  en we Bids query	,

/ Als we dat wel doen	,
/ Dit is eig. psql2a	,

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Bid">
        <id
                name="id">
                <generator
                        class="increment"/></id>
       <many-to-one
                name="item"
                not-null="true"/>
</class>

</hibernate-mapping>

/////////////////////////////////////////////////////
/ Dan moeten we OOK bid.setItem en bid2.setItem	,
$ vi psql2b/src/main/java/org/hibernate/book/hbm/Main.java

                Bid bid=new Bid();
                bid.setItem(item);
                item.getBids().add(bid);

                Bid bid2=new Bid();
                bid2.setItem(item);
                item.getBids().add(bid2);


/ dus als we mapoing one-to-many en many-to-one is	, dan OK	, b.item is er 
/ In db is b 't item fk 1, maar in Java het hele item 	,

/ we zien	,

Hibernate: insert into Item (name, id) values (?, ?)
Hibernate: insert into Bid (id) values (?)
Hibernate: insert into Bid (id) values (?)
Hibernate: update Bid set item=? where id=?
Hibernate: update Bid set item=? where id=?

/ we zien dus die onnodige updates	,


/ Nogmaals: one-to-many is OK,	 
/ Het is alleen de laatste query die een probleem gaf	, omdat we in Bid's mapping geen item hebben	,


/ we moeten dan wel in one-to-many in Item's mapping	, inverse="true"	, anders gaat hij ook nog updates doen	, zoals we hierboven zien	,

/ Einde eig. psql2a	,


/ We maken de query , bij one-to-many	,

                Bid bid=new Bid();
                item.getBids().add(bid);

                Bid bid2=new Bid();
                item.getBids().add(bid2);
...
                List bids= session.createQuery( "select item.bids from Item item" ).list();
                for ( Bid b: (List<Bid>) bids) {
                        System.out.println( "Bid(" + b.getItem()  );
                }

COPY bid (id, item) FROM stdin;
2	1
1	1
\.

COPY item (id, name) FROM stdin;
1	first
\.

/ Ook deze query geeft null voor item in de bids	,
/ TODO



/ Einde SAMENVATTING

/ SAMENVATTING

/ many-to-one en one-to-many mapping	,


/ pslq2a

/ Er komt <one-to-many> bij in Item.hbm.xml	,

$ psql2a/src/main/resources/org/hibernate/book/hbm/Bid.hbm.xml

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Bid">
        <id
                name="id">
                <generator
                        class="increment"/></id>
        <many-to-one
                name="item"
                not-null="true"/>
</class>

</hibernate-mapping>

$ vi psql2a/src/main/resources/org/hibernate/book/hbm/Item.hbm.xml

hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Item">
        <id name="id">
                <generator
                        class="increment"/></id>
        <property
                name="name"/>
        <set
                name="bids">
                <key
                        column="item"/>
                <one-to-many
                        class="Bid"/>
        </set>
</class>

</hibernate-mapping>

[eric@localhost hibernate-book]$ vi psql2a/src/main/java/org/hibernate/book/hbm/Main.java 

               Item item=new Item("first");
                Bid bid=new Bid();
                bid.setItem(item);			// many-to-one
                item.getBids().add(bid);		// one-to-many

                Bid bid2=new Bid();
                bid2.setItem(item);
                item.getBids().add(bid2);

/ we moeten bij many-to-one en one-to-many	,beide	,




[eric@localhost psql2]$  java -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -cp target/classes/:target/psql-hibernate-book-hbm-4.2.12.Final-jar-with-dependencies.jar org.hibernate.book.hbm.Main 


$ jdb -attach 5005
main[1] stop in org.hibernate.book.hbm.Main.testBasicUsage
main[1] use src/main/java
run

/ we zien	,

INFO: HHH000227: Running hbm2ddl schema export
Hibernate: alter table Bid drop constraint FK_7buglm7s7rscf0kwy1xb47a5m
Hibernate: drop table if exists Bid cascade
Hibernate: drop table if exists Item cascade
Hibernate: create table Bid (id int8 not null, item int8 not null, primary key (id))
Hibernate: create table Item (id int8 not null, name varchar(255), primary key (id))
Hibernate: alter table Bid add constraint FK_7buglm7s7rscf0kwy1xb47a5m foreign key (item) references Item
May 06, 2014 11:50:53 AM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000230: Schema export complete


                Item item=new Item("first");
                Bid bid=new Bid();
                bid.setItem(item);
                item.getBids().add(bid);

                Bid bid2=new Bid();
                bid2.setItem(item);
                item.getBids().add(bid2);

               session.save(item);

Hibernate: select max(id) from Item

                session.save(bid);

Hibernate: select max(id) from Bid

                session.save(bid2);
                session.getTransaction().commit();

Hibernate: insert into Item (name, id) values (?, ?)
Hibernate: insert into Bid (item, id) values (?, ?)
Hibernate: insert into Bid (item, id) values (?, ?)
Hibernate: update Bid set item=? where id=?
Hibernate: update Bid set item=? where id=?

/ pslq2a

/ Er komt inverse="true' bij in Item.hbm.xml	,

$ psql2a/src/main/resources/org/hibernate/book/hbm/Bid.hbm.xml

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Bid">
        <id
                name="id">
                <generator
                        class="increment"/></id>
        <many-to-one
                name="item"
                class="Item"
                not-null="true"/>
</class>

</hibernate-mapping>

$ vi psql2a/src/main/resources/org/hibernate/book/hbm/Item.hbm.xml

hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Item">
        <id name="id">
                <generator
                        class="increment"/></id>
        <property
                name="name"/>
        <set
		inverse="true"
                name="bids">
                <key
                        column="item"/>
                <one-to-many
                        class="Bid"/>
        </set>
</class>

</hibernate-mapping>

/ we zien de updates niet meer	,

Hibernate: select max(id) from Item
Hibernate: select max(id) from Bid
Hibernate: insert into Item (name, id) values (?, ?)
Hibernate: insert into Bid (item, id) values (?, ?)
Hibernate: insert into Bid (item, id) values (?, ?)

/ Einde SAMENVATTING

/ 7	. 

/ hibernate annotations

[eric@localhost hibernate-book]$ pwd
/home/eric/Devel/Java/Hibernate/hibernate-book

[eric@localhost hibernate-book]$ cp -a /run/media/eric/KINGSTON/Mpo/Hibernate/hibernate-book/psql2annot/ .

[eric@localhost hibernate-book]$ bash <(awk '{print "chmod 775",$0}' <(find psql2annot/ -type d))
[eric@localhost hibernate-book]$ bash <(awk '{print "chmod 644",$0}' <(find psql2annot/ -type f))

[eric@localhost hibernate-book]$ ls
pom.xml  psql2  psql2annot  

/ In psql2 : hibernate	, *.hbm.xml
/ In psql2annot : hibernate annoto

/ 13	.

/ Verschil	, 

/ In psql2
/ In hibernate.cfg.xml	,
 <mapping resource="org/hibernate/book/hbm/Item.hbm.xml"/>
 <mapping resource="org/hibernate/book/hbm/Bid.hbm.xml"/>

/ In psql2annot	,
/ In hibernate.cfg.xml	,
 <mapping class="org.hibernate.book.hbm.Item"/>
 <mapping class="org.hibernate.book.hbm.Bid"/>

/ 13	.

/ In psql2	,

/ we hebben cascade	,

$ vi ../psql2/src/main/resources/org/hibernate/book/hbm/Item.hbm.xml

<hibernate-mapping
        package="org.hibernate.book.hbm">

<class
        name="Item">
        <id name="id">
                <generator
                        class="increment"/></id>
        <property
                name="name"/>
        <property
                name="city"/>
        <set
                cascade="save-update"
                name="bids">
                <key
                        column="item"/>
                <one-to-many
                        class="Bid"/>
        </set>
</class>

</hibernate-mapping>

[eric@localhost psql2annot]$ vi ../psql2/src/main/java/org/hibernate/book/hbm/Main.java 

                Bid bid=new Bid();
                //bid.setItem(item);
                item.getBids().add(bid);

                Bid bid2=new Bid();
                //bid2.setItem(item);
                item.getBids().add(bid2);

                session.save(item);
                //session.save(bid);
                //session.save(bid2);


/ 7	. 

[eric@localhost psql2annot]$ pwd
/home/eric/Devel/Java/Hibernate/hibernate-book/psql2annot
[eric@localhost psql2annot]$ mvn clean assembly:assembly
[eric@localhost psql2annot]$ java -cp target/psql2annot-1.0-SNAPSHOT-jar-with-dependencies.jar  org.hibernate.book.hbm.Main
...



/ Einde HIBERNATE BOOK


/ MYSQL

[eric@localhost my]$ sudo yum install mariadb-server mariadb


Installing:
 mariadb                      x86_64            1:5.5.37-1.fc20               updates            8.9 M
 mariadb-server               x86_64            1:5.5.37-1.fc20               updates             11 M
Installing for dependencies:
 mariadb-libs                 x86_64            1:5.5.37-1.fc20               updates            750 k
 perl-AnyEvent                x86_64            7.05-1.fc20                   fedora             431 k
 perl-AnyEvent-AIO            noarch            1.1-13.fc20                   fedora             9.1 k
 perl-AnyEvent-BDB            noarch            1.1-13.fc20                   fedora             9.7 k
 perl-BDB                     x86_64            1.90-6.fc20                   fedora              74 k
 perl-Coro                    x86_64            6.37-1.fc20                   updates            257 k
 perl-DBD-MySQL               x86_64            4.024-1.fc20                  fedora             142 k
 perl-DBI                     x86_64            1.630-1.fc20                  fedora             810 k
 perl-EV                      x86_64            4.11-4.fc20                   fedora             257 k
 perl-Event                   x86_64            1.21-4.fc20                   fedora             283 k
 perl-Guard                   x86_64            1.022-6.fc20                  fedora              20 k
 perl-IO-AIO                  x86_64            4.15-6.fc20                   fedora             111 k
 perl-Net-Daemon              noarch            0.48-7.fc20                   fedora              51 k
 perl-PlRPC                   noarch            0.2020-15.fc20                fedora              35 k
 perl-Task-Weaken             noarch            1.04-8.fc20                   fedora              19 k
 perl-common-sense            noarch            3.6-6.fc20                    fedora              28 k

[eric@localhost my]$ sudo systemctl enable mariadb.service 
[eric@localhost my]$ sudo systemctl start mariadb.service 

[eric@localhost my]$ mysql -uroot
MariaDB [(none)]> grant all privileges on foo.* to foo@localhost identified by "foo"\g
[eric@localhost my]$ mysql -ufoo  -pfoo
/ OK



/ Einde MYSQL

/ MAVEN

[eric@localhost workspace]$  sudo yum install maven

[eric@localhost Maven]$ mvn archetype:generate
Define value for property 'groupId': : my.own.test
Define value for property 'artifactId': : first
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  my.own.test: : 

[eric@localhost Maven]$ cd first/

/ als we eerst
$ mvn eclipse:eclipse

/ dan gaat de import fout in eclipse	,

/ TODO

/ 7	.

[eric@localhost Book]$ pwd
/home/eric/Devel/Java/Maven/Book

[eric@localhost Book]$ unzip  ~/Downloads/mvnex-examples.zip 

/7	.

/ we lezen	,
http://books.sonatype.com/mvnex-book/reference/customizing.html

$ vi pom.xml

<project ...>

  <groupId>org.sonatype.mavenbook.weather</groupId>
  <artifactId>simple-weather</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.5</version>
        </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

[eric@localhost simple-weather]$ find

./target/simple-weather-1.0-SNAPSHOT-jar-with-dependencies.jar

./target/classes
./target/classes/output.vm
./target/classes/org
./target/classes/org/sonatype
./target/classes/org/sonatype/mavenbook
./target/classes/org/sonatype/mavenbook/weather
./target/classes/org/sonatype/mavenbook/weather/Main.class
./target/classes/org/sonatype/mavenbook/weather/Weather.class
./target/classes/org/sonatype/mavenbook/weather/WeatherFormatter.class
./target/classes/org/sonatype/mavenbook/weather/YahooParser.class
./target/classes/org/sonatype/mavenbook/weather/WeatherService.class
./target/classes/org/sonatype/mavenbook/weather/YahooRetriever.class
./target/classes/org/sonatype/mavenbook/weather/App.class
./target/classes/log4j.properties


[eric@localhost Book]$ mvn archetype:generate
Choose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): 387: 
/ quickstart
Define value for property 'groupId': : org.sonatype.mavenbook.weather
Define value for property 'artifactId': : simple-weather
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  org.sonatype.mavenbook.weather: : 

[eric@localhost simple-weather]$  pwd
/home/eric/Devel/Java/Maven/Book/simple-weather
[eric@localhost simple-weather]$ cp ../mvnexbook-examples-1.0/ch-multi/simple-parent/simple-weather/src/main/java/org/sonatype/mavenbook/weather/* src/main/java/org/sonatype/mavenbook/weather/
[eric@localhost simple-weather]$ mkdir src/main/resources
[eric@localhost simple-weather]$ cp ../mvnexbook-examples-1.0/ch-multi/simple-parent/simple-weather/src/main/resources/* src/main/resources/

[eric@localhost simple-weather]$ mvn clean assembly:assembly
[eric@localhost simple-weather]$ java -cp target/simple-weather-1.0-SNAPSHOT-jar-with-dependencies.jar org.sonatype.mavenbook.weather.Main
*********************************
 Current Weather Conditions for:
  Evanston, IL, US
  
 Temperature: 51
   Condition: Fair
    Humidity: 61
  Wind Chill: 51
*********************************
[eric@localhost simple-weather]$ java -cp target/simple-weather-1.0-SNAPSHOT-jar-with-dependencies.jar org.sonatype.mavenbook.weather.Main 70112
*********************************
 Current Weather Conditions for:
  New Orleans, LA, US
  
 Temperature: 70
   Condition: Fair
    Humidity: 90
  Wind Chill: 70
*********************************

/ 7	.

/ webapp	,

$ mvn archetype:generate

4: remote -> org.apache.maven.archetypes:maven-archetype-webapp (An archetype which contains a sample Maven Webapp project.)

Define value for property 'groupId': : org.sonatype.mavenbook.web
Define value for property 'artifactId': : simple-webapp
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  org.sonatype.mavenbook.web: :

/ we worden create	,
src/main/webapp
src/main/resources

/ GEEN	, 
src/main/java

/ ga naar	,
http://www.eclipse.org/jetty/
/ TODO

/ Lees	,
http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html#setting-system-properties

/ Lees	,
http://tomcat.apache.org/maven-plugin-2.0/tomcat7-maven-plugin/run-mojo.html

/ Lees	,
https://tomcat.apache.org/maven-plugin-2.1/run-mojo-features.html


[eric@localhost Book]$ cd simple-webapp/
[eric@localhost simple-webapp]$ vi pom.xml 

  <groupId>org.sonatype.mavenbook.web</groupId>
  <artifactId>simple-webapp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
        <finalName>simple-webapp</finalName>
        <plugins>
<!--
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
            </plugin>
-->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                        <port>8082</port>
                </configuration>
            </plugin>

        </plugins>
  </build>


/ Wat is op	,
http://mvnrepository.com/artifact/org.eclipse.jetty
/ TODO

/ Welke repo is org.eclipse.jetty, maven-jetty-plugin	?
/ TODO


$ mvn tomcat7:run
/ OK

/ 13. 

[eric@localhost simple-webapp]$ pwd
/home/eric/Devel/Java/Maven/Book/simple-webapp
[eric@localhost simple-webapp]$ find
.
./src
./src/main
./src/main/webapp
./src/main/webapp/WEB-INF
./src/main/webapp/WEB-INF/web.xml
./src/main/webapp/index.jsp
./src/main/resources
./target
./target/apache-tomcat-maven-plugin
./target/tomcat
./target/tomcat/webapps
./target/tomcat/conf
./target/tomcat/conf/tomcat-users.xml
./target/tomcat/conf/logging.properties
./target/tomcat/conf/web.xml
./target/tomcat/work
./target/tomcat/work/Tomcat
./target/tomcat/work/Tomcat/localhost
./target/tomcat/work/Tomcat/localhost/simple-webapp
./target/tomcat/logs
./target/tomcat/logs/access_log.2014-05-07
./target/classes
./pom.xml

/ Beide web.xml zijn verschillend	,
/ TODO

[eric@localhost simple-webapp]$ mkdir -p src/main/java/org/sonatype/mavenbook/web
[eric@localhost simple-webapp]$ vi src/main/java/org/sonatype/mavenbook/web/SimpleServlet.java
package org.sonatype.mavenbook.web;

import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class SimpleServlet extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
        throws ServletException, IOException {

        PrintWriter out = response.getWriter();
        out.println( "SimpleServlet Executed" );
        out.flush();
        out.close();
    }
}

[eric@localhost simple-webapp]$ vi src/main/webapp/WEB-INF/web.xml 

<web-app>
  <display-name>Archetype Created Web Application</display-name>
    <servlet>
        <servlet-name>simple</servlet-name>
        <servlet-class>org.sonatype.mavenbook.web.SimpleServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>simple</servlet-name>
        <url-pattern>/simple</url-pattern>
    </servlet-mapping>
</web-app>

$ vi pom.xml

 <dependencies>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>

</dependencies>

[eric@localhost simple-webapp]$ curl http://localhost:8082/simple-webapp/simple
SimpleServlet Executed

/ 7	.

/ multi-module

/ we lezen	,
http://books.sonatype.com/mvnex-book/reference/multimodule-sect-intro.html

[eric@localhost Book]$ mvn archetype:generate
Choose a number: 3: 
Define value for property 'groupId': : org.sonatype.mavenbook.multi
Define value for property 'artifactId': : parent
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  org.sonatype.mavenbook.multi: : 



[eric@localhost Book]$ mvn archtetype:generate
1: remote -> org.codehaus.mojo.archetypes:pom-root (Root project archetype for creating multi module projects)

Define value for property 'groupId': : org.sonatype.mavenbook.multi
Define value for property 'artifactId': : simple-parent
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  org.sonatype.mavenbook.multi: : 

$ cd simple-parent

$ vi pom.xml

  <groupId>org.sonatype.mavenbook.multi</groupId>
  <artifactId>simple-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

/ we add	,

  <modules>
        <module>simple-weather</module>
        <module>simple-webapp</module>
    </modules>


[eric@localhost simple-parent]$ cp -a ../simple-weather/ ../simple-webapp/ .
[eric@localhost simple-parent]$ ls
pom.xml  simple-weather  simple-webapp

/ simple-weather

/ pas de pom file aan	, 

[eric@localhost simple-parent]$ vi simple-weather/pom.xml 

<!--
  <groupId>org.sonatype.mavenbook.web</groupId>
-->
        <parent>
 <groupId>org.sonatype.mavenbook.multi</groupId>
  <artifactId>simple-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
        </parent>
  <artifactId>simple-weather</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>jar</packaging>


/ simple-webapp

/ pas de pom file aan	, ook een dep naar simple-weather   add	,
/ add een weather servlet	,

/ in simple-webapp add we ook een weather servlet	,

[eric@localhost simple-parent]$ vi simple-webapp/pom.xml 

<!--
  <groupId>org.sonatype.mavenbook.web</groupId>
-->
        <parent>
  <groupId>org.sonatype.mavenbook.multi</groupId>
  <artifactId>simple-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
        </parent>
  <artifactId>simple-webapp</artifactId>

  <packaging>war</packaging>
...
 <dependencies>
...
        <dependency>
            <groupId>org.sonatype.mavenbook.multi</groupId>
            <artifactId>simple-weather</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>


[eric@localhost simple-webapp]$ vi src/main/java/org/sonatype/mavenbook/web/WeatherServlet.java
package org.sonatype.mavenbook.web;

import org.sonatype.mavenbook.weather.WeatherService;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class WeatherServlet extends HttpServlet {
    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
        throws ServletException, IOException {
        String zip = request.getParameter("zip" );
        WeatherService weatherService = new WeatherService();
        PrintWriter out = response.getWriter();
        try {
            out.println( weatherService.retrieveForecast( zip ) );
        } catch( Exception e ) {
            out.println( "Error Retrieving Forecast: " + e.getMessage() );
        }
        out.flush();
        out.close();
    }
}



[eric@localhost simple-webapp]$ vi src/main/webapp/WEB-INF/web.xml 

<webapp>

...
  <servlet>
        <servlet-name>weather</servlet-name>
        <servlet-class>org.sonatype.mavenbook.web.WeatherServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>weather</servlet-name>
        <url-pattern>/weather</url-pattern>
    </servlet-mapping>

</webapp>

[eric@localhost simple-parent]$ mvn clean install

/ we moeten install	, want de weather servlet heeft dep op weather service uit simple-weather, en die haalt hij uit de local mvn repo	,

[eric@localhost simple-parent]$ cd simple-webapp/
[eric@localhost simple-webapp]$ mvn tomcat7:run
May 07, 2014 2:42:49 PM org.apache.catalina.startup.ContextConfig processAnnotationsJar
SEVERE: Unable to process Jar entry [com/ibm/icu/impl/data/LocaleElements_zh__PINYIN.class] from Jar [jar:file:/home/eric/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar!/] for annotations
/ TODO

[eric@localhost simple-parent]$ curl http://localhost:8082/simple-webapp/weather?zip=01201
*********************************
 Current Weather Conditions for:
  Pittsfield, MA, US
  
 Temperature: 34
   Condition: Fair
    Humidity: 89
  Wind Chill: 34
*********************************

[eric@localhost Book]$ mkdir ch-multi
[eric@localhost Book]$ mv simple-parent ch-multi/


/ 7	.

/ multi spring

[eric@localhost Book]$ mkdir ch-multispring
[eric@localhost Book]$ cd ch-multispring/
[eric@localhost ch-multispring]$ cp -a ../ch-multi/simple-parent/ .

[eric@localhost simple-parent]$ grep multi -r *
pom.xml:  <groupId>org.sonatype.mavenbook.multi</groupId>
simple-weather/pom.xml: <groupId>org.sonatype.mavenbook.multi</groupId>
simple-webapp/pom.xml:  <groupId>org.sonatype.mavenbook.multi</groupId>
simple-webapp/pom.xml:            <groupId>org.sonatype.mavenbook.multi</groupId>
/ multi-> multispring

$ vi pom.xml

  <modules>
        <module>simple-weather</module>
        <module>simple-webapp</module>

        <module>simple-command</module>
        <module>simple-model</module>
        <module>simple-persist</module>

    </modules>


/ we lezen	,
Previously, hibernate-annotations was released and versioned from hibernate core. But from version 3.5 and up it is included with hibernate core. And for some reason it was still released from 3.5.0 to 3.5.6 but you do not need it anymore.

And coming to hibernate-commons-annotations, it is a utility project used by annotations based hibernate sub-projects. It is used by other hibernate projects like hibernate-search and thus is maintained as a separate project and it is a compile time dependency for hibernate-core v3.6.0 and up.

/ Dus we include dep op hibernate en hibernate-commons-annotations	,













/ Einde MAVEN

/ COCOON

/ Lees	,
http://cocoon.apache.org/2.2/1159_1_1.html

[eric@localhost Maven]$ mvn archetype:generate -DarchetypeCatalog=http://cocoon.apache.org
...
[INFO] Generating project in Interactive mode
[INFO] No archetype defined. Using maven-archetype-quickstart (org.apache.maven.archetypes:maven-archetype-quickstart:1.0)
Choose archetype:
1: http://cocoon.apache.org -> org.apache.cocoon:cocoon-22-archetype-block-plain (Creates an empty Cocoon block; useful if you want to add another block to a Cocoon application)
2: http://cocoon.apache.org -> org.apache.cocoon:cocoon-22-archetype-block (Creates a Cocoon block containing some small samples)
3: http://cocoon.apache.org -> org.apache.cocoon:cocoon-22-archetype-webapp (Creates a web application configured to host Cocoon blocks. Just add the block dependencies)
Choose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): : 2
Define value for property 'groupId': : my.own.test
Define value for property 'artifactId': : myBlock1
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  my.own.test: : 
 Y: : 
[INFO] project created from Old (1.x) Archetype in dir: /home/eric/Devel/Java/Cocoon/myBlock1

[eric@localhost ]$ ls
myBlock1 ...


[eric@localhost myBlock1]$ find
.
./src
./src/main
./src/main/java
./src/main/java/my
./src/main/java/my/own
./src/main/java/my/own/test
./src/main/java/my/own/test/MyBean.java
./src/main/resources
./src/main/resources/COB-INF
./src/main/resources/COB-INF/demo
./src/main/resources/COB-INF/demo/spring-bean.jx.xml
./src/main/resources/COB-INF/demo/welcome.xslt
./src/main/resources/COB-INF/demo/welcome.xml
./src/main/resources/COB-INF/flow
./src/main/resources/COB-INF/flow/spring-bean.js
./src/main/resources/COB-INF/resource
./src/main/resources/COB-INF/resource/external
./src/main/resources/COB-INF/resource/external/README.txt
./src/main/resources/COB-INF/resource/internal
./src/main/resources/COB-INF/resource/internal/README.txt
./src/main/resources/COB-INF/sitemap.xmap
./src/main/resources/META-INF
./src/main/resources/META-INF/cocoon
./src/main/resources/META-INF/cocoon/spring
./src/main/resources/META-INF/cocoon/spring/demo-application-context.xml
./src/main/resources/META-INF/cocoon/spring/block-servlet-service.xml
./rcl.properties
./pom.xml

$ vi pom.xml

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.cocoon</groupId>
        <artifactId>cocoon-maven-plugin</artifactId>
        <version>1.0.0-M2</version>
        <executions>
          <execution>
            <id>prepare</id>
            <phase>compile</phase>
            <goals>
              <goal>prepare</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

/ Als we project import in eclipse	,
ERR
/ No marketplace entries found to handle cocoon-maven-plugin:1.0.0-M2:prepare in Eclipse.  Please see Help for more information.
/ TODO

/ Maar op de command line,	 
$ mvn install
$ mnv jetty:run
/ Geef	,
http://localhost:8888/myblock/
/ OK


[eric@localhost myblock]$ find
.
./src
./src/main
./src/main/java
./src/main/java/my
./src/main/java/my/own
./src/main/java/my/own/test
./src/main/java/my/own/test/MyBean.java
./src/main/resources
./src/main/resources/COB-INF
./src/main/resources/COB-INF/demo
./src/main/resources/COB-INF/demo/spring-bean.jx.xml
./src/main/resources/COB-INF/demo/welcome.xslt
./src/main/resources/COB-INF/demo/welcome.xml
./src/main/resources/COB-INF/flow
./src/main/resources/COB-INF/flow/spring-bean.js
./src/main/resources/COB-INF/resource
./src/main/resources/COB-INF/resource/external
./src/main/resources/COB-INF/resource/external/README.txt
./src/main/resources/COB-INF/resource/internal
./src/main/resources/COB-INF/resource/internal/README.txt
./src/main/resources/COB-INF/sitemap.xmap
./src/main/resources/META-INF
./src/main/resources/META-INF/cocoon
./src/main/resources/META-INF/cocoon/spring
./src/main/resources/META-INF/cocoon/spring/demo-application-context.xml
./src/main/resources/META-INF/cocoon/spring/block-servlet-service.xml
./target
./target/classes
./target/classes/COB-INF
./target/classes/COB-INF/demo
./target/classes/COB-INF/demo/spring-bean.jx.xml
./target/classes/COB-INF/demo/welcome.xslt
./target/classes/COB-INF/demo/welcome.xml
./target/classes/COB-INF/flow
./target/classes/COB-INF/flow/spring-bean.js
./target/classes/COB-INF/resource
./target/classes/COB-INF/resource/external
./target/classes/COB-INF/resource/external/README.txt
./target/classes/COB-INF/resource/internal
./target/classes/COB-INF/resource/internal/README.txt
./target/classes/COB-INF/sitemap.xmap
./target/classes/META-INF
./target/classes/META-INF/cocoon
./target/classes/META-INF/cocoon/spring
./target/classes/META-INF/cocoon/spring/demo-application-context.xml
./target/classes/META-INF/cocoon/spring/block-servlet-service.xml
./target/classes/my
./target/classes/my/own
./target/classes/my/own/test
./target/classes/my/own/test/MyBean.class
./target/myblock-1.0-SNAPSHOT.jar
./target/rcl
./target/rcl/webapp
./target/rcl/webapp/WEB-INF
./target/rcl/webapp/WEB-INF/cocoon
./target/rcl/webapp/WEB-INF/cocoon/rclwrapper.urlcl.conf
./target/rcl/webapp/WEB-INF/cocoon/rclwrapper.rcl.conf
./target/rcl/webapp/WEB-INF/cocoon/rclwrapper.properties
./target/rcl/webapp/WEB-INF/cocoon/spring
./target/rcl/webapp/WEB-INF/cocoon/spring/rcl.properties
./target/rcl/webapp/WEB-INF/cocoon/properties
./target/rcl/webapp/WEB-INF/cocoon/properties/rcl.properties
./target/rcl/webapp/WEB-INF/applicationContext.xml
./target/rcl/webapp/WEB-INF/lib
./target/rcl/webapp/WEB-INF/lib/commons-logging-api-1.1.jar
./target/rcl/webapp/WEB-INF/lib/commons-io-1.3.1.jar
./target/rcl/webapp/WEB-INF/lib/servlet-api-2.3.jar
./target/rcl/webapp/WEB-INF/lib/cocoon-rcl-webapp-wrapper-1.0.0-M2.jar
./target/rcl/webapp/WEB-INF/lib/log4j-1.2.14.jar
./target/rcl/webapp/WEB-INF/lib/commons-logging-1.1.jar
./target/rcl/webapp/WEB-INF/lib/commons-jci-fam-1.0.jar
./target/rcl/webapp/WEB-INF/lib/commons-jci-core-1.0.jar
./target/rcl/webapp/WEB-INF/log4j.xml
./target/rcl/webapp/WEB-INF/web.xml
./rcl.properties
./pom.xml
[eric@localhost myblock]$ 

$
/ 7	.







/ Einde COCOON

/ POSTGRES

[eric@localhost ~]$ sudo -u postgres createuser -d eric
could not change directory to "/home/eric": Permission denied
[eric@localhost eclipse-jee]$ sudo chmod a+x /home/eric
[eric@localhost ~]$ sudo -u postgres dropuser eric
[eric@localhost ~]$ sudo -u postgres createuser -d eric
[eric@localhost ~]$ createdb
[eric@localhost ~]$ psql
psql (9.3.4)
Type "help" for help.

eric=> \q

/ create user foo	,
[eric@localhost ~]$ sudo -u postgres createuser -d -P foo
Enter password for new role: 
Enter it again: 
[eric@localhost ~]$ psql -U foo
Password for user foo: 
psql: FATAL:  database "foo" does not exist

local   all            postgres                                 peer
local   all             eric                                    peer
local   all             foo                                     md5
local   all             mpopostgres                             md5

[eric@localhost ~]$ psql -U mpopostgres -W mpo
Password for user mpopostgres: 
psql (9.3.4)
Type "help" for help.

mpo=> \q



[eric@localhost ~]$ psql -U mpopostgres -W mpo < ~/Devel/Java/DB/mpo.dump 

/ postgres login	,
mpopostgres
mpopostgres@mpo

[eric@localhost ~]$ psql -U mpopostgres -W mpo 
Password for user mpopostgres: 
psql (9.3.4)
Type "help" for help.

mpo=> select * from tms_user where user_id='all-admin';
 system_id |  user_id  |        user_name        | user_email_address  | is_enabled | is_delete
d |     last_login      | login_attempt | is_first_login | last_password_update | chargeable | 
grace_login | created_by | created_on | user_password | is_interface_account | user_reference1 
| user_reference2 
-----------+-----------+-------------------------+---------------------+------------+----------
--+---------------------+---------------+----------------+----------------------+------------+-
------------+------------+------------+---------------+----------------------+-----------------
+-----------------
     10100 | all-admin | All sites administrator | info@mp-objects.com |          1 |          
0 | 2013-12-03 14:06:02 |             0 |              0 | 2013-04-25 00:00:00  |          0 | 
   65656565 |            |            | admin123@MPO  |                    0 |                 
| 
(1 row)

/ we zien inlog voor in 
http://127.0.0.1:8080/tms/core/index_frameset
all-admin
admin123@MPO

/ 7	.

/ postgres heeft true/false, wij 1/0	,

[eric@localhost ~]$ psql -U mpopostgres -W mpo 

postgres=# create user mpopostgres createdb password 'mpopostgres@mpo'\g

postgres=# create database mpo \g

postgres=# CREATE CAST (boolean AS smallint)
WITH FUNCTION int2(boolean)
AS IMPLICIT;

[eric@localhost ~]$ psql -U mpopostgres -W mpo 
Password for user mpopostgres: 
psql (9.3.4)
Type "help" for help.

mpo=> CREATE OR REPLACE FUNCTION int2(boolean)
RETURNS smallint AS
$BODY$
begin
if $1 then return 1; else return 0; end if;
end;
$BODY$
LANGUAGE plpgsql;

/ 7	.

select resource0_.SYSTEM_ID as SYSTEM1_80_, resource0_.USER_ID as USER2_80_, resource0_.USER_NAME as USER3_80_, resource0_.USER_PASSWORD as USER4_80_, resource0_.USER_EMAIL_ADDRESS as USER5_80_, resource0_.IS_ENABLED as IS6_80_, resource0_.IS_INTERFACE_ACCOUNT as IS7_80_, resource0_.IS_DELETED as IS8_80_, resource0_.LAST_LOGIN as LAST9_80_, resource0_.LAST_PASSWORD_UPDATE as LAST10_80_, resource0_.USER_REFERENCE1 as USER11_80_, resource0_.USER_REFERENCE2 as USER12_80_, resource0_.LOGIN_ATTEMPT as LOGIN13_80_, resource0_.GRACE_LOGIN as GRACE14_80_, resource0_.IS_FIRST_LOGIN as IS15_80_, resource0_.CHARGEABLE as CHARGEABLE80_, resource0_.CREATED_BY as CREATED17_80_, resource0_.CREATED_ON as CREATED18_80_ from TMS_USER resource0_ where resource0_.USER_ID=1 and resource0_.IS_DELETED=0]


/ 7	.

host    all             all             127.0.0.1/32           md5
host    all             all             ::1/128                md5

[eric@localhost ~]$ createdb -h localhost -U foo foo
Password: foo
[eric@localhost ~]$ createdb -h localhost -U foo bar
Password: foo 
/ OK

[eric@localhost ~]$ psql -U foo -h localhost
/ =
[eric@localhost ~]$ psql -U foo
/ Hier maakt het niet uit, -h localhost of niet	,
/ TODO

foo=> \l
                                  List of databases
   Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges   
-----------+----------+----------+-------------+-------------+-----------------------
 bar       | foo      | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 eric      | eric     | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 foo       | foo      | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 mpo       | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 template0 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
           |          |          |             |             | postgres=CTc/postgres
 template1 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
           |          |          |             |             | postgres=CTc/postgres
(7 rows)

foo=> \h create database
Command:     CREATE DATABASE
Description: create a new database
Syntax:
CREATE DATABASE name
    [ [ WITH ] [ OWNER [=] user_name ]
           [ TEMPLATE [=] template ]
           [ ENCODING [=] encoding ]
           [ LC_COLLATE [=] lc_collate ]
           [ LC_CTYPE [=] lc_ctype ]
           [ TABLESPACE [=] tablespace_name ]
           [ CONNECTION LIMIT [=] connlimit ] ]



/ SAMENVATTING

/ create database

/ 7	.

foo=> create database baz
foo-> \g
CREATE DATABASE

$ psql -U foo
Password for user foo: foo
foo=> create database fee\g
CREATE DATABASE

/ 7	.

[eric@localhost ~]$ createdb -U foo gee
Password: foo

/ Einde SAMENVATTING

/ Lees	,
http://www.postgresql.org/docs/current/static/multibyte.html#MULTIBYTE-CHARSET-SUPPORTED

/ 7	.

[eric@localhost mvnexbook-examples-1.0]$ $(awk '{print "ls -l",$0}' <(locate mpo.dump) )
/ OK

[eric@localhost Postgres]$ pwd
/home/eric/Devel/Postgres
[eric@localhost Postgres]$ ls
mpofirst_backup.dump  mpofirst.dump  mpofirst_redundant.dump  mposecond.dump

/ mpofirst is 1ste mpo van Pascal
/ mposecond is 1ste mpo van Pascal
/ mpofirst_backup is backup van mpofirst
/ mpofirst_redundant moet WH rm	,

/ Einde POSTGRES

/ POSTGRES

/ 7	. 

/ \x is extended display	,

[eric@localhost mvnexbook-examples-1.0]$ psql -U foo <<X
\x
select*from item
> X
Password for user foo: 
Expanded display is on.
-[ RECORD 1 ]---
id_  | 1
name | second
city | Rotterdam

[eric@localhost mvnexbook-examples-1.0]$ psql -U foo <<X
create database moo
> X
Password for user foo: 
CREATE DATABASE
[eric@localhost mvnexbook-examples-1.0]$ psql -U foo <<X
drop database moo
X
Password for user foo: 
DROP DATABASE
[eric@localhost mvnexbook-examples-1.0]$ psql -U foo <<X
create database moo
> X
Password for user foo: 
CREATE DATABASE
[eric@localhost mvnexbook-examples-1.0]$ psql -U foo moo <<X
> create table item(i int,s varchar(32))
> X
Password for user foo: 
CREATE TABLE
[eric@localhost mvnexbook-examples-1.0]$ psql -U foo <<X
drop database moo                   
X               
Password for user foo: 
DROP DATABASE


[eric@localhost mvnexbook-examples-1.0]$ psql -U foo moo </home/eric/Devel/Postgres/mpofirst.dump 
...
CREATE TABLE
ERROR:  must be member of role "mpopostgres"
...
ALTER TABLE
WARNING:  no privileges could be revoked for "public"
REVOKE
WARNING:  no privileges could be revoked for "public"
REVOKE
WARNING:  no privileges were granted for "public"
GRANT
WARNING:  no privileges were granted for "public"
GRANT




/ Einde POSTGRES

/ TOMCAT

[eric@localhost ~]$ sudo yum install tomcat

Installing:
 tomcat                               noarch           7.0.47-1.fc20             fedora            83 k
Installing for dependencies:
 apache-commons-collections           noarch           3.2.1-19.fc20             fedora           505 k
 apache-commons-daemon                x86_64           1.0.15-4.fc20             fedora            54 k
 apache-commons-dbcp                  noarch           1.4-14.fc20               fedora           166 k
 apache-commons-logging               noarch           1.1.3-7.fc20              fedora            82 k
 apache-commons-pool                  noarch           1.6-7.fc20                fedora           119 k
 avalon-framework                     noarch           4.3-9.fc20                fedora            87 k
 avalon-logkit                        noarch           2.1-13.fc20               fedora            87 k
 ecj                                  x86_64           1:4.2.1-9.fc20            fedora           1.6 M
 geronimo-jms                         noarch           1.1.1-17.fc20             fedora            32 k
 geronimo-jta                         noarch           1.1.1-15.fc20             fedora            21 k
 javamail                             noarch           1.5.0-6.fc20              fedora           606 k
 log4j                                noarch           1.2.17-14.fc20            fedora           449 k
 tomcat-el-2.2-api                    noarch           7.0.47-1.fc20             fedora            66 k
 tomcat-jsp-2.2-api                   noarch           7.0.47-1.fc20             fedora            90 k
 tomcat-lib                           noarch           7.0.47-1.fc20             fedora           3.5 M
 tomcat-servlet-3.0-api               noarch           7.0.47-1.fc20             fedora           187 k

/ Later	,

/ 7	.

[eric@localhost Tomcat]$ tar -xvzf ~/Downloads/apache-tomcat-7.0.53.tar.gz 

[eric@localhost apache-tomcat-7.0.53]$ sudo yum install bashdb

/ 7	.

/ we kunnen NIET	,
[eric@localhost apache-tomcat-7.0.53]$ pwd
/home/eric/Devel/Java/Tomcat/apache-tomcat-7.0.53
$ mkdir webapps/test
[eric@localhost apache-tomcat-7.0.53]$ vi webapps/test/index.html
Foo

/we geven	,
localhost:8080/test
/ OK



/ 7	. 

/ In tomcat docs	,
http://tomcat.apache.org/tomcat-7.0-doc/index.html
/ zien we First webapp	,
/ we komen in App Dev Guide Home 
http://tomcat.apache.org/tomcat-7.0-doc/appdev/index.html

/ 7	. 

/ Verander de port	, 

$ vi conf/server.xml

    <Connector port="8081" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />


    <!-- A "Connector" using the shared thread pool-->
    <!--
    <Connector executor="tomcatThreadPool"
               port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />
    -->
/ TODO

/ Geef localhost:8081
/ OK

/ 7	.

[eric@localhost apache-tomcat-7.0.53]$ cp webapps/docs/appdev/sample/sample.war webapps/
[eric@localhost apache-tomcat-7.0.53]$ ls webapps/
docs  examples  host-manager  manager  ROOT  sample  sample.war  test

/ Inderdaad	, wordt extract	,

/ Geef	,
http://localhost:8081/sample/
/ OK




/ Einde TOMCAT

/ JBOSS

/ Voor EAP 6.2.0GA moeten we login	,
ericjvandervelden
vlWalnoot27

[eric@localhost JBoss]$ pwd
/home/eric/Devel/Java/JBoss
[eric@localhost JBoss]$ unzip ~/Downloads/jboss-as-7.1.1.Final.zip 

[eric@localhost jboss-as-7.1.1.Final]$ pwd
/home/eric/Devel/Java/JBoss/jboss-as-7.1.1.Final

$ bin/standalone.sh

/ Geef	,
localhost:8080
/ OK

/ 7	. 

Help, install new software	,

/ Ga naar	,
http://tools.jboss.org/downloads/

/ click JBoss Tools 4.1.2.Final,
http://tools.jboss.org/downloads/jbosstools/kepler/4.1.2.Final.html

/click update site tab	, copy url	,

/ In Help, install new software	, 
jbosstools - http://download.jboss.org/jbosstools/updates/stable/kepler/

/ Als we Add , dan kun je hem de volgende keer use, onder een name, die je dan moet  geven	,

/ 7	. 



/ Einde JBOSS 


/ SPRING

$ mvn archteype:generate
/ filter op spring	,
36: remote -> org.jboss.spring.archetypes:jboss-spring-mvc-archetype (An archetype that generates a starter Spring MVC application with Java EE persistence settings (server bootstrapped JPA, JTA transaction management) for JBoss AS7)
37: remote -> org.jboss.spring.archetypes:spring-mvc-webapp (An archetype that generates a starter Spring MVC application with Java EE persistence settings (server bootstrapped JPA, JTA transaction management) for JBoss AS7)
41: remote -> org.springframework.ws:spring-ws-archetype (Spring Web Services Maven2 Archetype.)
/ TODO

/ Ga naar	,
http://mvnrepository.com/tags/spring

/ Ga naar	,
http://mvnrepository.com/artifact/org.springframework/spring-hibernate3

/ Lees	,
https://spring.io/guides/gs/maven/

/ 7	.

/Lees	,
http://projects.spring.io/spring-framework/

/ ga eerst naar	,
http://spring.io/
/ click projects	,
/ click sprring framework
http://projects.spring.io/spring-framework/

[eric@localhost Spring]$ mvn archetype:generate
Define value for property 'groupId': : projects.spring.io
Define value for property 'artifactId': : intro 
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  projects.spring.io: : 

[eric@localhost intro]$ pwd
/home/eric/Devel/Java/Spring/intro
[eric@localhost intro]$ mvn clean assembly:assembly
[eric@localhost intro]$  java -cp target/intro-1.0-SNAPSHOT-jar-with-dependencies.jar projects.spring.io.Application
May 07, 2014 7:40:00 AM org.springframework.context.annotation.AnnotationConfigApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dcadba6: startup date [Wed May 07 07:40:00 CEST 2014]; root of context hierarchy
Hello World!
/ OK

/ 7	. 

/ book	,

[eric@localhost Spring]$ mvn archetype:generate
Define value for property 'groupId': : sia.ch01
Define value for property 'artifactId': : knight
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  sia.ch01: : 

/ quest=zoektocht, search
/ embark=inschepen, 

/ Lees	,
http://www.mkyong.com/spring/quick-start-maven-spring-example/

/ Lees	,
http://docs.spring.io/spring/docs/4.0.4.RELEASE/spring-framework-reference/htmlsingle/#beans-factory-xml-import
/ we copy de xml file daarvandaan	,

/ Lees het boek	,

[eric@localhost knight]$ pwd
/home/eric/Devel/Java/Spring/knight

[eric@localhost knight]$ vi src/main/java/sia/ch01/App.java 

package sia.ch01;
import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.core.io.FileSystemResource;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class App {
    public static void main( String[] args ) throws Exception{
        //BeanFactory f=new XmlBeanFactory(new FileSystemResource("target/classes/knight.xml"));
        // OK

        //BeanFactory f=new XmlBeanFactory(App.class.getResourceAsStream("knight.xml"));
        // TODO

        ApplicationContext c=new ClassPathXmlApplicationContext("knight.xml");

        //Knight k=(Knight)f.getBean("knight");

        Knight k=(Knight)c.getBean("knight");

        k.embarkOnQuest();
    }
}



[eric@localhost knight]$ vi src/main/resources/knight.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean       
        id="quest" 
        class="sia.ch01.HolyGrailQuest"></bean>
    <bean 
        id="knight" 
        class="sia.ch01.KnightOfTheRoundTable">
        <property name="quest" ref="quest"/>
        <constructor-arg
                value="Bedivere"/></bean></beans>


[eric@localhost knight]$ vi src/main/java/sia/ch01/Quest.java

package sia.ch01;
public interface Quest{
        Object embark()throws QuestFailedException;
}

[eric@localhost knight]$ vi src/main/java/sia/ch01/HolyGrailQuest.java

package sia.ch01;
public class HolyGrailQuest implements Quest{
        public Object embark()throws QuestFailedException{
                return new HolyGrail();
        }
}

[eric@localhost knight]$ vi src/main/java/sia/ch01/Knight.java

package sia.ch01;
public interface Knight{
        Object embarkOnQuest()throws QuestFailedException;
}

[eric@localhost knight]$ vi src/main/java/sia/ch01/KnightOfTheRoundTable.java

package sia.ch01;
public class KnightOfTheRoundTable implements Knight{
        private String name;
        private Quest quest;
        public KnightOfTheRoundTable(){
        }
        public KnightOfTheRoundTable(String name){
                this.name=name;
        }
        public void setQuest(Quest quest){
                this.quest=quest;
        }
        public Object embarkOnQuest()throws QuestFailedException{
                return quest.embark();
        }
}




[eric@localhost knight]$ vi src/main/java/sia/ch01/QuestFailedException.java

package sia.ch01;
public class QuestFailedException extends Exception{
}
~   
 
[eric@localhost knight]$ vi src/main/java/sia/ch01/HolyGrail.java

package sia.ch01;
public class HolyGrail{
        public HolyGrail(){
                System.out.println("HolyGrail!");
        }
}

[eric@localhost knight]$ mvn clean assembly:assembly 
[eric@localhost knight]$ java -cp target/knight-1.0-SNAPSHOT-jar-with-dependencies.jar sia.ch01.App 
May 07, 2014 10:28:45 AM org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@f7bd29: startup date [Wed May 07 10:28:45 CEST 2014]; root of context hierarchy
May 07, 2014 10:28:45 AM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [knight.xml]
HolyGrail!







/ Einde SPRING

/ MPO

mpo-SECRET-10

https://system.mp-objects.com/jira/secure/TempoUserBoard!timesheet.jspa

