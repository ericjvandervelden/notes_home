/ See COMPOSE
/ See GETTING STARTED
/ See STUDY POSTGRES IN CONTAINER
/ see DOCKER-COMPOSE STOP VS DOWN
/ See DOCKER MANAGE APPLICTION DATA
/ See DOCKER COMPOSE
/ See DOCKERFILE
/ See DOCKER SWARM
/ See DOCKER SWARM COMMANDS

/ 7	. 

/ in het 1ste window	, 	
[eric@almond locale]$ docker run -ti --rm --name foo -v /foo my/fedora-locale bash
[root@23b818512335 /]# ls foo
[root@413426a843b1 /]# 

/ in een ander window	,
[eric@almond locale]$ docker stop foo
foo

/ in het 1ste window	,

[eric@almond locale]$ docker run -ti --rm --name foo -v /foo my/fedora-locale bash
[root@413426a843b1 /]# ls foo
[root@413426a843b1 /]# exit
[eric@almond locale]$ 

/ 7	. 

/ in het 1ste window	, 	
[eric@almond locale]$ docker run -ti --rm --name foo -v /foo my/fedora-locale bash
[root@23b818512335 /]# ls foo
[root@413426a843b1 /]# 

/ in het 2de window	,

[eric@almond locale]$ docker inspect foo
        "Mounts": [
            {
                "Name": "47560c5ac452680f791efb2beb3ac90daf5fd1a4a5989e245f457f5134705b3a",
                "Source": "/var/lib/docker/volumes/47560c5ac452680f791efb2beb3ac90daf5fd1a4a5989e245f457f5134705b3a/_data",
                "Destination": "/foo",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],

/ 13	. 

/ we kunnen ook de host dir geven , ipv. /var/lib/docker/volumes/47560c5ac452680f791efb2beb3ac90daf5fd1a4a5989e245f457f5134705b3a/_data

[eric@almond locale]$ docker run --rm  -ti --name foo -v /tmp/_data:/foo my/fedora-locale bash
[root@4352bed16855 /]# 

/ dir /tmp/_data wordt gemaakt, en is van root.root	,

/ in 2de window,

[eric@almond locale]$ docker inspect foo
        "Mounts": [
            {
                "Source": "/tmp/_data",
                "Destination": "/foo",
                "Mode": "",
                "RW": true,
                "Propagation": "rprivate"
            }
        ],

[eric@almond locale]$ sudo  touch /tmp/_data/foo.txt

/ in 1ste window, 	
[root@4352bed16855 /]# ls foo
foo.txt

/ in 2de window	, 
[eric@almond locale]$ docker stop foo

 /in 1ste window	,
[root@4352bed16855 /]# exit
[eric@almond locale]$ 

[eric@almond locale]$ ls -ld /usr/bin/docker 
-rwxr-xr-x. 1 root root 33486864 Mar 10  2016 /usr/bin/docker
[eric@almond locale]$ ls -ld /tmp/_data/
drwxr-xr-x. 2 root root 60 Jan 28 22:19 /tmp/_data/
/ eric kan docker, maar niet write in /tmp/_data

[eric@almond locale]$ groups 
eric wheel docker
/ TODO


/ 7	. 

/ google
docker delete container
/ lees	,
https://zaiste.net/posts/removing_docker_containers/

/ 7	. 

[eric@almond sshd]$ pwd
/home/eric/Devel/Docker2/fedora/sshd
[eric@almond sshd]$ cat Dockerfile 

from my/fedora-locale 
run dnf -y install openssh-server openssh-clients
run dnf -y install less procps-ng hostname iputils
run setcap cap_net_raw,cap_net_admin+p /usr/bin/ping

run dnf -y install net-tools 

run ssh-keygen -A

expose 22

run ssh-keygen -N "" -t rsa -f ~/.ssh/id_rsa
run cat /root/.ssh/id_rsa.pub >>~/.ssh/authorized_keys

copy script.sh /

entrypoint ["/script.sh"]

#run echo 'root:walnoot' | chpasswd
#run echo "PermitRootLogin yes">>/etc/ssh/sshd_config

#run [ ! -e ~/.ssh ] && mkdir ~/.ssh
#run if [ ! -e ~/.ssh ];then mkdir ~/.ssh;fi
#copy id_dsa.pub /tmp/
#run cat  /tmp/id_dsa.pub  >> ~/.ssh/authorized_keys

#cmd /usr/sbin/sshd -D
#cmd /usr/bin/bash
#cmd /usr/lib/systemd/systemd

[eric@almond sshd]$ docker build --rm -t my/fedora-sshd .

/ we hebben de net-tools regel add, en opnieuw build	, en run, maar de prompt kwam niet,  
/ we hadden toen eerst my/fedora-locale opnieuw build	, 
/ en toen deze weer build	, dan begint hij van voren af aan, dus na de from-regel	, en toen deze run het wel	,
/ TODO

/ we moeten bash erachter set	, 
[eric@almond sshd]$ docker run --rm -ti --network=my-bridge my/fedora-sshd bash
/ OK	,
[root@c2bc5f161024 /]# ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.18.0.2  netmask 255.255.0.0  broadcast 0.0.0.0
        inet6 fe80::42:acff:fe12:2  prefixlen 64  scopeid 0x20<link>
        ether 02:42:ac:12:00:02  txqueuelen 0  (Ethernet)
        RX packets 15  bytes 2847 (2.7 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 5  bytes 426 (426.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

/ 7	. 

/ lees Product manuals, Docker compose
https://docs.docker.com/v1.13/compose/reference/overview/


/ 7	. 

/ docker network

/ lees Guide, User Guide, Docker container networking	,
https://docs.docker.com/v1.13/engine/userguide/networking/

/ op de host	,
[eric@almond postgres]$ ifconfig
docker0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.1  netmask 255.255.0.0  broadcast 0.0.0.0

/ start een container,
[eric@almond postgres]$ docker run --network=bridge --rm -ti my/fedora-locale bash
[root@c8df358305f6 /]# ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.3  netmask 255.255.0.0  broadcast 0.0.0.0

/ start er nog een	,
[eric@almond volume]$ docker run --network=bridge --rm -ti my/fedora-locale bash
[root@421ac8c5fc16 /]# ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.4  netmask 255.255.0.0  broadcast 0.0.0.0

/ 7	. 

/ ping	,

[eric@almond ping]$ pwd
/home/eric/Devel/Docker2/fedora/ping
[eric@almond ping]$ cat Dockerfile 
from my/fedora-locale 
run dnf -y install less hostname iputils
run setcap cap_net_raw,cap_net_admin+p /usr/bin/ping

/ start 2 containers op	,

[eric@almond ping]$ docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
793da16b3458        my/fedora-ping      "bash"              About an hour ago   Up About an hour                        awesome_curran
94f68ff233b3        my/fedora-ping      "bash"              About an hour ago   Up About an hour                        angry_fermat

/ we zien dat in de container /etc/resolv.conf een copy is van die van de host	, 
/ maar /etc/hosts niet,
/ TODO

[eric@almond postgres_cp]$  mount | grep docker
/dev/mapper/fedora-root on /var/lib/docker/containers type ext4 (rw,relatime,seclabel,data=ordered)
/dev/mapper/fedora-root on /var/lib/docker/devicemapper type ext4 (rw,relatime,seclabel,data=ordered)
/dev/mapper/docker-253:1-2504345-8acb71b97f14483b9fe6dce33f6543c2410792e56c4edbe493a260d4e19fc7cc on /var/lib/docker/devicemapper/mnt/8acb71b97f14483b9fe6dce33f6543c2410792e56c4edbe493a260d4e19fc7cc type ext4 (rw,relatime,context="system_u:object_r:container_file_t:s0:c216,c636",stripe=16,data=ordered)
shm on /var/lib/docker/containers/94f68ff233b3156f3ab8d35c4f95717da2091fe98ea4d84f8352ba72e863b633/shm type tmpfs (rw,nosuid,nodev,noexec,relatime,context="system_u:object_r:container_file_t:s0:c216,c636",size=65536k)
nsfs on /run/docker/netns/b1cd3868d31b type nsfs (rw,seclabel)
/dev/mapper/docker-253:1-2504345-4ec970fee1fa013d011e194e8decba6e403f4e395827e958c309d7a95fbda878 on /var/lib/docker/devicemapper/mnt/4ec970fee1fa013d011e194e8decba6e403f4e395827e958c309d7a95fbda878 type ext4 (rw,relatime,context="system_u:object_r:container_file_t:s0:c483,c863",stripe=16,data=ordered)
shm on /var/lib/docker/containers/793da16b3458df6c381b26881abf25515e4349b93b4317227c34e4e1e3f8627c/shm type tmpfs (rw,nosuid,nodev,noexec,relatime,context="system_u:object_r:container_file_t:s0:c483,c863",size=65536k)
nsfs on /run/docker/netns/53052e8f2deb type nsfs (rw,seclabel)

/ Dit zijn de 2 containers	,
/dev/mapper/docker-253:1-2504345-8acb71b97f14483b9fe6dce33f6543c2410792e56c4edbe493a260d4e19fc7cc on /var/lib/docker/devicemapper/mnt/8acb71b97f14483b9fe6dce33f6543c2410792e56c4edbe493a260d4e19fc7cc type ext4 (rw,relatime,context="system_u:object_r:container_file_t:s0:c216,c636",stripe=16,data=ordered)
/dev/mapper/docker-253:1-2504345-4ec970fee1fa013d011e194e8decba6e403f4e395827e958c309d7a95fbda878 on /var/lib/docker/devicemapper/mnt/4ec970fee1fa013d011e194e8decba6e403f4e395827e958c309d7a95fbda878 type ext4 (rw,relatime,context="system_u:object_r:container_file_t:s0:c483,c863",stripe=16,data=ordered)

eric@almond postgres_cp]$ docker inspect awesome_curran 
        "ResolvConfPath": "/var/lib/docker/containers/793da16b3458df6c381b26881abf25515e4349b93b4317227c34e4e1e3f8627c/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/793da16b3458df6c381b26881abf25515e4349b93b4317227c34e4e1e3f8627c/hostname",
        "HostsPath": "/var/lib/docker/containers/793da16b3458df6c381b26881abf25515e4349b93b4317227c34e4e1e3f8627c/hosts",
                "DeviceName": "docker-253:1-2504345-4ec970fee1fa013d011e194e8decba6e403f4e395827e958c309d7a95fbda878",
            "Gateway": "172.17.0.1",
            "IPAddress": "172.17.0.3",
                    "MacAddress": "02:42:ac:11:00:03"

[eric@almond postgres_cp]$ docker inspect angry_fermat 
        "ResolvConfPath": "/var/lib/docker/containers/94f68ff233b3156f3ab8d35c4f95717da2091fe98ea4d84f8352ba72e863b633/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/94f68ff233b3156f3ab8d35c4f95717da2091fe98ea4d84f8352ba72e863b633/hostname",
        "HostsPath": "/var/lib/docker/containers/94f68ff233b3156f3ab8d35c4f95717da2091fe98ea4d84f8352ba72e863b633/hosts",
                "DeviceName": "docker-253:1-2504345-8acb71b97f14483b9fe6dce33f6543c2410792e56c4edbe493a260d4e19fc7cc",
            "Gateway": "172.17.0.1",
            "IPAddress": "172.17.0.2",
                    "MacAddress": "02:42:ac:11:00:02"

/ 13	. 

/ als we mount in de container	,

[root@94f68ff233b3 /]# mount
/dev/mapper/docker-253:1-2504345-8acb71b97f14483b9fe6dce33f6543c2410792e56c4edbe493a260d4e19fc7cc on / type ext4 (rw,relatime,context="system_u:object_r:container_file_t:s0:c216,c636",stripe=16,data=ordered)
/dev/mapper/fedora-root on /etc/resolv.conf type ext4 (rw,relatime,seclabel,data=ordered)
/dev/mapper/fedora-root on /etc/hostname type ext4 (rw,relatime,seclabel,data=ordered)
/dev/mapper/fedora-root on /etc/hosts type ext4 (rw,relatime,seclabel,data=ordered)
shm on /dev/shm type tmpfs (rw,nosuid,nodev,noexec,relatime,context="system_u:object_r:container_file_t:s0:c216,c636",size=65536k)
/ TODO

/ op de host,
[eric@almond ping]$ cat /etc/hosts
127.0.0.1		localhost.localdomain localhost
::1		localhost6.localdomain6 localhost6

192.168.123.182 almond.nuts.org almond  www.example.com www.first.com www.cgi.com
fe80::2e44:fdff:fe68:82d4 almond.nuts.org almond  www.example.com www.first.com www.cgi.com

/ in de container,
[root@94f68ff233b3 /]# cat /etc/hosts
127.0.0.1	localhost
::1	localhost ip6-localhost ip6-loopback
fe00::0	ip6-localnet
ff00::0	ip6-mcastprefix
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters
172.17.0.2	94f68ff233b3

/ we zien dus de hostname van hemzelf al in /etc/hosts	,

/ 13	. 

/ we kunnen ping in beide containers naar elkaar	,

[root@94f68ff233b3 /]# ping 172.17.0.3
PING 172.17.0.3 (172.17.0.3) 56(84) bytes of data.
64 bytes from 172.17.0.3: icmp_seq=1 ttl=64 time=0.116 ms
64 bytes from 172.17.0.3: icmp_seq=2 ttl=64 time=0.117 ms
/ OK

[root@793da16b3458 /]# ping 172.17.0.2
PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.
64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.140 ms
64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.074 ms
/ OK

/ als we /etc/hosts edit, kunnen we ook met hostname ping,

[root@94f68ff233b3 /]# cat /etc/hosts
...
172.17.0.3 	793da16b3458	

[root@94f68ff233b3 /]# ping 793da16b3458
PING 793da16b3458 (172.17.0.3) 56(84) bytes of data.
64 bytes from 793da16b3458 (172.17.0.3): icmp_seq=1 ttl=64 time=0.147 ms
64 bytes from 793da16b3458 (172.17.0.3): icmp_seq=2 ttl=64 time=0.123 ms
/ OK	,

/ 7	. 

/ we oef met sshd	,

/ lees	,
https://www.ssh.com/ssh/keygen/
https://www.ssh.com/ssh/authorized_keys/openssh
https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/
https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2
http://www.linuxproblem.org/art_9.html	/ password less login 

/ we hebben de ping-container running, en we geven de commands zoals in sshd/Dockerfile staan	,

/ we doen in beide containers,
root@13063edf87a7 /]# dnf -y install openssh-server openssh-clients

[root@13063edf87a7 /]# ssh-keygen -A
ssh-keygen: generating new host keys: RSA DSA ECDSA ED25519 
/ TODO

expose 22
/ Dit kan alleen in Dockerfile	,

run ssh-keygen -N "" -t rsa -f ~/.ssh/id_rsa
run cat /root/.ssh/id_rsa.pub >>~/.ssh/authorized_keys

Authorized keys specify which users are allowed to log into a server using public key authentication in SSH.

[root@c179b03f57ae /]# /usr/sbin/sshd -D
Could not load host key: /etc/ssh/ssh_host_rsa_key
Could not load host key: /etc/ssh/ssh_host_ecdsa_key
Could not load host key: /etc/ssh/ssh_host_ed25519_key
/ Doe daarom	, 
[root@1c2218de9fd2 /]# ls /etc/ssh
moduli  ssh_config  sshd_config
# ssh-keygen -A
[root@c179b03f57ae /]# ls /etc/ssh/
moduli       ssh_host_dsa_key      ssh_host_ecdsa_key.pub    ssh_host_rsa_key
ssh_config   ssh_host_dsa_key.pub  ssh_host_ed25519_key      ssh_host_rsa_key.pub
sshd_config  ssh_host_ecdsa_key    ssh_host_ed25519_key.pub
[root@c179b03f57ae /]# /usr/sbin/sshd -D
/ OK	,

/ 13	. 

/ we hebben op de 2de container 	,
[root@1c2218de9fd2 /]# /usr/sbin/sshd
/ we hebben op de 1ste container, 
# vi /etc/hosts
172.17.0.3	1c2218de9fd2

/ we doen op de 1ste container	,
[root@c179b03f57ae /]# ssh 1c2218de9fd2
The authenticity of host '1c2218de9fd2 (172.17.0.3)' can't be established.
ECDSA key fingerprint is SHA256:ufLgeORxZLxge0KJ1uc8rFPxUGRz7FkQwm8HlOsJZ/M.
ECDSA key fingerprint is MD5:89:33:24:10:39:25:90:80:01:1f:0d:fa:6a:fe:d3:90.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '1c2218de9fd2,172.17.0.3' (ECDSA) to the list of known hosts.
root@1c2218de9fd2's password: 
/ TODO
[root@c179b03f57ae /]# cat ~/.ssh/known_hosts 
1c2218de9fd2,172.17.0.3 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFxlLsLdr0zKL39ggYSjKNU5YkTpliFI3MMMTuRlzCDTqJAB85BZxXb/DfPjOYFhvgVDjCBPA+YMfsTbjqOhGjs=

[root@c179b03f57ae /]# cat  ~/.ssh/id_rsa.pub | ssh 1c2218de9fd2 'cat >>~/.ssh/authorized_keys' 
root@1c2218de9fd2's password: 
/ TODO

/ we doen dat niet zo in de Dockerfile van sshd	, 
/ daar set we de id_rsa.pub in de ~/.ssh/authorized_keys in de image	,

[root@c179b03f57ae /]# dnf -y install passwd
[root@c179b03f57ae /]# passwd
Changing password for user root.
New password: VldWalnoot27
Retype new password: 
passwd: all authentication tokens updated successfully.
/ Ook op 1c2218de9fd2 

[root@c179b03f57ae /]# ssh 1c2218de9fd2 
root@1c2218de9fd2's password: 
[root@1c2218de9fd2 ~]# 
/ OK 

/ Nu gaan we regelen dat we zonder wachtwoord kunnen login	,

[root@c179b03f57ae /]# cat ~/.ssh/id_rsa.pub | ssh 1c2218de9fd2 "cat >>~/.ssh/authorized_keys"
root@1c2218de9fd2's password: VldWalnoot27
/ en dan	,
[root@c179b03f57ae /]# ssh 1c2218de9fd2
Last login: Sun Sep 16 20:48:58 2018 from 172.17.0.2
[root@1c2218de9fd2 ~]# cat ~/.ssh/
authorized_keys  id_rsa           id_rsa.pub       
[root@1c2218de9fd2 ~]# cat ~/.ssh/authorized_keys 
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbRItVkJ7fiZ28YVBE4/73w/Xlb9syL75Vw8Er53qif1/0x7M22t42ggCwK1paySSpwu+HucTIe50c/VE9V+uPnclM9bCTR7nntfw4HzDuJ0nWAeB6tk/jDYh8rXFteDRgVeIfd0P/bJ6J7LbNVrq/APZuAIzlQ9N2dJ4bXTBnBZtLqRbs5FSxOIk6JWa3Jmx6E50Bc5fbxbNqhrQCgEDjelZmSBJ/YFVEQL5c5UWnsevJwQK/HLI/H8XFUS8xVdiDn0CM6C8tukLKKWonjClF3DRau+1WlOUF75QVIEWBQ7cAbYiqFFiQ5kfLQskpAckUhYiQ0NnLjG1TXkawtFEX root@c179b03f57ae
[root@1c2218de9fd2 ~]# exit 
[root@c179b03f57ae /]# cat ~/.ssh/
id_rsa       id_rsa.pub   known_hosts  
[root@c179b03f57ae /]# cat ~/.ssh/id_rsa.pub 
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbRItVkJ7fiZ28YVBE4/73w/Xlb9syL75Vw8Er53qif1/0x7M22t42ggCwK1paySSpwu+HucTIe50c/VE9V+uPnclM9bCTR7nntfw4HzDuJ0nWAeB6tk/jDYh8rXFteDRgVeIfd0P/bJ6J7LbNVrq/APZuAIzlQ9N2dJ4bXTBnBZtLqRbs5FSxOIk6JWa3Jmx6E50Bc5fbxbNqhrQCgEDjelZmSBJ/YFVEQL5c5UWnsevJwQK/HLI/H8XFUS8xVdiDn0CM6C8tukLKKWonjClF3DRau+1WlOUF75QVIEWBQ7cAbYiqFFiQ5kfLQskpAckUhYiQ0NnLjG1TXkawtFEX root@c179b03f57ae
/ dus we brengen de public key naar de andere kant , in authorized_keys	,

/ 7	. 

/ lees	,
https://docs.docker.com/v1.13/engine/tutorials/dockervolumes/

Guides
	Get started
		Learn by example
			Network containers
			Manage data in containers	/ dit gaat over volumes	,	


/ 7	. 

/ volumen	,

[eric@almond ping]$ docker run --network=bridge --rm -v /foo -ti my/fedora-ping bash
[root@76b03874aca6 /]# cat >/foo/bar.txt
bar

[eric@almond ping]$ docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
76b03874aca6        my/fedora-ping      "bash"              14 seconds ago      Up 13 seconds                           gracious_ardinghelli
[eric@almond ping]$ docker inspect gracious_ardinghelli 

        "Mounts": [
            {
                "Type": "volume",
                "Name": "f1732d2c72137547339eb2deb0852278a4110a3c9178425a0470c6d316b61128",
                "Source": "/var/lib/docker/volumes/f1732d2c72137547339eb2deb0852278a4110a3c9178425a0470c6d316b61128/_data",
                "Destination": "/foo",

[eric@almond ping]$ sudo  ls /var/lib/docker/volumes/f1732d2c72137547339eb2deb0852278a4110a3c9178425a0470c6d316b61128/_data
bar.txt

/ 13	. 

[eric@almond sshd]$ mkdir /tmp/foo
[eric@almond ping]$ docker run --network=bridge --rm -v /tmp/foo:/foo -ti my/fedora-ping bash

[eric@almond ping]$ docker inspect objective_darwin 
        "Mounts": [
            {
                "Type": "bind",
                "Source": "/tmp/foo",
                "Destination": "/foo",

/ 13. 

/ zonder volumes	, waar is het fs van de container?

/ we maken 1 container	,

/ in de container	,
[root@6bc190aae0b9 /]# cat >opt/baz.txt
baz
[root@6bc190aae0b9 /]# cat >/tmp/bar.txt
bar

/ op de host	,

root@almond docker]# df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 7.8G     0  7.8G   0% /dev
tmpfs                    7.8G  386M  7.4G   5% /dev/shm
tmpfs                    7.8G  2.3M  7.8G   1% /run
tmpfs                    7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root   50G   37G   11G  79% /
tmpfs                    7.8G  2.2M  7.8G   1% /tmp
/dev/sda1                477M  176M  273M  40% /boot
/dev/mapper/fedora-home  860G   45G  772G   6% /home
tmpfs                    1.6G   16K  1.6G   1% /run/user/42
tmpfs                    1.6G  5.2M  1.6G   1% /run/user/1000
tmpfs                    1.6G     0  1.6G   0% /run/user/0
tmpfs                    1.6G     0  1.6G   0% /run/user/26
/dev/dm-4                 99G  668M   93G   1% /var/lib/docker/devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6
shm                       64M     0   64M   0% /var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/shm

/ Intermezzo

/ als we nog een container maken	,

[eric@almond ping]$ docker run --network=bridge --rm  -ti my/fedora-ping bash
[root@867d61dd3346 /]# df -h
Filesystem                                                                                         Size  Used Avail Use% Mounted on
/dev/mapper/docker-253:1-2504345-0a94ee69a5c5ec2cd00e5ddb6d1ae71e1a4a6087ea7a6aefa70b047aaf306887   99G  640M   93G   1% /
tmpfs                                                                                              7.8G     0  7.8G   0% /dev
tmpfs                                                                                              7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root                                                                             50G   37G   11G  79% /etc/hosts
shm                                                                                                 64M     0   64M   0% /dev/shm
tmpfs                                                                                              7.8G     0  7.8G   0% /proc/scsi
tmpfs                                                                                              7.8G     0  7.8G   0% /sys/firmware

[root@almond docker]# df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 7.8G     0  7.8G   0% /dev
tmpfs                    7.8G  386M  7.4G   5% /dev/shm
tmpfs                    7.8G  2.4M  7.8G   1% /run
tmpfs                    7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root   50G   37G   11G  79% /
tmpfs                    7.8G  2.2M  7.8G   1% /tmp
/dev/sda1                477M  176M  273M  40% /boot
/dev/mapper/fedora-home  860G   45G  772G   6% /home
tmpfs                    1.6G   16K  1.6G   1% /run/user/42
tmpfs                    1.6G  5.2M  1.6G   1% /run/user/1000
tmpfs                    1.6G     0  1.6G   0% /run/user/0
tmpfs                    1.6G     0  1.6G   0% /run/user/26
/dev/dm-4                 99G  668M   93G   1% /var/lib/docker/devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6
shm                       64M     0   64M   0% /var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/shm
/dev/dm-5                 99G  640M   93G   1% /var/lib/docker/devicemapper/mnt/0a94ee69a5c5ec2cd00e5ddb6d1ae71e1a4a6087ea7a6aefa70b047aaf306887
shm                       64M     0   64M   0% /var/lib/docker/containers/867d61dd334604053e5756ddf01e6437a491b5d70964d01db0f53b9c5140c106/shm

/ we zien de andere ruimtes niet verminderen	,
/ TODO

[root@almond docker]# df --total -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 7.8G     0  7.8G   0% /dev
tmpfs                    7.8G  379M  7.5G   5% /dev/shm
tmpfs                    7.8G  2.4M  7.8G   1% /run
tmpfs                    7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root   50G   37G   11G  79% /
tmpfs                    7.8G  2.2M  7.8G   1% /tmp
/dev/sda1                477M  176M  273M  40% /boot
/dev/mapper/fedora-home  860G   45G  772G   6% /home
tmpfs                    1.6G   16K  1.6G   1% /run/user/42
tmpfs                    1.6G  5.2M  1.6G   1% /run/user/1000
tmpfs                    1.6G     0  1.6G   0% /run/user/0
tmpfs                    1.6G     0  1.6G   0% /run/user/26
/dev/dm-4                 99G  668M   93G   1% /var/lib/docker/devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6
shm                       64M     0   64M   0% /var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/shm
/dev/dm-5                 99G  640M   93G   1% /var/lib/docker/devicemapper/mnt/0a902b9a051b8718caae02c87a688f3646bb01e8906efbd60b03a76085613d9a
shm                       64M     0   64M   0% /var/lib/docker/containers/0da780053f389c67e8054487643f4e61faec83228ab0e130e736b28876619b27/shm
/dev/dm-6                 99G  640M   93G   1% /var/lib/docker/devicemapper/mnt/21bcf6fc14430e5e5d817a5de069e0aeaceb7c32dc125b3b1c2056060e5a79c7
shm                       64M     0   64M   0% /var/lib/docker/containers/96ff5e4e5d58296821da90e78bb94b714268f661b7b4163272148ca2f8e3a06e/shm
total                    1.3T   84G  1.1T   7% -
/ we zien de laatste entry oplopen	, we hebben nu 3 containers	, bij 2 containers zien we 1.2T	, bij 1 container 1.1T	, klopt aardig met 99G per container	,
/ TODO

/ lees	,
https://stackoverflow.com/questions/37672018/clean-docker-environment-devicemapper
https://docs.docker.com/storage/storagedriver/device-mapper-driver/
https://docs.docker.com/storage/storagedriver/select-storage-driver


/ Einde Intermezzo

/ in de container,	
[root@d3a82943e6d0 /]# df -h
Filesystem                                                                                         Size  Used Avail Use% Mounted on
/dev/mapper/docker-253:1-2504345-9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6   99G  668M   93G   1% /
tmpfs                                                                                              7.8G     0  7.8G   0% /dev
tmpfs                                                                                              7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root                                                                             50G   37G   11G  79% /etc/hosts
shm                                                                                                 64M     0   64M   0% /dev/shm
tmpfs                                                                                              7.8G     0  7.8G   0% /proc/scsi
tmpfs                                                                                              7.8G     0  7.8G   0% /sys/firmware

/ op de host	,
[eric@almond ping]$ docker inspect dreamy_goldwasser 
[
    {
        "Id": "d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e",
        "ResolvConfPath": "/var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/hostname",
        "HostsPath": "/var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/hosts",
        "GraphDriver": {
            "Name": "devicemapper",
            "Data": {
                "DeviceId": "4463",
                "DeviceName": "docker-253:1-2504345-9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6",
                "DeviceSize": "107374182400"
            }
        },

/ de container	,
[root@almond docker]# ls devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6/rootfs/
bin   dev  home  lib64       media  opt   root  sbin  sys  usr
boot  etc  lib   lost+found  mnt    proc  run   srv   tmp  var
[root@almond docker]# ls devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6/rootfs/opt
baz.txt
[root@almond docker]# ls devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6/rootfs/tmp
anaconda-post.log  bar.txt  ks-script-8fapjnx0

 

/ we zien dat devicemapper een andere is dan volumen	,

[eric@almond postgres_cp]$ docker inspect jovial_ptolemy
        "GraphDriver": {
            "Name": "devicemapper",
            "Data": {
                "DeviceId": "4461",
                "DeviceName": "docker-253:1-2504345-3d8a59c8019b5544f0076ca5fc5136294424522b93f0e9c60ec1de7352a78abf",
                "DeviceSize": "107374182400"
            }
        },
        "Mounts": [
            {
                "Type": "volume",
                "Name": "2d69850c9e1ab56b1a991b38c58b465ee2a89ea8e5beb46d6898799bb7bf6a7e",
                "Source": "/var/lib/docker/volumes/2d69850c9e1ab56b1a991b38c58b465ee2a89ea8e5beb46d6898799bb7bf6a7e/_data",
                "Destination": "/foo",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
 

/ de devicemapper zien we	,

[root@almond docker]# pwd
/var/lib/docker
[root@almond docker]#  find -name bar.txt
./devicemapper/mnt/3d8a59c8019b5544f0076ca5fc5136294424522b93f0e9c60ec1de7352a78abf/rootfs/tmp/bar.txt
[root@almond docker]#  find -name baz.txt
./devicemapper/mnt/3d8a59c8019b5544f0076ca5fc5136294424522b93f0e9c60ec1de7352a78abf/rootfs/opt/baz.txt
[root@almond docker]# ls devicemapper/mnt/3d8a59c8019b5544f0076ca5fc5136294424522b93f0e9c60ec1de7352a78abf/rootfs/
bin   dev  foo   lib    lost+found  mnt  proc  run   srv  tmp  var
boot  etc  home  lib64  media       opt  root  sbin  sys  usr


/ ook	,

        "ResolvConfPath": "/var/lib/docker/containers/4d9da46fbc73d677e12fbf687ff01062db027f62e15d846f48aad4848b353a15/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/4d9da46fbc73d677e12fbf687ff01062db027f62e15d846f48aad4848b353a15/hostname",
        "HostsPath": "/var/lib/docker/containers/4d9da46fbc73d677e12fbf687ff01062db027f62e15d846f48aad4848b353a15/hosts",

[eric@almond ping]$ sudo ls /var/lib/docker/containers/4d9da46fbc73d677e12fbf687ff01062db027f62e15d846f48aad4848b353a15/
checkpoints	hostconfig.json  hosts	      resolv.conf.hash	shm
config.v2.json	hostname	 resolv.conf  secrets

/ 13	. 

/ df - report file system disk space usage

/ shows about entire partition	,

[root@almond docker]# df -h devicemapper/
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/fedora-root   50G   37G   11G  79% /var/lib/docker/devicemapper
[root@almond docker]# df -h devicemapper/devicemapper/
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/fedora-root   50G   37G   11G  79% /var/lib/docker/devicemapper

/	du - estimate file space usage	

DF(disk free) looks at disk used blocks directly in filesystem metadata. Because of this it returns much faster that du but can only show info about the entire disk/partition. ... DU(disk usage) is used more than df in day to day project as it shows the disk usage as per directory level.

[root@almond docker]#  du -hs devicemapper/devicemapper/
15G	devicemapper/devicemapper/
[root@almond docker]#  du -hs devicemapper/devicemapper/data 
15G	devicemapper/devicemapper/data

[root@almond docker]# ls -lh devicemapper/devicemapper/
total 15G
-rw-------. 1 root root 100G Sep 19 21:40 data
-rw-------. 1 root root 2.0G Sep 19 21:40 metadata
[root@almond docker]# ls -lh devicemapper/devicemapper/data
-rw-------. 1 root root 100G Sep 19 21:40 devicemapper/devicemapper/data
/ TODO

/ 13	. 

/ hoe tellen we deze getallen (MBs) op	?

/ lees	,
https://unix.stackexchange.com/questions/242946/using-awk-to-sum-the-values-of-a-column-based-on-the-values-of-another-column

[eric@almond ping]$ docker images | awk '{print $7}'

815
799
...
[eric@almond ping]$ docker images | awk '{sum+=$7}END{print sum/1000"GB"}'
21.4364GB

/ Nog steeds geen 50GB	,
/ TODO


/ 13	. 

/ lees	,
https://stackoverflow.com/questions/37672018/clean-docker-environment-devicemapper


/ Einde Intermezzo

/ 7	. 

[eric@almond ping]$ df -h /var/lib/docker/
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/fedora-root   50G   37G   11G  79% /

/ Voor pg moeten we met volumes gaan werken	,

[eric@almond ping]$ df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 7.8G     0  7.8G   0% /dev
tmpfs                    7.8G  389M  7.4G   5% /dev/shm
tmpfs                    7.8G  2.2M  7.8G   1% /run
tmpfs                    7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root   50G   37G   11G  79% /
tmpfs                    7.8G  2.2M  7.8G   1% /tmp
/dev/sda1                477M  176M  273M  40% /boot
/dev/mapper/fedora-home  860G   45G  772G   6% /home
tmpfs                    1.6G   16K  1.6G   1% /run/user/42
tmpfs                    1.6G  5.2M  1.6G   1% /run/user/1000
tmpfs                    1.6G     0  1.6G   0% /run/user/0
tmpfs                    1.6G     0  1.6G   0% /run/user/26

/ Het beste is /home	,

/ 13	. 

/ we start een my/fedora-ping container, en install pg	,

[eric@almond ping]$ docker run --network=bridge --rm  -ti my/fedora-ping bash 
[root@d3a82943e6d0 /]# dnf -y install postgresql-server postgresql-contrib

[eric@almond postgres]$ sudo df -h --total
/dev/dm-4                 99G  668M   93G   1% /var/lib/docker/devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6



/ we zien in /var/lib/pgsql
backups data 
/ data is leeg	, maar initdb gaat dat veranderen	,

[root@d3a82943e6d0 /]# initdb
initdb: no data directory specified
You must identify the directory where the data for this database system
will reside.  Do this with either the invocation option -D or the
environment variable PGDATA.

/ we moeten initdb als postgres user doen	,

[root@d3a82943e6d0 /]# su - postgres
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "C".
The default database encoding has accordingly been set to "SQL_ASCII".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/pgsql/data ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting dynamic shared memory implementation ... posix
creating configuration files ... ok
creating template1 database in /var/lib/pgsql/data/base/1 ... ok
initializing pg_authid ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects' descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    pg_ctl -D /var/lib/pgsql/data -l logfile start

-bash-4.3$ ls data
PG_VERSION    pg_dynshmem    pg_notify     pg_stat_tmp  postgresql.auto.conf
base          pg_hba.conf    pg_replslot   pg_subtrans  postgresql.conf
global        pg_ident.conf  pg_serial     pg_tblspc
pg_clog       pg_logical     pg_snapshots  pg_twophase
pg_commit_ts  pg_multixact   pg_stat       pg_xlog

/ we zien	op de host	,
[eric@almond postgres]$ sudo df -h --total
...
/dev/dm-4                 99G  706M   93G   1% /var/lib/docker/devicemapper/mnt/9b57a4483a4358dbd75e4a0bb3524da4b0db394f63875f90818daf4f47ab60c6
shm                       64M     0   64M   0% /var/lib/docker/containers/d3a82943e6d0cf286395a3195eb191430e03e1d48571525a0c40238b0f6c6b1e/shm

/ we zien dat de Used is toegenomen van 668M toto 706M 

-bash-4.3$ pg_ctl -D /var/lib/pgsql/data/ -l logfile start
server starting
-bash-4.3$ ls
backups  data  logfile
-bash-4.3$ ps aux
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.0 120708  4472 ?        Ss   Sep19   0:00 bash
root       110  0.0  0.0 199640  4492 ?        S    19:43   0:00 su - postgres
postgres   111  0.0  0.0  12556  3924 ?        S    19:43   0:00 -bash
postgres   194  0.2  0.1 236976 19824 ?        S    19:57   0:00 /usr/bin/postgres -D /v
postgres   195  0.0  0.0  91960  2560 ?        Ss   19:57   0:00 postgres: logger proces
postgres   197  0.0  0.0 236976  3520 ?        Ss   19:57   0:00 postgres: checkpointer 
postgres   198  0.0  0.0 236976  3520 ?        Ss   19:57   0:00 postgres: writer proces
postgres   199  0.0  0.0 236976  3520 ?        Ss   19:57   0:00 postgres: wal writer pr
postgres   200  0.0  0.0 237272  4568 ?        Ss   19:57   0:00 postgres: autovacuum la
postgres   201  0.0  0.0  91960  2568 ?        Ss   19:57   0:00 postgres: stats collect
postgres   202  0.0  0.0  42000  3324 ?        R+   19:57   0:00 ps aux


$ psql
/ OK

/ we moeten de port expose	, zodat we een client op de host kunnen connect aan deze server	,
/ we kunnen --expose geven aan docker run, of in de Dockerfile expose	, 

/ lees	, 
https://docs.docker.com/engine/examples/postgresql_service/#installing-postgresql-on-docker
https://docs.docker.com/v17.09/engine/reference/builder/#user

[eric@almond ping]$ docker run --network=bridge --rm --expose 5432 -ti my/fedora-ping bash

/ 13	. 

[eric@almond ping]$ docker run --network=bridge --rm  -ti my/fedora-ping bash[root@479d100df49c /]# dnf -y install postgresql-server postgresql-contrib
[root@479d100df49c /]# su - postgres -c initdb
    pg_ctl -D /var/lib/pgsql/data -l logfile start

[root@479d100df49c /]# su - postgres -c "pg_ctl start"
server starting
[root@479d100df49c /]# LOG:  redirecting log output to logging collector process
HINT:  Future log output will appear in directory "pg_log".

[root@479d100df49c /]# su - postgres -c "pg_ctl stop"

/ 13	. 

/ als we in de container	,
# su - postgres
-bash-4.3$ initdb
/ OK

/ maar als we	,
# su postgres
-bash-4.3$ cd 
-bash-4.3$ initdb
/ ERR, je moet dir meegeven	, ...

$ man su
       -, -l, --login
              Start the shell as a login shell with an environment similar to a  real
              login:

                 o      clears all the environment variables except TERM

                 o      initializes the environment variables HOME, SHELL, USER, LOG‐
                        NAME, and PATH

                 o      changes to the target user's home directory

                 o      sets argv[0] of the shell to '-' in order to make the shell a
                        login shell

/ we hebben gedaan	,
# su - postgres	,
-bash-4.3$ env
SHELL=/bin/bash
USER=postgres
HOME=/var/lib/pgsql
LOGNAME=postgres
PGDATA=/var/lib/pgsql/data
PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

/ we doen	,
[root@479d100df49c /]# su postgres
bash-4.3$ env
SHELL=/bin/bash
USER=postgres
HOME=/var/lib/pgsql
LOGNAME=postgres
PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

/ het verschil is dat we missen	, 
PGDATA=/var/lib/pgsql/data

/ Die komt hieruit:
-bash-4.3$  less ~postgres/.bash_profile 

[ -f /etc/profile ] && source /etc/profile

PGDATA=/var/lib/pgsql/data
export PGDATA

/ dus	,

# su postgres
bash-4.3$ . ~postgres/.bash_profile 
/ is ook OK	,


/ 13	. 

# su - postgres
-bash-4.3$ postgres
LOG:  redirecting log output to logging collector process
HINT:  Future log output will appear in directory "pg_log".

/ WH OK voor in Dockerfile	, want hij returns niet	, zoals pg_ctl dat wel doen	,

/ doe in ander host window	,
[eric@almond ping]$ docker exec -ti thirsty_volhard bash
[root@479d100df49c /]# su - postgres
Last login: Sun Sep 23 13:03:21 UTC 2018
-bash-4.3$ pg_ctl stop
waiting for server to shut down.... done
server stopped

/ In de container (1ste host window) is postgres returned	,

/ Doe altijd een login	, want anders is PGDATA niet set	,
[root@479d100df49c /]# su postgres
bash-4.3$ pg_ctl stop
pg_ctl: no database directory specified and environment variable PGDATA unset
Try "pg_ctl --help" for more information.
bash-4.3$ exit
exit

/ 13	. 

/ NOTES	,

/ 1313	.

/ in bash	,
$ echo ~$USER 
/ ERR	,

/ 1313	. 

user postgres
run echo $HOME
run echo $HOME/foo 
/ OK

/ 1313	. 

env PGDATA=foo
run echo $PGDATA
/ OK	,

/ 1313	. 

user postgres
env PGDATA=foo
run env
run echo $PGDATA
/ OK	,

/ 1313	. 

user postgres
run echo $HOME/foo
env PGDATA=$HOME/foo
run env
run echo $PGDATA
/ ERR,  PGDATA=/foo

/ 1313	. 

user postgres
run echo $HOME/foo
run export PGDATA=$HOME/foo
run env
run echo $PGDATA
/ ERR	, PGDATA is er helemaal niet	,

user postgres
run echo $HOME/foo
run export PGDATA=foo
run env
run echo $PGDATA
/ ERR, PGDATA is er niet	,

user postgres
run echo $HOME/foo
env PGDATA=foo
run env
run echo $PGDATA
/ OK, PGDATA=foo

user postgres
run env
run echo $HOME/foo
env PGDATA=$HOME
run echo $PGDATA
/ ERR, PGDATA=

/ lees bij 'Environment replacement',	
https://docs.docker.com/engine/reference/builder/

user postgres
run echo $HOME/foo
env FOO=foo
env PGDATA=$FOO/bar
run env
run echo $PGDATA
/ OK	, PGDATA=foo/bar

/ dus blijkbaar kent docker's env niet de $HOME uit bash's env	,
/ TODO

/ 1313	. 

user postgres
run source $HOME/.bash_profile;echo $PGDATA		# PGDATA=/var/lib/pgsql/data
run echo $PGDATA												# PGDATA=

/ dus we moeten alles op 1 regel houden	,

user postgres
run source $HOME/.bash_profile;\
echo $PGDATA;\
initdb
/ OK	,

/ 1313	. 

/ STUDY POSTGRES IN CONTAINER

/ we vergeten even $PGDATA van $HOME	, en set hem hardcoded in postgres3a	,

[eric@almond postgres3a]$ cat Dockerfile 
from my/fedora-locale
run dnf -y upgrade  --setopt=deltarpm=false

run dnf -y install postgresql-server postgresql-contrib

run echo ff

user postgres
env PGDATA=/var/lib/pgsql/data
run initdb;\
echo "host all all 0.0.0.0/0 md5"  >>$PGDATA/pg_hba.conf;\
echo "listen_addresses='*'" >>$PGDATA/postgresql.conf

expose 5432

cmd postgres

[eric@almond postgres3a]$ docker build --rm -t my/fedora-postgres3a .
[eric@almond ping]$ docker run --network=my-bridge --rm -ti my/fedora-postgres3a
/ OK	 
[eric@almond ping]$ docker exec -ti keen_kalam bash
bash-4.3$ ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.18.0.2  netmask 255.255.0.0  broadcast 0.0.0.0

/ vanaf de host	,
[eric@almond ping]$ ping 172.18.0.2
PING 172.18.0.2 (172.18.0.2) 56(84) bytes of data.
64 bytes from 172.18.0.2: icmp_seq=1 ttl=64 time=0.088 ms
/ OK	,
/ Maar om $ psql te doen vanaf de host, hebben we een port nodig	,

$ docker inspect keen_kalam
        "NetworkSettings": {
            "Ports": {
                "5432/tcp": null
            },

/ we moeten de server zo start	,
[eric@almond ping]$ docker run  --rm -ti -p 12345:5432 my/fedora-postgres3a
/ en dan op de host	,
[eric@almond ping]$ sudo su - postgres
-bash-4.4$ psql -h localhost -p 12345
password:
/ TODO set pg_hba.conf OK voor trusted linux accounts	, 


/ 13	. 

[eric@almond ping]$ docker exec -ti elastic_shaw bash
bash-4.3$ psql
postgres=# create role eric with createdb login password 'eric';
CREATE ROLE
postgres=# \c
You are now connected to database "postgres" as user "postgres".
postgres=# \c - eric
You are now connected to database "postgres" as user "eric".
postgres=> create database test
postgres-> ;
CREATE DATABASE
postgres=> \q
bash-4.3$ psql -U eric test
/ OK	,

-bash-4.4$ psql -h localhost -p 12345
psql: FATAL:  no pg_hba.conf entry for host "172.17.0.1", user "postgres", database "postgres", SSL off


/ 13	. 

$ vi postgres3a/Dockerfile

from my/fedora-locale
run dnf -y upgrade  --setopt=deltarpm=false

run dnf -y install postgresql-server postgresql-contrib

run dnf -y install less hostname iputils
run setcap cap_net_raw,cap_net_admin+p /usr/bin/ping

user postgres
env PGDATA=/var/lib/pgsql/data
run initdb;\
echo "host all all 172.17.0.1/32 md5"  >>$PGDATA/pg_hba.conf;\
echo "listen_addresses='*'" >>$PGDATA/postgresql.conf

expose 5432

cmd postgres

[eric@almond ping]$ docker run  --rm -ti -p 12345:5432 my/fedora-postgres3a
LOG:  redirecting log output to logging collector process
HINT:  Future log output will appear in directory "pg_log".

/ TODO -l logfile arg to postgres	,

[eric@almond ping]$ docker exec -ti gifted_mahavira bash

postgres=# create role eric with createdb login password 'eric';
postgres=# create role foo with createdb login password 'foo';
postgres=# \c - eric 
postgres=# create database eric; 
postgres=# \c - foo 
postgres=# create database foo; 

[eric@almond postgres3a]$ psql -h localhost -p 12345 
Password: 
psql (9.6.8, server 9.5.7)
Type "help" for help.
eric=> \q

[eric@almond postgres3a]$ psql -h localhost -p 12345 -U foo
Password for user foo: 
psql (9.6.8, server 9.5.7)
Type "help" for help.
foo=> 

/ postgres user heeft ook password nodig, of pas pg_hba.conf aan	,
/ TODO
echo "host all postgres 172.17.0.1/32 trust"  >>$PGDATA/pg_hba.conf;\

/ 13	. 

/ less	,
https://www.postgresql.org/docs/9.6/static/libpq-envars.html
$ PGPASSWORD=... psql 

/ we start een my/fedora-locale container en doen	,

[eric@almond postgres3a]$ docker run --rm -ti my/fedora-locale bash
[root@dad6f7260898 /]# dnf -y install postgresql-server postgresql-contrib
[root@dad6f7260898 /]# dnf -y install less hostname iputils
[root@dad6f7260898 /]# setcap cap_net_raw,cap_net_admin+p /usr/bin/ping
[root@dad6f7260898 /]# su - postgres
-bash-4.3$ initdb
-bash-4.3$ pg_ctl start
-bash-4.3$ psql -c "create role eric with createdb login password 'eric'"
CREATE ROLE
-bash-4.3$ psql<<SQL
> create role foo with createdb login password 'foo'
> SQL
CREATE ROLE
-bash-4.3$ PGPASSWORD=eric psql<<SQL
> create database eric
> SQL
CREATE DATABASE
-bash-4.3$ PGPASSWORD=foo psql<<SQL
> create database foo
> SQL
CREATE DATABASE
-bash-4.3$ psql
psql (9.5.7)
Type "help" for help.

postgres=# \l
                             List of databases
   Name    |  Owner   | Encoding  | Collate | Ctype |   Access privileges   
-----------+----------+-----------+---------+-------+-----------------------
 eric      | postgres | SQL_ASCII | C       | C     | 
 foo       | postgres | SQL_ASCII | C       | C     | 
 postgres  | postgres | SQL_ASCII | C       | C     | 
 template0 | postgres | SQL_ASCII | C       | C     | =c/postgres          +
           |          |           |         |       | postgres=CTc/postgres
 template1 | postgres | SQL_ASCII | C       | C     | =c/postgres          +
           |          |           |         |       | postgres=CTc/postgres
(5 rows)
postgres=# \q
-bash-4.3$ psql<<SQL
> drop database eric;
> drop database foo
> SQL
DROP DATABASE
DROP DATABASE
-bash-4.3$ psql<<SQL
> \l
> SQL
                             List of databases
   Name    |  Owner   | Encoding  | Collate | Ctype |   Access privileges   
-----------+----------+-----------+---------+-------+-----------------------
 postgres  | postgres | SQL_ASCII | C       | C     | 
 template0 | postgres | SQL_ASCII | C       | C     | =c/postgres          +
           |          |           |         |       | postgres=CTc/postgres
 template1 | postgres | SQL_ASCII | C       | C     | =c/postgres          +
           |          |           |         |       | postgres=CTc/postgres
(3 rows)

-bash-4.3$ psql -Ueric postgres<<SQL
> create database eric
> SQL
CREATE DATABASE
-bash-4.3$ psql<<SQL                
\l                  
SQL
                             List of databases
   Name    |  Owner   | Encoding  | Collate | Ctype |   Access privileges   
-----------+----------+-----------+---------+-------+-----------------------
 eric      | eric     | SQL_ASCII | C       | C     | 
 postgres  | postgres | SQL_ASCII | C       | C     | 
 template0 | postgres | SQL_ASCII | C       | C     | =c/postgres          +
           |          |           |         |       | postgres=CTc/postgres
 template1 | postgres | SQL_ASCII | C       | C     | =c/postgres          +
           |          |           |         |       | postgres=CTc/postgres
(4 rows)
-bash-4.3$ pg_ctl stop
waiting for server to shut down.... done
server stopped

/ Nu kunnen we met postgres de server start	,
/ TODO in Dockerfile moeten we met postgres ipv pg_ctl	, voor in foreground	,

/ TODO
/ eric zonder password	,
/ want in data/pg_hba.conf	,
host    all             all             127.0.0.1/32            trust
/ er is ook	,
host all all 172.17.0.1/32 md5
/ klopt, als je op de host	,
[eric@almond ping]$ psql -h localhost -Ueric -p12345
Password for user eric: 
/ moet je password geven	,
`

/ TODO
/ later, als we met postgres start, zien we utf8	, 

/ 13	. 

$ vi Dockerfile

from my/fedora-locale
run dnf -y upgrade  --setopt=deltarpm=false

run dnf -y install postgresql-server postgresql-contrib

run dnf -y install less hostname iputils
run setcap cap_net_raw,cap_net_admin+p /usr/bin/ping

user postgres
env PGDATA=/var/lib/pgsql/data
run initdb;\
pg_ctl -w start;\
psql -c "create role eric with createdb login password 'eric'";\
psql -c "create role foo with createdb login password 'foo'";\
psql -Ueric postgres -c "create database eric";\
psql -Ufoo postgres -c "create database foo";\
pg_ctl stop;\
echo "host all all 172.17.0.1/32 md5"  >>$PGDATA/pg_hba.conf;\
echo "listen_addresses='*'" >>$PGDATA/postgresql.conf

expose 5432

cmd postgres

/ Here doc in Dockerfile gaat niet	, 
/ misschien via script en add en psql -f	, 
/ TODO

/ TODO 
/ postgres command en log file	,

[eric@almond postgres3a]$ docker build --rm -t my/fedora-postgres3a .

/ we start er 2	, let op: andere port	,

[eric@almond ping]$ docker run  --rm -ti -p 12345:5432 my/fedora-postgres3a
LOG:  redirecting log output to logging collector process
HINT:  Future log output will appear in directory "pg_log".

[eric@almond ping]$ docker run  --rm -ti -p 12346:5432 my/fedora-postgres3a
LOG:  redirecting log output to logging collector process
HINT:  Future log output will appear in directory "pg_log".

/ TODO
/ richt sudo in 

/ 13	. 

$ pwd
postgres3a
$ vi Dockerfile

from my/fedora-locale
run dnf -y upgrade  --setopt=deltarpm=false

run dnf -y install postgresql-server postgresql-contrib

run dnf -y install less hostname iputils
run setcap cap_net_raw,cap_net_admin+p /usr/bin/ping

user postgres
env PGDATA=/var/lib/pgsql/data
run initdb;\
pg_ctl -w start;\
psql -c "create role eric with createdb login password 'eric'";\
psql -c "create role foo with createdb login password 'foo'";\
psql -Ueric postgres -c "create database eric";\
psql -Ufoo postgres -c "create database foo";\
pg_ctl stop;\
echo "host all all 172.17.0.1/24 trust"  >>$PGDATA/pg_hba.conf;\
echo "listen_addresses='*'" >>$PGDATA/postgresql.conf

expose 5432

cmd postgres

/ /24 betekent netwerk 172.17.0	, /32 is 1 machine	,

bash-4.3$ ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.2  netmask 255.255.0.0  broadcast 0.0.0.0
bash-4.3$ psql -h 172.17.0.2
/ OK	,
postgres=# \q
bash-4.3$ psql -h 172.17.0.3
/ OK	,
postgres=# \q

/ 13	. 

/ trusted is niet peer	, want eric hoeft geen password te geven, en is geen Linux account	,

bash-4.3$ psql -h 172.17.0.3 -Ueric
psql (9.5.7)
Type "help" for help.

eric=>

/ 13	. 

bash-4.3$ whoami
postgres
bash-4.3$ cat .psqlrc 
\set AUTOCOMMIT off

/ Het gaat erom dat psql de .psqlrc file leest van degene die psql invokes	,
/ we log in met psql als eric, maar dat doet er niet toe,	 
/ ook niet als we naar een andere machine gaan	,

bash-4.3$ ifconfig
        inet 172.17.0.2  netmask 255.255.0.0  broadcast 0.0.0.0
bash-4.3$ psql -h 172.17.0.2 -Ueric
/ of	,
bash-4.3$ psql -h 172.17.0.3 -Ueric

/ 13	. 

[eric@almond postgres3a]$ sudo df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 7.8G     0  7.8G   0% /dev
tmpfs                    7.8G  413M  7.4G   6% /dev/shm
tmpfs                    7.8G  2.4M  7.8G   1% /run
tmpfs                    7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/mapper/fedora-root   50G   38G  9.4G  80% /
tmpfs                    7.8G  2.2M  7.8G   1% /tmp
/dev/sda1                477M  176M  273M  40% /boot
/dev/mapper/fedora-home  860G   45G  772G   6% /home
tmpfs                    1.6G   16K  1.6G   1% /run/user/42
tmpfs                    1.6G  5.2M  1.6G   1% /run/user/1000
tmpfs                    1.6G     0  1.6G   0% /run/user/0
tmpfs                    1.6G     0  1.6G   0% /run/user/26
/dev/dm-4                 99G  720M   93G   1% /var/lib/docker/devicemapper/mnt/91fd249af1e63fd484e86d90c4919c7e5cc717f043ef21b3ab5540e6c598a899
shm                       64M  4.0K   64M   1% /var/lib/docker/containers/44365345cfadcb02a358430a4f7bcb06d1a44292e83ce21063b11648d7696f58/shm
/dev/dm-5                 99G  720M   93G   1% /var/lib/docker/devicemapper/mnt/c9d9b45d50696c6953d6d1a7638191ea4d317d0e8a4aec7311458ca16306996a
shm                       64M  4.0K   64M   1% /var/lib/docker/containers/cade17e4db6dfc146d50873355473a246d02e3d71458ca08c98445fd2e03773a/shm

/ 13	.

/ waar is de db van de container?

[eric@almond postgres3a]$ docker inspect optimistic_shaw 
...
        "HostsPath": "/var/lib/docker/containers/376e57a45341e45f95f47dbdda5c754795d0f30f52d6ee60588afd1e96a40973/hosts",
...
        "GraphDriver": {
            "Name": "devicemapper",
            "Data": {
                "DeviceId": "5387",
                "DeviceName": "docker-253:1-2504345-c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11",
                "DeviceSize": "107374182400"
            }
        },
/ en het gaat om de laatste	,

/ doe	,
[root@almond ~]# du -hs /var/lib/docker/devicemapper/mnt/c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11/rootfs/var/lib/pgsql/data
...
42M	/var/lib/docker/devicemapper/mnt/c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11/rootfs/var/lib/pgsql/data/base/13328
...
87M	/var/lib/docker/devicemapper/mnt/c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11/rootfs/var/lib/pgsql/data

/ doe in de container	,
postgres=# select*into bar from generate_series(1,10000000);
SELECT 10000000


[root@almond ~]# du -hs /var/lib/docker/devicemapper/mnt/c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11/rootfs/var/lib/pgsql/data
...
388M	/var/lib/docker/devicemapper/mnt/c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11/rootfs/var/lib/pgsql/data/base/13328
...
433M	/var/lib/docker/devicemapper/mnt/c6d71e6425f7a27644a8e7aabfe9e186b86e60d1cf1f75eab922b613916b9a11/rootfs/var/lib/pgsql/data

/ 13	. 

/ we start 2 docker containers met pg	,

[eric@almond postgres3a]$  docker run --network=my-bridge --rm -ti my/fedora-postgres3a
/ 1 keer	,

[eric@almond postgres3a]$  docker run --network=my-bridge --rm -ti -p 12345:5432 my/fedora-postgres3a
/ -p 12345:5432 heb ik niet nodig, want ik hoef de db niet vanaf de host de query, we kunnen $ docker exec	, maar in principe kan allebei	,
[eric@almond postgres3a]$ docker exec -ti optimistic_shaw bash
bash-4.3$ psql 
psql (9.5.7)
Type "help" for help.
postgres=# 

[eric@almond postgres3a]$ docker run --network=my-bridge --rm -ti -p 12346:5432 my/fedora-postgres3a
LOG:  redirecting log output to logging collector process
HINT:  Future log output will appear in directory "pg_log".
eric@almond postgres3a]$ docker exec -ti reverent_albattani bash
bash-4.3$ psql
psql (9.5.7)
Type "help" for help.
postgres=# \q

/ 7	. 

/ lees	,
https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host

docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id

[eric@almond postgres3a]$  docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' modest_raman 
172.18.0.3

/ 7	. 

/ google,
Dockerfile variables
/ lees	,
https://stackoverflow.com/questions/33935807/how-to-define-a-variable-in-a-dockerfile


/ 7	. 

/ we zijn op docs.docker.com	, geef in 'Search the docs'	, 
create network
/ lees	,
https://docs.docker.com/engine/reference/commandline/network_create/

[eric@almond ping]$ docker network create --subnet=192.16.0.0/16 my-net

[eric@almond ping]$ docker run --rm -ti --network my-net my/fedora-locale bash
[root@2f715f1a554d /]# ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.16.0.2  netmask 255.255.0.0  broadcast 0.0.0.0

/ nog een	,
[eric@almond ping]$ docker run --rm -ti --network my-net my/fedora-locale bash
[root@5d49b50b5c15 /]# ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.16.0.3  netmask 255.255.0.0  broadcast 0.0.0.0

/ 7	. 

/ COMPOSE

/ google,	
network by name in dockerfile
/ allemaal compose pages	,

/ kies in menu, 
Get started	,
	Get started with docker
/ in part 1 lezen we dat part 2 over 1 container gaat	, en part 3 over meerdere, compose dus	,

/ lees part3	,
/ klik: Docker compose	,
/ klik: install it directly

[root@almond ~]# dnf install docker-compose-1.16.1-1.fc26.noarch 

/ lees,
https://docs.docker.com/compose/overview/ 

/ Einde COMPOSE

/ GETTING STARTED

/ 7	. 

/ part2

[eric@almond part2]$ pwd
/home/eric/Devel/Docker2/getting-started/part2
[eric@almond part2]$ ls
app.py  Dockerfile  requirements.txt


/ om te oef met Dockerfile doen we eerst alleen
$ vi Dockerfile

from python:2.7-slim

workdir app

copy . . 

/ $ docker build -t = --tag	,

$ docker build --rm -t friendlyhello .
[eric@almond part2]$ docker run -ti friendlyhello bash
root@540389dee799:/app# ls
Dockerfile  app.py  requirements.txt

/ workdir app: creates dir app in /	in image	, en cd er ook in; workdir /app is ook goed	, 
/ copy . .: copies de current dir op de host, dus requirements.txt, Dockerfile, app.py, naar het image in current dir, en dat is /app; copy . /app is ook goed; 
/ copy . app is fout: in /app wordt een dir app/ create	, met daarin Dockerfile  app.py  requirements.txt	, 
/ workdir en copy create een dir in de image als die er nog niet is	,

/ we zien	,
[eric@almond part2]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED              SIZE
friendlyhello                                    latest              df0bc935fdac        About a minute ago   120 MB
docker.io/python                                 2.7-slim            f2ac6489d817        2 days ago           120 MB

[eric@almond part2]$ docker run -ti friendlyhello bash
root@8a9bbb493a35:/app# ls
Dockerfile  app.py  requirements.txt

/ Intermezzo

/ google
docker source code
/ lees	,
https://stackoverflow.com/questions/47793812/where-is-the-docker-source-code-located-github-repo

git clone https://github.com/moby/moby.git
git checkout tags/VERSION
make

/ maar er is ook	,
https://github.com/docker/docker-ce
/ TODO
$ git clone https://github.com/docker/docker-ce.git

/ we doen,	
[eric@almond Docker2]$ pwd
/home/eric/Devel/Docker2
$ git clone https://github.com/docker/docker-ce.git

/ Einde Intermezzo

$ vi Dockerfile

from python:2.7-slim

#= workdir /app
workdir app 		

#= copy . /app
copy . .  			

# Install any needed packages specified in requirements.txt
# https://pypi.org/, probeer --trusted-host pypi.org TODO
run pip install --trusted-host pypi.python.org -r requirements.txt

# Make port 80 available to the world outside this container
expose 80

env NAME World

# Run app.py when the container launches
cmd ["python", "app.py"]

$ vi app.py

from flask import Flask
from redis import Redis, RedisError
import os
import socket

# Connect to Redis
redis = Redis(host="redis", db=0, socket_connect_timeout=2, socket_timeout=2)

app = Flask(__name__)

@app.route("/")
def hello():
    try:
        visits = redis.incr("counter")
    except RedisError:
        visits = "<i>cannot connect to Redis, counter disabled</i>"

    html = "<h3>Hello {name}!</h3>" \
           "<b>Hostname:</b> {hostname}<br/>" \
           "<b>Visits:</b> {visits}"
    return html.format(name=os.getenv("NAME", "world"), hostname=socket.gethostname(), visits=visits)

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=80)
                                     
/ we zien os.getenv("NAME",<default>)	, dus in Dockerfile staat: env NAME World	, in capitals dus	, 

[eric@almond part2]$ docker build --rm -t friendlyhello .
DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.

/ NB	. frienlyhello is de image name	, een container heet bijv gifted_hawking	,
/ de container id = 3d599545b86e	, en dat is ook $ hostname	,


[eric@almond part2]$ docker run -ti -p 4000:80 friendlyhello
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)
172.17.0.1 - - [24/Feb/2019 18:47:35] "GET / HTTP/1.1" 200 -			# zien we na de curl, nu nog niet	,

/ we moeten -p 4000:80	, of -p 80:80	,  zonder -p doen de curl regels het niet hieronder	,
/ geef dan 
$ curl http://localhost:4000 of in het 2de geval http://localhost of http://localhost:80

/ we hebben Flask installed, en de Redis driver, maar Redis zelf niet	,
[eric@almond Postgres]$ docker exec -ti modest_kowalevski bash
root@30376520d7ef:/# find -name "Flask*" 
./usr/local/lib/python2.7/site-packages/Flask-1.0.2.dist-info
root@30376520d7ef:/# find -name "*redis*" 
./usr/local/lib/python2.7/site-packages/pip/_vendor/cachecontrol/caches/redis_cache.pyc
./usr/local/lib/python2.7/site-packages/pip/_vendor/cachecontrol/caches/redis_cache.py
./usr/local/lib/python2.7/site-packages/redis-3.2.0.dist-info
./usr/local/lib/python2.7/site-packages/redis

[eric@almond Postgres]$ curl http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 30376520d7ef<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
/ 30376520d7ef is de container id	,

[eric@almond Postgres]$ docker container ls
CONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS                  NAMES
30376520d7ef        friendlyhello          "python app.py"     15 minutes ago      Up 15 minutes       0.0.0.0:4000->80/tcp   modest_kowalevski

[eric@almond Postgres]$ docker stop modest_kowalevski 
modest_kowalevski

/ 13	. 

/ registry op docker hub	,

/ docker hub
ericjvandervelden
vl$Walnoot27

[eric@almond part2]$ docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: ericjvandervelden
Password: 
Login Succeeded
[eric@almond part2]$ docker tag friendlyhello ericjvandervelden/getting-started:part2
[eric@almond part2]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE
ericjvandervelden/getting-started                part2               ea7a60a69453        54 minutes ago      131 MB
friendlyhello                                    latest              ea7a60a69453        54 minutes ago      131 MB

/ klopt friendlyhello is een image	, geen container	,

/ we push	,
[eric@almond part2]$ docker push ericjvandervelden/getting-started:part2 
The push refers to a repository [docker.io/ericjvandervelden/getting-started]
646c83b249dc: Pushed 
c722bf82a483: Pushed 
63d496379351: Pushed 
4c17a5d758f3: Mounted from library/python 
7e6d2caa6460: Mounted from library/python 
ba1d5b7b438f: Mounted from library/python 
0a07e81f5da3: Mounted from library/python 
part2: digest: sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb size: 1787

[eric@almond part2]$ docker run -ti -p 4000:80 ericjvandervelden/getting-started:part2 
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)

[eric@almond Postgres]$ curl http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 1e6c1718781e<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>

/ 13	. 

/ we rm de image ericjvandervelden/getting-started:part2	, en laten docker de image van de docker hub repo download	,

[eric@almond Postgres]$ docker container ls
CONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS                  NAMES
1e6c1718781e        ea7a60a69453           "python app.py"     6 minutes ago       Up 6 minutes        0.0.0.0:4000->80/tcp   confident_goldberg
[eric@almond Postgres]$ docker stop confident_goldberg 

[eric@almond Postgres]$ docker rmi ericjvandervelden/getting-started:part2 
Untagged: ericjvandervelden/getting-started:part2
Untagged: ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb

[eric@almond part2]$ docker run -ti -p 4000:80 ericjvandervelden/getting-started:part2 
Unable to find image 'ericjvandervelden/getting-started:part2' locally
Trying to pull repository docker.io/ericjvandervelden/getting-started ... 
sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb: Pulling from docker.io/ericjvandervelden/getting-started
Digest: sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb
Status: Downloaded newer image for docker.io/ericjvandervelden/getting-started:part2
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)

[eric@almond Postgres]$ curl http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> dacc173cef86<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>

[eric@almond Postgres]$ curl http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> dacc173cef86<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond Postgres]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE
docker.io/ericjvandervelden/getting-started      part2               ea7a60a69453        About an hour ago   131 MB
friendlyhello                                    latest              ea7a60a69453        About an hour ago   131 MB

[eric@almond part2]$ docker rmi ericjvandervelden/getting-started:part2
Untagged: ericjvandervelden/getting-started:part2
Untagged: docker.io/ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb

[eric@almond part2]$ docker pull ericjvandervelden/getting-started:part2
Trying to pull repository docker.io/ericjvandervelden/getting-started ... 
sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb: Pulling from docker.io/ericjvandervelden/getting-started
Digest: sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb
Status: Downloaded newer image for docker.io/ericjvandervelden/getting-started:part2

[eric@almond part2]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE
docker.io/ericjvandervelden/getting-started      part2               ea7a60a69453        About an hour ago   131 MB
friendlyhello                                    latest              ea7a60a69453        About an hour ago   131 MB

/ 7	. 

/ expose is WH overbodig	,
/ NAME wordt used in app.py	, als we NAME niet def in Dockerfile zien we
	Hello, world
/ Als we NAME wel def, 
	Hello, World

$ vi Dockerfile	
...
# Make port 80 available to the world outside this container
#expose 80

# Define environment variable
env NAME World

$ vi app.py
...
    return html.format(name=os.getenv("NAME", "world"), ...


/ part3	

/ lees	,
https://docs.docker.com/get-started/part3/

/////////////////////////////////////
A docker-compose.yml file is a YAML file that defines how Docker containers should behave in production.

/ eerder hadden we	,
[eric@almond part2]$ docker tag friendlyhello ericjvandervelden/getting-started:part2

[eric@almond getting-started]$ cp -a part2/ part3
[eric@almond getting-started]$ cd part3
[eric@almond part3]$ docker rmi ericjvandervelden/getting-started:part2
Untagged: ericjvandervelden/getting-started:part2
Untagged: docker.io/ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb

/ Intermezzo

[eric@almond part2]$  docker image ls | grep ericj
docker.io/ericjvandervelden/getting-started      part2               ea7a60a69453        4 months ago        131 MB

[eric@almond part2]$ docker rmi ea7a60a69453
Untagged: docker.io/ericjvandervelden/getting-started:part2
Untagged: docker.io/ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb
Deleted: sha256:ea7a60a6945398aa9841dcbd87e598890fb4c8c5716cce1bf0be428a2a060d1e
Deleted: sha256:0923fcd617ba8a090afe27480472e87b21e40df68273dbae7afcb9993322e3e3
Deleted: sha256:d4cee254d6426e9abefd6a6656e2192360a46f4258be155a58a918ef1ffe7d62
Deleted: sha256:caba75db25a4664a9acb9249f7b2f5ee9baaf53b5b1f256919fde89b96eb8ce7
Deleted: sha256:035d840a679ddca393f58df7ea1a8d328db4e55859b477b4a0e146e8511f8fd3
Deleted: sha256:1711f1c576e53ae6e80fcce95fcb9bff273d87e53315b8744fa71473e6d32c7b
Deleted: sha256:b6cdc9f5a894112e0f164d700d21266a40dee9739e781b46339c110686e90735

[eric@almond part2]$ docker run --rm -it -p 4000:80 ericjvandervelden/getting-started:part2
Unable to find image 'ericjvandervelden/getting-started:part2' locally
Trying to pull repository docker.io/ericjvandervelden/getting-started ... 
...

[eric@almond java12-study]$ docker image ls | grep ericj
docker.io/ericjvandervelden/getting-started      part2               ea7a60a69453        4 months ago        131 MB

/ WH kunnen we docker-compose.yml ericjvandervelden/getting-started schrijven, zonder docker.io ervoor	,

[eric@almond part2]$ curl http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> dac949b6b475<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond part2]$ 



/ Einde Intermezzo


$ vi docker-compose.yml

version: "3"
services:
  web:																																	# ! de service	, hij heet: web	,
    # replace username/repo:tag with your name and image details
    image: ericjvandervelden/getting-started:part2 											# zonder docker.io/ ervoor	,
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "4000:80"
    networks:
      - webnet
networks:
  webnet:

/ 1313	. 

/ we lezen op https://docs.docker.com/get-started/part3/	, 

Instruct web’s containers to share port 80 via a load-balanced network called webnet. (Internally, the containers themselves publish to web’s port 80 at an ephemeral port.)
/ TODO

Define the webnet network with the default settings (which is a load-balanced overlay network).
/ TODO (overlay)

/ 1313	. 

/ we vergeten eerst expres: docker swarm init	,
[eric@almond part3]$ docker stack deploy -c docker-compose.yml getstartedlab
This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.

[eric@almond part3]$ docker swarm init
Swarm initialized: current node (1n49oqgu2pxbb72oho63toeyd) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join \
    --token SWMTKN-1-2i96cgj15uxyxrf8k10kxvb3rbpofd1une38mlnt1466gm711q-1ys8absh85eb605povqedkvbv \
    192.168.123.182:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

/ 1313	. 

/ hierna kun je	, 

$ docker swarm leave --force
Node left the swarm.

/ en daarna weer	,
[eric@almond part3]$ docker swarm init


/ 1313	. 

[eric@almond part3]$ docker stack deploy -c docker-compose.yml getstartedlab
Creating network getstartedlab_webnet
Creating service getstartedlab_web

/ ongedaan maken	, tegenovergestelde	,
$ docker stack rm getstartedweb

[eric@almond part3]$ docker service ls
ID            NAME        MODE        REPLICAS  IMAGE
ihivqx1vdz2p  getstartedlab_web  replicated  0/3       docker.io/ericjvandervelden/getting-started:part2

/ Intermezzo

[eric@almond part3]$ docker stack 
deploy    ls        ps        rm        services  

[eric@almond part3]$ docker stack ls
NAME           SERVICES
getstartedlab  1

/ List the tasks in the stack
[eric@almond part3]$ docker stack ps getstartedlab
ID            NAME                 IMAGE                                              NODE             DESIRED STATE  CURRENT STATE               ERROR  PORTS
tcf1ejak0dwr  getstartedlab_web.1  docker.io/ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running about a minute ago         
frm8vyu5q9i1  getstartedlab_web.2  docker.io/ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running about a minute ago         
sfpmn9d6ad3p  getstartedlab_web.3  docker.io/ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running about a minute ago    

/ lees over <none> images	,
https://www.projectatomic.io/blog/2015/07/what-are-docker-none-none-images/
/ TODO

[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                                 COMMAND             CREATED             STATUS              PORTS               NAMES
f976bec092c5        docker.io/ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     5 minutes ago       Up 5 minutes        80/tcp              getstartedlab_web.2.frm8vyu5q9i1n67jy4dbqsrrp
a77e4f9fd352        docker.io/ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     5 minutes ago       Up 5 minutes        80/tcp              getstartedlab_web.3.sfpmn9d6ad3pliy5an85o5q8k
81b67e98f78b        docker.io/ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     5 minutes ago       Up 5 minutes        80/tcp              getstartedlab_web.1.tcf1ejak0dwr0dpo39ip8cx3k

[eric@almond part3]$ docker network ls
NETWORK ID          NAME                   DRIVER              SCOPE
...
w47vo468w8u9        getstartedlab_webnet   overlay             swarm

[eric@almond part3]$ docker network inspect getstartedlab_webnet 
[
    {
        "Name": "getstartedlab_webnet",
        "Id": "w47vo468w8u97cn89r5xav8b7",
        "Created": "2019-07-21T11:25:33.791911879+02:00",
        "Scope": "swarm",
        "Driver": "overlay",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": null,
            "Config": [
                {
                    "Subnet": "10.0.0.0/24",
                    "Gateway": "10.0.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Containers": {
            "81b67e98f78b26f9171b92ee5e6959bf2b19903291817e3c074ce0fe582517cc": {
                "Name": "getstartedlab_web.1.tcf1ejak0dwr0dpo39ip8cx3k",
                "EndpointID": "28dd54b032ad793f256af1868deda20e33aa78fd06fba254fb0fad12cbd2623c",
                "MacAddress": "02:42:0a:00:00:03",
                "IPv4Address": "10.0.0.3/24",
                "IPv6Address": ""
            },
            "a77e4f9fd352e86baedc4c1521eae7569e98f41bdb985546aab79559e7ef307c": {
                "Name": "getstartedlab_web.3.sfpmn9d6ad3pliy5an85o5q8k",
                "EndpointID": "54caea77568d600efdd272ee7ec88d9886b468b7d6f07ecb751dda9f5db732ba",
                "MacAddress": "02:42:0a:00:00:05",
                "IPv4Address": "10.0.0.5/24",
                "IPv6Address": ""
            },
            "f976bec092c57e2bb9cbb63363f26401e41b3858f00ddd793209dce394630674": {
                "Name": "getstartedlab_web.2.frm8vyu5q9i1n67jy4dbqsrrp",
                "EndpointID": "807513ce68caf4b62b4fb5eed77fcc27e26bc5475c04ad1d37483d62f1d69cb3",
                "MacAddress": "02:42:0a:00:00:04",
                "IPv4Address": "10.0.0.4/24",
                "IPv6Address": ""
            }
        },
        "Options": {
            "com.docker.network.driver.overlay.vxlanid_list": "4097"
        },
        "Labels": {
            "com.docker.stack.namespace": "getstartedlab"
        },
        "Peers": [
            {
                "Name": "almond.nuts.org-e00195529132",
                "IP": "192.168.123.182"
            }
        ]
    }
]



/ als we wilt,	
[eric@almond part3]$ docker stack rm getstartedlab
Removing service getstartedlab_web
Removing network getstartedlab_webnet

/ je kunt	,
$ curl http://localhost:4000
/ of 
$ curl http://127.0.0.1:4000

/ op dit moment werkt port 4000 niet	, 5000 is OK	, 
/ TODO

/ lees	,
https://stackoverflow.com/questions/46814642/can-access-docker-service-from-curl-but-not-from-postman-chrome



/ 1313	. 

/ hierna kun je	,

$ docker stack rm getstartedweb
/ deze rm ook de containers	,

/ en weer	,
[eric@almond part3]$ docker stack deploy -c docker-compose.yml getstartedlab

/ maar je moet altijd wel even wachten	, 
/ na stack deploy: voordat je curl doet	,  
/ en na stack rm	, voordat je weer stack deploy doet	,

/ Intermezzo

/ als we dit hieronder zien, is er iets fout, dan zijn we te snel na stack deploy of stack rm	, 
/ TODO (met deploy of rm)? 

[eric@almond part3]$ curl -4 http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> e679543caf1c<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond part3]$ 
[eric@almond part3]$ systemctl status docker
● docker.service - Docker Application Container Engine
   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)
   Active: active (running) since Thu 2019-04-04 22:02:07 CEST; 14min ago
     Docs: http://docs.docker.com
 Main PID: 30586 (dockerd-current)
    Tasks: 25 (limit: 8192)
   Memory: 66.2M
      CPU: 20.205s
   CGroup: /system.slice/docker.service
           └─30586 /usr/bin/dockerd-current --add-runtime oci=/usr/libexec/docker/docker-runc-current --default-runtime=oci --authorization-p

Apr 04 22:15:46 almond.nuts.org dockerd-current[30586]:  * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)
Apr 04 22:15:46 almond.nuts.org dockerd-current[30586]:  * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)
Apr 04 22:16:02 almond.nuts.org dockerd-current[30586]: time="2019-04-04T22:16:02.811687211+02:00" level=warning msg="failed to retrieve dock
Apr 04 22:16:02 almond.nuts.org dockerd-current[30586]: time="2019-04-04T22:16:02.817058080+02:00" level=warning msg="failed to retrieve dock
Apr 04 22:16:22 almond.nuts.org dockerd-current[30586]: time="2019-04-04T22:16:22.803063513+02:00" level=warning msg="failed to retrieve dock
Apr 04 22:16:22 almond.nuts.org dockerd-current[30586]: time="2019-04-04T22:16:22.807802222+02:00" level=warning msg="failed to retrieve dock
Apr 04 22:16:39 almond.nuts.org dockerd-current[30586]: 10.255.0.3 - - [04/Apr/2019 20:16:39] "GET / HTTP/1.1" 200 -
Apr 04 22:16:42 almond.nuts.org dockerd-current[30586]: time="2019-04-04T22:16:42.807916495+02:00" level=warning msg="failed to retrieve dock
Apr 04 22:16:42 almond.nuts.org dockerd-current[30586]: time="2019-04-04T22:16:42.812459311+02:00" level=warning msg="failed to retrieve dock
Apr 04 22:16:44 almond.nuts.org dockerd-current[30586]: 10.255.0.3 - - [04/Apr/2019 20:16:44] "GET / HTTP/1.1" 200 -


/ Einde Intermezzo 

/ Intermezzo

/ queries	,

[eric@almond part3]$ docker swarm init
Error response from daemon: This node is already part of a swarm. Use "docker swarm leave" to leave this swarm and join another one.

[eric@almond part3]$ docker node ls
ID                           HOSTNAME         STATUS  AVAILABILITY  MANAGER STATUS
limtx9d50l6obpmdine58v9qh *  almond.nuts.org  Ready   Active        Leader

[eric@almond part3]$ docker node inspect limtx9d50l6obpmdine58v9qh
...

[eric@almond part3]$ docker stack deploy -c docker-compose.yml getstartedlab
Creating service getstartedlab_web
Error response from daemon: rpc error: code = 3 desc = port '4000' is already in use by service 'foo_web' (33s2parnmbdhpd82x67i6cey4)

[eric@almond part3]$ docker service ls
ID            NAME     MODE        REPLICAS  IMAGE
33s2parnmbdh  foo_web  replicated  0/3       docker.io/ericjvandervelden/getting-started:part2

/ Einde Intermezzo

/ Intermezzo

/ opruimen en nieuwe start	,

[eric@almond part3]$ docker service rm 33s2parnmbdh
eric@almond part3]$ docker service ls
ID  NAME  MODE  REPLICAS  IMAGE
[eric@almond part3]$ docker swarm leave --force
Node left the swarm.

[eric@almond part3]$ docker node ls
Error response from daemon: This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.

[eric@almond part3]$ docker swarm init
Swarm initialized: current node (587mr50wslltytyojwcvzr4c0) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join \
    --token SWMTKN-1-1obrvhucm17okqzwo790t5qo4sm3yemc25g8w3bpd1n7pltjn4-3xrz629r51rcxbuhsrd4eor79 \
    192.168.123.182:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

[eric@almond part3]$  docker node ls
ID                           HOSTNAME         STATUS  AVAILABILITY  MANAGER STATUS
587mr50wslltytyojwcvzr4c0 *  almond.nuts.org  Ready   Active        Leader

[eric@almond part3]$ docker service ls
ID  NAME  MODE  REPLICAS  IMAGE

[eric@almond part3]$ docker info
Containers: 7
 Running: 0
 Paused: 0
 Stopped: 7
Images: 328
Server Version: 1.13.1
Storage Driver: devicemapper
 Pool Name: docker-253:1-2504345-pool
 Pool Blocksize: 65.54 kB
 Base Device Size: 107.4 GB
 Backing Filesystem: ext4
 Data file: /dev/loop0
 Metadata file: /dev/loop1
 Data Space Used: 19.52 GB
 Data Space Total: 107.4 GB
 Data Space Available: 7.219 GB
 Metadata Space Used: 28.05 MB
 Metadata Space Total: 2.147 GB
 Metadata Space Available: 2.119 GB
 Thin Pool Minimum Free Space: 10.74 GB
 Udev Sync Supported: true
 Deferred Removal Enabled: true
 Deferred Deletion Enabled: true
 Deferred Deleted Device Count: 0
 Data loop file: /var/lib/docker/devicemapper/devicemapper/data
 WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.
 Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata
 Library Version: 1.02.137 (2016-11-30)
Logging Driver: journald
Cgroup Driver: systemd
Plugins: 
 Volume: local
 Network: bridge host macvlan null overlay
 Authorization: rhel-push-plugin
Swarm: active
 NodeID: 587mr50wslltytyojwcvzr4c0
 Is Manager: true
 ClusterID: tt4sz8chszlxqxruajhjs2pzk
 Managers: 1
 Nodes: 1
 Orchestration:
  Task History Retention Limit: 5
 Raft:
  Snapshot Interval: 10000
  Number of Old Snapshots to Retain: 0
  Heartbeat Tick: 1
  Election Tick: 3
 Dispatcher:
  Heartbeat Period: 5 seconds
 CA Configuration:
  Expiry Duration: 3 months
 Node Address: 192.168.123.182
 Manager Addresses:
  192.168.123.182:2377
Runtimes: runc oci
Default Runtime: oci
Init Binary: /usr/libexec/docker/docker-init-current
containerd version:  (expected: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1)
runc version: N/A (expected: 9df8b306d01f59d3a8029be411de015b7304dd8f)
init version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)
Security Options:
 seccomp
  WARNING: You're not using the default seccomp profile
  Profile: /etc/docker/seccomp.json
 selinux
Kernel Version: 4.15.9-200.fc26.x86_64
Operating System: Fedora 26 (Workstation Edition)
OSType: linux
Architecture: x86_64
Number of Docker Hooks: 3
CPUs: 4
Total Memory: 15.55 GiB
Name: almond.nuts.org
ID: 3ZYS:Z6KE:DPOK:OSSW:4VZ7:F5ZM:ITHC:7KPB:ENKW:2OST:NPL4:7XIM
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Username: ericjvandervelden
Registry: https://index.docker.io/v1/
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false
Registries: docker.io (secure), registry.fedoraproject.org (secure), registry.access.redhat.com (secure), docker.io (secure)




/ Einde Intermezzo


/ 1313	. 
 
/ Intermezzo

/ hoe connected to the swarm?
/ TODO 

/ lees	,
https://docs.docker.com/engine/swarm/swarm-tutorial/create-swarm/

$ docker info
...
Swarm: active
 NodeID: 1n49oqgu2pxbb72oho63toeyd
 Is Manager: true
 ClusterID: ju3ko9evdd89mxs552g2etsji
 Managers: 1
 Nodes: 1
 Orchestration:
  Task History Retention Limit: 5
 Raft:
  Snapshot Interval: 10000
  Number of Old Snapshots to Retain: 0
  Heartbeat Tick: 1
  Election Tick: 3
 Dispatcher:
  Heartbeat Period: 5 seconds
 CA Configuration:
  Expiry Duration: 3 months
 Node Address: 192.168.123.182
 Manager Addresses:
  192.168.123.182:2377

[eric@almond part3]$  docker node ls
ID                           HOSTNAME         STATUS  AVAILABILITY  MANAGER STATUS
1n49oqgu2pxbb72oho63toeyd *  almond.nuts.org  Ready   Active        Leader

/ Einde Intermezzo

[eric@almond part3]$ docker network ls
NETWORK ID          NAME                   DRIVER              SCOPE
w1docb9kbyvz        getstartedlab_webnet   overlay             swarm

[eric@almond part3]$ docker service ls
ID            NAME               MODE        REPLICAS  IMAGE
q6g0x2yaftdd  getstartedlab_web  replicated  5/5       ericjvandervelden/getting-started:part2

[eric@almond part3]$ docker stack services getstartedlab 
ID            NAME               MODE        REPLICAS  IMAGE
q6g0x2yaftdd  getstartedlab_web  replicated  5/5       ericjvandervelden/getting-started:part2

[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED             STATUS              PORTS               NAMES
28637fdd0138        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 minutes ago       Up 2 minutes        80/tcp              getstartedlab_web.4.775aq8j8ee9dree0y9d9y8vyo
06a0ac51524c        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 minutes ago       Up 2 minutes        80/tcp              getstartedlab_web.3.chf0u28ux3o4ijry5ta97sfwd
f51d2ccac9eb        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 minutes ago       Up 2 minutes        80/tcp              getstartedlab_web.5.ie06yawh732g32ktvdypw810a
b12eaac4b0e7        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 minutes ago       Up 2 minutes        80/tcp              getstartedlab_web.1.suc77emo52dybqseise0wmebu
5bef8246a5fe        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 minutes ago       Up 2 minutes        80/tcp              getstartedlab_web.2.k64zfbkv3ylkqg6egwwbwntpc

/ we zien load-balancing	,
/ hij gaat het rijtje af, en begint opnieuw	,
[eric@almond part3]$  curl -4 http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> f51d2ccac9eb<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$  curl -4 http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 28637fdd0138<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$  curl -4 http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 5bef8246a5fe<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$  curl  http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 06a0ac51524c<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$  curl  http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> b12eaac4b0e7<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$  curl  http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> f51d2ccac9eb<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$  curl  http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 28637fdd0138<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>
[eric@almond part3]$ 

/ in de browser		,
http://localhost:4000
Waiting for localhost...
/ TODO

/ 13	. 

/ een ander aantal replicas	,

[eric@almond part3]$ vi docker-compose.yml 
      replicas: 3

[eric@almond part3]$ docker stack  deploy  -c docker-compose.yml getstartedlab
Updating service getstartedlab_web (id: q6g0x2yaftddt249x3d28h2y0)

[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED             STATUS              PORTS               NAMES
28637fdd0138        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.4.775aq8j8ee9dree0y9d9y8vyo
b12eaac4b0e7        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.1.suc77emo52dybqseise0wmebu
5bef8246a5fe        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.2.k64zfbkv3ylkqg6egwwbwntpc

[eric@almond part3]$  curl  http://localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> b12eaac4b0e7<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>

/ 13	. 

[eric@almond part3]$ docker service ps getstartedlab_web 
ID            NAME                 IMAGE                                    NODE             DESIRED STATE  CURRENT STATE           ERROR  PORTS
oodqhpk8j90g  getstartedlab_web.1  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 47 minutes ago         
z4mmzknw3vtb  getstartedlab_web.2  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 47 minutes ago         
zhvi9rpq7hft  getstartedlab_web.3  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 47 minutes ago         

/ we veranderen het aantal replica's in docker-compose.yml	, en daarna	,
[eric@almond part3]$ docker stack deploy -c docker-compose.yml getstartedlab
Updating service getstartedlab_web (id: z7h9bw562wxepjtdn9ymmnzgy)

[eric@almond part3]$ docker stack ps getstartedlab 
ID            NAME                 IMAGE                                    NODE             DESIRED STATE  CURRENT STATE           ERROR  PORTS
oodqhpk8j90g  getstartedlab_web.1  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 54 minutes ago         
z4mmzknw3vtb  getstartedlab_web.2  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 54 minutes ago         
zhvi9rpq7hft  getstartedlab_web.3  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 54 minutes ago         
ll6mz0i3m9mq  getstartedlab_web.4  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 2 minutes ago          
x0vgmzafmijk  getstartedlab_web.5  ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 2 minutes ago          


/ 13	. 

/ een stopped container wordt vervangen	,

/ we stoppen een van de containers	, 
/ we houden er 2 over	, 
/ maar even later zijn er toch weer 3	, 
/ dat zien we ook onder STATUS: Up 2 hours en Up 2 seconds	, 

ic@almond part3]$ docker stop getstartedlab_web.4.775aq8j8ee9dree0y9d9y8vyo 
getstartedlab_web.4.775aq8j8ee9dree0y9d9y8vyo

[eric@almond part3]$ docker stop getstartedlab_web.4.ll6mz0i3m9mqtzih9349kgu5f 
getstartedlab_web.4.ll6mz0i3m9mqtzih9349kgu5f

/ we zien	,
[eric@almond part3]$ docker stack ps getstartedlab 
ID            NAME                     IMAGE                                    NODE             DESIRED STATE  CURRENT STATE           ERROR                        PORTS
oodqhpk8j90g  getstartedlab_web.1      ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 56 minutes ago                               
tjwno0ucltwi  getstartedlab_web.4      ericjvandervelden/getting-started:part2  almond.nuts.org  Ready          Ready 2 seconds ago                                  
ll6mz0i3m9mq   \_ getstartedlab_web.4  ericjvandervelden/getting-started:part2  almond.nuts.org  Shutdown       Failed 2 seconds ago    "task: non-zero exit (137)"  
x0vgmzafmijk  getstartedlab_web.5      ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 4 minutes ago                                

/ en even later,	
[eric@almond part3]$ docker stack ps getstartedlab 
ID            NAME                     IMAGE                                    NODE             DESIRED STATE  CURRENT STATE           ERROR                        PORTS
oodqhpk8j90g  getstartedlab_web.1      ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 56 minutes ago                               
tjwno0ucltwi  getstartedlab_web.4      ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 5 seconds ago                                
ll6mz0i3m9mq   \_ getstartedlab_web.4  ericjvandervelden/getting-started:part2  almond.nuts.org  Shutdown       Failed 12 seconds ago   "task: non-zero exit (137)"  
x0vgmzafmijk  getstartedlab_web.5      ericjvandervelden/getting-started:part2  almond.nuts.org  Running        Running 4 minutes ago        
/ onder $ docker container ls -a zien we de Shutdown container als Exited	,
/ de ids zijn allemaal anders, want is op een ander moment gedraaid:

[eric@almond part3]$  docker container ls -a
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED              STATUS                            PORTS               NAMES
b978549f724e        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     About a minute ago   Up 59 seconds                     80/tcp              getstartedlab_web.4.v4za2mg0l409kloq4hp4r1v0d
033908029e62        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     8 minutes ago        Exited (137) About a minute ago                       getstartedlab_web.4.o2nw6dy0jno7ecuob7cf91ull
3db350d7bf45        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     21 minutes ago       Up 21 minutes                     80/tcp              getstartedlab_web.3.s5x5erss308wem0ptdghfq1yu
4ff72177da90        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     21 minutes ago       Up 21 minutes                     80/tcp              getstartedlab_web.2.5mufqv03qzujexj9ibe0e114q


[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED             STATUS              PORTS               NAMES
7588f220a75d        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 minutes ago       Up 2 minutes        80/tcp              getstartedlab_web.4.tjwno0ucltwi4q2lga1zq22z7
e7041b911e5c        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     7 minutes ago       Up 7 minutes        80/tcp              getstartedlab_web.5.x0vgmzafmijkhsla5dco38eib
5c689e602f68        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     59 minutes ago      Up 59 minutes       80/tcp              getstartedlab_web.1.oodqhpk8j90g0rtdiw5rdcuq6


[eric@almond part3]$ curl localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 5c689e602f68<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond part3]$ 
[eric@almond part3]$ curl localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 7588f220a75d<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond part3]$ 
[eric@almond part3]$ curl localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> e7041b911e5c<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond part3]$ 
[eric@almond part3]$ curl localhost:4000
<h3>Hello World!</h3><b>Hostname:</b> 5c689e602f68<br/><b>Visits:</b> <i>cannot connect to Redis, counter disabled</i>[eric@almond part3]$ 



/ of een andere keer	,
[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED             STATUS              PORTS               NAMES
b12eaac4b0e7        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.1.suc77emo52dybqseise0wmebu
5bef8246a5fe        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.2.k64zfbkv3ylkqg6egwwbwntpc

[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED             STATUS              PORTS               NAMES
cbabfba33702        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     8 seconds ago       Up 2 seconds        80/tcp              getstartedlab_web.4.q8g2nivn9nwxp5jvfw5i3ee7x
b12eaac4b0e7        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.1.suc77emo52dybqseise0wmebu
5bef8246a5fe        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago         Up 2 hours          80/tcp              getstartedlab_web.2.k64zfbkv3ylkqg6egwwbwntpc

/ 13	. 

[eric@almond part3]$ docker stack rm  getstartedlab 
Removing service getstartedlab_web
Removing network getstartedlab_webnet

/ nu nog wel, functioneren ze nog? TODO 
/ maar straks zijn ze weg	, 
[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE                                                                                                       COMMAND             CREATED              STATUS              PORTS               NAMES
cbabfba33702        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     About a minute ago   Up About a minute   80/tcp              getstartedlab_web.4.q8g2nivn9nwxp5jvfw5i3ee7x
b12eaac4b0e7        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago          Up 2 hours          80/tcp              getstartedlab_web.1.suc77emo52dybqseise0wmebu
5bef8246a5fe        ericjvandervelden/getting-started@sha256:9c5e788110a723941a9020720d34c47a5f6fb20bfb03a907a283232c57bfd3eb   "python app.py"     2 hours ago          Up 2 hours          80/tcp              getstartedlab_web.2.k64zfbkv3ylkqg6egwwbwntpc

/ even later	,
[eric@almond part3]$ docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

[eric@almond part3]$  curl  http://localhost:4000
curl: (7) Failed to connect to localhost port 4000: Connection refused

[eric@almond part3]$ docker service ls
ID  NAME  MODE  REPLICAS  IMAGE

[eric@almond part3]$ docker stack services getstartedlab
Nothing found in stack: getstartedlab

[eric@almond part3]$ docker swarm leave --force 
Node left the swarm.
/ TODO

/ part4	, 

/ google,	
fedora docker-machine
/ lees	,
https://docs.docker.com/machine/install-machine/
https://stackoverflow.com/questions/43975682/is-docker-machine-required-on-linux

/ TODO Afmaken




/ Einde GETTING STARTED

/ DOCKER SWARM COMMANDS

$ docker swarm init 
$ docker stack deploy -c docker-compose.yml getstartedlab
$ docker stack ps getstartedlab
$ curl http://localhost:5000
$ docker stack rm getstartedlab
$ docker swarm leave --force

/ als je de docker-compose.yml file aanpast, dan gewoon eroverheen nog een keer	,
$ docker stack deploy -c docker-compose.yml getstartedlab

$ docker stack services getstartedlab

/ Einde DOCKER SWARM COMMANDS

/ DOCKER MANAGE APPLICTION DATA

/ kies niet getting-started, maar 
managing application data
storage overview
volumes

/ 13	. 

/ zonder volumes overleeft data een container niet	,

[eric@almond postgres3a]$ docker run --rm -ti my/fedora-postgres3a bash
bash-4.3$ pg_ctl start
/ geef Enter
bash-4.3$ psql
/ create table 
\q
exit
/ start opnieuw een container	, 
/ de table is er niet meer	,

/ google,
docker postgres volume
/ lees	,
https://stackoverflow.com/questions/41637505/how-to-persist-data-in-a-dockerized-postgres-database-using-volumes
https://hub.docker.com/_/postgres
https://rominirani.com/docker-tutorial-series-part-8-linking-containers-69a4e5bf50fb / --link

/ 13	. 

/ met volume	,

[eric@almond postgres3a]$ docker run --rm -ti -v myvol:/var/lib/pgsql/data my/fedora-postgres3a bash
bash-4.3$ pg_ctl start
/ geef Enter
bash-4.3$ psql
/ create table 
\q
exit

[eric@almond postgres3a]$ docker volume ls
DRIVER              VOLUME NAME
...
local               addb7a9edc9ad029ce94bb8c50b5bd25e9d3949429078e169eb9e43bd8b1e158
local               myvol
/ Hoe maakt je de volumes met die hash namen?
/ TODO

[root@almond ~]# ls /var/lib/docker/volumes/
...
addb7a9edc9ad029ce94bb8c50b5bd25e9d3949429078e169eb9e43bd8b1e158
myvol
[root@almond ~]# ls /var/lib/docker/volumes/myvol/_data/
base          pg_dynshmem    pg_logical    pg_serial     pg_subtrans  pg_xlog               postmaster.pid
global        pg_hba.conf    pg_multixact  pg_snapshots  pg_tblspc    postgresql.auto.conf
pg_clog       pg_ident.conf  pg_notify     pg_stat       pg_twophase  postgresql.conf
pg_commit_ts  pg_log         pg_replslot   pg_stat_tmp   PG_VERSION   postmaster.opts

/ start opnieuw een container	 op myvol	,

[eric@almond postgres3a]$ docker run --rm -ti -v myvol:/var/lib/pgsql/data my/fedora-postgres3a bash
bash-4.3$ pg_ctl start
/ geef Enter	,
bash-4.3$ psql 
postgres=# \dt
        List of relations
 Schema | Name | Type  |  Owner   
--------+------+-------+----------
 public | foo  | table | postgres
(1 row)
 







/ 7	. 

/ waar is pg data als we geen volume geven?

[eric@almond postgres3a]$ docker run --rm -ti  my/fedora-postgres3a bash

[eric@almond postgres3a]$ docker container inspect distracted_dijkstra 
        "GraphDriver": {
            "Name": "devicemapper",
            "Data": {
                "DeviceId": "5638",
                "DeviceName": "docker-253:1-2504345-96dd75e54793089ce9f835c52d78f0da01456a365cf533b4f7bd2f7b42b4b884",
                "DeviceSize": "107374182400"
            }
        },

[root@almond docker]# ls devicemapper/mnt/96dd75e54793089ce9f835c52d78f0da01456a365cf533b4f7bd2f7b42b4b884/rootfs/var/lib/pgsql/data/
base          pg_dynshmem    pg_logical    pg_serial     pg_subtrans  pg_xlog               postmaster.pid
global        pg_hba.conf    pg_multixact  pg_snapshots  pg_tblspc    postgresql.auto.conf
pg_clog       pg_ident.conf  pg_notify     pg_stat       pg_twophase  postgresql.conf
pg_commit_ts  pg_log         pg_replslot   pg_stat_tmp   PG_VERSION   postmaster.opts

/ als we de container exit	, dan is de container/bb... weg, en devicemapper/mnt/96... ook weg	,

/ als we een volume use	, 

[eric@almond postgres3a]$ docker run --rm -ti -v   my/fedora-postgres3a bash

[root@almond docker]# ls volumes/myvol/_data/
base          pg_dynshmem    pg_logical    pg_serial     pg_subtrans  pg_xlog               postmaster.pid
global        pg_hba.conf    pg_multixact  pg_snapshots  pg_tblspc    postgresql.auto.conf
pg_clog       pg_ident.conf  pg_notify     pg_stat       pg_twophase  postgresql.conf
pg_commit_ts  pg_log         pg_replslot   pg_stat_tmp   PG_VERSION   postmaster.opts


/ Einde DOCKER MANAGE APPLICTION DATA

/ VOLUMES

/ we hadden 1 volume met een pg er in	,

[root@almond docker]# ls volumes/myvol/_data/
base          pg_hba.conf    pg_notify     pg_stat_tmp  pg_xlog
global        pg_ident.conf  pg_replslot   pg_subtrans  postgresql.auto.conf
pg_clog       pg_log         pg_serial     pg_tblspc    postgresql.conf
pg_commit_ts  pg_logical     pg_snapshots  pg_twophase  postmaster.opts
pg_dynshmem   pg_multixact   pg_stat       PG_VERSION   postmaster.pid

/ maar met , hebben we deze rm	,
$ docker volume prune

/ 13	. 

/ usage	, 

$ docker volume create myvol2

$ docker run -d \
  --name devtest \
  -v myvol2:/app \
  nginx:latest


/ WH als je 
	-v /app
/ dan wordt er een volume create zoals	,
[root@almond docker]# ls volumes/
3a067f446c75a40729162ec94c46e127c740b7ed7e94d47656d278d34b66173f
/ TODO

/ we hadden eerder	,
[eric@almond postgres3a]$ docker run --rm -ti -v myvol:/var/lib/pgsql/data my/fedora-postgres3a bash


/ Einde VOLUMES



/ DOCKER COMPOSE

/ lees	,
https://docs.docker.com/compose/overview/

https://serverfault.com/questions/834354/where-is-docker-volume-stored-in-the-host-computer-for-docker-compose
/ vb	, 
/ TODO

/ lees,	
https://docs.docker.com/compose/gettingstarted/

[eric@almond composetest]$ pwd
/home/eric/Devel/Docker2/compose/composetest

$ app.py

import time

import redis
from flask import Flask


app = Flask(__name__)
cache = redis.Redis(host='redis', port=6379)


def get_hit_count():
    retries = 5
    while True:
        try:
            return cache.incr('hits')
        except redis.exceptions.ConnectionError as exc:
            if retries == 0:
                raise exc
            retries -= 1
            time.sleep(0.5)


@app.route('/')
def hello():
    count = get_hit_count()
    return 'Hello World! I have been seen {} times.\n'.format(count)

if __name__ == "__main__":
    app.run(host="0.0.0.0", debug=True)

$ vi requirements.txt

flask
redis

$ vi Dockerfile

from python:3.4-alpine
workdir code											# creates /code/ 
add . . 
run pip install -r requirements.txt
cmd ["python","app.py"]

/ gebruik ash, ipv bash		, bij $ docker exec	,

$ vi docker-compose.yml

version: '3'
services:
  web:
    build: .
    ports:
     - "5000:5000"		# default port Flask = 5000
  redis:
    image: "redis:alpine"

/ we gaan NIET: $ docker build ...
/ build maakt een image	, 
/ dus web haalt zijn image uit de Dockerfile en builds zelf	, en redis uit docker hub, downloaded	,
/ we zien hieronder dat hij inderdaad de Dockerfile gaat doen	, en in feite doet: 
	$ docker build --rm -t web .

[eric@almond composetest]$ docker-compose up
Building web
Step 1/5 : FROM python:3.4-alpine
 ---> 9a7a786215fc
Step 2/5 : WORKDIR code
 ---> Using cache
 ---> c160ca29142a
Step 3/5 : ADD . .
 ---> 924e2f488337
Removing intermediate container adf610d70162
Step 4/5 : RUN pip install -r requirements.txt
 ---> Running in cb2c2fc8c3d5
DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).
Collecting flask (from -r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/7f/e7/08578774ed4536d3242b14dacb4696386634607af824ea997202cd0edb4b/Flask-1.0.2-py2.py3-none-any.whl (91kB)
Collecting redis (from -r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/d0/8b/c43ef27d02382853b22c49bc41a8389e47d60811dd1d72b9a45bc905a5f8/redis-3.2.0-py2.py3-none-any.whl (65kB)
Collecting itsdangerous>=0.24 (from flask->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl
Collecting click>=5.1 (from flask->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)
Collecting Werkzeug>=0.14 (from flask->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/20/c4/12e3e56473e52375aa29c4764e70d1b8f3efa6682bef8d0aae04fe335243/Werkzeug-0.14.1-py2.py3-none-any.whl (322kB)
Collecting Jinja2>=2.10 (from flask->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/Jinja2-2.10-py2.py3-none-any.whl (126kB)
Collecting MarkupSafe>=0.23 (from Jinja2>=2.10->flask->-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz
Building wheels for collected packages: MarkupSafe
  Building wheel for MarkupSafe (setup.py): started
  Building wheel for MarkupSafe (setup.py): finished with status 'done'
  Stored in directory: /root/.cache/pip/wheels/f2/aa/04/0edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77
Successfully built MarkupSafe
Installing collected packages: itsdangerous, click, Werkzeug, MarkupSafe, Jinja2, flask, redis
Successfully installed Jinja2-2.10 MarkupSafe-1.1.1 Werkzeug-0.14.1 click-7.0 flask-1.0.2 itsdangerous-1.1.0 redis-3.2.0
 ---> 5bcf55000b45
Removing intermediate container cb2c2fc8c3d5
Step 5/5 : CMD python app.py
 ---> Running in 5818a6c59460
 ---> 277745b45a33
Removing intermediate container 5818a6c59460
Successfully built 277745b45a33
WARNING: Image for service web was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.
Pulling redis (redis:alpine)...
Trying to pull repository docker.io/library/redis ... 
sha256:3fa51e0b90b42ed2dd9bd87620fe7c45c43eb4e1f81c83813a78474cbe2f7457: Pulling from docker.io/library/redis
6c40cc604d8e: Already exists
e42672a2ca6a: Pull complete
823e4275fef6: Pull complete
c2ad7a3b6c3f: Pull complete
327e62bcfef7: Pull complete
be5997a801f5: Pull complete
Digest: sha256:3fa51e0b90b42ed2dd9bd87620fe7c45c43eb4e1f81c83813a78474cbe2f7457
Status: Downloaded newer image for docker.io/redis:alpine
Creating composetest_redis_1 ... 
Creating composetest_web_1 ... 
Creating composetest_redis_1
Creating composetest_web_1 ... done
Attaching to composetest_redis_1, composetest_web_1
redis_1  | 1:C 03 Mar 2019 12:39:07.218 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis_1  | 1:C 03 Mar 2019 12:39:07.218 # Redis version=5.0.3, bits=64, commit=00000000, modified=0, pid=1, just started
redis_1  | 1:C 03 Mar 2019 12:39:07.218 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
redis_1  | 1:M 03 Mar 2019 12:39:07.221 * Running mode=standalone, port=6379.
redis_1  | 1:M 03 Mar 2019 12:39:07.221 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
redis_1  | 1:M 03 Mar 2019 12:39:07.221 # Server initialized
redis_1  | 1:M 03 Mar 2019 12:39:07.221 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis_1  | 1:M 03 Mar 2019 12:39:07.221 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
redis_1  | 1:M 03 Mar 2019 12:39:07.221 * Ready to accept connections
web_1    |  * Serving Flask app "app" (lazy loading)
web_1    |  * Environment: production
web_1    |    WARNING: Do not use the development server in a production environment.
web_1    |    Use a production WSGI server instead.
web_1    |  * Debug mode: on
web_1    |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
web_1    |  * Restarting with stat
web_1    |  * Debugger is active!
web_1    |  * Debugger PIN: 135-645-034


/ we zien dat er een image is create	,
[eric@almond composetest]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE
composetest_web                                  latest              277745b45a33        7 minutes ago       83.7 MB

/ ook is image redis download,
[eric@almond composetest]$ docker image ls | grep redis
docker.io/redis                                  alpine              a5cff96d7b8f        3 weeks ago         50.8 MB

[eric@almond composetest]$ docker image ls | grep python
docker.io/python                                 3.4-alpine          9a7a786215fc        9 days ago          72.2 MB

/ er zijn van elk een container gemaakt	,

[eric@almond composetest]$ docker container ls
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES
54aab4a34b8e        composetest_web        "python app.py"          19 minutes ago      Up 19 minutes       0.0.0.0:5000->5000/tcp   composetest_web_1
fae6daeb803d        redis:alpine           "docker-entrypoint..."   19 minutes ago      Up 19 minutes       6379/tcp                 composetest_redis_1

/ we zien	,
[eric@almond composetest]$ docker network ls
NETWORK ID          NAME                  DRIVER              SCOPE
...
a7790ccbccef        composetest_default   bridge              local

/ we zien op docker hub,
https://hub.docker.com/_/redis
->  													/ kies 5.0.3-alpine Dockerfile
https://github.com/docker-library/redis/blob/60db7082c81f5d457046f199244c5d651f04b3fa/5.0/alpine/Dockerfile
...
RUN mkdir /data && chown redis:redis /data
VOLUME /data
WORKDIR /data

ENTRYPOINT ["docker-entrypoint.sh"]
EXPOSE 6379
CMD ["redis-server"]

/ we zien bij de container: docker-entrypoint.sh
/ TODO

[eric@almond composetest]$ docker container inspect composetest_redis_1 
        "Path": "docker-entrypoint.sh",
        "Args": [
            "redis-server"
        ],
        "Mounts": [
            {
                "Type": "volume",
                "Name": "7d8dd769afad450d1075bae3dd31311a590c6b5751d6956e3bc9dabc3c30e479",
                "Source": "/var/lib/docker/volumes/7d8dd769afad450d1075bae3dd31311a590c6b5751d6956e3bc9dabc3c30e479/_data",
                "Destination": "/data",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
/ we zien zo'n volume zonder naam	, of met een gen naam	, 
/ see bij VOLUMES hieronder hoe dat gaat	,

/ 13	. 

/ geef
http://localhost:5000/
Hello World! I have been seen 1 times.
/ reload	,
Hello World! I have been seen 2 times.
/ reload	,
Hello World! I have been seen 3 times.

$ vi app.py

cache = redis.Redis(host='redis', port=6379)

def get_hit_count():
...
            return cache.incr('hits')

@app.route('/')
def hello():
    count = get_hit_count()
    return 'Hello World! I have been seen {} times.\n'.format(count)

/ ga naar	,
https://redis.io/commands/INCR
http://try.redis.io/
incr hits 
(integer) 1
> incr hits
(integer) 2
 
[eric@almond composetest]$ docker image ls | grep compose
composetest_web                                  latest              277745b45a33        7 hours ago         83.7 MB
docker.io/python                                 3.4-alpine          9a7a786215fc        9 days ago          72.2 MB
docker.io/redis                                  alpine              a5cff96d7b8f        3 weeks ago         50.8 MB

/ 13	. 

/ docker-compose ls is er niet	,
[eric@almond composetest]$ docker-compose ps
       Name                      Command               State           Ports         
-------------------------------------------------------------------------------------
composetest_redis_1   docker-entrypoint.sh redis ...   Up      6379/tcp              
composetest_web_1     python app.py                    Up      0.0.0.0:5000->5000/tcp

/ je kunt	,
[eric@almond composetest]$ docker container inspect composetest_redis_1 
[
    {
        "Path": "docker-entrypoint.sh",
        "Args": [
            "redis-server"
        ],
        "Mounts": [
            {
                "Type": "volume",
                "Name": "7d8dd769afad450d1075bae3dd31311a590c6b5751d6956e3bc9dabc3c30e479",
                "Source": "/var/lib/docker/volumes/7d8dd769afad450d1075bae3dd31311a590c6b5751d6956e3bc9dabc3c30e479/_data",
                "Destination": "/data",

[root@almond ~]# ls /var/lib/docker/volumes/7d8dd769afad450d1075bae3dd31311a590c6b5751d6956e3bc9dabc3c30e479/_data
dump.rdb

[eric@almond composetest]$ docker exec -ti composetest_redis_1 bash
rpc error: code = 2 desc = oci runtime error: exec failed: container_linux.go:247: starting container process caused "exec: \"bash\": executable file not found in $PATH"
/ doe	,
[eric@almond composetest]$ docker exec -ti composetest_redis_1 ash
/data # 


/ 13	. 

/ Hoe kunnen we query redis in container vanuit de host?

# dnf install redis
Installed:
  redis.x86_64 4.0.9-1.fc26                                 jemalloc.x86_64 4.5.0-5.fc26                                
[eric@almond composetest]$ redis-cli
Could not connect to Redis at 127.0.0.1:6379: Connection refused
/ klopt, op de host draait geen redis	,

[eric@almond composetest]$ docker container inspect composetest_redis_1 
...
            "Ports": {
                "6379/tcp": null								/ OK, maar is de default	,
            },
                    "IPAddress": "172.20.0.2",

[eric@almond composetest]$ redis-cli -h 172.20.0.2 -p 6379
172.20.0.2:6379> incr hits
(integer) 15
172.20.0.2:6379> incr hits
(integer) 16 
172.20.0.2:6379> exit
[eric@almond composetest]$ redis-cli -h 172.20.0.2		/ port 6379 hoeft niet, is de default	,
172.20.0.2:6379> incr hits
(integer) 17 

/ 13	 

/ DOCKER-COMPOSE STOP VS DOWN

/ als je in de browser localhost:5000 , of hier met redis-cli incr hits	, dan gaat hij verder waar hij gebleven was met hits	,
/ in de Dockerfile van redis:
RUN mkdir /data && chown redis:redis /data
VOLUME /data

/ Dus er is een volume	, en de host side van het volume wordt gen	,
[root@almond docker]# ls volumes/0c8316e0a8d024682ce0fa4253795c5e69a35cb1cbd47752fccb593cb6c7af27/_data/
dump.rdb

/ Doe niet down, maar  
$ docker-compose stop

/ dit is hetzelfde als ctrl+c geven op compose	,

/ de containers worden dan Exited, maar niet rm	, en de volume ook niet	, en met een nieuwe docker-compose up wordt de container weer start	, en het het volume is er nog,   
/ dus hij gaat gewoon verder	,

/ 1313	. 

/ we kijken of het allemaal wel zo is	,

$ docker compose up

[eric@almond composetest]$ docker container  ls -a
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES
792acf3823d6        composetest_web        "python app.py"          36 minutes ago      Up 28 minutes       0.0.0.0:5000->5000/tcp   composetest_web_1
37ffd83d4277        redis:alpine           "docker-entrypoint..."   36 minutes ago      Up 28 minutes       6379/tcp                 composetest_redis_1

[eric@almond composetest]$ docker container inspect composetest_redis_1 
...
        "Mounts": [
            {
                "Type": "volume",
                "Name": "0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b",
                "Source": "/var/lib/docker/volumes/0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b/_data",
                "Destination": "/data",

/ geef	,
http://localhost:5000/

/ we zien dat de teller niet bij 1 begint, maar doorloopt	,

[eric@almond composetest]$ docker-compose stop
Stopping composetest_web_1   ... done
Stopping composetest_redis_1 ... done

[eric@almond composetest]$ docker container  ls -a
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                     PORTS               NAMES
792acf3823d6        composetest_web        "python app.py"          About an hour ago   Exited (0) 9 seconds ago                       composetest_web_1
37ffd83d4277        redis:alpine           "docker-entrypoint..."   About an hour ago   Exited (0) 9 seconds ago                       composetest_redis_1

[eric@almond composetest]$ docker-compose up

[eric@almond composetest]$ docker container  ls -a
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES
792acf3823d6        composetest_web        "python app.py"          About an hour ago   Up 8 seconds        0.0.0.0:5000->5000/tcp   composetest_web_1
37ffd83d4277        redis:alpine           "docker-entrypoint..."   About an hour ago   Up 8 seconds        6379/tcp                 composetest_redis_1

[eric@almond composetest]$ docker container inspect composetest_redis_1 

        "Mounts": [
            {
                "Type": "volume",
                "Name": "0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b",
                "Source": "/var/lib/docker/volumes/0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b/_data",
                "Destination": "/data",
 
/ Nu geef ctrl+c op compose	,

[eric@almond composetest]$ docker container  ls -a
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                     PORTS               NAMES
792acf3823d6        composetest_web        "python app.py"          About an hour ago   Exited (0) 7 seconds ago                       composetest_web_1
37ffd83d4277        redis:alpine           "docker-entrypoint..."   About an hour ago   Exited (0) 7 seconds ago                       composetest_redis_1

[eric@almond composetest]$ docker-compose up

[eric@almond composetest]$ docker container  ls -a
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES
792acf3823d6        composetest_web        "python app.py"          About an hour ago   Up 8 seconds        0.0.0.0:5000->5000/tcp   composetest_web_1
37ffd83d4277        redis:alpine           "docker-entrypoint..."   About an hour ago   Up 8 seconds        6379/tcp                 composetest_redis_1

[eric@almond composetest]$ docker container inspect composetest_redis_1 

        "Mounts": [
            {
                "Type": "volume",
                "Name": "0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b",
                "Source": "/var/lib/docker/volumes/0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b/_data",
                "Destination": "/data",

/ Dus ctlr+c op docker-compose = docker-compose stop

/ 1313	 .

/ nu geven we docker-compose down	,

[eric@almond composetest]$ docker-compose down
Stopping composetest_web_1   ... done
Stopping composetest_redis_1 ... done
Removing composetest_web_1   ... done
Removing composetest_redis_1 ... done
Removing network composetest_default

[eric@almond composetest]$ docker container  ls -a
CONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS               NAMES
/ de containers zijn weg	,

/ het volume is er nog	,
[root@almond ~]# ls -l /var/lib/docker/volumes/
total 88
drwxr-xr-x. 3 root root  4096 Mar 10 19:20 0069473144bc4c7f678381038951cd5bf6db8e646e40300b7ced96bc6ede763b

/ maar als we docker-compose up	, dan verschijnen nieuwe containers, en de redis container met een nieuw volume	,
/ en de teller begint opnieuw	,

/ 13	. 

/ Intermezzo 

/ hoe deden we postgres?

[eric@almond postgres3a]$ docker run --rm -ti  my/fedora-postgres3a bash
bash-4.3$ pg_ctl start
bash-4.3$ psql
postgres=# \dt
        List of relations
 Schema | Name | Type  |  Owner   
--------+------+-------+----------
 public | foo  | table | postgres
(1 row)

/ hoe kunnen we deze vanaf de host psql?

postgres=# \q
bash-4.3$ ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.0.2  netmask 255.255.0.0  broadcast 0.0.0.0

$ vi data\pg_hba.conf
...
host all all 0.0.0.0/0 trust

bash-4.3$ pg_ctl -D data/ restart

/ op de host	,

$  psql -h 172.17.0.2 -U postgres
/ OK

/ Einde Intermezzo

/ 13	. 

/ dus we kunnen de clis op de host:

$ redis-cli  -h 172.20.0.2
$ docker exec -ti composetest_redis_1 ash


/ 13	. 

[eric@almond Postgres]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE
composetest_web                                  latest              277745b45a33        6 days ago          83.7 MB
docker.io/python                                 3.4-alpine          9a7a786215fc        2 weeks ago         72.2 MB
docker.io/redis                                  alpine              a5cff96d7b8f        4 weeks ago         50.8 MB


[eric@almond Postgres]$ docker container ls
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES
e3af07d00d93        composetest_web        "python app.py"          5 days ago          Up 5 days           0.0.0.0:5000->5000/tcp   composetest_web_1
6f5ac1b1f963        redis:alpine           "docker-entrypoint..."   5 days ago          Up 5 days           6379/tcp                 composetest_redis_1


[eric@almond composetest]$ docker-compose down
Stopping composetest_web_1   ... done
Stopping composetest_redis_1 ... done
Removing composetest_web_1   ... done
Removing composetest_redis_1 ... done
Removing network composetest_default

/ de images zijn er nog	, maar dat is logisch	,

[eric@almond composetest]$ docker image ls
REPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE
composetest_web                                  latest              277745b45a33        9 hours ago         83.7 MB
docker.io/python                                 3.4-alpine          9a7a786215fc        9 days ago          72.2 MB
docker.io/redis                                  alpine              a5cff96d7b8f        3 weeks ago         50.8 MB

/ de containers zijn weg	,
[eric@almond composetest]$ docker container ls
CONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS               NAMES


/ maar ook het volume is er nog	,
/ TODO

[eric@almond composetest]$ docker-compose up

-bash-4.4$ redis-cli  -h 172.20.0.2
172.20.0.2:6379> incr hits
(integer) 36 

 

/ 13	. 

$ docker-compose down
$ docker-compose up 

[eric@almond Postgres]$ docker container inspect composetest_redis_1 
...
        "Mounts": [
            {
                "Type": "volume",
                "Name": "06477a98033a1078b2098107c30cbe5d287c08912072b85b8e22071db03c3a41",
                "Source": "/var/lib/docker/volumes/06477a98033a1078b2098107c30cbe5d287c08912072b85b8e22071db03c3a41/_data",

$ docker-compose down
$ docker-compose up 

        "Mounts": [
            {
                "Type": "volume",
                "Name": "2c63f99a876604483716bfc17af1e46c39e7bbab81a8013542e6b0fa95626728",
                "Source": "/var/lib/docker/volumes/2c63f99a876604483716bfc17af1e46c39e7bbab81a8013542e6b0fa95626728/_data",
                "Destination": "/data",

/ steeds een nieuw volume 	, en in /var/lib/docker/volumes zien we dat er steeds een volume bijkomt en dat de oude blijft bestaan	, 
/ TODO
/ met --volumes moet het volume rm	, 
$ docker-compose down --volumes
/ TODO

/ In docker-compose hebben we helemaal geen volume genoemd	, maar in de Dockerfile van redis staat deze er wel	,
$ vi Dockerfile	
...
RUN mkdir /data && chown redis:redis /data
VOLUME /data
WORKDIR /data

COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

EXPOSE 6379
CMD ["redis-server"]

/ 13	. 

/ lees	,
https://nickjanetakis.com/blog/docker-tip-45-docker-compose-stop-vs-down


/ 13	. 

$ vi docker-compose.yml

version: '3'
services:
  web:
    build: . 
    ports:
     - "5000:5000"
    volumes:
     - .:/code
  redis:
    image: "redis:alpine"

/ Intermezzo 

/ google,
docker attach to alpine
/ lees	,
https://stackoverflow.com/questions/35689628/starting-a-shell-in-the-docker-alpine-container

[eric@almond Postgres]$ docker exec -ti composetest_web_1 ash
/code # ls
Dockerfile          app.py              docker-compose.yml  requirements.txt
/ Inderdaad	,

/ Einde Intermezzo

/ op de host	,
$ docker exec -ti composetest_redis_1 ash
/data # ls
/ OK	,
/data # ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:AC:14:00:02  
          inet addr:172.20.0.2  Bcast:0.0.0.0  Mask:255.255.0.0

/ ook op de host	,
-bash-4.4$ redis-cli  -h 172.20.0.2
172.20.0.2:6379> incr cnt
(integer) 1

/ we zien bij docker exec dat /data leeg blijft	,
/ TODO

/ dat zien we ook als we	,
[eric@almond composetest]$ docker container inspect composetest_redis_1 
        "Mounts": [
            {
                "Type": "volume",
                "Name": "89e9cf39f6975b4e05ad8d2456122e0fc3979aebfa7baf492647c3c6574eca68",
                "Source": "/var/lib/docker/volumes/89e9cf39f6975b4e05ad8d2456122e0fc3979aebfa7baf492647c3c6574eca68/_data",
                "Destination": "/data",

[root@almond ~]# ls /var/lib/docker/volumes/89e9cf39f6975b4e05ad8d2456122e0fc3979aebfa7baf492647c3c6574eca68/_data/
[root@almond ~]# 
/ TODO

/ 13	. 

/ in een andere console hadden we eerder, 
$ docker-compose up

[eric@almond composetest]$ docker-compose ps
       Name                      Command               State           Ports         
-------------------------------------------------------------------------------------
composetest_redis_1   docker-entrypoint.sh redis ...   Up      6379/tcp              
composetest_web_1     python app.py                    Up      0.0.0.0:5000->5000/tcp

/ 13	 .

$ docker-compose run

[eric@almond composetest]$   docker-compose run web python app.py shell
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 960-886-379
/ Geef ctrl+c	,

[eric@almond Postgres]$ docker container ls
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES
1ff380f93277        composetest_web        "python app.py shell"    6 seconds ago       Up 4 seconds                                 composetest_web_run_4
43e22d29733b        composetest_web        "python app.py"          About an hour ago   Up About an hour    0.0.0.0:5000->5000/tcp   composetest_web_1
7533121e7dec        redis:alpine           "docker-entrypoint..."   About an hour ago   Up About an hour    6379/tcp                 composetest_redis_1

/ we zien een extra container	, composetest_web_run_4	, 
/ TODO

/ we kunnen ook	, zonder shell: 
[eric@almond composetest]$   docker-compose run web python app.py 
 * Serving Flask app "app" (lazy loading)
/ TODO
/ Wat is met/zonder shell	? 

/ 13	. 

$ cat docker-compose.yml

version: '3'
services:
  web:
    build: . 
    ports:
     - "5000:5000"
    volumes:
     - .:/code
  redis:
    image: "redis:alpine"

/ geef
localhost:5000
/ we zien	,
Hello World! I have been seen 36 times. 

/ edit app.py
$ vi app.py
    return 'Hello from Docker! I have been seen {} times.\n'.format(count)


/ geef
localhost:5000
/ we zien	,
Hello from Docker! I have been seen 36 times. 

/ 13	 .

/ we hebben eerder	, 
$ docker-compose up

        "Mounts": [
            {
                "Type": "volume",
                "Name": "0c8316e0a8d024682ce0fa4253795c5e69a35cb1cbd47752fccb593cb6c7af27",
                "Source": "/var/lib/docker/volumes/0c8316e0a8d024682ce0fa4253795c5e69a35cb1cbd47752fccb593cb6c7af27/_data",
                "Destination": "/data",

/ 13	. 

/ dit mag ook	,

[eric@almond composetest]$ cat docker-compose.yml 
version: "3"
services:
  web:
    build: . 
    ports:
     - 5000:5000
    volumes:
     - .:/code
  redis:
    image: 
      redis:alpine

/ achter key: moet een space	,
/ dit is ook goed:
    image: redis:alpine

/ 13	. 





/ Einde DOCKER COMPOSE

/ GETTING STARTED

/ 7	 . 

/ part-4

/ click Docker machine,	
https://docs.docker.com/machine/overview/

/ lees	,
https://blog.scottlowe.org/2017/11/24/using-docker-machine-kvm-libvirt/

$ base=https://github.com/docker/machine/releases/download/v0.16.0 &&
  curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine &&
  sudo install /tmp/docker-machine /usr/local/bin/docker-machine
/ TODO



/ Einde GETTING STARTED

/ DOCKERFILE

/ entrypoint

[eric@almond Docker2]$ find -name Dockerfile | xargs grep entrypoint  | awk -F:  '{print $1}' | xargs ls -ltr
...
-rw-rw-r--. 1 eric eric 260 Sep  4 21:50 ./misc/Dockerfile
-rw-r--r--. 1 eric eric 667 Sep 16 14:37 ./fedora/sshd/Dockerfile

/ top -c geeft altijd alle opties die je meegeeft	,

[eric@almond misc]$ pwd
/home/eric/Devel/Docker2/misc
[eric@almond misc]$ cat Dockerfile 
from debian 
entrypoint ["top","-b"]
cmd ["-c"]

[eric@almond misc]$ docker build -t my/debian-misc --rm .

[eric@almond misc]$ docker run --rm my/debian-misc
...
  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
    1 root      20   0   21804   2192   1936 R   0.0  0.0   0:00.04 top -b -c

[eric@almond misc]$ docker run --rm my/debian-misc -H
/ deze zal top -b -H doen	, 
/ maar omdat we niet -c hebben zien we alleen top	, 
/ als je docker exec, en ps doet, zie je wel top -b -H	,

[eric@almond misc]$ docker run --rm my/debian-misc -H -c
...
  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
    1 root      20   0   21804   2192   1936 R   0.0  0.0   0:00.04 top -b -H -c

/ Einde DOCKERFILE

/ VOLUMES

/ hoe maak je een volume met gen name?

[eric@almond composetest]$ docker run --rm -v /app -ti my/fedora-locale bash
[root@8bbe7ddc647a /]# ls 
app ...

[eric@almond Postgres]$ docker container inspect mystifying_heisenberg 
        "Mounts": [
            {
                "Type": "volume",
                "Name": "47471ee0105ec622626be0174ee8aa52bc2c2660b073d11fc94a2aadb68e9432",
                "Source": "/var/lib/docker/volumes/47471ee0105ec622626be0174ee8aa52bc2c2660b073d11fc94a2aadb68e9432/_data",
                "Destination": "/app",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],



/ Einde VOLUMES

/ DOCKER SWARM

/ lees,
https://docs.docker.com/engine/swarm/swarm-tutorial/
/=
Run your app in production
	Configure containers
		Scale your app
			Swarm mode overview

/ maar we doen eerst nog	,
Get started,
	Get started with docker
		Part 4: swarms	,

/ Einde DOCKER SWARM
